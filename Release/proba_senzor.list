
proba_senzor.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000070c0  080000c0  080000c0  000010c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000490  08007180  08007180  00008180  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007610  08007610  000091d4  2**0
                  CONTENTS
  4 .ARM          00000000  08007610  08007610  000091d4  2**0
                  CONTENTS
  5 .preinit_array 00000000  08007610  08007610  000091d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08007610  08007610  00008610  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08007614  08007614  00008614  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001d4  20000000  08007618  00009000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000034c  200001d4  080077ec  000091d4  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000520  080077ec  00009520  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000091d4  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000bc65  00000000  00000000  000091fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001fc5  00000000  00000000  00014e61  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loclists 00003b21  00000000  00000000  00016e26  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000798  00000000  00000000  0001a947  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000007f7  00000000  00000000  0001b0df  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000191d4  00000000  00000000  0001b8d6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000ce87  00000000  00000000  00034aaa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008dc09  00000000  00000000  00041931  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000cf53a  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00002640  00000000  00000000  000cf580  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	@ (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	@ (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	@ (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	200001d4 	.word	0x200001d4
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08007168 	.word	0x08007168

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	@ (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	@ (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	@ (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			@ (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	200001d8 	.word	0x200001d8
 8000104:	08007168 	.word	0x08007168

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			@ (mov r8, r8)

0800012c <__gnu_thumb1_case_shi>:
 800012c:	b403      	push	{r0, r1}
 800012e:	4671      	mov	r1, lr
 8000130:	0849      	lsrs	r1, r1, #1
 8000132:	0040      	lsls	r0, r0, #1
 8000134:	0049      	lsls	r1, r1, #1
 8000136:	5e09      	ldrsh	r1, [r1, r0]
 8000138:	0049      	lsls	r1, r1, #1
 800013a:	448e      	add	lr, r1
 800013c:	bc03      	pop	{r0, r1}
 800013e:	4770      	bx	lr

08000140 <__udivsi3>:
 8000140:	2200      	movs	r2, #0
 8000142:	0843      	lsrs	r3, r0, #1
 8000144:	428b      	cmp	r3, r1
 8000146:	d374      	bcc.n	8000232 <__udivsi3+0xf2>
 8000148:	0903      	lsrs	r3, r0, #4
 800014a:	428b      	cmp	r3, r1
 800014c:	d35f      	bcc.n	800020e <__udivsi3+0xce>
 800014e:	0a03      	lsrs	r3, r0, #8
 8000150:	428b      	cmp	r3, r1
 8000152:	d344      	bcc.n	80001de <__udivsi3+0x9e>
 8000154:	0b03      	lsrs	r3, r0, #12
 8000156:	428b      	cmp	r3, r1
 8000158:	d328      	bcc.n	80001ac <__udivsi3+0x6c>
 800015a:	0c03      	lsrs	r3, r0, #16
 800015c:	428b      	cmp	r3, r1
 800015e:	d30d      	bcc.n	800017c <__udivsi3+0x3c>
 8000160:	22ff      	movs	r2, #255	@ 0xff
 8000162:	0209      	lsls	r1, r1, #8
 8000164:	ba12      	rev	r2, r2
 8000166:	0c03      	lsrs	r3, r0, #16
 8000168:	428b      	cmp	r3, r1
 800016a:	d302      	bcc.n	8000172 <__udivsi3+0x32>
 800016c:	1212      	asrs	r2, r2, #8
 800016e:	0209      	lsls	r1, r1, #8
 8000170:	d065      	beq.n	800023e <__udivsi3+0xfe>
 8000172:	0b03      	lsrs	r3, r0, #12
 8000174:	428b      	cmp	r3, r1
 8000176:	d319      	bcc.n	80001ac <__udivsi3+0x6c>
 8000178:	e000      	b.n	800017c <__udivsi3+0x3c>
 800017a:	0a09      	lsrs	r1, r1, #8
 800017c:	0bc3      	lsrs	r3, r0, #15
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x46>
 8000182:	03cb      	lsls	r3, r1, #15
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0b83      	lsrs	r3, r0, #14
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x52>
 800018e:	038b      	lsls	r3, r1, #14
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0b43      	lsrs	r3, r0, #13
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x5e>
 800019a:	034b      	lsls	r3, r1, #13
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0b03      	lsrs	r3, r0, #12
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x6a>
 80001a6:	030b      	lsls	r3, r1, #12
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0ac3      	lsrs	r3, r0, #11
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x76>
 80001b2:	02cb      	lsls	r3, r1, #11
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	0a83      	lsrs	r3, r0, #10
 80001ba:	428b      	cmp	r3, r1
 80001bc:	d301      	bcc.n	80001c2 <__udivsi3+0x82>
 80001be:	028b      	lsls	r3, r1, #10
 80001c0:	1ac0      	subs	r0, r0, r3
 80001c2:	4152      	adcs	r2, r2
 80001c4:	0a43      	lsrs	r3, r0, #9
 80001c6:	428b      	cmp	r3, r1
 80001c8:	d301      	bcc.n	80001ce <__udivsi3+0x8e>
 80001ca:	024b      	lsls	r3, r1, #9
 80001cc:	1ac0      	subs	r0, r0, r3
 80001ce:	4152      	adcs	r2, r2
 80001d0:	0a03      	lsrs	r3, r0, #8
 80001d2:	428b      	cmp	r3, r1
 80001d4:	d301      	bcc.n	80001da <__udivsi3+0x9a>
 80001d6:	020b      	lsls	r3, r1, #8
 80001d8:	1ac0      	subs	r0, r0, r3
 80001da:	4152      	adcs	r2, r2
 80001dc:	d2cd      	bcs.n	800017a <__udivsi3+0x3a>
 80001de:	09c3      	lsrs	r3, r0, #7
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xa8>
 80001e4:	01cb      	lsls	r3, r1, #7
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0983      	lsrs	r3, r0, #6
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xb4>
 80001f0:	018b      	lsls	r3, r1, #6
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0943      	lsrs	r3, r0, #5
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xc0>
 80001fc:	014b      	lsls	r3, r1, #5
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0903      	lsrs	r3, r0, #4
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xcc>
 8000208:	010b      	lsls	r3, r1, #4
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	08c3      	lsrs	r3, r0, #3
 8000210:	428b      	cmp	r3, r1
 8000212:	d301      	bcc.n	8000218 <__udivsi3+0xd8>
 8000214:	00cb      	lsls	r3, r1, #3
 8000216:	1ac0      	subs	r0, r0, r3
 8000218:	4152      	adcs	r2, r2
 800021a:	0883      	lsrs	r3, r0, #2
 800021c:	428b      	cmp	r3, r1
 800021e:	d301      	bcc.n	8000224 <__udivsi3+0xe4>
 8000220:	008b      	lsls	r3, r1, #2
 8000222:	1ac0      	subs	r0, r0, r3
 8000224:	4152      	adcs	r2, r2
 8000226:	0843      	lsrs	r3, r0, #1
 8000228:	428b      	cmp	r3, r1
 800022a:	d301      	bcc.n	8000230 <__udivsi3+0xf0>
 800022c:	004b      	lsls	r3, r1, #1
 800022e:	1ac0      	subs	r0, r0, r3
 8000230:	4152      	adcs	r2, r2
 8000232:	1a41      	subs	r1, r0, r1
 8000234:	d200      	bcs.n	8000238 <__udivsi3+0xf8>
 8000236:	4601      	mov	r1, r0
 8000238:	4152      	adcs	r2, r2
 800023a:	4610      	mov	r0, r2
 800023c:	4770      	bx	lr
 800023e:	e7ff      	b.n	8000240 <__udivsi3+0x100>
 8000240:	b501      	push	{r0, lr}
 8000242:	2000      	movs	r0, #0
 8000244:	f000 f8f0 	bl	8000428 <__aeabi_idiv0>
 8000248:	bd02      	pop	{r1, pc}
 800024a:	46c0      	nop			@ (mov r8, r8)

0800024c <__aeabi_uidivmod>:
 800024c:	2900      	cmp	r1, #0
 800024e:	d0f7      	beq.n	8000240 <__udivsi3+0x100>
 8000250:	e776      	b.n	8000140 <__udivsi3>
 8000252:	4770      	bx	lr

08000254 <__divsi3>:
 8000254:	4603      	mov	r3, r0
 8000256:	430b      	orrs	r3, r1
 8000258:	d47f      	bmi.n	800035a <__divsi3+0x106>
 800025a:	2200      	movs	r2, #0
 800025c:	0843      	lsrs	r3, r0, #1
 800025e:	428b      	cmp	r3, r1
 8000260:	d374      	bcc.n	800034c <__divsi3+0xf8>
 8000262:	0903      	lsrs	r3, r0, #4
 8000264:	428b      	cmp	r3, r1
 8000266:	d35f      	bcc.n	8000328 <__divsi3+0xd4>
 8000268:	0a03      	lsrs	r3, r0, #8
 800026a:	428b      	cmp	r3, r1
 800026c:	d344      	bcc.n	80002f8 <__divsi3+0xa4>
 800026e:	0b03      	lsrs	r3, r0, #12
 8000270:	428b      	cmp	r3, r1
 8000272:	d328      	bcc.n	80002c6 <__divsi3+0x72>
 8000274:	0c03      	lsrs	r3, r0, #16
 8000276:	428b      	cmp	r3, r1
 8000278:	d30d      	bcc.n	8000296 <__divsi3+0x42>
 800027a:	22ff      	movs	r2, #255	@ 0xff
 800027c:	0209      	lsls	r1, r1, #8
 800027e:	ba12      	rev	r2, r2
 8000280:	0c03      	lsrs	r3, r0, #16
 8000282:	428b      	cmp	r3, r1
 8000284:	d302      	bcc.n	800028c <__divsi3+0x38>
 8000286:	1212      	asrs	r2, r2, #8
 8000288:	0209      	lsls	r1, r1, #8
 800028a:	d065      	beq.n	8000358 <__divsi3+0x104>
 800028c:	0b03      	lsrs	r3, r0, #12
 800028e:	428b      	cmp	r3, r1
 8000290:	d319      	bcc.n	80002c6 <__divsi3+0x72>
 8000292:	e000      	b.n	8000296 <__divsi3+0x42>
 8000294:	0a09      	lsrs	r1, r1, #8
 8000296:	0bc3      	lsrs	r3, r0, #15
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x4c>
 800029c:	03cb      	lsls	r3, r1, #15
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0b83      	lsrs	r3, r0, #14
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x58>
 80002a8:	038b      	lsls	r3, r1, #14
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0b43      	lsrs	r3, r0, #13
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x64>
 80002b4:	034b      	lsls	r3, r1, #13
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0b03      	lsrs	r3, r0, #12
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x70>
 80002c0:	030b      	lsls	r3, r1, #12
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0ac3      	lsrs	r3, r0, #11
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0x7c>
 80002cc:	02cb      	lsls	r3, r1, #11
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	0a83      	lsrs	r3, r0, #10
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d301      	bcc.n	80002dc <__divsi3+0x88>
 80002d8:	028b      	lsls	r3, r1, #10
 80002da:	1ac0      	subs	r0, r0, r3
 80002dc:	4152      	adcs	r2, r2
 80002de:	0a43      	lsrs	r3, r0, #9
 80002e0:	428b      	cmp	r3, r1
 80002e2:	d301      	bcc.n	80002e8 <__divsi3+0x94>
 80002e4:	024b      	lsls	r3, r1, #9
 80002e6:	1ac0      	subs	r0, r0, r3
 80002e8:	4152      	adcs	r2, r2
 80002ea:	0a03      	lsrs	r3, r0, #8
 80002ec:	428b      	cmp	r3, r1
 80002ee:	d301      	bcc.n	80002f4 <__divsi3+0xa0>
 80002f0:	020b      	lsls	r3, r1, #8
 80002f2:	1ac0      	subs	r0, r0, r3
 80002f4:	4152      	adcs	r2, r2
 80002f6:	d2cd      	bcs.n	8000294 <__divsi3+0x40>
 80002f8:	09c3      	lsrs	r3, r0, #7
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xae>
 80002fe:	01cb      	lsls	r3, r1, #7
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	0983      	lsrs	r3, r0, #6
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xba>
 800030a:	018b      	lsls	r3, r1, #6
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0943      	lsrs	r3, r0, #5
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xc6>
 8000316:	014b      	lsls	r3, r1, #5
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0903      	lsrs	r3, r0, #4
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xd2>
 8000322:	010b      	lsls	r3, r1, #4
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	08c3      	lsrs	r3, r0, #3
 800032a:	428b      	cmp	r3, r1
 800032c:	d301      	bcc.n	8000332 <__divsi3+0xde>
 800032e:	00cb      	lsls	r3, r1, #3
 8000330:	1ac0      	subs	r0, r0, r3
 8000332:	4152      	adcs	r2, r2
 8000334:	0883      	lsrs	r3, r0, #2
 8000336:	428b      	cmp	r3, r1
 8000338:	d301      	bcc.n	800033e <__divsi3+0xea>
 800033a:	008b      	lsls	r3, r1, #2
 800033c:	1ac0      	subs	r0, r0, r3
 800033e:	4152      	adcs	r2, r2
 8000340:	0843      	lsrs	r3, r0, #1
 8000342:	428b      	cmp	r3, r1
 8000344:	d301      	bcc.n	800034a <__divsi3+0xf6>
 8000346:	004b      	lsls	r3, r1, #1
 8000348:	1ac0      	subs	r0, r0, r3
 800034a:	4152      	adcs	r2, r2
 800034c:	1a41      	subs	r1, r0, r1
 800034e:	d200      	bcs.n	8000352 <__divsi3+0xfe>
 8000350:	4601      	mov	r1, r0
 8000352:	4152      	adcs	r2, r2
 8000354:	4610      	mov	r0, r2
 8000356:	4770      	bx	lr
 8000358:	e05d      	b.n	8000416 <__divsi3+0x1c2>
 800035a:	0fca      	lsrs	r2, r1, #31
 800035c:	d000      	beq.n	8000360 <__divsi3+0x10c>
 800035e:	4249      	negs	r1, r1
 8000360:	1003      	asrs	r3, r0, #32
 8000362:	d300      	bcc.n	8000366 <__divsi3+0x112>
 8000364:	4240      	negs	r0, r0
 8000366:	4053      	eors	r3, r2
 8000368:	2200      	movs	r2, #0
 800036a:	469c      	mov	ip, r3
 800036c:	0903      	lsrs	r3, r0, #4
 800036e:	428b      	cmp	r3, r1
 8000370:	d32d      	bcc.n	80003ce <__divsi3+0x17a>
 8000372:	0a03      	lsrs	r3, r0, #8
 8000374:	428b      	cmp	r3, r1
 8000376:	d312      	bcc.n	800039e <__divsi3+0x14a>
 8000378:	22fc      	movs	r2, #252	@ 0xfc
 800037a:	0189      	lsls	r1, r1, #6
 800037c:	ba12      	rev	r2, r2
 800037e:	0a03      	lsrs	r3, r0, #8
 8000380:	428b      	cmp	r3, r1
 8000382:	d30c      	bcc.n	800039e <__divsi3+0x14a>
 8000384:	0189      	lsls	r1, r1, #6
 8000386:	1192      	asrs	r2, r2, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d308      	bcc.n	800039e <__divsi3+0x14a>
 800038c:	0189      	lsls	r1, r1, #6
 800038e:	1192      	asrs	r2, r2, #6
 8000390:	428b      	cmp	r3, r1
 8000392:	d304      	bcc.n	800039e <__divsi3+0x14a>
 8000394:	0189      	lsls	r1, r1, #6
 8000396:	d03a      	beq.n	800040e <__divsi3+0x1ba>
 8000398:	1192      	asrs	r2, r2, #6
 800039a:	e000      	b.n	800039e <__divsi3+0x14a>
 800039c:	0989      	lsrs	r1, r1, #6
 800039e:	09c3      	lsrs	r3, r0, #7
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x154>
 80003a4:	01cb      	lsls	r3, r1, #7
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	0983      	lsrs	r3, r0, #6
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x160>
 80003b0:	018b      	lsls	r3, r1, #6
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0943      	lsrs	r3, r0, #5
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x16c>
 80003bc:	014b      	lsls	r3, r1, #5
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	0903      	lsrs	r3, r0, #4
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d301      	bcc.n	80003cc <__divsi3+0x178>
 80003c8:	010b      	lsls	r3, r1, #4
 80003ca:	1ac0      	subs	r0, r0, r3
 80003cc:	4152      	adcs	r2, r2
 80003ce:	08c3      	lsrs	r3, r0, #3
 80003d0:	428b      	cmp	r3, r1
 80003d2:	d301      	bcc.n	80003d8 <__divsi3+0x184>
 80003d4:	00cb      	lsls	r3, r1, #3
 80003d6:	1ac0      	subs	r0, r0, r3
 80003d8:	4152      	adcs	r2, r2
 80003da:	0883      	lsrs	r3, r0, #2
 80003dc:	428b      	cmp	r3, r1
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x190>
 80003e0:	008b      	lsls	r3, r1, #2
 80003e2:	1ac0      	subs	r0, r0, r3
 80003e4:	4152      	adcs	r2, r2
 80003e6:	d2d9      	bcs.n	800039c <__divsi3+0x148>
 80003e8:	0843      	lsrs	r3, r0, #1
 80003ea:	428b      	cmp	r3, r1
 80003ec:	d301      	bcc.n	80003f2 <__divsi3+0x19e>
 80003ee:	004b      	lsls	r3, r1, #1
 80003f0:	1ac0      	subs	r0, r0, r3
 80003f2:	4152      	adcs	r2, r2
 80003f4:	1a41      	subs	r1, r0, r1
 80003f6:	d200      	bcs.n	80003fa <__divsi3+0x1a6>
 80003f8:	4601      	mov	r1, r0
 80003fa:	4663      	mov	r3, ip
 80003fc:	4152      	adcs	r2, r2
 80003fe:	105b      	asrs	r3, r3, #1
 8000400:	4610      	mov	r0, r2
 8000402:	d301      	bcc.n	8000408 <__divsi3+0x1b4>
 8000404:	4240      	negs	r0, r0
 8000406:	2b00      	cmp	r3, #0
 8000408:	d500      	bpl.n	800040c <__divsi3+0x1b8>
 800040a:	4249      	negs	r1, r1
 800040c:	4770      	bx	lr
 800040e:	4663      	mov	r3, ip
 8000410:	105b      	asrs	r3, r3, #1
 8000412:	d300      	bcc.n	8000416 <__divsi3+0x1c2>
 8000414:	4240      	negs	r0, r0
 8000416:	b501      	push	{r0, lr}
 8000418:	2000      	movs	r0, #0
 800041a:	f000 f805 	bl	8000428 <__aeabi_idiv0>
 800041e:	bd02      	pop	{r1, pc}

08000420 <__aeabi_idivmod>:
 8000420:	2900      	cmp	r1, #0
 8000422:	d0f8      	beq.n	8000416 <__divsi3+0x1c2>
 8000424:	e716      	b.n	8000254 <__divsi3>
 8000426:	4770      	bx	lr

08000428 <__aeabi_idiv0>:
 8000428:	4770      	bx	lr
 800042a:	46c0      	nop			@ (mov r8, r8)

0800042c <__aeabi_cdrcmple>:
 800042c:	4684      	mov	ip, r0
 800042e:	0010      	movs	r0, r2
 8000430:	4662      	mov	r2, ip
 8000432:	468c      	mov	ip, r1
 8000434:	0019      	movs	r1, r3
 8000436:	4663      	mov	r3, ip
 8000438:	e000      	b.n	800043c <__aeabi_cdcmpeq>
 800043a:	46c0      	nop			@ (mov r8, r8)

0800043c <__aeabi_cdcmpeq>:
 800043c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800043e:	f001 f8cb 	bl	80015d8 <__ledf2>
 8000442:	2800      	cmp	r0, #0
 8000444:	d401      	bmi.n	800044a <__aeabi_cdcmpeq+0xe>
 8000446:	2100      	movs	r1, #0
 8000448:	42c8      	cmn	r0, r1
 800044a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800044c <__aeabi_dcmpeq>:
 800044c:	b510      	push	{r4, lr}
 800044e:	f001 f80b 	bl	8001468 <__eqdf2>
 8000452:	4240      	negs	r0, r0
 8000454:	3001      	adds	r0, #1
 8000456:	bd10      	pop	{r4, pc}

08000458 <__aeabi_dcmplt>:
 8000458:	b510      	push	{r4, lr}
 800045a:	f001 f8bd 	bl	80015d8 <__ledf2>
 800045e:	2800      	cmp	r0, #0
 8000460:	db01      	blt.n	8000466 <__aeabi_dcmplt+0xe>
 8000462:	2000      	movs	r0, #0
 8000464:	bd10      	pop	{r4, pc}
 8000466:	2001      	movs	r0, #1
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			@ (mov r8, r8)

0800046c <__aeabi_dcmple>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f001 f8b3 	bl	80015d8 <__ledf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	dd01      	ble.n	800047a <__aeabi_dcmple+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			@ (mov r8, r8)

08000480 <__aeabi_dcmpgt>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f001 f835 	bl	80014f0 <__gedf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	dc01      	bgt.n	800048e <__aeabi_dcmpgt+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			@ (mov r8, r8)

08000494 <__aeabi_dcmpge>:
 8000494:	b510      	push	{r4, lr}
 8000496:	f001 f82b 	bl	80014f0 <__gedf2>
 800049a:	2800      	cmp	r0, #0
 800049c:	da01      	bge.n	80004a2 <__aeabi_dcmpge+0xe>
 800049e:	2000      	movs	r0, #0
 80004a0:	bd10      	pop	{r4, pc}
 80004a2:	2001      	movs	r0, #1
 80004a4:	bd10      	pop	{r4, pc}
 80004a6:	46c0      	nop			@ (mov r8, r8)

080004a8 <__aeabi_fdiv>:
 80004a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80004aa:	464f      	mov	r7, r9
 80004ac:	4646      	mov	r6, r8
 80004ae:	46d6      	mov	lr, sl
 80004b0:	0244      	lsls	r4, r0, #9
 80004b2:	b5c0      	push	{r6, r7, lr}
 80004b4:	0047      	lsls	r7, r0, #1
 80004b6:	1c0e      	adds	r6, r1, #0
 80004b8:	0a64      	lsrs	r4, r4, #9
 80004ba:	0e3f      	lsrs	r7, r7, #24
 80004bc:	0fc5      	lsrs	r5, r0, #31
 80004be:	2f00      	cmp	r7, #0
 80004c0:	d03c      	beq.n	800053c <__aeabi_fdiv+0x94>
 80004c2:	2fff      	cmp	r7, #255	@ 0xff
 80004c4:	d042      	beq.n	800054c <__aeabi_fdiv+0xa4>
 80004c6:	2300      	movs	r3, #0
 80004c8:	2280      	movs	r2, #128	@ 0x80
 80004ca:	4699      	mov	r9, r3
 80004cc:	469a      	mov	sl, r3
 80004ce:	00e4      	lsls	r4, r4, #3
 80004d0:	04d2      	lsls	r2, r2, #19
 80004d2:	4314      	orrs	r4, r2
 80004d4:	3f7f      	subs	r7, #127	@ 0x7f
 80004d6:	0273      	lsls	r3, r6, #9
 80004d8:	0a5b      	lsrs	r3, r3, #9
 80004da:	4698      	mov	r8, r3
 80004dc:	0073      	lsls	r3, r6, #1
 80004de:	0e1b      	lsrs	r3, r3, #24
 80004e0:	0ff6      	lsrs	r6, r6, #31
 80004e2:	2b00      	cmp	r3, #0
 80004e4:	d01b      	beq.n	800051e <__aeabi_fdiv+0x76>
 80004e6:	2bff      	cmp	r3, #255	@ 0xff
 80004e8:	d013      	beq.n	8000512 <__aeabi_fdiv+0x6a>
 80004ea:	4642      	mov	r2, r8
 80004ec:	2180      	movs	r1, #128	@ 0x80
 80004ee:	00d2      	lsls	r2, r2, #3
 80004f0:	04c9      	lsls	r1, r1, #19
 80004f2:	4311      	orrs	r1, r2
 80004f4:	4688      	mov	r8, r1
 80004f6:	2000      	movs	r0, #0
 80004f8:	3b7f      	subs	r3, #127	@ 0x7f
 80004fa:	0029      	movs	r1, r5
 80004fc:	1aff      	subs	r7, r7, r3
 80004fe:	464b      	mov	r3, r9
 8000500:	4071      	eors	r1, r6
 8000502:	b2c9      	uxtb	r1, r1
 8000504:	2b0f      	cmp	r3, #15
 8000506:	d900      	bls.n	800050a <__aeabi_fdiv+0x62>
 8000508:	e0b5      	b.n	8000676 <__aeabi_fdiv+0x1ce>
 800050a:	4a74      	ldr	r2, [pc, #464]	@ (80006dc <__aeabi_fdiv+0x234>)
 800050c:	009b      	lsls	r3, r3, #2
 800050e:	58d3      	ldr	r3, [r2, r3]
 8000510:	469f      	mov	pc, r3
 8000512:	4643      	mov	r3, r8
 8000514:	2b00      	cmp	r3, #0
 8000516:	d13f      	bne.n	8000598 <__aeabi_fdiv+0xf0>
 8000518:	3fff      	subs	r7, #255	@ 0xff
 800051a:	3302      	adds	r3, #2
 800051c:	e003      	b.n	8000526 <__aeabi_fdiv+0x7e>
 800051e:	4643      	mov	r3, r8
 8000520:	2b00      	cmp	r3, #0
 8000522:	d12d      	bne.n	8000580 <__aeabi_fdiv+0xd8>
 8000524:	2301      	movs	r3, #1
 8000526:	0029      	movs	r1, r5
 8000528:	464a      	mov	r2, r9
 800052a:	4071      	eors	r1, r6
 800052c:	b2c9      	uxtb	r1, r1
 800052e:	431a      	orrs	r2, r3
 8000530:	2a0e      	cmp	r2, #14
 8000532:	d838      	bhi.n	80005a6 <__aeabi_fdiv+0xfe>
 8000534:	486a      	ldr	r0, [pc, #424]	@ (80006e0 <__aeabi_fdiv+0x238>)
 8000536:	0092      	lsls	r2, r2, #2
 8000538:	5882      	ldr	r2, [r0, r2]
 800053a:	4697      	mov	pc, r2
 800053c:	2c00      	cmp	r4, #0
 800053e:	d113      	bne.n	8000568 <__aeabi_fdiv+0xc0>
 8000540:	2304      	movs	r3, #4
 8000542:	4699      	mov	r9, r3
 8000544:	3b03      	subs	r3, #3
 8000546:	2700      	movs	r7, #0
 8000548:	469a      	mov	sl, r3
 800054a:	e7c4      	b.n	80004d6 <__aeabi_fdiv+0x2e>
 800054c:	2c00      	cmp	r4, #0
 800054e:	d105      	bne.n	800055c <__aeabi_fdiv+0xb4>
 8000550:	2308      	movs	r3, #8
 8000552:	4699      	mov	r9, r3
 8000554:	3b06      	subs	r3, #6
 8000556:	27ff      	movs	r7, #255	@ 0xff
 8000558:	469a      	mov	sl, r3
 800055a:	e7bc      	b.n	80004d6 <__aeabi_fdiv+0x2e>
 800055c:	230c      	movs	r3, #12
 800055e:	4699      	mov	r9, r3
 8000560:	3b09      	subs	r3, #9
 8000562:	27ff      	movs	r7, #255	@ 0xff
 8000564:	469a      	mov	sl, r3
 8000566:	e7b6      	b.n	80004d6 <__aeabi_fdiv+0x2e>
 8000568:	0020      	movs	r0, r4
 800056a:	f002 f887 	bl	800267c <__clzsi2>
 800056e:	2776      	movs	r7, #118	@ 0x76
 8000570:	1f43      	subs	r3, r0, #5
 8000572:	409c      	lsls	r4, r3
 8000574:	2300      	movs	r3, #0
 8000576:	427f      	negs	r7, r7
 8000578:	4699      	mov	r9, r3
 800057a:	469a      	mov	sl, r3
 800057c:	1a3f      	subs	r7, r7, r0
 800057e:	e7aa      	b.n	80004d6 <__aeabi_fdiv+0x2e>
 8000580:	4640      	mov	r0, r8
 8000582:	f002 f87b 	bl	800267c <__clzsi2>
 8000586:	4642      	mov	r2, r8
 8000588:	1f43      	subs	r3, r0, #5
 800058a:	409a      	lsls	r2, r3
 800058c:	2376      	movs	r3, #118	@ 0x76
 800058e:	425b      	negs	r3, r3
 8000590:	1a1b      	subs	r3, r3, r0
 8000592:	4690      	mov	r8, r2
 8000594:	2000      	movs	r0, #0
 8000596:	e7b0      	b.n	80004fa <__aeabi_fdiv+0x52>
 8000598:	2303      	movs	r3, #3
 800059a:	464a      	mov	r2, r9
 800059c:	431a      	orrs	r2, r3
 800059e:	4691      	mov	r9, r2
 80005a0:	2003      	movs	r0, #3
 80005a2:	33fc      	adds	r3, #252	@ 0xfc
 80005a4:	e7a9      	b.n	80004fa <__aeabi_fdiv+0x52>
 80005a6:	000d      	movs	r5, r1
 80005a8:	20ff      	movs	r0, #255	@ 0xff
 80005aa:	2200      	movs	r2, #0
 80005ac:	05c0      	lsls	r0, r0, #23
 80005ae:	07ed      	lsls	r5, r5, #31
 80005b0:	4310      	orrs	r0, r2
 80005b2:	4328      	orrs	r0, r5
 80005b4:	bce0      	pop	{r5, r6, r7}
 80005b6:	46ba      	mov	sl, r7
 80005b8:	46b1      	mov	r9, r6
 80005ba:	46a8      	mov	r8, r5
 80005bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80005be:	000d      	movs	r5, r1
 80005c0:	2000      	movs	r0, #0
 80005c2:	2200      	movs	r2, #0
 80005c4:	e7f2      	b.n	80005ac <__aeabi_fdiv+0x104>
 80005c6:	4653      	mov	r3, sl
 80005c8:	2b02      	cmp	r3, #2
 80005ca:	d0ed      	beq.n	80005a8 <__aeabi_fdiv+0x100>
 80005cc:	2b03      	cmp	r3, #3
 80005ce:	d033      	beq.n	8000638 <__aeabi_fdiv+0x190>
 80005d0:	46a0      	mov	r8, r4
 80005d2:	2b01      	cmp	r3, #1
 80005d4:	d105      	bne.n	80005e2 <__aeabi_fdiv+0x13a>
 80005d6:	2000      	movs	r0, #0
 80005d8:	2200      	movs	r2, #0
 80005da:	e7e7      	b.n	80005ac <__aeabi_fdiv+0x104>
 80005dc:	0035      	movs	r5, r6
 80005de:	2803      	cmp	r0, #3
 80005e0:	d07a      	beq.n	80006d8 <__aeabi_fdiv+0x230>
 80005e2:	003b      	movs	r3, r7
 80005e4:	337f      	adds	r3, #127	@ 0x7f
 80005e6:	2b00      	cmp	r3, #0
 80005e8:	dd2d      	ble.n	8000646 <__aeabi_fdiv+0x19e>
 80005ea:	4642      	mov	r2, r8
 80005ec:	0752      	lsls	r2, r2, #29
 80005ee:	d007      	beq.n	8000600 <__aeabi_fdiv+0x158>
 80005f0:	220f      	movs	r2, #15
 80005f2:	4641      	mov	r1, r8
 80005f4:	400a      	ands	r2, r1
 80005f6:	2a04      	cmp	r2, #4
 80005f8:	d002      	beq.n	8000600 <__aeabi_fdiv+0x158>
 80005fa:	2204      	movs	r2, #4
 80005fc:	4694      	mov	ip, r2
 80005fe:	44e0      	add	r8, ip
 8000600:	4642      	mov	r2, r8
 8000602:	0112      	lsls	r2, r2, #4
 8000604:	d505      	bpl.n	8000612 <__aeabi_fdiv+0x16a>
 8000606:	4642      	mov	r2, r8
 8000608:	4b36      	ldr	r3, [pc, #216]	@ (80006e4 <__aeabi_fdiv+0x23c>)
 800060a:	401a      	ands	r2, r3
 800060c:	003b      	movs	r3, r7
 800060e:	4690      	mov	r8, r2
 8000610:	3380      	adds	r3, #128	@ 0x80
 8000612:	2bfe      	cmp	r3, #254	@ 0xfe
 8000614:	dcc8      	bgt.n	80005a8 <__aeabi_fdiv+0x100>
 8000616:	4642      	mov	r2, r8
 8000618:	0192      	lsls	r2, r2, #6
 800061a:	0a52      	lsrs	r2, r2, #9
 800061c:	b2d8      	uxtb	r0, r3
 800061e:	e7c5      	b.n	80005ac <__aeabi_fdiv+0x104>
 8000620:	2280      	movs	r2, #128	@ 0x80
 8000622:	2500      	movs	r5, #0
 8000624:	20ff      	movs	r0, #255	@ 0xff
 8000626:	03d2      	lsls	r2, r2, #15
 8000628:	e7c0      	b.n	80005ac <__aeabi_fdiv+0x104>
 800062a:	2280      	movs	r2, #128	@ 0x80
 800062c:	03d2      	lsls	r2, r2, #15
 800062e:	4214      	tst	r4, r2
 8000630:	d002      	beq.n	8000638 <__aeabi_fdiv+0x190>
 8000632:	4643      	mov	r3, r8
 8000634:	4213      	tst	r3, r2
 8000636:	d049      	beq.n	80006cc <__aeabi_fdiv+0x224>
 8000638:	2280      	movs	r2, #128	@ 0x80
 800063a:	03d2      	lsls	r2, r2, #15
 800063c:	4322      	orrs	r2, r4
 800063e:	0252      	lsls	r2, r2, #9
 8000640:	20ff      	movs	r0, #255	@ 0xff
 8000642:	0a52      	lsrs	r2, r2, #9
 8000644:	e7b2      	b.n	80005ac <__aeabi_fdiv+0x104>
 8000646:	2201      	movs	r2, #1
 8000648:	1ad3      	subs	r3, r2, r3
 800064a:	2b1b      	cmp	r3, #27
 800064c:	dcc3      	bgt.n	80005d6 <__aeabi_fdiv+0x12e>
 800064e:	4642      	mov	r2, r8
 8000650:	40da      	lsrs	r2, r3
 8000652:	4643      	mov	r3, r8
 8000654:	379e      	adds	r7, #158	@ 0x9e
 8000656:	40bb      	lsls	r3, r7
 8000658:	1e59      	subs	r1, r3, #1
 800065a:	418b      	sbcs	r3, r1
 800065c:	431a      	orrs	r2, r3
 800065e:	0753      	lsls	r3, r2, #29
 8000660:	d004      	beq.n	800066c <__aeabi_fdiv+0x1c4>
 8000662:	230f      	movs	r3, #15
 8000664:	4013      	ands	r3, r2
 8000666:	2b04      	cmp	r3, #4
 8000668:	d000      	beq.n	800066c <__aeabi_fdiv+0x1c4>
 800066a:	3204      	adds	r2, #4
 800066c:	0153      	lsls	r3, r2, #5
 800066e:	d529      	bpl.n	80006c4 <__aeabi_fdiv+0x21c>
 8000670:	2001      	movs	r0, #1
 8000672:	2200      	movs	r2, #0
 8000674:	e79a      	b.n	80005ac <__aeabi_fdiv+0x104>
 8000676:	4642      	mov	r2, r8
 8000678:	0163      	lsls	r3, r4, #5
 800067a:	0155      	lsls	r5, r2, #5
 800067c:	42ab      	cmp	r3, r5
 800067e:	d215      	bcs.n	80006ac <__aeabi_fdiv+0x204>
 8000680:	201b      	movs	r0, #27
 8000682:	2200      	movs	r2, #0
 8000684:	3f01      	subs	r7, #1
 8000686:	2601      	movs	r6, #1
 8000688:	001c      	movs	r4, r3
 800068a:	0052      	lsls	r2, r2, #1
 800068c:	005b      	lsls	r3, r3, #1
 800068e:	2c00      	cmp	r4, #0
 8000690:	db01      	blt.n	8000696 <__aeabi_fdiv+0x1ee>
 8000692:	429d      	cmp	r5, r3
 8000694:	d801      	bhi.n	800069a <__aeabi_fdiv+0x1f2>
 8000696:	1b5b      	subs	r3, r3, r5
 8000698:	4332      	orrs	r2, r6
 800069a:	3801      	subs	r0, #1
 800069c:	2800      	cmp	r0, #0
 800069e:	d1f3      	bne.n	8000688 <__aeabi_fdiv+0x1e0>
 80006a0:	1e58      	subs	r0, r3, #1
 80006a2:	4183      	sbcs	r3, r0
 80006a4:	4313      	orrs	r3, r2
 80006a6:	4698      	mov	r8, r3
 80006a8:	000d      	movs	r5, r1
 80006aa:	e79a      	b.n	80005e2 <__aeabi_fdiv+0x13a>
 80006ac:	201a      	movs	r0, #26
 80006ae:	2201      	movs	r2, #1
 80006b0:	1b5b      	subs	r3, r3, r5
 80006b2:	e7e8      	b.n	8000686 <__aeabi_fdiv+0x1de>
 80006b4:	3b02      	subs	r3, #2
 80006b6:	425a      	negs	r2, r3
 80006b8:	4153      	adcs	r3, r2
 80006ba:	425b      	negs	r3, r3
 80006bc:	0035      	movs	r5, r6
 80006be:	2200      	movs	r2, #0
 80006c0:	b2d8      	uxtb	r0, r3
 80006c2:	e773      	b.n	80005ac <__aeabi_fdiv+0x104>
 80006c4:	0192      	lsls	r2, r2, #6
 80006c6:	2000      	movs	r0, #0
 80006c8:	0a52      	lsrs	r2, r2, #9
 80006ca:	e76f      	b.n	80005ac <__aeabi_fdiv+0x104>
 80006cc:	431a      	orrs	r2, r3
 80006ce:	0252      	lsls	r2, r2, #9
 80006d0:	0035      	movs	r5, r6
 80006d2:	20ff      	movs	r0, #255	@ 0xff
 80006d4:	0a52      	lsrs	r2, r2, #9
 80006d6:	e769      	b.n	80005ac <__aeabi_fdiv+0x104>
 80006d8:	4644      	mov	r4, r8
 80006da:	e7ad      	b.n	8000638 <__aeabi_fdiv+0x190>
 80006dc:	08007180 	.word	0x08007180
 80006e0:	080071c0 	.word	0x080071c0
 80006e4:	f7ffffff 	.word	0xf7ffffff

080006e8 <__aeabi_ui2f>:
 80006e8:	b570      	push	{r4, r5, r6, lr}
 80006ea:	1e04      	subs	r4, r0, #0
 80006ec:	d00e      	beq.n	800070c <__aeabi_ui2f+0x24>
 80006ee:	f001 ffc5 	bl	800267c <__clzsi2>
 80006f2:	239e      	movs	r3, #158	@ 0x9e
 80006f4:	0001      	movs	r1, r0
 80006f6:	1a1b      	subs	r3, r3, r0
 80006f8:	2b96      	cmp	r3, #150	@ 0x96
 80006fa:	dc0c      	bgt.n	8000716 <__aeabi_ui2f+0x2e>
 80006fc:	2808      	cmp	r0, #8
 80006fe:	d02f      	beq.n	8000760 <__aeabi_ui2f+0x78>
 8000700:	3908      	subs	r1, #8
 8000702:	408c      	lsls	r4, r1
 8000704:	0264      	lsls	r4, r4, #9
 8000706:	0a64      	lsrs	r4, r4, #9
 8000708:	b2d8      	uxtb	r0, r3
 800070a:	e001      	b.n	8000710 <__aeabi_ui2f+0x28>
 800070c:	2000      	movs	r0, #0
 800070e:	2400      	movs	r4, #0
 8000710:	05c0      	lsls	r0, r0, #23
 8000712:	4320      	orrs	r0, r4
 8000714:	bd70      	pop	{r4, r5, r6, pc}
 8000716:	2b99      	cmp	r3, #153	@ 0x99
 8000718:	dc16      	bgt.n	8000748 <__aeabi_ui2f+0x60>
 800071a:	1f42      	subs	r2, r0, #5
 800071c:	2805      	cmp	r0, #5
 800071e:	d000      	beq.n	8000722 <__aeabi_ui2f+0x3a>
 8000720:	4094      	lsls	r4, r2
 8000722:	0022      	movs	r2, r4
 8000724:	4810      	ldr	r0, [pc, #64]	@ (8000768 <__aeabi_ui2f+0x80>)
 8000726:	4002      	ands	r2, r0
 8000728:	0765      	lsls	r5, r4, #29
 800072a:	d009      	beq.n	8000740 <__aeabi_ui2f+0x58>
 800072c:	250f      	movs	r5, #15
 800072e:	402c      	ands	r4, r5
 8000730:	2c04      	cmp	r4, #4
 8000732:	d005      	beq.n	8000740 <__aeabi_ui2f+0x58>
 8000734:	3204      	adds	r2, #4
 8000736:	0154      	lsls	r4, r2, #5
 8000738:	d502      	bpl.n	8000740 <__aeabi_ui2f+0x58>
 800073a:	239f      	movs	r3, #159	@ 0x9f
 800073c:	4002      	ands	r2, r0
 800073e:	1a5b      	subs	r3, r3, r1
 8000740:	0192      	lsls	r2, r2, #6
 8000742:	0a54      	lsrs	r4, r2, #9
 8000744:	b2d8      	uxtb	r0, r3
 8000746:	e7e3      	b.n	8000710 <__aeabi_ui2f+0x28>
 8000748:	0002      	movs	r2, r0
 800074a:	0020      	movs	r0, r4
 800074c:	321b      	adds	r2, #27
 800074e:	4090      	lsls	r0, r2
 8000750:	0002      	movs	r2, r0
 8000752:	1e50      	subs	r0, r2, #1
 8000754:	4182      	sbcs	r2, r0
 8000756:	2005      	movs	r0, #5
 8000758:	1a40      	subs	r0, r0, r1
 800075a:	40c4      	lsrs	r4, r0
 800075c:	4314      	orrs	r4, r2
 800075e:	e7e0      	b.n	8000722 <__aeabi_ui2f+0x3a>
 8000760:	0264      	lsls	r4, r4, #9
 8000762:	2096      	movs	r0, #150	@ 0x96
 8000764:	0a64      	lsrs	r4, r4, #9
 8000766:	e7d3      	b.n	8000710 <__aeabi_ui2f+0x28>
 8000768:	fbffffff 	.word	0xfbffffff

0800076c <__aeabi_dadd>:
 800076c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800076e:	4657      	mov	r7, sl
 8000770:	464e      	mov	r6, r9
 8000772:	4645      	mov	r5, r8
 8000774:	46de      	mov	lr, fp
 8000776:	b5e0      	push	{r5, r6, r7, lr}
 8000778:	b083      	sub	sp, #12
 800077a:	9000      	str	r0, [sp, #0]
 800077c:	9101      	str	r1, [sp, #4]
 800077e:	030c      	lsls	r4, r1, #12
 8000780:	004f      	lsls	r7, r1, #1
 8000782:	0fce      	lsrs	r6, r1, #31
 8000784:	0a61      	lsrs	r1, r4, #9
 8000786:	9c00      	ldr	r4, [sp, #0]
 8000788:	031d      	lsls	r5, r3, #12
 800078a:	0f64      	lsrs	r4, r4, #29
 800078c:	430c      	orrs	r4, r1
 800078e:	9900      	ldr	r1, [sp, #0]
 8000790:	9200      	str	r2, [sp, #0]
 8000792:	9301      	str	r3, [sp, #4]
 8000794:	00c8      	lsls	r0, r1, #3
 8000796:	0059      	lsls	r1, r3, #1
 8000798:	0d4b      	lsrs	r3, r1, #21
 800079a:	4699      	mov	r9, r3
 800079c:	9a00      	ldr	r2, [sp, #0]
 800079e:	9b01      	ldr	r3, [sp, #4]
 80007a0:	0a6d      	lsrs	r5, r5, #9
 80007a2:	0fd9      	lsrs	r1, r3, #31
 80007a4:	0f53      	lsrs	r3, r2, #29
 80007a6:	432b      	orrs	r3, r5
 80007a8:	469a      	mov	sl, r3
 80007aa:	9b00      	ldr	r3, [sp, #0]
 80007ac:	0d7f      	lsrs	r7, r7, #21
 80007ae:	00da      	lsls	r2, r3, #3
 80007b0:	4694      	mov	ip, r2
 80007b2:	464a      	mov	r2, r9
 80007b4:	46b0      	mov	r8, r6
 80007b6:	1aba      	subs	r2, r7, r2
 80007b8:	428e      	cmp	r6, r1
 80007ba:	d100      	bne.n	80007be <__aeabi_dadd+0x52>
 80007bc:	e0b0      	b.n	8000920 <__aeabi_dadd+0x1b4>
 80007be:	2a00      	cmp	r2, #0
 80007c0:	dc00      	bgt.n	80007c4 <__aeabi_dadd+0x58>
 80007c2:	e078      	b.n	80008b6 <__aeabi_dadd+0x14a>
 80007c4:	4649      	mov	r1, r9
 80007c6:	2900      	cmp	r1, #0
 80007c8:	d100      	bne.n	80007cc <__aeabi_dadd+0x60>
 80007ca:	e0e9      	b.n	80009a0 <__aeabi_dadd+0x234>
 80007cc:	49c9      	ldr	r1, [pc, #804]	@ (8000af4 <__aeabi_dadd+0x388>)
 80007ce:	428f      	cmp	r7, r1
 80007d0:	d100      	bne.n	80007d4 <__aeabi_dadd+0x68>
 80007d2:	e195      	b.n	8000b00 <__aeabi_dadd+0x394>
 80007d4:	2501      	movs	r5, #1
 80007d6:	2a38      	cmp	r2, #56	@ 0x38
 80007d8:	dc16      	bgt.n	8000808 <__aeabi_dadd+0x9c>
 80007da:	2180      	movs	r1, #128	@ 0x80
 80007dc:	4653      	mov	r3, sl
 80007de:	0409      	lsls	r1, r1, #16
 80007e0:	430b      	orrs	r3, r1
 80007e2:	469a      	mov	sl, r3
 80007e4:	2a1f      	cmp	r2, #31
 80007e6:	dd00      	ble.n	80007ea <__aeabi_dadd+0x7e>
 80007e8:	e1e7      	b.n	8000bba <__aeabi_dadd+0x44e>
 80007ea:	2120      	movs	r1, #32
 80007ec:	4655      	mov	r5, sl
 80007ee:	1a8b      	subs	r3, r1, r2
 80007f0:	4661      	mov	r1, ip
 80007f2:	409d      	lsls	r5, r3
 80007f4:	40d1      	lsrs	r1, r2
 80007f6:	430d      	orrs	r5, r1
 80007f8:	4661      	mov	r1, ip
 80007fa:	4099      	lsls	r1, r3
 80007fc:	1e4b      	subs	r3, r1, #1
 80007fe:	4199      	sbcs	r1, r3
 8000800:	4653      	mov	r3, sl
 8000802:	40d3      	lsrs	r3, r2
 8000804:	430d      	orrs	r5, r1
 8000806:	1ae4      	subs	r4, r4, r3
 8000808:	1b45      	subs	r5, r0, r5
 800080a:	42a8      	cmp	r0, r5
 800080c:	4180      	sbcs	r0, r0
 800080e:	4240      	negs	r0, r0
 8000810:	1a24      	subs	r4, r4, r0
 8000812:	0223      	lsls	r3, r4, #8
 8000814:	d400      	bmi.n	8000818 <__aeabi_dadd+0xac>
 8000816:	e10f      	b.n	8000a38 <__aeabi_dadd+0x2cc>
 8000818:	0264      	lsls	r4, r4, #9
 800081a:	0a64      	lsrs	r4, r4, #9
 800081c:	2c00      	cmp	r4, #0
 800081e:	d100      	bne.n	8000822 <__aeabi_dadd+0xb6>
 8000820:	e139      	b.n	8000a96 <__aeabi_dadd+0x32a>
 8000822:	0020      	movs	r0, r4
 8000824:	f001 ff2a 	bl	800267c <__clzsi2>
 8000828:	0003      	movs	r3, r0
 800082a:	3b08      	subs	r3, #8
 800082c:	2120      	movs	r1, #32
 800082e:	0028      	movs	r0, r5
 8000830:	1aca      	subs	r2, r1, r3
 8000832:	40d0      	lsrs	r0, r2
 8000834:	409c      	lsls	r4, r3
 8000836:	0002      	movs	r2, r0
 8000838:	409d      	lsls	r5, r3
 800083a:	4322      	orrs	r2, r4
 800083c:	429f      	cmp	r7, r3
 800083e:	dd00      	ble.n	8000842 <__aeabi_dadd+0xd6>
 8000840:	e173      	b.n	8000b2a <__aeabi_dadd+0x3be>
 8000842:	1bd8      	subs	r0, r3, r7
 8000844:	3001      	adds	r0, #1
 8000846:	1a09      	subs	r1, r1, r0
 8000848:	002c      	movs	r4, r5
 800084a:	408d      	lsls	r5, r1
 800084c:	40c4      	lsrs	r4, r0
 800084e:	1e6b      	subs	r3, r5, #1
 8000850:	419d      	sbcs	r5, r3
 8000852:	0013      	movs	r3, r2
 8000854:	40c2      	lsrs	r2, r0
 8000856:	408b      	lsls	r3, r1
 8000858:	4325      	orrs	r5, r4
 800085a:	2700      	movs	r7, #0
 800085c:	0014      	movs	r4, r2
 800085e:	431d      	orrs	r5, r3
 8000860:	076b      	lsls	r3, r5, #29
 8000862:	d009      	beq.n	8000878 <__aeabi_dadd+0x10c>
 8000864:	230f      	movs	r3, #15
 8000866:	402b      	ands	r3, r5
 8000868:	2b04      	cmp	r3, #4
 800086a:	d005      	beq.n	8000878 <__aeabi_dadd+0x10c>
 800086c:	1d2b      	adds	r3, r5, #4
 800086e:	42ab      	cmp	r3, r5
 8000870:	41ad      	sbcs	r5, r5
 8000872:	426d      	negs	r5, r5
 8000874:	1964      	adds	r4, r4, r5
 8000876:	001d      	movs	r5, r3
 8000878:	0223      	lsls	r3, r4, #8
 800087a:	d400      	bmi.n	800087e <__aeabi_dadd+0x112>
 800087c:	e12d      	b.n	8000ada <__aeabi_dadd+0x36e>
 800087e:	4a9d      	ldr	r2, [pc, #628]	@ (8000af4 <__aeabi_dadd+0x388>)
 8000880:	3701      	adds	r7, #1
 8000882:	4297      	cmp	r7, r2
 8000884:	d100      	bne.n	8000888 <__aeabi_dadd+0x11c>
 8000886:	e0d3      	b.n	8000a30 <__aeabi_dadd+0x2c4>
 8000888:	4646      	mov	r6, r8
 800088a:	499b      	ldr	r1, [pc, #620]	@ (8000af8 <__aeabi_dadd+0x38c>)
 800088c:	08ed      	lsrs	r5, r5, #3
 800088e:	4021      	ands	r1, r4
 8000890:	074a      	lsls	r2, r1, #29
 8000892:	432a      	orrs	r2, r5
 8000894:	057c      	lsls	r4, r7, #21
 8000896:	024d      	lsls	r5, r1, #9
 8000898:	0b2d      	lsrs	r5, r5, #12
 800089a:	0d64      	lsrs	r4, r4, #21
 800089c:	0524      	lsls	r4, r4, #20
 800089e:	432c      	orrs	r4, r5
 80008a0:	07f6      	lsls	r6, r6, #31
 80008a2:	4334      	orrs	r4, r6
 80008a4:	0010      	movs	r0, r2
 80008a6:	0021      	movs	r1, r4
 80008a8:	b003      	add	sp, #12
 80008aa:	bcf0      	pop	{r4, r5, r6, r7}
 80008ac:	46bb      	mov	fp, r7
 80008ae:	46b2      	mov	sl, r6
 80008b0:	46a9      	mov	r9, r5
 80008b2:	46a0      	mov	r8, r4
 80008b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80008b6:	2a00      	cmp	r2, #0
 80008b8:	d100      	bne.n	80008bc <__aeabi_dadd+0x150>
 80008ba:	e084      	b.n	80009c6 <__aeabi_dadd+0x25a>
 80008bc:	464a      	mov	r2, r9
 80008be:	1bd2      	subs	r2, r2, r7
 80008c0:	2f00      	cmp	r7, #0
 80008c2:	d000      	beq.n	80008c6 <__aeabi_dadd+0x15a>
 80008c4:	e16d      	b.n	8000ba2 <__aeabi_dadd+0x436>
 80008c6:	0025      	movs	r5, r4
 80008c8:	4305      	orrs	r5, r0
 80008ca:	d100      	bne.n	80008ce <__aeabi_dadd+0x162>
 80008cc:	e127      	b.n	8000b1e <__aeabi_dadd+0x3b2>
 80008ce:	1e56      	subs	r6, r2, #1
 80008d0:	2a01      	cmp	r2, #1
 80008d2:	d100      	bne.n	80008d6 <__aeabi_dadd+0x16a>
 80008d4:	e23b      	b.n	8000d4e <__aeabi_dadd+0x5e2>
 80008d6:	4d87      	ldr	r5, [pc, #540]	@ (8000af4 <__aeabi_dadd+0x388>)
 80008d8:	42aa      	cmp	r2, r5
 80008da:	d100      	bne.n	80008de <__aeabi_dadd+0x172>
 80008dc:	e26a      	b.n	8000db4 <__aeabi_dadd+0x648>
 80008de:	2501      	movs	r5, #1
 80008e0:	2e38      	cmp	r6, #56	@ 0x38
 80008e2:	dc12      	bgt.n	800090a <__aeabi_dadd+0x19e>
 80008e4:	0032      	movs	r2, r6
 80008e6:	2a1f      	cmp	r2, #31
 80008e8:	dd00      	ble.n	80008ec <__aeabi_dadd+0x180>
 80008ea:	e1f8      	b.n	8000cde <__aeabi_dadd+0x572>
 80008ec:	2620      	movs	r6, #32
 80008ee:	0025      	movs	r5, r4
 80008f0:	1ab6      	subs	r6, r6, r2
 80008f2:	0007      	movs	r7, r0
 80008f4:	4653      	mov	r3, sl
 80008f6:	40b0      	lsls	r0, r6
 80008f8:	40d4      	lsrs	r4, r2
 80008fa:	40b5      	lsls	r5, r6
 80008fc:	40d7      	lsrs	r7, r2
 80008fe:	1e46      	subs	r6, r0, #1
 8000900:	41b0      	sbcs	r0, r6
 8000902:	1b1b      	subs	r3, r3, r4
 8000904:	469a      	mov	sl, r3
 8000906:	433d      	orrs	r5, r7
 8000908:	4305      	orrs	r5, r0
 800090a:	4662      	mov	r2, ip
 800090c:	1b55      	subs	r5, r2, r5
 800090e:	45ac      	cmp	ip, r5
 8000910:	4192      	sbcs	r2, r2
 8000912:	4653      	mov	r3, sl
 8000914:	4252      	negs	r2, r2
 8000916:	000e      	movs	r6, r1
 8000918:	464f      	mov	r7, r9
 800091a:	4688      	mov	r8, r1
 800091c:	1a9c      	subs	r4, r3, r2
 800091e:	e778      	b.n	8000812 <__aeabi_dadd+0xa6>
 8000920:	2a00      	cmp	r2, #0
 8000922:	dc00      	bgt.n	8000926 <__aeabi_dadd+0x1ba>
 8000924:	e08e      	b.n	8000a44 <__aeabi_dadd+0x2d8>
 8000926:	4649      	mov	r1, r9
 8000928:	2900      	cmp	r1, #0
 800092a:	d175      	bne.n	8000a18 <__aeabi_dadd+0x2ac>
 800092c:	4661      	mov	r1, ip
 800092e:	4653      	mov	r3, sl
 8000930:	4319      	orrs	r1, r3
 8000932:	d100      	bne.n	8000936 <__aeabi_dadd+0x1ca>
 8000934:	e0f6      	b.n	8000b24 <__aeabi_dadd+0x3b8>
 8000936:	1e51      	subs	r1, r2, #1
 8000938:	2a01      	cmp	r2, #1
 800093a:	d100      	bne.n	800093e <__aeabi_dadd+0x1d2>
 800093c:	e191      	b.n	8000c62 <__aeabi_dadd+0x4f6>
 800093e:	4d6d      	ldr	r5, [pc, #436]	@ (8000af4 <__aeabi_dadd+0x388>)
 8000940:	42aa      	cmp	r2, r5
 8000942:	d100      	bne.n	8000946 <__aeabi_dadd+0x1da>
 8000944:	e0dc      	b.n	8000b00 <__aeabi_dadd+0x394>
 8000946:	2501      	movs	r5, #1
 8000948:	2938      	cmp	r1, #56	@ 0x38
 800094a:	dc14      	bgt.n	8000976 <__aeabi_dadd+0x20a>
 800094c:	000a      	movs	r2, r1
 800094e:	2a1f      	cmp	r2, #31
 8000950:	dd00      	ble.n	8000954 <__aeabi_dadd+0x1e8>
 8000952:	e1a2      	b.n	8000c9a <__aeabi_dadd+0x52e>
 8000954:	2120      	movs	r1, #32
 8000956:	4653      	mov	r3, sl
 8000958:	1a89      	subs	r1, r1, r2
 800095a:	408b      	lsls	r3, r1
 800095c:	001d      	movs	r5, r3
 800095e:	4663      	mov	r3, ip
 8000960:	40d3      	lsrs	r3, r2
 8000962:	431d      	orrs	r5, r3
 8000964:	4663      	mov	r3, ip
 8000966:	408b      	lsls	r3, r1
 8000968:	0019      	movs	r1, r3
 800096a:	1e4b      	subs	r3, r1, #1
 800096c:	4199      	sbcs	r1, r3
 800096e:	4653      	mov	r3, sl
 8000970:	40d3      	lsrs	r3, r2
 8000972:	430d      	orrs	r5, r1
 8000974:	18e4      	adds	r4, r4, r3
 8000976:	182d      	adds	r5, r5, r0
 8000978:	4285      	cmp	r5, r0
 800097a:	4180      	sbcs	r0, r0
 800097c:	4240      	negs	r0, r0
 800097e:	1824      	adds	r4, r4, r0
 8000980:	0223      	lsls	r3, r4, #8
 8000982:	d559      	bpl.n	8000a38 <__aeabi_dadd+0x2cc>
 8000984:	4b5b      	ldr	r3, [pc, #364]	@ (8000af4 <__aeabi_dadd+0x388>)
 8000986:	3701      	adds	r7, #1
 8000988:	429f      	cmp	r7, r3
 800098a:	d051      	beq.n	8000a30 <__aeabi_dadd+0x2c4>
 800098c:	2101      	movs	r1, #1
 800098e:	4b5a      	ldr	r3, [pc, #360]	@ (8000af8 <__aeabi_dadd+0x38c>)
 8000990:	086a      	lsrs	r2, r5, #1
 8000992:	401c      	ands	r4, r3
 8000994:	4029      	ands	r1, r5
 8000996:	430a      	orrs	r2, r1
 8000998:	07e5      	lsls	r5, r4, #31
 800099a:	4315      	orrs	r5, r2
 800099c:	0864      	lsrs	r4, r4, #1
 800099e:	e75f      	b.n	8000860 <__aeabi_dadd+0xf4>
 80009a0:	4661      	mov	r1, ip
 80009a2:	4653      	mov	r3, sl
 80009a4:	4319      	orrs	r1, r3
 80009a6:	d100      	bne.n	80009aa <__aeabi_dadd+0x23e>
 80009a8:	e0bc      	b.n	8000b24 <__aeabi_dadd+0x3b8>
 80009aa:	1e51      	subs	r1, r2, #1
 80009ac:	2a01      	cmp	r2, #1
 80009ae:	d100      	bne.n	80009b2 <__aeabi_dadd+0x246>
 80009b0:	e164      	b.n	8000c7c <__aeabi_dadd+0x510>
 80009b2:	4d50      	ldr	r5, [pc, #320]	@ (8000af4 <__aeabi_dadd+0x388>)
 80009b4:	42aa      	cmp	r2, r5
 80009b6:	d100      	bne.n	80009ba <__aeabi_dadd+0x24e>
 80009b8:	e16a      	b.n	8000c90 <__aeabi_dadd+0x524>
 80009ba:	2501      	movs	r5, #1
 80009bc:	2938      	cmp	r1, #56	@ 0x38
 80009be:	dd00      	ble.n	80009c2 <__aeabi_dadd+0x256>
 80009c0:	e722      	b.n	8000808 <__aeabi_dadd+0x9c>
 80009c2:	000a      	movs	r2, r1
 80009c4:	e70e      	b.n	80007e4 <__aeabi_dadd+0x78>
 80009c6:	4a4d      	ldr	r2, [pc, #308]	@ (8000afc <__aeabi_dadd+0x390>)
 80009c8:	1c7d      	adds	r5, r7, #1
 80009ca:	4215      	tst	r5, r2
 80009cc:	d000      	beq.n	80009d0 <__aeabi_dadd+0x264>
 80009ce:	e0d0      	b.n	8000b72 <__aeabi_dadd+0x406>
 80009d0:	0025      	movs	r5, r4
 80009d2:	4662      	mov	r2, ip
 80009d4:	4653      	mov	r3, sl
 80009d6:	4305      	orrs	r5, r0
 80009d8:	431a      	orrs	r2, r3
 80009da:	2f00      	cmp	r7, #0
 80009dc:	d000      	beq.n	80009e0 <__aeabi_dadd+0x274>
 80009de:	e137      	b.n	8000c50 <__aeabi_dadd+0x4e4>
 80009e0:	2d00      	cmp	r5, #0
 80009e2:	d100      	bne.n	80009e6 <__aeabi_dadd+0x27a>
 80009e4:	e1a8      	b.n	8000d38 <__aeabi_dadd+0x5cc>
 80009e6:	2a00      	cmp	r2, #0
 80009e8:	d100      	bne.n	80009ec <__aeabi_dadd+0x280>
 80009ea:	e16a      	b.n	8000cc2 <__aeabi_dadd+0x556>
 80009ec:	4663      	mov	r3, ip
 80009ee:	1ac5      	subs	r5, r0, r3
 80009f0:	4653      	mov	r3, sl
 80009f2:	1ae2      	subs	r2, r4, r3
 80009f4:	42a8      	cmp	r0, r5
 80009f6:	419b      	sbcs	r3, r3
 80009f8:	425b      	negs	r3, r3
 80009fa:	1ad3      	subs	r3, r2, r3
 80009fc:	021a      	lsls	r2, r3, #8
 80009fe:	d400      	bmi.n	8000a02 <__aeabi_dadd+0x296>
 8000a00:	e203      	b.n	8000e0a <__aeabi_dadd+0x69e>
 8000a02:	4663      	mov	r3, ip
 8000a04:	1a1d      	subs	r5, r3, r0
 8000a06:	45ac      	cmp	ip, r5
 8000a08:	4192      	sbcs	r2, r2
 8000a0a:	4653      	mov	r3, sl
 8000a0c:	4252      	negs	r2, r2
 8000a0e:	1b1c      	subs	r4, r3, r4
 8000a10:	000e      	movs	r6, r1
 8000a12:	4688      	mov	r8, r1
 8000a14:	1aa4      	subs	r4, r4, r2
 8000a16:	e723      	b.n	8000860 <__aeabi_dadd+0xf4>
 8000a18:	4936      	ldr	r1, [pc, #216]	@ (8000af4 <__aeabi_dadd+0x388>)
 8000a1a:	428f      	cmp	r7, r1
 8000a1c:	d070      	beq.n	8000b00 <__aeabi_dadd+0x394>
 8000a1e:	2501      	movs	r5, #1
 8000a20:	2a38      	cmp	r2, #56	@ 0x38
 8000a22:	dca8      	bgt.n	8000976 <__aeabi_dadd+0x20a>
 8000a24:	2180      	movs	r1, #128	@ 0x80
 8000a26:	4653      	mov	r3, sl
 8000a28:	0409      	lsls	r1, r1, #16
 8000a2a:	430b      	orrs	r3, r1
 8000a2c:	469a      	mov	sl, r3
 8000a2e:	e78e      	b.n	800094e <__aeabi_dadd+0x1e2>
 8000a30:	003c      	movs	r4, r7
 8000a32:	2500      	movs	r5, #0
 8000a34:	2200      	movs	r2, #0
 8000a36:	e731      	b.n	800089c <__aeabi_dadd+0x130>
 8000a38:	2307      	movs	r3, #7
 8000a3a:	402b      	ands	r3, r5
 8000a3c:	2b00      	cmp	r3, #0
 8000a3e:	d000      	beq.n	8000a42 <__aeabi_dadd+0x2d6>
 8000a40:	e710      	b.n	8000864 <__aeabi_dadd+0xf8>
 8000a42:	e093      	b.n	8000b6c <__aeabi_dadd+0x400>
 8000a44:	2a00      	cmp	r2, #0
 8000a46:	d074      	beq.n	8000b32 <__aeabi_dadd+0x3c6>
 8000a48:	464a      	mov	r2, r9
 8000a4a:	1bd2      	subs	r2, r2, r7
 8000a4c:	2f00      	cmp	r7, #0
 8000a4e:	d100      	bne.n	8000a52 <__aeabi_dadd+0x2e6>
 8000a50:	e0c7      	b.n	8000be2 <__aeabi_dadd+0x476>
 8000a52:	4928      	ldr	r1, [pc, #160]	@ (8000af4 <__aeabi_dadd+0x388>)
 8000a54:	4589      	cmp	r9, r1
 8000a56:	d100      	bne.n	8000a5a <__aeabi_dadd+0x2ee>
 8000a58:	e185      	b.n	8000d66 <__aeabi_dadd+0x5fa>
 8000a5a:	2501      	movs	r5, #1
 8000a5c:	2a38      	cmp	r2, #56	@ 0x38
 8000a5e:	dc12      	bgt.n	8000a86 <__aeabi_dadd+0x31a>
 8000a60:	2180      	movs	r1, #128	@ 0x80
 8000a62:	0409      	lsls	r1, r1, #16
 8000a64:	430c      	orrs	r4, r1
 8000a66:	2a1f      	cmp	r2, #31
 8000a68:	dd00      	ble.n	8000a6c <__aeabi_dadd+0x300>
 8000a6a:	e1ab      	b.n	8000dc4 <__aeabi_dadd+0x658>
 8000a6c:	2120      	movs	r1, #32
 8000a6e:	0025      	movs	r5, r4
 8000a70:	1a89      	subs	r1, r1, r2
 8000a72:	0007      	movs	r7, r0
 8000a74:	4088      	lsls	r0, r1
 8000a76:	408d      	lsls	r5, r1
 8000a78:	40d7      	lsrs	r7, r2
 8000a7a:	1e41      	subs	r1, r0, #1
 8000a7c:	4188      	sbcs	r0, r1
 8000a7e:	40d4      	lsrs	r4, r2
 8000a80:	433d      	orrs	r5, r7
 8000a82:	4305      	orrs	r5, r0
 8000a84:	44a2      	add	sl, r4
 8000a86:	4465      	add	r5, ip
 8000a88:	4565      	cmp	r5, ip
 8000a8a:	4192      	sbcs	r2, r2
 8000a8c:	4252      	negs	r2, r2
 8000a8e:	4452      	add	r2, sl
 8000a90:	0014      	movs	r4, r2
 8000a92:	464f      	mov	r7, r9
 8000a94:	e774      	b.n	8000980 <__aeabi_dadd+0x214>
 8000a96:	0028      	movs	r0, r5
 8000a98:	f001 fdf0 	bl	800267c <__clzsi2>
 8000a9c:	0003      	movs	r3, r0
 8000a9e:	3318      	adds	r3, #24
 8000aa0:	2b1f      	cmp	r3, #31
 8000aa2:	dc00      	bgt.n	8000aa6 <__aeabi_dadd+0x33a>
 8000aa4:	e6c2      	b.n	800082c <__aeabi_dadd+0xc0>
 8000aa6:	002a      	movs	r2, r5
 8000aa8:	3808      	subs	r0, #8
 8000aaa:	4082      	lsls	r2, r0
 8000aac:	429f      	cmp	r7, r3
 8000aae:	dd00      	ble.n	8000ab2 <__aeabi_dadd+0x346>
 8000ab0:	e0a9      	b.n	8000c06 <__aeabi_dadd+0x49a>
 8000ab2:	1bdb      	subs	r3, r3, r7
 8000ab4:	1c58      	adds	r0, r3, #1
 8000ab6:	281f      	cmp	r0, #31
 8000ab8:	dc00      	bgt.n	8000abc <__aeabi_dadd+0x350>
 8000aba:	e1ac      	b.n	8000e16 <__aeabi_dadd+0x6aa>
 8000abc:	0015      	movs	r5, r2
 8000abe:	3b1f      	subs	r3, #31
 8000ac0:	40dd      	lsrs	r5, r3
 8000ac2:	2820      	cmp	r0, #32
 8000ac4:	d005      	beq.n	8000ad2 <__aeabi_dadd+0x366>
 8000ac6:	2340      	movs	r3, #64	@ 0x40
 8000ac8:	1a1b      	subs	r3, r3, r0
 8000aca:	409a      	lsls	r2, r3
 8000acc:	1e53      	subs	r3, r2, #1
 8000ace:	419a      	sbcs	r2, r3
 8000ad0:	4315      	orrs	r5, r2
 8000ad2:	2307      	movs	r3, #7
 8000ad4:	2700      	movs	r7, #0
 8000ad6:	402b      	ands	r3, r5
 8000ad8:	e7b0      	b.n	8000a3c <__aeabi_dadd+0x2d0>
 8000ada:	08ed      	lsrs	r5, r5, #3
 8000adc:	4b05      	ldr	r3, [pc, #20]	@ (8000af4 <__aeabi_dadd+0x388>)
 8000ade:	0762      	lsls	r2, r4, #29
 8000ae0:	432a      	orrs	r2, r5
 8000ae2:	08e4      	lsrs	r4, r4, #3
 8000ae4:	429f      	cmp	r7, r3
 8000ae6:	d00f      	beq.n	8000b08 <__aeabi_dadd+0x39c>
 8000ae8:	0324      	lsls	r4, r4, #12
 8000aea:	0b25      	lsrs	r5, r4, #12
 8000aec:	057c      	lsls	r4, r7, #21
 8000aee:	0d64      	lsrs	r4, r4, #21
 8000af0:	e6d4      	b.n	800089c <__aeabi_dadd+0x130>
 8000af2:	46c0      	nop			@ (mov r8, r8)
 8000af4:	000007ff 	.word	0x000007ff
 8000af8:	ff7fffff 	.word	0xff7fffff
 8000afc:	000007fe 	.word	0x000007fe
 8000b00:	08c0      	lsrs	r0, r0, #3
 8000b02:	0762      	lsls	r2, r4, #29
 8000b04:	4302      	orrs	r2, r0
 8000b06:	08e4      	lsrs	r4, r4, #3
 8000b08:	0013      	movs	r3, r2
 8000b0a:	4323      	orrs	r3, r4
 8000b0c:	d100      	bne.n	8000b10 <__aeabi_dadd+0x3a4>
 8000b0e:	e186      	b.n	8000e1e <__aeabi_dadd+0x6b2>
 8000b10:	2580      	movs	r5, #128	@ 0x80
 8000b12:	032d      	lsls	r5, r5, #12
 8000b14:	4325      	orrs	r5, r4
 8000b16:	032d      	lsls	r5, r5, #12
 8000b18:	4cc3      	ldr	r4, [pc, #780]	@ (8000e28 <__aeabi_dadd+0x6bc>)
 8000b1a:	0b2d      	lsrs	r5, r5, #12
 8000b1c:	e6be      	b.n	800089c <__aeabi_dadd+0x130>
 8000b1e:	4660      	mov	r0, ip
 8000b20:	4654      	mov	r4, sl
 8000b22:	000e      	movs	r6, r1
 8000b24:	0017      	movs	r7, r2
 8000b26:	08c5      	lsrs	r5, r0, #3
 8000b28:	e7d8      	b.n	8000adc <__aeabi_dadd+0x370>
 8000b2a:	4cc0      	ldr	r4, [pc, #768]	@ (8000e2c <__aeabi_dadd+0x6c0>)
 8000b2c:	1aff      	subs	r7, r7, r3
 8000b2e:	4014      	ands	r4, r2
 8000b30:	e696      	b.n	8000860 <__aeabi_dadd+0xf4>
 8000b32:	4abf      	ldr	r2, [pc, #764]	@ (8000e30 <__aeabi_dadd+0x6c4>)
 8000b34:	1c79      	adds	r1, r7, #1
 8000b36:	4211      	tst	r1, r2
 8000b38:	d16b      	bne.n	8000c12 <__aeabi_dadd+0x4a6>
 8000b3a:	0022      	movs	r2, r4
 8000b3c:	4302      	orrs	r2, r0
 8000b3e:	2f00      	cmp	r7, #0
 8000b40:	d000      	beq.n	8000b44 <__aeabi_dadd+0x3d8>
 8000b42:	e0db      	b.n	8000cfc <__aeabi_dadd+0x590>
 8000b44:	2a00      	cmp	r2, #0
 8000b46:	d100      	bne.n	8000b4a <__aeabi_dadd+0x3de>
 8000b48:	e12d      	b.n	8000da6 <__aeabi_dadd+0x63a>
 8000b4a:	4662      	mov	r2, ip
 8000b4c:	4653      	mov	r3, sl
 8000b4e:	431a      	orrs	r2, r3
 8000b50:	d100      	bne.n	8000b54 <__aeabi_dadd+0x3e8>
 8000b52:	e0b6      	b.n	8000cc2 <__aeabi_dadd+0x556>
 8000b54:	4663      	mov	r3, ip
 8000b56:	18c5      	adds	r5, r0, r3
 8000b58:	4285      	cmp	r5, r0
 8000b5a:	4180      	sbcs	r0, r0
 8000b5c:	4454      	add	r4, sl
 8000b5e:	4240      	negs	r0, r0
 8000b60:	1824      	adds	r4, r4, r0
 8000b62:	0223      	lsls	r3, r4, #8
 8000b64:	d502      	bpl.n	8000b6c <__aeabi_dadd+0x400>
 8000b66:	000f      	movs	r7, r1
 8000b68:	4bb0      	ldr	r3, [pc, #704]	@ (8000e2c <__aeabi_dadd+0x6c0>)
 8000b6a:	401c      	ands	r4, r3
 8000b6c:	003a      	movs	r2, r7
 8000b6e:	0028      	movs	r0, r5
 8000b70:	e7d8      	b.n	8000b24 <__aeabi_dadd+0x3b8>
 8000b72:	4662      	mov	r2, ip
 8000b74:	1a85      	subs	r5, r0, r2
 8000b76:	42a8      	cmp	r0, r5
 8000b78:	4192      	sbcs	r2, r2
 8000b7a:	4653      	mov	r3, sl
 8000b7c:	4252      	negs	r2, r2
 8000b7e:	4691      	mov	r9, r2
 8000b80:	1ae3      	subs	r3, r4, r3
 8000b82:	001a      	movs	r2, r3
 8000b84:	464b      	mov	r3, r9
 8000b86:	1ad2      	subs	r2, r2, r3
 8000b88:	0013      	movs	r3, r2
 8000b8a:	4691      	mov	r9, r2
 8000b8c:	021a      	lsls	r2, r3, #8
 8000b8e:	d454      	bmi.n	8000c3a <__aeabi_dadd+0x4ce>
 8000b90:	464a      	mov	r2, r9
 8000b92:	464c      	mov	r4, r9
 8000b94:	432a      	orrs	r2, r5
 8000b96:	d000      	beq.n	8000b9a <__aeabi_dadd+0x42e>
 8000b98:	e640      	b.n	800081c <__aeabi_dadd+0xb0>
 8000b9a:	2600      	movs	r6, #0
 8000b9c:	2400      	movs	r4, #0
 8000b9e:	2500      	movs	r5, #0
 8000ba0:	e67c      	b.n	800089c <__aeabi_dadd+0x130>
 8000ba2:	4da1      	ldr	r5, [pc, #644]	@ (8000e28 <__aeabi_dadd+0x6bc>)
 8000ba4:	45a9      	cmp	r9, r5
 8000ba6:	d100      	bne.n	8000baa <__aeabi_dadd+0x43e>
 8000ba8:	e090      	b.n	8000ccc <__aeabi_dadd+0x560>
 8000baa:	2501      	movs	r5, #1
 8000bac:	2a38      	cmp	r2, #56	@ 0x38
 8000bae:	dd00      	ble.n	8000bb2 <__aeabi_dadd+0x446>
 8000bb0:	e6ab      	b.n	800090a <__aeabi_dadd+0x19e>
 8000bb2:	2580      	movs	r5, #128	@ 0x80
 8000bb4:	042d      	lsls	r5, r5, #16
 8000bb6:	432c      	orrs	r4, r5
 8000bb8:	e695      	b.n	80008e6 <__aeabi_dadd+0x17a>
 8000bba:	0011      	movs	r1, r2
 8000bbc:	4655      	mov	r5, sl
 8000bbe:	3920      	subs	r1, #32
 8000bc0:	40cd      	lsrs	r5, r1
 8000bc2:	46a9      	mov	r9, r5
 8000bc4:	2a20      	cmp	r2, #32
 8000bc6:	d006      	beq.n	8000bd6 <__aeabi_dadd+0x46a>
 8000bc8:	2140      	movs	r1, #64	@ 0x40
 8000bca:	4653      	mov	r3, sl
 8000bcc:	1a8a      	subs	r2, r1, r2
 8000bce:	4093      	lsls	r3, r2
 8000bd0:	4662      	mov	r2, ip
 8000bd2:	431a      	orrs	r2, r3
 8000bd4:	4694      	mov	ip, r2
 8000bd6:	4665      	mov	r5, ip
 8000bd8:	1e6b      	subs	r3, r5, #1
 8000bda:	419d      	sbcs	r5, r3
 8000bdc:	464b      	mov	r3, r9
 8000bde:	431d      	orrs	r5, r3
 8000be0:	e612      	b.n	8000808 <__aeabi_dadd+0x9c>
 8000be2:	0021      	movs	r1, r4
 8000be4:	4301      	orrs	r1, r0
 8000be6:	d100      	bne.n	8000bea <__aeabi_dadd+0x47e>
 8000be8:	e0c4      	b.n	8000d74 <__aeabi_dadd+0x608>
 8000bea:	1e51      	subs	r1, r2, #1
 8000bec:	2a01      	cmp	r2, #1
 8000bee:	d100      	bne.n	8000bf2 <__aeabi_dadd+0x486>
 8000bf0:	e0fb      	b.n	8000dea <__aeabi_dadd+0x67e>
 8000bf2:	4d8d      	ldr	r5, [pc, #564]	@ (8000e28 <__aeabi_dadd+0x6bc>)
 8000bf4:	42aa      	cmp	r2, r5
 8000bf6:	d100      	bne.n	8000bfa <__aeabi_dadd+0x48e>
 8000bf8:	e0b5      	b.n	8000d66 <__aeabi_dadd+0x5fa>
 8000bfa:	2501      	movs	r5, #1
 8000bfc:	2938      	cmp	r1, #56	@ 0x38
 8000bfe:	dd00      	ble.n	8000c02 <__aeabi_dadd+0x496>
 8000c00:	e741      	b.n	8000a86 <__aeabi_dadd+0x31a>
 8000c02:	000a      	movs	r2, r1
 8000c04:	e72f      	b.n	8000a66 <__aeabi_dadd+0x2fa>
 8000c06:	4c89      	ldr	r4, [pc, #548]	@ (8000e2c <__aeabi_dadd+0x6c0>)
 8000c08:	1aff      	subs	r7, r7, r3
 8000c0a:	4014      	ands	r4, r2
 8000c0c:	0762      	lsls	r2, r4, #29
 8000c0e:	08e4      	lsrs	r4, r4, #3
 8000c10:	e76a      	b.n	8000ae8 <__aeabi_dadd+0x37c>
 8000c12:	4a85      	ldr	r2, [pc, #532]	@ (8000e28 <__aeabi_dadd+0x6bc>)
 8000c14:	4291      	cmp	r1, r2
 8000c16:	d100      	bne.n	8000c1a <__aeabi_dadd+0x4ae>
 8000c18:	e0e3      	b.n	8000de2 <__aeabi_dadd+0x676>
 8000c1a:	4663      	mov	r3, ip
 8000c1c:	18c2      	adds	r2, r0, r3
 8000c1e:	4282      	cmp	r2, r0
 8000c20:	4180      	sbcs	r0, r0
 8000c22:	0023      	movs	r3, r4
 8000c24:	4240      	negs	r0, r0
 8000c26:	4453      	add	r3, sl
 8000c28:	181b      	adds	r3, r3, r0
 8000c2a:	07dd      	lsls	r5, r3, #31
 8000c2c:	085c      	lsrs	r4, r3, #1
 8000c2e:	2307      	movs	r3, #7
 8000c30:	0852      	lsrs	r2, r2, #1
 8000c32:	4315      	orrs	r5, r2
 8000c34:	000f      	movs	r7, r1
 8000c36:	402b      	ands	r3, r5
 8000c38:	e700      	b.n	8000a3c <__aeabi_dadd+0x2d0>
 8000c3a:	4663      	mov	r3, ip
 8000c3c:	1a1d      	subs	r5, r3, r0
 8000c3e:	45ac      	cmp	ip, r5
 8000c40:	4192      	sbcs	r2, r2
 8000c42:	4653      	mov	r3, sl
 8000c44:	4252      	negs	r2, r2
 8000c46:	1b1c      	subs	r4, r3, r4
 8000c48:	000e      	movs	r6, r1
 8000c4a:	4688      	mov	r8, r1
 8000c4c:	1aa4      	subs	r4, r4, r2
 8000c4e:	e5e5      	b.n	800081c <__aeabi_dadd+0xb0>
 8000c50:	2d00      	cmp	r5, #0
 8000c52:	d000      	beq.n	8000c56 <__aeabi_dadd+0x4ea>
 8000c54:	e091      	b.n	8000d7a <__aeabi_dadd+0x60e>
 8000c56:	2a00      	cmp	r2, #0
 8000c58:	d138      	bne.n	8000ccc <__aeabi_dadd+0x560>
 8000c5a:	2480      	movs	r4, #128	@ 0x80
 8000c5c:	2600      	movs	r6, #0
 8000c5e:	0324      	lsls	r4, r4, #12
 8000c60:	e756      	b.n	8000b10 <__aeabi_dadd+0x3a4>
 8000c62:	4663      	mov	r3, ip
 8000c64:	18c5      	adds	r5, r0, r3
 8000c66:	4285      	cmp	r5, r0
 8000c68:	4180      	sbcs	r0, r0
 8000c6a:	4454      	add	r4, sl
 8000c6c:	4240      	negs	r0, r0
 8000c6e:	1824      	adds	r4, r4, r0
 8000c70:	2701      	movs	r7, #1
 8000c72:	0223      	lsls	r3, r4, #8
 8000c74:	d400      	bmi.n	8000c78 <__aeabi_dadd+0x50c>
 8000c76:	e6df      	b.n	8000a38 <__aeabi_dadd+0x2cc>
 8000c78:	2702      	movs	r7, #2
 8000c7a:	e687      	b.n	800098c <__aeabi_dadd+0x220>
 8000c7c:	4663      	mov	r3, ip
 8000c7e:	1ac5      	subs	r5, r0, r3
 8000c80:	42a8      	cmp	r0, r5
 8000c82:	4180      	sbcs	r0, r0
 8000c84:	4653      	mov	r3, sl
 8000c86:	4240      	negs	r0, r0
 8000c88:	1ae4      	subs	r4, r4, r3
 8000c8a:	2701      	movs	r7, #1
 8000c8c:	1a24      	subs	r4, r4, r0
 8000c8e:	e5c0      	b.n	8000812 <__aeabi_dadd+0xa6>
 8000c90:	0762      	lsls	r2, r4, #29
 8000c92:	08c0      	lsrs	r0, r0, #3
 8000c94:	4302      	orrs	r2, r0
 8000c96:	08e4      	lsrs	r4, r4, #3
 8000c98:	e736      	b.n	8000b08 <__aeabi_dadd+0x39c>
 8000c9a:	0011      	movs	r1, r2
 8000c9c:	4653      	mov	r3, sl
 8000c9e:	3920      	subs	r1, #32
 8000ca0:	40cb      	lsrs	r3, r1
 8000ca2:	4699      	mov	r9, r3
 8000ca4:	2a20      	cmp	r2, #32
 8000ca6:	d006      	beq.n	8000cb6 <__aeabi_dadd+0x54a>
 8000ca8:	2140      	movs	r1, #64	@ 0x40
 8000caa:	4653      	mov	r3, sl
 8000cac:	1a8a      	subs	r2, r1, r2
 8000cae:	4093      	lsls	r3, r2
 8000cb0:	4662      	mov	r2, ip
 8000cb2:	431a      	orrs	r2, r3
 8000cb4:	4694      	mov	ip, r2
 8000cb6:	4665      	mov	r5, ip
 8000cb8:	1e6b      	subs	r3, r5, #1
 8000cba:	419d      	sbcs	r5, r3
 8000cbc:	464b      	mov	r3, r9
 8000cbe:	431d      	orrs	r5, r3
 8000cc0:	e659      	b.n	8000976 <__aeabi_dadd+0x20a>
 8000cc2:	0762      	lsls	r2, r4, #29
 8000cc4:	08c0      	lsrs	r0, r0, #3
 8000cc6:	4302      	orrs	r2, r0
 8000cc8:	08e4      	lsrs	r4, r4, #3
 8000cca:	e70d      	b.n	8000ae8 <__aeabi_dadd+0x37c>
 8000ccc:	4653      	mov	r3, sl
 8000cce:	075a      	lsls	r2, r3, #29
 8000cd0:	4663      	mov	r3, ip
 8000cd2:	08d8      	lsrs	r0, r3, #3
 8000cd4:	4653      	mov	r3, sl
 8000cd6:	000e      	movs	r6, r1
 8000cd8:	4302      	orrs	r2, r0
 8000cda:	08dc      	lsrs	r4, r3, #3
 8000cdc:	e714      	b.n	8000b08 <__aeabi_dadd+0x39c>
 8000cde:	0015      	movs	r5, r2
 8000ce0:	0026      	movs	r6, r4
 8000ce2:	3d20      	subs	r5, #32
 8000ce4:	40ee      	lsrs	r6, r5
 8000ce6:	2a20      	cmp	r2, #32
 8000ce8:	d003      	beq.n	8000cf2 <__aeabi_dadd+0x586>
 8000cea:	2540      	movs	r5, #64	@ 0x40
 8000cec:	1aaa      	subs	r2, r5, r2
 8000cee:	4094      	lsls	r4, r2
 8000cf0:	4320      	orrs	r0, r4
 8000cf2:	1e42      	subs	r2, r0, #1
 8000cf4:	4190      	sbcs	r0, r2
 8000cf6:	0005      	movs	r5, r0
 8000cf8:	4335      	orrs	r5, r6
 8000cfa:	e606      	b.n	800090a <__aeabi_dadd+0x19e>
 8000cfc:	2a00      	cmp	r2, #0
 8000cfe:	d07c      	beq.n	8000dfa <__aeabi_dadd+0x68e>
 8000d00:	4662      	mov	r2, ip
 8000d02:	4653      	mov	r3, sl
 8000d04:	08c0      	lsrs	r0, r0, #3
 8000d06:	431a      	orrs	r2, r3
 8000d08:	d100      	bne.n	8000d0c <__aeabi_dadd+0x5a0>
 8000d0a:	e6fa      	b.n	8000b02 <__aeabi_dadd+0x396>
 8000d0c:	0762      	lsls	r2, r4, #29
 8000d0e:	4310      	orrs	r0, r2
 8000d10:	2280      	movs	r2, #128	@ 0x80
 8000d12:	08e4      	lsrs	r4, r4, #3
 8000d14:	0312      	lsls	r2, r2, #12
 8000d16:	4214      	tst	r4, r2
 8000d18:	d008      	beq.n	8000d2c <__aeabi_dadd+0x5c0>
 8000d1a:	08d9      	lsrs	r1, r3, #3
 8000d1c:	4211      	tst	r1, r2
 8000d1e:	d105      	bne.n	8000d2c <__aeabi_dadd+0x5c0>
 8000d20:	4663      	mov	r3, ip
 8000d22:	08d8      	lsrs	r0, r3, #3
 8000d24:	4653      	mov	r3, sl
 8000d26:	000c      	movs	r4, r1
 8000d28:	075b      	lsls	r3, r3, #29
 8000d2a:	4318      	orrs	r0, r3
 8000d2c:	0f42      	lsrs	r2, r0, #29
 8000d2e:	00c0      	lsls	r0, r0, #3
 8000d30:	08c0      	lsrs	r0, r0, #3
 8000d32:	0752      	lsls	r2, r2, #29
 8000d34:	4302      	orrs	r2, r0
 8000d36:	e6e7      	b.n	8000b08 <__aeabi_dadd+0x39c>
 8000d38:	2a00      	cmp	r2, #0
 8000d3a:	d100      	bne.n	8000d3e <__aeabi_dadd+0x5d2>
 8000d3c:	e72d      	b.n	8000b9a <__aeabi_dadd+0x42e>
 8000d3e:	4663      	mov	r3, ip
 8000d40:	08d8      	lsrs	r0, r3, #3
 8000d42:	4653      	mov	r3, sl
 8000d44:	075a      	lsls	r2, r3, #29
 8000d46:	000e      	movs	r6, r1
 8000d48:	4302      	orrs	r2, r0
 8000d4a:	08dc      	lsrs	r4, r3, #3
 8000d4c:	e6cc      	b.n	8000ae8 <__aeabi_dadd+0x37c>
 8000d4e:	4663      	mov	r3, ip
 8000d50:	1a1d      	subs	r5, r3, r0
 8000d52:	45ac      	cmp	ip, r5
 8000d54:	4192      	sbcs	r2, r2
 8000d56:	4653      	mov	r3, sl
 8000d58:	4252      	negs	r2, r2
 8000d5a:	1b1c      	subs	r4, r3, r4
 8000d5c:	000e      	movs	r6, r1
 8000d5e:	4688      	mov	r8, r1
 8000d60:	1aa4      	subs	r4, r4, r2
 8000d62:	3701      	adds	r7, #1
 8000d64:	e555      	b.n	8000812 <__aeabi_dadd+0xa6>
 8000d66:	4663      	mov	r3, ip
 8000d68:	08d9      	lsrs	r1, r3, #3
 8000d6a:	4653      	mov	r3, sl
 8000d6c:	075a      	lsls	r2, r3, #29
 8000d6e:	430a      	orrs	r2, r1
 8000d70:	08dc      	lsrs	r4, r3, #3
 8000d72:	e6c9      	b.n	8000b08 <__aeabi_dadd+0x39c>
 8000d74:	4660      	mov	r0, ip
 8000d76:	4654      	mov	r4, sl
 8000d78:	e6d4      	b.n	8000b24 <__aeabi_dadd+0x3b8>
 8000d7a:	08c0      	lsrs	r0, r0, #3
 8000d7c:	2a00      	cmp	r2, #0
 8000d7e:	d100      	bne.n	8000d82 <__aeabi_dadd+0x616>
 8000d80:	e6bf      	b.n	8000b02 <__aeabi_dadd+0x396>
 8000d82:	0762      	lsls	r2, r4, #29
 8000d84:	4310      	orrs	r0, r2
 8000d86:	2280      	movs	r2, #128	@ 0x80
 8000d88:	08e4      	lsrs	r4, r4, #3
 8000d8a:	0312      	lsls	r2, r2, #12
 8000d8c:	4214      	tst	r4, r2
 8000d8e:	d0cd      	beq.n	8000d2c <__aeabi_dadd+0x5c0>
 8000d90:	08dd      	lsrs	r5, r3, #3
 8000d92:	4215      	tst	r5, r2
 8000d94:	d1ca      	bne.n	8000d2c <__aeabi_dadd+0x5c0>
 8000d96:	4663      	mov	r3, ip
 8000d98:	08d8      	lsrs	r0, r3, #3
 8000d9a:	4653      	mov	r3, sl
 8000d9c:	075b      	lsls	r3, r3, #29
 8000d9e:	000e      	movs	r6, r1
 8000da0:	002c      	movs	r4, r5
 8000da2:	4318      	orrs	r0, r3
 8000da4:	e7c2      	b.n	8000d2c <__aeabi_dadd+0x5c0>
 8000da6:	4663      	mov	r3, ip
 8000da8:	08d9      	lsrs	r1, r3, #3
 8000daa:	4653      	mov	r3, sl
 8000dac:	075a      	lsls	r2, r3, #29
 8000dae:	430a      	orrs	r2, r1
 8000db0:	08dc      	lsrs	r4, r3, #3
 8000db2:	e699      	b.n	8000ae8 <__aeabi_dadd+0x37c>
 8000db4:	4663      	mov	r3, ip
 8000db6:	08d8      	lsrs	r0, r3, #3
 8000db8:	4653      	mov	r3, sl
 8000dba:	075a      	lsls	r2, r3, #29
 8000dbc:	000e      	movs	r6, r1
 8000dbe:	4302      	orrs	r2, r0
 8000dc0:	08dc      	lsrs	r4, r3, #3
 8000dc2:	e6a1      	b.n	8000b08 <__aeabi_dadd+0x39c>
 8000dc4:	0011      	movs	r1, r2
 8000dc6:	0027      	movs	r7, r4
 8000dc8:	3920      	subs	r1, #32
 8000dca:	40cf      	lsrs	r7, r1
 8000dcc:	2a20      	cmp	r2, #32
 8000dce:	d003      	beq.n	8000dd8 <__aeabi_dadd+0x66c>
 8000dd0:	2140      	movs	r1, #64	@ 0x40
 8000dd2:	1a8a      	subs	r2, r1, r2
 8000dd4:	4094      	lsls	r4, r2
 8000dd6:	4320      	orrs	r0, r4
 8000dd8:	1e42      	subs	r2, r0, #1
 8000dda:	4190      	sbcs	r0, r2
 8000ddc:	0005      	movs	r5, r0
 8000dde:	433d      	orrs	r5, r7
 8000de0:	e651      	b.n	8000a86 <__aeabi_dadd+0x31a>
 8000de2:	000c      	movs	r4, r1
 8000de4:	2500      	movs	r5, #0
 8000de6:	2200      	movs	r2, #0
 8000de8:	e558      	b.n	800089c <__aeabi_dadd+0x130>
 8000dea:	4460      	add	r0, ip
 8000dec:	4560      	cmp	r0, ip
 8000dee:	4192      	sbcs	r2, r2
 8000df0:	4454      	add	r4, sl
 8000df2:	4252      	negs	r2, r2
 8000df4:	0005      	movs	r5, r0
 8000df6:	18a4      	adds	r4, r4, r2
 8000df8:	e73a      	b.n	8000c70 <__aeabi_dadd+0x504>
 8000dfa:	4653      	mov	r3, sl
 8000dfc:	075a      	lsls	r2, r3, #29
 8000dfe:	4663      	mov	r3, ip
 8000e00:	08d9      	lsrs	r1, r3, #3
 8000e02:	4653      	mov	r3, sl
 8000e04:	430a      	orrs	r2, r1
 8000e06:	08dc      	lsrs	r4, r3, #3
 8000e08:	e67e      	b.n	8000b08 <__aeabi_dadd+0x39c>
 8000e0a:	001a      	movs	r2, r3
 8000e0c:	001c      	movs	r4, r3
 8000e0e:	432a      	orrs	r2, r5
 8000e10:	d000      	beq.n	8000e14 <__aeabi_dadd+0x6a8>
 8000e12:	e6ab      	b.n	8000b6c <__aeabi_dadd+0x400>
 8000e14:	e6c1      	b.n	8000b9a <__aeabi_dadd+0x42e>
 8000e16:	2120      	movs	r1, #32
 8000e18:	2500      	movs	r5, #0
 8000e1a:	1a09      	subs	r1, r1, r0
 8000e1c:	e519      	b.n	8000852 <__aeabi_dadd+0xe6>
 8000e1e:	2200      	movs	r2, #0
 8000e20:	2500      	movs	r5, #0
 8000e22:	4c01      	ldr	r4, [pc, #4]	@ (8000e28 <__aeabi_dadd+0x6bc>)
 8000e24:	e53a      	b.n	800089c <__aeabi_dadd+0x130>
 8000e26:	46c0      	nop			@ (mov r8, r8)
 8000e28:	000007ff 	.word	0x000007ff
 8000e2c:	ff7fffff 	.word	0xff7fffff
 8000e30:	000007fe 	.word	0x000007fe

08000e34 <__aeabi_ddiv>:
 8000e34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000e36:	46de      	mov	lr, fp
 8000e38:	4645      	mov	r5, r8
 8000e3a:	4657      	mov	r7, sl
 8000e3c:	464e      	mov	r6, r9
 8000e3e:	b5e0      	push	{r5, r6, r7, lr}
 8000e40:	b087      	sub	sp, #28
 8000e42:	9200      	str	r2, [sp, #0]
 8000e44:	9301      	str	r3, [sp, #4]
 8000e46:	030b      	lsls	r3, r1, #12
 8000e48:	0b1b      	lsrs	r3, r3, #12
 8000e4a:	469b      	mov	fp, r3
 8000e4c:	0fca      	lsrs	r2, r1, #31
 8000e4e:	004b      	lsls	r3, r1, #1
 8000e50:	0004      	movs	r4, r0
 8000e52:	4680      	mov	r8, r0
 8000e54:	0d5b      	lsrs	r3, r3, #21
 8000e56:	9202      	str	r2, [sp, #8]
 8000e58:	d100      	bne.n	8000e5c <__aeabi_ddiv+0x28>
 8000e5a:	e16a      	b.n	8001132 <__aeabi_ddiv+0x2fe>
 8000e5c:	4ad4      	ldr	r2, [pc, #848]	@ (80011b0 <__aeabi_ddiv+0x37c>)
 8000e5e:	4293      	cmp	r3, r2
 8000e60:	d100      	bne.n	8000e64 <__aeabi_ddiv+0x30>
 8000e62:	e18c      	b.n	800117e <__aeabi_ddiv+0x34a>
 8000e64:	4659      	mov	r1, fp
 8000e66:	0f42      	lsrs	r2, r0, #29
 8000e68:	00c9      	lsls	r1, r1, #3
 8000e6a:	430a      	orrs	r2, r1
 8000e6c:	2180      	movs	r1, #128	@ 0x80
 8000e6e:	0409      	lsls	r1, r1, #16
 8000e70:	4311      	orrs	r1, r2
 8000e72:	00c2      	lsls	r2, r0, #3
 8000e74:	4690      	mov	r8, r2
 8000e76:	4acf      	ldr	r2, [pc, #828]	@ (80011b4 <__aeabi_ddiv+0x380>)
 8000e78:	4689      	mov	r9, r1
 8000e7a:	4692      	mov	sl, r2
 8000e7c:	449a      	add	sl, r3
 8000e7e:	2300      	movs	r3, #0
 8000e80:	2400      	movs	r4, #0
 8000e82:	9303      	str	r3, [sp, #12]
 8000e84:	9e00      	ldr	r6, [sp, #0]
 8000e86:	9f01      	ldr	r7, [sp, #4]
 8000e88:	033b      	lsls	r3, r7, #12
 8000e8a:	0b1b      	lsrs	r3, r3, #12
 8000e8c:	469b      	mov	fp, r3
 8000e8e:	007b      	lsls	r3, r7, #1
 8000e90:	0030      	movs	r0, r6
 8000e92:	0d5b      	lsrs	r3, r3, #21
 8000e94:	0ffd      	lsrs	r5, r7, #31
 8000e96:	2b00      	cmp	r3, #0
 8000e98:	d100      	bne.n	8000e9c <__aeabi_ddiv+0x68>
 8000e9a:	e128      	b.n	80010ee <__aeabi_ddiv+0x2ba>
 8000e9c:	4ac4      	ldr	r2, [pc, #784]	@ (80011b0 <__aeabi_ddiv+0x37c>)
 8000e9e:	4293      	cmp	r3, r2
 8000ea0:	d100      	bne.n	8000ea4 <__aeabi_ddiv+0x70>
 8000ea2:	e177      	b.n	8001194 <__aeabi_ddiv+0x360>
 8000ea4:	4659      	mov	r1, fp
 8000ea6:	0f72      	lsrs	r2, r6, #29
 8000ea8:	00c9      	lsls	r1, r1, #3
 8000eaa:	430a      	orrs	r2, r1
 8000eac:	2180      	movs	r1, #128	@ 0x80
 8000eae:	0409      	lsls	r1, r1, #16
 8000eb0:	4311      	orrs	r1, r2
 8000eb2:	468b      	mov	fp, r1
 8000eb4:	49bf      	ldr	r1, [pc, #764]	@ (80011b4 <__aeabi_ddiv+0x380>)
 8000eb6:	00f2      	lsls	r2, r6, #3
 8000eb8:	468c      	mov	ip, r1
 8000eba:	4651      	mov	r1, sl
 8000ebc:	4463      	add	r3, ip
 8000ebe:	1acb      	subs	r3, r1, r3
 8000ec0:	469a      	mov	sl, r3
 8000ec2:	2300      	movs	r3, #0
 8000ec4:	9e02      	ldr	r6, [sp, #8]
 8000ec6:	406e      	eors	r6, r5
 8000ec8:	2c0f      	cmp	r4, #15
 8000eca:	d827      	bhi.n	8000f1c <__aeabi_ddiv+0xe8>
 8000ecc:	49ba      	ldr	r1, [pc, #744]	@ (80011b8 <__aeabi_ddiv+0x384>)
 8000ece:	00a4      	lsls	r4, r4, #2
 8000ed0:	5909      	ldr	r1, [r1, r4]
 8000ed2:	468f      	mov	pc, r1
 8000ed4:	46cb      	mov	fp, r9
 8000ed6:	4642      	mov	r2, r8
 8000ed8:	9e02      	ldr	r6, [sp, #8]
 8000eda:	9b03      	ldr	r3, [sp, #12]
 8000edc:	2b02      	cmp	r3, #2
 8000ede:	d016      	beq.n	8000f0e <__aeabi_ddiv+0xda>
 8000ee0:	2b03      	cmp	r3, #3
 8000ee2:	d100      	bne.n	8000ee6 <__aeabi_ddiv+0xb2>
 8000ee4:	e2a6      	b.n	8001434 <__aeabi_ddiv+0x600>
 8000ee6:	2b01      	cmp	r3, #1
 8000ee8:	d000      	beq.n	8000eec <__aeabi_ddiv+0xb8>
 8000eea:	e0df      	b.n	80010ac <__aeabi_ddiv+0x278>
 8000eec:	2200      	movs	r2, #0
 8000eee:	2300      	movs	r3, #0
 8000ef0:	2400      	movs	r4, #0
 8000ef2:	4690      	mov	r8, r2
 8000ef4:	051b      	lsls	r3, r3, #20
 8000ef6:	4323      	orrs	r3, r4
 8000ef8:	07f6      	lsls	r6, r6, #31
 8000efa:	4333      	orrs	r3, r6
 8000efc:	4640      	mov	r0, r8
 8000efe:	0019      	movs	r1, r3
 8000f00:	b007      	add	sp, #28
 8000f02:	bcf0      	pop	{r4, r5, r6, r7}
 8000f04:	46bb      	mov	fp, r7
 8000f06:	46b2      	mov	sl, r6
 8000f08:	46a9      	mov	r9, r5
 8000f0a:	46a0      	mov	r8, r4
 8000f0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000f0e:	2200      	movs	r2, #0
 8000f10:	2400      	movs	r4, #0
 8000f12:	4690      	mov	r8, r2
 8000f14:	4ba6      	ldr	r3, [pc, #664]	@ (80011b0 <__aeabi_ddiv+0x37c>)
 8000f16:	e7ed      	b.n	8000ef4 <__aeabi_ddiv+0xc0>
 8000f18:	002e      	movs	r6, r5
 8000f1a:	e7df      	b.n	8000edc <__aeabi_ddiv+0xa8>
 8000f1c:	45cb      	cmp	fp, r9
 8000f1e:	d200      	bcs.n	8000f22 <__aeabi_ddiv+0xee>
 8000f20:	e1d4      	b.n	80012cc <__aeabi_ddiv+0x498>
 8000f22:	d100      	bne.n	8000f26 <__aeabi_ddiv+0xf2>
 8000f24:	e1cf      	b.n	80012c6 <__aeabi_ddiv+0x492>
 8000f26:	2301      	movs	r3, #1
 8000f28:	425b      	negs	r3, r3
 8000f2a:	469c      	mov	ip, r3
 8000f2c:	4644      	mov	r4, r8
 8000f2e:	4648      	mov	r0, r9
 8000f30:	2700      	movs	r7, #0
 8000f32:	44e2      	add	sl, ip
 8000f34:	465b      	mov	r3, fp
 8000f36:	0e15      	lsrs	r5, r2, #24
 8000f38:	021b      	lsls	r3, r3, #8
 8000f3a:	431d      	orrs	r5, r3
 8000f3c:	0c19      	lsrs	r1, r3, #16
 8000f3e:	042b      	lsls	r3, r5, #16
 8000f40:	0212      	lsls	r2, r2, #8
 8000f42:	9500      	str	r5, [sp, #0]
 8000f44:	0c1d      	lsrs	r5, r3, #16
 8000f46:	4691      	mov	r9, r2
 8000f48:	9102      	str	r1, [sp, #8]
 8000f4a:	9503      	str	r5, [sp, #12]
 8000f4c:	f7ff f97e 	bl	800024c <__aeabi_uidivmod>
 8000f50:	0002      	movs	r2, r0
 8000f52:	436a      	muls	r2, r5
 8000f54:	040b      	lsls	r3, r1, #16
 8000f56:	0c21      	lsrs	r1, r4, #16
 8000f58:	4680      	mov	r8, r0
 8000f5a:	4319      	orrs	r1, r3
 8000f5c:	428a      	cmp	r2, r1
 8000f5e:	d909      	bls.n	8000f74 <__aeabi_ddiv+0x140>
 8000f60:	9d00      	ldr	r5, [sp, #0]
 8000f62:	2301      	movs	r3, #1
 8000f64:	46ac      	mov	ip, r5
 8000f66:	425b      	negs	r3, r3
 8000f68:	4461      	add	r1, ip
 8000f6a:	469c      	mov	ip, r3
 8000f6c:	44e0      	add	r8, ip
 8000f6e:	428d      	cmp	r5, r1
 8000f70:	d800      	bhi.n	8000f74 <__aeabi_ddiv+0x140>
 8000f72:	e1fb      	b.n	800136c <__aeabi_ddiv+0x538>
 8000f74:	1a88      	subs	r0, r1, r2
 8000f76:	9902      	ldr	r1, [sp, #8]
 8000f78:	f7ff f968 	bl	800024c <__aeabi_uidivmod>
 8000f7c:	9a03      	ldr	r2, [sp, #12]
 8000f7e:	0424      	lsls	r4, r4, #16
 8000f80:	4342      	muls	r2, r0
 8000f82:	0409      	lsls	r1, r1, #16
 8000f84:	0c24      	lsrs	r4, r4, #16
 8000f86:	0003      	movs	r3, r0
 8000f88:	430c      	orrs	r4, r1
 8000f8a:	42a2      	cmp	r2, r4
 8000f8c:	d906      	bls.n	8000f9c <__aeabi_ddiv+0x168>
 8000f8e:	9900      	ldr	r1, [sp, #0]
 8000f90:	3b01      	subs	r3, #1
 8000f92:	468c      	mov	ip, r1
 8000f94:	4464      	add	r4, ip
 8000f96:	42a1      	cmp	r1, r4
 8000f98:	d800      	bhi.n	8000f9c <__aeabi_ddiv+0x168>
 8000f9a:	e1e1      	b.n	8001360 <__aeabi_ddiv+0x52c>
 8000f9c:	1aa0      	subs	r0, r4, r2
 8000f9e:	4642      	mov	r2, r8
 8000fa0:	0412      	lsls	r2, r2, #16
 8000fa2:	431a      	orrs	r2, r3
 8000fa4:	4693      	mov	fp, r2
 8000fa6:	464b      	mov	r3, r9
 8000fa8:	4659      	mov	r1, fp
 8000faa:	0c1b      	lsrs	r3, r3, #16
 8000fac:	001d      	movs	r5, r3
 8000fae:	9304      	str	r3, [sp, #16]
 8000fb0:	040b      	lsls	r3, r1, #16
 8000fb2:	4649      	mov	r1, r9
 8000fb4:	0409      	lsls	r1, r1, #16
 8000fb6:	0c09      	lsrs	r1, r1, #16
 8000fb8:	000c      	movs	r4, r1
 8000fba:	0c1b      	lsrs	r3, r3, #16
 8000fbc:	435c      	muls	r4, r3
 8000fbe:	0c12      	lsrs	r2, r2, #16
 8000fc0:	436b      	muls	r3, r5
 8000fc2:	4688      	mov	r8, r1
 8000fc4:	4351      	muls	r1, r2
 8000fc6:	436a      	muls	r2, r5
 8000fc8:	0c25      	lsrs	r5, r4, #16
 8000fca:	46ac      	mov	ip, r5
 8000fcc:	185b      	adds	r3, r3, r1
 8000fce:	4463      	add	r3, ip
 8000fd0:	4299      	cmp	r1, r3
 8000fd2:	d903      	bls.n	8000fdc <__aeabi_ddiv+0x1a8>
 8000fd4:	2180      	movs	r1, #128	@ 0x80
 8000fd6:	0249      	lsls	r1, r1, #9
 8000fd8:	468c      	mov	ip, r1
 8000fda:	4462      	add	r2, ip
 8000fdc:	0c19      	lsrs	r1, r3, #16
 8000fde:	0424      	lsls	r4, r4, #16
 8000fe0:	041b      	lsls	r3, r3, #16
 8000fe2:	0c24      	lsrs	r4, r4, #16
 8000fe4:	188a      	adds	r2, r1, r2
 8000fe6:	191c      	adds	r4, r3, r4
 8000fe8:	4290      	cmp	r0, r2
 8000fea:	d302      	bcc.n	8000ff2 <__aeabi_ddiv+0x1be>
 8000fec:	d116      	bne.n	800101c <__aeabi_ddiv+0x1e8>
 8000fee:	42a7      	cmp	r7, r4
 8000ff0:	d214      	bcs.n	800101c <__aeabi_ddiv+0x1e8>
 8000ff2:	465b      	mov	r3, fp
 8000ff4:	9d00      	ldr	r5, [sp, #0]
 8000ff6:	3b01      	subs	r3, #1
 8000ff8:	444f      	add	r7, r9
 8000ffa:	9305      	str	r3, [sp, #20]
 8000ffc:	454f      	cmp	r7, r9
 8000ffe:	419b      	sbcs	r3, r3
 8001000:	46ac      	mov	ip, r5
 8001002:	425b      	negs	r3, r3
 8001004:	4463      	add	r3, ip
 8001006:	18c0      	adds	r0, r0, r3
 8001008:	4285      	cmp	r5, r0
 800100a:	d300      	bcc.n	800100e <__aeabi_ddiv+0x1da>
 800100c:	e1a1      	b.n	8001352 <__aeabi_ddiv+0x51e>
 800100e:	4282      	cmp	r2, r0
 8001010:	d900      	bls.n	8001014 <__aeabi_ddiv+0x1e0>
 8001012:	e1f6      	b.n	8001402 <__aeabi_ddiv+0x5ce>
 8001014:	d100      	bne.n	8001018 <__aeabi_ddiv+0x1e4>
 8001016:	e1f1      	b.n	80013fc <__aeabi_ddiv+0x5c8>
 8001018:	9b05      	ldr	r3, [sp, #20]
 800101a:	469b      	mov	fp, r3
 800101c:	1b3c      	subs	r4, r7, r4
 800101e:	42a7      	cmp	r7, r4
 8001020:	41bf      	sbcs	r7, r7
 8001022:	9d00      	ldr	r5, [sp, #0]
 8001024:	1a80      	subs	r0, r0, r2
 8001026:	427f      	negs	r7, r7
 8001028:	1bc0      	subs	r0, r0, r7
 800102a:	4285      	cmp	r5, r0
 800102c:	d100      	bne.n	8001030 <__aeabi_ddiv+0x1fc>
 800102e:	e1d0      	b.n	80013d2 <__aeabi_ddiv+0x59e>
 8001030:	9902      	ldr	r1, [sp, #8]
 8001032:	f7ff f90b 	bl	800024c <__aeabi_uidivmod>
 8001036:	9a03      	ldr	r2, [sp, #12]
 8001038:	040b      	lsls	r3, r1, #16
 800103a:	4342      	muls	r2, r0
 800103c:	0c21      	lsrs	r1, r4, #16
 800103e:	0007      	movs	r7, r0
 8001040:	4319      	orrs	r1, r3
 8001042:	428a      	cmp	r2, r1
 8001044:	d900      	bls.n	8001048 <__aeabi_ddiv+0x214>
 8001046:	e178      	b.n	800133a <__aeabi_ddiv+0x506>
 8001048:	1a88      	subs	r0, r1, r2
 800104a:	9902      	ldr	r1, [sp, #8]
 800104c:	f7ff f8fe 	bl	800024c <__aeabi_uidivmod>
 8001050:	9a03      	ldr	r2, [sp, #12]
 8001052:	0424      	lsls	r4, r4, #16
 8001054:	4342      	muls	r2, r0
 8001056:	0409      	lsls	r1, r1, #16
 8001058:	0c24      	lsrs	r4, r4, #16
 800105a:	0003      	movs	r3, r0
 800105c:	430c      	orrs	r4, r1
 800105e:	42a2      	cmp	r2, r4
 8001060:	d900      	bls.n	8001064 <__aeabi_ddiv+0x230>
 8001062:	e15d      	b.n	8001320 <__aeabi_ddiv+0x4ec>
 8001064:	4641      	mov	r1, r8
 8001066:	1aa4      	subs	r4, r4, r2
 8001068:	043a      	lsls	r2, r7, #16
 800106a:	431a      	orrs	r2, r3
 800106c:	9d04      	ldr	r5, [sp, #16]
 800106e:	0413      	lsls	r3, r2, #16
 8001070:	0c1b      	lsrs	r3, r3, #16
 8001072:	4359      	muls	r1, r3
 8001074:	4647      	mov	r7, r8
 8001076:	436b      	muls	r3, r5
 8001078:	469c      	mov	ip, r3
 800107a:	0c10      	lsrs	r0, r2, #16
 800107c:	4347      	muls	r7, r0
 800107e:	0c0b      	lsrs	r3, r1, #16
 8001080:	44bc      	add	ip, r7
 8001082:	4463      	add	r3, ip
 8001084:	4368      	muls	r0, r5
 8001086:	429f      	cmp	r7, r3
 8001088:	d903      	bls.n	8001092 <__aeabi_ddiv+0x25e>
 800108a:	2580      	movs	r5, #128	@ 0x80
 800108c:	026d      	lsls	r5, r5, #9
 800108e:	46ac      	mov	ip, r5
 8001090:	4460      	add	r0, ip
 8001092:	0c1f      	lsrs	r7, r3, #16
 8001094:	0409      	lsls	r1, r1, #16
 8001096:	041b      	lsls	r3, r3, #16
 8001098:	0c09      	lsrs	r1, r1, #16
 800109a:	183f      	adds	r7, r7, r0
 800109c:	185b      	adds	r3, r3, r1
 800109e:	42bc      	cmp	r4, r7
 80010a0:	d200      	bcs.n	80010a4 <__aeabi_ddiv+0x270>
 80010a2:	e102      	b.n	80012aa <__aeabi_ddiv+0x476>
 80010a4:	d100      	bne.n	80010a8 <__aeabi_ddiv+0x274>
 80010a6:	e0fd      	b.n	80012a4 <__aeabi_ddiv+0x470>
 80010a8:	2301      	movs	r3, #1
 80010aa:	431a      	orrs	r2, r3
 80010ac:	4b43      	ldr	r3, [pc, #268]	@ (80011bc <__aeabi_ddiv+0x388>)
 80010ae:	4453      	add	r3, sl
 80010b0:	2b00      	cmp	r3, #0
 80010b2:	dc00      	bgt.n	80010b6 <__aeabi_ddiv+0x282>
 80010b4:	e0ae      	b.n	8001214 <__aeabi_ddiv+0x3e0>
 80010b6:	0751      	lsls	r1, r2, #29
 80010b8:	d000      	beq.n	80010bc <__aeabi_ddiv+0x288>
 80010ba:	e198      	b.n	80013ee <__aeabi_ddiv+0x5ba>
 80010bc:	4659      	mov	r1, fp
 80010be:	01c9      	lsls	r1, r1, #7
 80010c0:	d506      	bpl.n	80010d0 <__aeabi_ddiv+0x29c>
 80010c2:	4659      	mov	r1, fp
 80010c4:	4b3e      	ldr	r3, [pc, #248]	@ (80011c0 <__aeabi_ddiv+0x38c>)
 80010c6:	4019      	ands	r1, r3
 80010c8:	2380      	movs	r3, #128	@ 0x80
 80010ca:	468b      	mov	fp, r1
 80010cc:	00db      	lsls	r3, r3, #3
 80010ce:	4453      	add	r3, sl
 80010d0:	493c      	ldr	r1, [pc, #240]	@ (80011c4 <__aeabi_ddiv+0x390>)
 80010d2:	428b      	cmp	r3, r1
 80010d4:	dd00      	ble.n	80010d8 <__aeabi_ddiv+0x2a4>
 80010d6:	e71a      	b.n	8000f0e <__aeabi_ddiv+0xda>
 80010d8:	4659      	mov	r1, fp
 80010da:	08d2      	lsrs	r2, r2, #3
 80010dc:	0749      	lsls	r1, r1, #29
 80010de:	4311      	orrs	r1, r2
 80010e0:	465a      	mov	r2, fp
 80010e2:	055b      	lsls	r3, r3, #21
 80010e4:	0254      	lsls	r4, r2, #9
 80010e6:	4688      	mov	r8, r1
 80010e8:	0b24      	lsrs	r4, r4, #12
 80010ea:	0d5b      	lsrs	r3, r3, #21
 80010ec:	e702      	b.n	8000ef4 <__aeabi_ddiv+0xc0>
 80010ee:	465a      	mov	r2, fp
 80010f0:	9b00      	ldr	r3, [sp, #0]
 80010f2:	431a      	orrs	r2, r3
 80010f4:	d100      	bne.n	80010f8 <__aeabi_ddiv+0x2c4>
 80010f6:	e07e      	b.n	80011f6 <__aeabi_ddiv+0x3c2>
 80010f8:	465b      	mov	r3, fp
 80010fa:	2b00      	cmp	r3, #0
 80010fc:	d100      	bne.n	8001100 <__aeabi_ddiv+0x2cc>
 80010fe:	e100      	b.n	8001302 <__aeabi_ddiv+0x4ce>
 8001100:	4658      	mov	r0, fp
 8001102:	f001 fabb 	bl	800267c <__clzsi2>
 8001106:	0002      	movs	r2, r0
 8001108:	0003      	movs	r3, r0
 800110a:	3a0b      	subs	r2, #11
 800110c:	271d      	movs	r7, #29
 800110e:	9e00      	ldr	r6, [sp, #0]
 8001110:	1aba      	subs	r2, r7, r2
 8001112:	0019      	movs	r1, r3
 8001114:	4658      	mov	r0, fp
 8001116:	40d6      	lsrs	r6, r2
 8001118:	3908      	subs	r1, #8
 800111a:	4088      	lsls	r0, r1
 800111c:	0032      	movs	r2, r6
 800111e:	4302      	orrs	r2, r0
 8001120:	4693      	mov	fp, r2
 8001122:	9a00      	ldr	r2, [sp, #0]
 8001124:	408a      	lsls	r2, r1
 8001126:	4928      	ldr	r1, [pc, #160]	@ (80011c8 <__aeabi_ddiv+0x394>)
 8001128:	4453      	add	r3, sl
 800112a:	468a      	mov	sl, r1
 800112c:	449a      	add	sl, r3
 800112e:	2300      	movs	r3, #0
 8001130:	e6c8      	b.n	8000ec4 <__aeabi_ddiv+0x90>
 8001132:	465b      	mov	r3, fp
 8001134:	4303      	orrs	r3, r0
 8001136:	4699      	mov	r9, r3
 8001138:	d056      	beq.n	80011e8 <__aeabi_ddiv+0x3b4>
 800113a:	465b      	mov	r3, fp
 800113c:	2b00      	cmp	r3, #0
 800113e:	d100      	bne.n	8001142 <__aeabi_ddiv+0x30e>
 8001140:	e0cd      	b.n	80012de <__aeabi_ddiv+0x4aa>
 8001142:	4658      	mov	r0, fp
 8001144:	f001 fa9a 	bl	800267c <__clzsi2>
 8001148:	230b      	movs	r3, #11
 800114a:	425b      	negs	r3, r3
 800114c:	469c      	mov	ip, r3
 800114e:	0002      	movs	r2, r0
 8001150:	4484      	add	ip, r0
 8001152:	4666      	mov	r6, ip
 8001154:	231d      	movs	r3, #29
 8001156:	1b9b      	subs	r3, r3, r6
 8001158:	0026      	movs	r6, r4
 800115a:	0011      	movs	r1, r2
 800115c:	4658      	mov	r0, fp
 800115e:	40de      	lsrs	r6, r3
 8001160:	3908      	subs	r1, #8
 8001162:	4088      	lsls	r0, r1
 8001164:	0033      	movs	r3, r6
 8001166:	4303      	orrs	r3, r0
 8001168:	4699      	mov	r9, r3
 800116a:	0023      	movs	r3, r4
 800116c:	408b      	lsls	r3, r1
 800116e:	4698      	mov	r8, r3
 8001170:	4b16      	ldr	r3, [pc, #88]	@ (80011cc <__aeabi_ddiv+0x398>)
 8001172:	2400      	movs	r4, #0
 8001174:	1a9b      	subs	r3, r3, r2
 8001176:	469a      	mov	sl, r3
 8001178:	2300      	movs	r3, #0
 800117a:	9303      	str	r3, [sp, #12]
 800117c:	e682      	b.n	8000e84 <__aeabi_ddiv+0x50>
 800117e:	465a      	mov	r2, fp
 8001180:	4302      	orrs	r2, r0
 8001182:	4691      	mov	r9, r2
 8001184:	d12a      	bne.n	80011dc <__aeabi_ddiv+0x3a8>
 8001186:	2200      	movs	r2, #0
 8001188:	469a      	mov	sl, r3
 800118a:	2302      	movs	r3, #2
 800118c:	4690      	mov	r8, r2
 800118e:	2408      	movs	r4, #8
 8001190:	9303      	str	r3, [sp, #12]
 8001192:	e677      	b.n	8000e84 <__aeabi_ddiv+0x50>
 8001194:	465a      	mov	r2, fp
 8001196:	9b00      	ldr	r3, [sp, #0]
 8001198:	431a      	orrs	r2, r3
 800119a:	4b0d      	ldr	r3, [pc, #52]	@ (80011d0 <__aeabi_ddiv+0x39c>)
 800119c:	469c      	mov	ip, r3
 800119e:	44e2      	add	sl, ip
 80011a0:	2a00      	cmp	r2, #0
 80011a2:	d117      	bne.n	80011d4 <__aeabi_ddiv+0x3a0>
 80011a4:	2302      	movs	r3, #2
 80011a6:	431c      	orrs	r4, r3
 80011a8:	2300      	movs	r3, #0
 80011aa:	469b      	mov	fp, r3
 80011ac:	3302      	adds	r3, #2
 80011ae:	e689      	b.n	8000ec4 <__aeabi_ddiv+0x90>
 80011b0:	000007ff 	.word	0x000007ff
 80011b4:	fffffc01 	.word	0xfffffc01
 80011b8:	080071fc 	.word	0x080071fc
 80011bc:	000003ff 	.word	0x000003ff
 80011c0:	feffffff 	.word	0xfeffffff
 80011c4:	000007fe 	.word	0x000007fe
 80011c8:	000003f3 	.word	0x000003f3
 80011cc:	fffffc0d 	.word	0xfffffc0d
 80011d0:	fffff801 	.word	0xfffff801
 80011d4:	2303      	movs	r3, #3
 80011d6:	0032      	movs	r2, r6
 80011d8:	431c      	orrs	r4, r3
 80011da:	e673      	b.n	8000ec4 <__aeabi_ddiv+0x90>
 80011dc:	469a      	mov	sl, r3
 80011de:	2303      	movs	r3, #3
 80011e0:	46d9      	mov	r9, fp
 80011e2:	240c      	movs	r4, #12
 80011e4:	9303      	str	r3, [sp, #12]
 80011e6:	e64d      	b.n	8000e84 <__aeabi_ddiv+0x50>
 80011e8:	2300      	movs	r3, #0
 80011ea:	4698      	mov	r8, r3
 80011ec:	469a      	mov	sl, r3
 80011ee:	3301      	adds	r3, #1
 80011f0:	2404      	movs	r4, #4
 80011f2:	9303      	str	r3, [sp, #12]
 80011f4:	e646      	b.n	8000e84 <__aeabi_ddiv+0x50>
 80011f6:	2301      	movs	r3, #1
 80011f8:	431c      	orrs	r4, r3
 80011fa:	2300      	movs	r3, #0
 80011fc:	469b      	mov	fp, r3
 80011fe:	3301      	adds	r3, #1
 8001200:	e660      	b.n	8000ec4 <__aeabi_ddiv+0x90>
 8001202:	2300      	movs	r3, #0
 8001204:	2480      	movs	r4, #128	@ 0x80
 8001206:	4698      	mov	r8, r3
 8001208:	2600      	movs	r6, #0
 800120a:	4b92      	ldr	r3, [pc, #584]	@ (8001454 <__aeabi_ddiv+0x620>)
 800120c:	0324      	lsls	r4, r4, #12
 800120e:	e671      	b.n	8000ef4 <__aeabi_ddiv+0xc0>
 8001210:	2201      	movs	r2, #1
 8001212:	4252      	negs	r2, r2
 8001214:	2101      	movs	r1, #1
 8001216:	1ac9      	subs	r1, r1, r3
 8001218:	2938      	cmp	r1, #56	@ 0x38
 800121a:	dd00      	ble.n	800121e <__aeabi_ddiv+0x3ea>
 800121c:	e666      	b.n	8000eec <__aeabi_ddiv+0xb8>
 800121e:	291f      	cmp	r1, #31
 8001220:	dc00      	bgt.n	8001224 <__aeabi_ddiv+0x3f0>
 8001222:	e0ab      	b.n	800137c <__aeabi_ddiv+0x548>
 8001224:	201f      	movs	r0, #31
 8001226:	4240      	negs	r0, r0
 8001228:	1ac3      	subs	r3, r0, r3
 800122a:	4658      	mov	r0, fp
 800122c:	40d8      	lsrs	r0, r3
 800122e:	0003      	movs	r3, r0
 8001230:	2920      	cmp	r1, #32
 8001232:	d004      	beq.n	800123e <__aeabi_ddiv+0x40a>
 8001234:	4658      	mov	r0, fp
 8001236:	4988      	ldr	r1, [pc, #544]	@ (8001458 <__aeabi_ddiv+0x624>)
 8001238:	4451      	add	r1, sl
 800123a:	4088      	lsls	r0, r1
 800123c:	4302      	orrs	r2, r0
 800123e:	1e51      	subs	r1, r2, #1
 8001240:	418a      	sbcs	r2, r1
 8001242:	431a      	orrs	r2, r3
 8001244:	2307      	movs	r3, #7
 8001246:	0019      	movs	r1, r3
 8001248:	2400      	movs	r4, #0
 800124a:	4011      	ands	r1, r2
 800124c:	4213      	tst	r3, r2
 800124e:	d00c      	beq.n	800126a <__aeabi_ddiv+0x436>
 8001250:	230f      	movs	r3, #15
 8001252:	4013      	ands	r3, r2
 8001254:	2b04      	cmp	r3, #4
 8001256:	d100      	bne.n	800125a <__aeabi_ddiv+0x426>
 8001258:	e0f9      	b.n	800144e <__aeabi_ddiv+0x61a>
 800125a:	1d11      	adds	r1, r2, #4
 800125c:	4291      	cmp	r1, r2
 800125e:	419b      	sbcs	r3, r3
 8001260:	000a      	movs	r2, r1
 8001262:	425b      	negs	r3, r3
 8001264:	0759      	lsls	r1, r3, #29
 8001266:	025b      	lsls	r3, r3, #9
 8001268:	0b1c      	lsrs	r4, r3, #12
 800126a:	08d2      	lsrs	r2, r2, #3
 800126c:	430a      	orrs	r2, r1
 800126e:	4690      	mov	r8, r2
 8001270:	2300      	movs	r3, #0
 8001272:	e63f      	b.n	8000ef4 <__aeabi_ddiv+0xc0>
 8001274:	2480      	movs	r4, #128	@ 0x80
 8001276:	464b      	mov	r3, r9
 8001278:	0324      	lsls	r4, r4, #12
 800127a:	4223      	tst	r3, r4
 800127c:	d009      	beq.n	8001292 <__aeabi_ddiv+0x45e>
 800127e:	465b      	mov	r3, fp
 8001280:	4223      	tst	r3, r4
 8001282:	d106      	bne.n	8001292 <__aeabi_ddiv+0x45e>
 8001284:	431c      	orrs	r4, r3
 8001286:	0324      	lsls	r4, r4, #12
 8001288:	002e      	movs	r6, r5
 800128a:	4690      	mov	r8, r2
 800128c:	4b71      	ldr	r3, [pc, #452]	@ (8001454 <__aeabi_ddiv+0x620>)
 800128e:	0b24      	lsrs	r4, r4, #12
 8001290:	e630      	b.n	8000ef4 <__aeabi_ddiv+0xc0>
 8001292:	2480      	movs	r4, #128	@ 0x80
 8001294:	464b      	mov	r3, r9
 8001296:	0324      	lsls	r4, r4, #12
 8001298:	431c      	orrs	r4, r3
 800129a:	0324      	lsls	r4, r4, #12
 800129c:	9e02      	ldr	r6, [sp, #8]
 800129e:	4b6d      	ldr	r3, [pc, #436]	@ (8001454 <__aeabi_ddiv+0x620>)
 80012a0:	0b24      	lsrs	r4, r4, #12
 80012a2:	e627      	b.n	8000ef4 <__aeabi_ddiv+0xc0>
 80012a4:	2b00      	cmp	r3, #0
 80012a6:	d100      	bne.n	80012aa <__aeabi_ddiv+0x476>
 80012a8:	e700      	b.n	80010ac <__aeabi_ddiv+0x278>
 80012aa:	9800      	ldr	r0, [sp, #0]
 80012ac:	1e51      	subs	r1, r2, #1
 80012ae:	4684      	mov	ip, r0
 80012b0:	4464      	add	r4, ip
 80012b2:	4284      	cmp	r4, r0
 80012b4:	d200      	bcs.n	80012b8 <__aeabi_ddiv+0x484>
 80012b6:	e084      	b.n	80013c2 <__aeabi_ddiv+0x58e>
 80012b8:	42bc      	cmp	r4, r7
 80012ba:	d200      	bcs.n	80012be <__aeabi_ddiv+0x48a>
 80012bc:	e0ae      	b.n	800141c <__aeabi_ddiv+0x5e8>
 80012be:	d100      	bne.n	80012c2 <__aeabi_ddiv+0x48e>
 80012c0:	e0c1      	b.n	8001446 <__aeabi_ddiv+0x612>
 80012c2:	000a      	movs	r2, r1
 80012c4:	e6f0      	b.n	80010a8 <__aeabi_ddiv+0x274>
 80012c6:	4542      	cmp	r2, r8
 80012c8:	d900      	bls.n	80012cc <__aeabi_ddiv+0x498>
 80012ca:	e62c      	b.n	8000f26 <__aeabi_ddiv+0xf2>
 80012cc:	464b      	mov	r3, r9
 80012ce:	07dc      	lsls	r4, r3, #31
 80012d0:	0858      	lsrs	r0, r3, #1
 80012d2:	4643      	mov	r3, r8
 80012d4:	085b      	lsrs	r3, r3, #1
 80012d6:	431c      	orrs	r4, r3
 80012d8:	4643      	mov	r3, r8
 80012da:	07df      	lsls	r7, r3, #31
 80012dc:	e62a      	b.n	8000f34 <__aeabi_ddiv+0x100>
 80012de:	f001 f9cd 	bl	800267c <__clzsi2>
 80012e2:	2315      	movs	r3, #21
 80012e4:	469c      	mov	ip, r3
 80012e6:	4484      	add	ip, r0
 80012e8:	0002      	movs	r2, r0
 80012ea:	4663      	mov	r3, ip
 80012ec:	3220      	adds	r2, #32
 80012ee:	2b1c      	cmp	r3, #28
 80012f0:	dc00      	bgt.n	80012f4 <__aeabi_ddiv+0x4c0>
 80012f2:	e72e      	b.n	8001152 <__aeabi_ddiv+0x31e>
 80012f4:	0023      	movs	r3, r4
 80012f6:	3808      	subs	r0, #8
 80012f8:	4083      	lsls	r3, r0
 80012fa:	4699      	mov	r9, r3
 80012fc:	2300      	movs	r3, #0
 80012fe:	4698      	mov	r8, r3
 8001300:	e736      	b.n	8001170 <__aeabi_ddiv+0x33c>
 8001302:	f001 f9bb 	bl	800267c <__clzsi2>
 8001306:	0002      	movs	r2, r0
 8001308:	0003      	movs	r3, r0
 800130a:	3215      	adds	r2, #21
 800130c:	3320      	adds	r3, #32
 800130e:	2a1c      	cmp	r2, #28
 8001310:	dc00      	bgt.n	8001314 <__aeabi_ddiv+0x4e0>
 8001312:	e6fb      	b.n	800110c <__aeabi_ddiv+0x2d8>
 8001314:	9900      	ldr	r1, [sp, #0]
 8001316:	3808      	subs	r0, #8
 8001318:	4081      	lsls	r1, r0
 800131a:	2200      	movs	r2, #0
 800131c:	468b      	mov	fp, r1
 800131e:	e702      	b.n	8001126 <__aeabi_ddiv+0x2f2>
 8001320:	9900      	ldr	r1, [sp, #0]
 8001322:	3b01      	subs	r3, #1
 8001324:	468c      	mov	ip, r1
 8001326:	4464      	add	r4, ip
 8001328:	42a1      	cmp	r1, r4
 800132a:	d900      	bls.n	800132e <__aeabi_ddiv+0x4fa>
 800132c:	e69a      	b.n	8001064 <__aeabi_ddiv+0x230>
 800132e:	42a2      	cmp	r2, r4
 8001330:	d800      	bhi.n	8001334 <__aeabi_ddiv+0x500>
 8001332:	e697      	b.n	8001064 <__aeabi_ddiv+0x230>
 8001334:	1e83      	subs	r3, r0, #2
 8001336:	4464      	add	r4, ip
 8001338:	e694      	b.n	8001064 <__aeabi_ddiv+0x230>
 800133a:	46ac      	mov	ip, r5
 800133c:	4461      	add	r1, ip
 800133e:	3f01      	subs	r7, #1
 8001340:	428d      	cmp	r5, r1
 8001342:	d900      	bls.n	8001346 <__aeabi_ddiv+0x512>
 8001344:	e680      	b.n	8001048 <__aeabi_ddiv+0x214>
 8001346:	428a      	cmp	r2, r1
 8001348:	d800      	bhi.n	800134c <__aeabi_ddiv+0x518>
 800134a:	e67d      	b.n	8001048 <__aeabi_ddiv+0x214>
 800134c:	1e87      	subs	r7, r0, #2
 800134e:	4461      	add	r1, ip
 8001350:	e67a      	b.n	8001048 <__aeabi_ddiv+0x214>
 8001352:	4285      	cmp	r5, r0
 8001354:	d000      	beq.n	8001358 <__aeabi_ddiv+0x524>
 8001356:	e65f      	b.n	8001018 <__aeabi_ddiv+0x1e4>
 8001358:	45b9      	cmp	r9, r7
 800135a:	d900      	bls.n	800135e <__aeabi_ddiv+0x52a>
 800135c:	e65c      	b.n	8001018 <__aeabi_ddiv+0x1e4>
 800135e:	e656      	b.n	800100e <__aeabi_ddiv+0x1da>
 8001360:	42a2      	cmp	r2, r4
 8001362:	d800      	bhi.n	8001366 <__aeabi_ddiv+0x532>
 8001364:	e61a      	b.n	8000f9c <__aeabi_ddiv+0x168>
 8001366:	1e83      	subs	r3, r0, #2
 8001368:	4464      	add	r4, ip
 800136a:	e617      	b.n	8000f9c <__aeabi_ddiv+0x168>
 800136c:	428a      	cmp	r2, r1
 800136e:	d800      	bhi.n	8001372 <__aeabi_ddiv+0x53e>
 8001370:	e600      	b.n	8000f74 <__aeabi_ddiv+0x140>
 8001372:	46ac      	mov	ip, r5
 8001374:	1e83      	subs	r3, r0, #2
 8001376:	4698      	mov	r8, r3
 8001378:	4461      	add	r1, ip
 800137a:	e5fb      	b.n	8000f74 <__aeabi_ddiv+0x140>
 800137c:	4837      	ldr	r0, [pc, #220]	@ (800145c <__aeabi_ddiv+0x628>)
 800137e:	0014      	movs	r4, r2
 8001380:	4450      	add	r0, sl
 8001382:	4082      	lsls	r2, r0
 8001384:	465b      	mov	r3, fp
 8001386:	0017      	movs	r7, r2
 8001388:	4083      	lsls	r3, r0
 800138a:	40cc      	lsrs	r4, r1
 800138c:	1e7a      	subs	r2, r7, #1
 800138e:	4197      	sbcs	r7, r2
 8001390:	4323      	orrs	r3, r4
 8001392:	433b      	orrs	r3, r7
 8001394:	001a      	movs	r2, r3
 8001396:	465b      	mov	r3, fp
 8001398:	40cb      	lsrs	r3, r1
 800139a:	0751      	lsls	r1, r2, #29
 800139c:	d009      	beq.n	80013b2 <__aeabi_ddiv+0x57e>
 800139e:	210f      	movs	r1, #15
 80013a0:	4011      	ands	r1, r2
 80013a2:	2904      	cmp	r1, #4
 80013a4:	d005      	beq.n	80013b2 <__aeabi_ddiv+0x57e>
 80013a6:	1d11      	adds	r1, r2, #4
 80013a8:	4291      	cmp	r1, r2
 80013aa:	4192      	sbcs	r2, r2
 80013ac:	4252      	negs	r2, r2
 80013ae:	189b      	adds	r3, r3, r2
 80013b0:	000a      	movs	r2, r1
 80013b2:	0219      	lsls	r1, r3, #8
 80013b4:	d400      	bmi.n	80013b8 <__aeabi_ddiv+0x584>
 80013b6:	e755      	b.n	8001264 <__aeabi_ddiv+0x430>
 80013b8:	2200      	movs	r2, #0
 80013ba:	2301      	movs	r3, #1
 80013bc:	2400      	movs	r4, #0
 80013be:	4690      	mov	r8, r2
 80013c0:	e598      	b.n	8000ef4 <__aeabi_ddiv+0xc0>
 80013c2:	000a      	movs	r2, r1
 80013c4:	42bc      	cmp	r4, r7
 80013c6:	d000      	beq.n	80013ca <__aeabi_ddiv+0x596>
 80013c8:	e66e      	b.n	80010a8 <__aeabi_ddiv+0x274>
 80013ca:	454b      	cmp	r3, r9
 80013cc:	d000      	beq.n	80013d0 <__aeabi_ddiv+0x59c>
 80013ce:	e66b      	b.n	80010a8 <__aeabi_ddiv+0x274>
 80013d0:	e66c      	b.n	80010ac <__aeabi_ddiv+0x278>
 80013d2:	4b23      	ldr	r3, [pc, #140]	@ (8001460 <__aeabi_ddiv+0x62c>)
 80013d4:	4a23      	ldr	r2, [pc, #140]	@ (8001464 <__aeabi_ddiv+0x630>)
 80013d6:	4453      	add	r3, sl
 80013d8:	4592      	cmp	sl, r2
 80013da:	da00      	bge.n	80013de <__aeabi_ddiv+0x5aa>
 80013dc:	e718      	b.n	8001210 <__aeabi_ddiv+0x3dc>
 80013de:	2101      	movs	r1, #1
 80013e0:	4249      	negs	r1, r1
 80013e2:	1d0a      	adds	r2, r1, #4
 80013e4:	428a      	cmp	r2, r1
 80013e6:	4189      	sbcs	r1, r1
 80013e8:	4249      	negs	r1, r1
 80013ea:	448b      	add	fp, r1
 80013ec:	e666      	b.n	80010bc <__aeabi_ddiv+0x288>
 80013ee:	210f      	movs	r1, #15
 80013f0:	4011      	ands	r1, r2
 80013f2:	2904      	cmp	r1, #4
 80013f4:	d100      	bne.n	80013f8 <__aeabi_ddiv+0x5c4>
 80013f6:	e661      	b.n	80010bc <__aeabi_ddiv+0x288>
 80013f8:	0011      	movs	r1, r2
 80013fa:	e7f2      	b.n	80013e2 <__aeabi_ddiv+0x5ae>
 80013fc:	42bc      	cmp	r4, r7
 80013fe:	d800      	bhi.n	8001402 <__aeabi_ddiv+0x5ce>
 8001400:	e60a      	b.n	8001018 <__aeabi_ddiv+0x1e4>
 8001402:	2302      	movs	r3, #2
 8001404:	425b      	negs	r3, r3
 8001406:	469c      	mov	ip, r3
 8001408:	9900      	ldr	r1, [sp, #0]
 800140a:	444f      	add	r7, r9
 800140c:	454f      	cmp	r7, r9
 800140e:	419b      	sbcs	r3, r3
 8001410:	44e3      	add	fp, ip
 8001412:	468c      	mov	ip, r1
 8001414:	425b      	negs	r3, r3
 8001416:	4463      	add	r3, ip
 8001418:	18c0      	adds	r0, r0, r3
 800141a:	e5ff      	b.n	800101c <__aeabi_ddiv+0x1e8>
 800141c:	4649      	mov	r1, r9
 800141e:	9d00      	ldr	r5, [sp, #0]
 8001420:	0048      	lsls	r0, r1, #1
 8001422:	4548      	cmp	r0, r9
 8001424:	4189      	sbcs	r1, r1
 8001426:	46ac      	mov	ip, r5
 8001428:	4249      	negs	r1, r1
 800142a:	4461      	add	r1, ip
 800142c:	4681      	mov	r9, r0
 800142e:	3a02      	subs	r2, #2
 8001430:	1864      	adds	r4, r4, r1
 8001432:	e7c7      	b.n	80013c4 <__aeabi_ddiv+0x590>
 8001434:	2480      	movs	r4, #128	@ 0x80
 8001436:	465b      	mov	r3, fp
 8001438:	0324      	lsls	r4, r4, #12
 800143a:	431c      	orrs	r4, r3
 800143c:	0324      	lsls	r4, r4, #12
 800143e:	4690      	mov	r8, r2
 8001440:	4b04      	ldr	r3, [pc, #16]	@ (8001454 <__aeabi_ddiv+0x620>)
 8001442:	0b24      	lsrs	r4, r4, #12
 8001444:	e556      	b.n	8000ef4 <__aeabi_ddiv+0xc0>
 8001446:	4599      	cmp	r9, r3
 8001448:	d3e8      	bcc.n	800141c <__aeabi_ddiv+0x5e8>
 800144a:	000a      	movs	r2, r1
 800144c:	e7bd      	b.n	80013ca <__aeabi_ddiv+0x596>
 800144e:	2300      	movs	r3, #0
 8001450:	e708      	b.n	8001264 <__aeabi_ddiv+0x430>
 8001452:	46c0      	nop			@ (mov r8, r8)
 8001454:	000007ff 	.word	0x000007ff
 8001458:	0000043e 	.word	0x0000043e
 800145c:	0000041e 	.word	0x0000041e
 8001460:	000003ff 	.word	0x000003ff
 8001464:	fffffc02 	.word	0xfffffc02

08001468 <__eqdf2>:
 8001468:	b5f0      	push	{r4, r5, r6, r7, lr}
 800146a:	4657      	mov	r7, sl
 800146c:	46de      	mov	lr, fp
 800146e:	464e      	mov	r6, r9
 8001470:	4645      	mov	r5, r8
 8001472:	b5e0      	push	{r5, r6, r7, lr}
 8001474:	000d      	movs	r5, r1
 8001476:	0004      	movs	r4, r0
 8001478:	0fe8      	lsrs	r0, r5, #31
 800147a:	4683      	mov	fp, r0
 800147c:	0309      	lsls	r1, r1, #12
 800147e:	0fd8      	lsrs	r0, r3, #31
 8001480:	0b09      	lsrs	r1, r1, #12
 8001482:	4682      	mov	sl, r0
 8001484:	4819      	ldr	r0, [pc, #100]	@ (80014ec <__eqdf2+0x84>)
 8001486:	468c      	mov	ip, r1
 8001488:	031f      	lsls	r7, r3, #12
 800148a:	0069      	lsls	r1, r5, #1
 800148c:	005e      	lsls	r6, r3, #1
 800148e:	0d49      	lsrs	r1, r1, #21
 8001490:	0b3f      	lsrs	r7, r7, #12
 8001492:	0d76      	lsrs	r6, r6, #21
 8001494:	4281      	cmp	r1, r0
 8001496:	d018      	beq.n	80014ca <__eqdf2+0x62>
 8001498:	4286      	cmp	r6, r0
 800149a:	d00f      	beq.n	80014bc <__eqdf2+0x54>
 800149c:	2001      	movs	r0, #1
 800149e:	42b1      	cmp	r1, r6
 80014a0:	d10d      	bne.n	80014be <__eqdf2+0x56>
 80014a2:	45bc      	cmp	ip, r7
 80014a4:	d10b      	bne.n	80014be <__eqdf2+0x56>
 80014a6:	4294      	cmp	r4, r2
 80014a8:	d109      	bne.n	80014be <__eqdf2+0x56>
 80014aa:	45d3      	cmp	fp, sl
 80014ac:	d01c      	beq.n	80014e8 <__eqdf2+0x80>
 80014ae:	2900      	cmp	r1, #0
 80014b0:	d105      	bne.n	80014be <__eqdf2+0x56>
 80014b2:	4660      	mov	r0, ip
 80014b4:	4320      	orrs	r0, r4
 80014b6:	1e43      	subs	r3, r0, #1
 80014b8:	4198      	sbcs	r0, r3
 80014ba:	e000      	b.n	80014be <__eqdf2+0x56>
 80014bc:	2001      	movs	r0, #1
 80014be:	bcf0      	pop	{r4, r5, r6, r7}
 80014c0:	46bb      	mov	fp, r7
 80014c2:	46b2      	mov	sl, r6
 80014c4:	46a9      	mov	r9, r5
 80014c6:	46a0      	mov	r8, r4
 80014c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80014ca:	2001      	movs	r0, #1
 80014cc:	428e      	cmp	r6, r1
 80014ce:	d1f6      	bne.n	80014be <__eqdf2+0x56>
 80014d0:	4661      	mov	r1, ip
 80014d2:	4339      	orrs	r1, r7
 80014d4:	000f      	movs	r7, r1
 80014d6:	4317      	orrs	r7, r2
 80014d8:	4327      	orrs	r7, r4
 80014da:	d1f0      	bne.n	80014be <__eqdf2+0x56>
 80014dc:	465b      	mov	r3, fp
 80014de:	4652      	mov	r2, sl
 80014e0:	1a98      	subs	r0, r3, r2
 80014e2:	1e43      	subs	r3, r0, #1
 80014e4:	4198      	sbcs	r0, r3
 80014e6:	e7ea      	b.n	80014be <__eqdf2+0x56>
 80014e8:	2000      	movs	r0, #0
 80014ea:	e7e8      	b.n	80014be <__eqdf2+0x56>
 80014ec:	000007ff 	.word	0x000007ff

080014f0 <__gedf2>:
 80014f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80014f2:	4657      	mov	r7, sl
 80014f4:	464e      	mov	r6, r9
 80014f6:	4645      	mov	r5, r8
 80014f8:	46de      	mov	lr, fp
 80014fa:	b5e0      	push	{r5, r6, r7, lr}
 80014fc:	000d      	movs	r5, r1
 80014fe:	030f      	lsls	r7, r1, #12
 8001500:	0b39      	lsrs	r1, r7, #12
 8001502:	b083      	sub	sp, #12
 8001504:	0004      	movs	r4, r0
 8001506:	4680      	mov	r8, r0
 8001508:	9101      	str	r1, [sp, #4]
 800150a:	0058      	lsls	r0, r3, #1
 800150c:	0fe9      	lsrs	r1, r5, #31
 800150e:	4f31      	ldr	r7, [pc, #196]	@ (80015d4 <__gedf2+0xe4>)
 8001510:	0d40      	lsrs	r0, r0, #21
 8001512:	468c      	mov	ip, r1
 8001514:	006e      	lsls	r6, r5, #1
 8001516:	0319      	lsls	r1, r3, #12
 8001518:	4682      	mov	sl, r0
 800151a:	4691      	mov	r9, r2
 800151c:	0d76      	lsrs	r6, r6, #21
 800151e:	0b09      	lsrs	r1, r1, #12
 8001520:	0fd8      	lsrs	r0, r3, #31
 8001522:	42be      	cmp	r6, r7
 8001524:	d01f      	beq.n	8001566 <__gedf2+0x76>
 8001526:	45ba      	cmp	sl, r7
 8001528:	d00f      	beq.n	800154a <__gedf2+0x5a>
 800152a:	2e00      	cmp	r6, #0
 800152c:	d12f      	bne.n	800158e <__gedf2+0x9e>
 800152e:	4655      	mov	r5, sl
 8001530:	9e01      	ldr	r6, [sp, #4]
 8001532:	4334      	orrs	r4, r6
 8001534:	2d00      	cmp	r5, #0
 8001536:	d127      	bne.n	8001588 <__gedf2+0x98>
 8001538:	430a      	orrs	r2, r1
 800153a:	d03a      	beq.n	80015b2 <__gedf2+0xc2>
 800153c:	2c00      	cmp	r4, #0
 800153e:	d145      	bne.n	80015cc <__gedf2+0xdc>
 8001540:	2800      	cmp	r0, #0
 8001542:	d11a      	bne.n	800157a <__gedf2+0x8a>
 8001544:	2001      	movs	r0, #1
 8001546:	4240      	negs	r0, r0
 8001548:	e017      	b.n	800157a <__gedf2+0x8a>
 800154a:	4311      	orrs	r1, r2
 800154c:	d13b      	bne.n	80015c6 <__gedf2+0xd6>
 800154e:	2e00      	cmp	r6, #0
 8001550:	d102      	bne.n	8001558 <__gedf2+0x68>
 8001552:	9f01      	ldr	r7, [sp, #4]
 8001554:	4327      	orrs	r7, r4
 8001556:	d0f3      	beq.n	8001540 <__gedf2+0x50>
 8001558:	4584      	cmp	ip, r0
 800155a:	d109      	bne.n	8001570 <__gedf2+0x80>
 800155c:	4663      	mov	r3, ip
 800155e:	2b00      	cmp	r3, #0
 8001560:	d0f0      	beq.n	8001544 <__gedf2+0x54>
 8001562:	4660      	mov	r0, ip
 8001564:	e009      	b.n	800157a <__gedf2+0x8a>
 8001566:	9f01      	ldr	r7, [sp, #4]
 8001568:	4327      	orrs	r7, r4
 800156a:	d12c      	bne.n	80015c6 <__gedf2+0xd6>
 800156c:	45b2      	cmp	sl, r6
 800156e:	d024      	beq.n	80015ba <__gedf2+0xca>
 8001570:	4663      	mov	r3, ip
 8001572:	2002      	movs	r0, #2
 8001574:	3b01      	subs	r3, #1
 8001576:	4018      	ands	r0, r3
 8001578:	3801      	subs	r0, #1
 800157a:	b003      	add	sp, #12
 800157c:	bcf0      	pop	{r4, r5, r6, r7}
 800157e:	46bb      	mov	fp, r7
 8001580:	46b2      	mov	sl, r6
 8001582:	46a9      	mov	r9, r5
 8001584:	46a0      	mov	r8, r4
 8001586:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001588:	2c00      	cmp	r4, #0
 800158a:	d0d9      	beq.n	8001540 <__gedf2+0x50>
 800158c:	e7e4      	b.n	8001558 <__gedf2+0x68>
 800158e:	4654      	mov	r4, sl
 8001590:	2c00      	cmp	r4, #0
 8001592:	d0ed      	beq.n	8001570 <__gedf2+0x80>
 8001594:	4584      	cmp	ip, r0
 8001596:	d1eb      	bne.n	8001570 <__gedf2+0x80>
 8001598:	4556      	cmp	r6, sl
 800159a:	dce9      	bgt.n	8001570 <__gedf2+0x80>
 800159c:	dbde      	blt.n	800155c <__gedf2+0x6c>
 800159e:	9b01      	ldr	r3, [sp, #4]
 80015a0:	428b      	cmp	r3, r1
 80015a2:	d8e5      	bhi.n	8001570 <__gedf2+0x80>
 80015a4:	d1da      	bne.n	800155c <__gedf2+0x6c>
 80015a6:	45c8      	cmp	r8, r9
 80015a8:	d8e2      	bhi.n	8001570 <__gedf2+0x80>
 80015aa:	2000      	movs	r0, #0
 80015ac:	45c8      	cmp	r8, r9
 80015ae:	d2e4      	bcs.n	800157a <__gedf2+0x8a>
 80015b0:	e7d4      	b.n	800155c <__gedf2+0x6c>
 80015b2:	2000      	movs	r0, #0
 80015b4:	2c00      	cmp	r4, #0
 80015b6:	d0e0      	beq.n	800157a <__gedf2+0x8a>
 80015b8:	e7da      	b.n	8001570 <__gedf2+0x80>
 80015ba:	4311      	orrs	r1, r2
 80015bc:	d103      	bne.n	80015c6 <__gedf2+0xd6>
 80015be:	4584      	cmp	ip, r0
 80015c0:	d1d6      	bne.n	8001570 <__gedf2+0x80>
 80015c2:	2000      	movs	r0, #0
 80015c4:	e7d9      	b.n	800157a <__gedf2+0x8a>
 80015c6:	2002      	movs	r0, #2
 80015c8:	4240      	negs	r0, r0
 80015ca:	e7d6      	b.n	800157a <__gedf2+0x8a>
 80015cc:	4584      	cmp	ip, r0
 80015ce:	d0e6      	beq.n	800159e <__gedf2+0xae>
 80015d0:	e7ce      	b.n	8001570 <__gedf2+0x80>
 80015d2:	46c0      	nop			@ (mov r8, r8)
 80015d4:	000007ff 	.word	0x000007ff

080015d8 <__ledf2>:
 80015d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80015da:	4657      	mov	r7, sl
 80015dc:	464e      	mov	r6, r9
 80015de:	4645      	mov	r5, r8
 80015e0:	46de      	mov	lr, fp
 80015e2:	b5e0      	push	{r5, r6, r7, lr}
 80015e4:	000d      	movs	r5, r1
 80015e6:	030f      	lsls	r7, r1, #12
 80015e8:	0004      	movs	r4, r0
 80015ea:	4680      	mov	r8, r0
 80015ec:	0fe8      	lsrs	r0, r5, #31
 80015ee:	0b39      	lsrs	r1, r7, #12
 80015f0:	4684      	mov	ip, r0
 80015f2:	b083      	sub	sp, #12
 80015f4:	0058      	lsls	r0, r3, #1
 80015f6:	4f30      	ldr	r7, [pc, #192]	@ (80016b8 <__ledf2+0xe0>)
 80015f8:	0d40      	lsrs	r0, r0, #21
 80015fa:	9101      	str	r1, [sp, #4]
 80015fc:	031e      	lsls	r6, r3, #12
 80015fe:	0069      	lsls	r1, r5, #1
 8001600:	4682      	mov	sl, r0
 8001602:	4691      	mov	r9, r2
 8001604:	0d49      	lsrs	r1, r1, #21
 8001606:	0b36      	lsrs	r6, r6, #12
 8001608:	0fd8      	lsrs	r0, r3, #31
 800160a:	42b9      	cmp	r1, r7
 800160c:	d020      	beq.n	8001650 <__ledf2+0x78>
 800160e:	45ba      	cmp	sl, r7
 8001610:	d00f      	beq.n	8001632 <__ledf2+0x5a>
 8001612:	2900      	cmp	r1, #0
 8001614:	d12b      	bne.n	800166e <__ledf2+0x96>
 8001616:	9901      	ldr	r1, [sp, #4]
 8001618:	430c      	orrs	r4, r1
 800161a:	4651      	mov	r1, sl
 800161c:	2900      	cmp	r1, #0
 800161e:	d137      	bne.n	8001690 <__ledf2+0xb8>
 8001620:	4332      	orrs	r2, r6
 8001622:	d038      	beq.n	8001696 <__ledf2+0xbe>
 8001624:	2c00      	cmp	r4, #0
 8001626:	d144      	bne.n	80016b2 <__ledf2+0xda>
 8001628:	2800      	cmp	r0, #0
 800162a:	d119      	bne.n	8001660 <__ledf2+0x88>
 800162c:	2001      	movs	r0, #1
 800162e:	4240      	negs	r0, r0
 8001630:	e016      	b.n	8001660 <__ledf2+0x88>
 8001632:	4316      	orrs	r6, r2
 8001634:	d113      	bne.n	800165e <__ledf2+0x86>
 8001636:	2900      	cmp	r1, #0
 8001638:	d102      	bne.n	8001640 <__ledf2+0x68>
 800163a:	9f01      	ldr	r7, [sp, #4]
 800163c:	4327      	orrs	r7, r4
 800163e:	d0f3      	beq.n	8001628 <__ledf2+0x50>
 8001640:	4584      	cmp	ip, r0
 8001642:	d020      	beq.n	8001686 <__ledf2+0xae>
 8001644:	4663      	mov	r3, ip
 8001646:	2002      	movs	r0, #2
 8001648:	3b01      	subs	r3, #1
 800164a:	4018      	ands	r0, r3
 800164c:	3801      	subs	r0, #1
 800164e:	e007      	b.n	8001660 <__ledf2+0x88>
 8001650:	9f01      	ldr	r7, [sp, #4]
 8001652:	4327      	orrs	r7, r4
 8001654:	d103      	bne.n	800165e <__ledf2+0x86>
 8001656:	458a      	cmp	sl, r1
 8001658:	d1f4      	bne.n	8001644 <__ledf2+0x6c>
 800165a:	4316      	orrs	r6, r2
 800165c:	d01f      	beq.n	800169e <__ledf2+0xc6>
 800165e:	2002      	movs	r0, #2
 8001660:	b003      	add	sp, #12
 8001662:	bcf0      	pop	{r4, r5, r6, r7}
 8001664:	46bb      	mov	fp, r7
 8001666:	46b2      	mov	sl, r6
 8001668:	46a9      	mov	r9, r5
 800166a:	46a0      	mov	r8, r4
 800166c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800166e:	4654      	mov	r4, sl
 8001670:	2c00      	cmp	r4, #0
 8001672:	d0e7      	beq.n	8001644 <__ledf2+0x6c>
 8001674:	4584      	cmp	ip, r0
 8001676:	d1e5      	bne.n	8001644 <__ledf2+0x6c>
 8001678:	4551      	cmp	r1, sl
 800167a:	dce3      	bgt.n	8001644 <__ledf2+0x6c>
 800167c:	db03      	blt.n	8001686 <__ledf2+0xae>
 800167e:	9b01      	ldr	r3, [sp, #4]
 8001680:	42b3      	cmp	r3, r6
 8001682:	d8df      	bhi.n	8001644 <__ledf2+0x6c>
 8001684:	d00f      	beq.n	80016a6 <__ledf2+0xce>
 8001686:	4663      	mov	r3, ip
 8001688:	2b00      	cmp	r3, #0
 800168a:	d0cf      	beq.n	800162c <__ledf2+0x54>
 800168c:	4660      	mov	r0, ip
 800168e:	e7e7      	b.n	8001660 <__ledf2+0x88>
 8001690:	2c00      	cmp	r4, #0
 8001692:	d0c9      	beq.n	8001628 <__ledf2+0x50>
 8001694:	e7d4      	b.n	8001640 <__ledf2+0x68>
 8001696:	2000      	movs	r0, #0
 8001698:	2c00      	cmp	r4, #0
 800169a:	d0e1      	beq.n	8001660 <__ledf2+0x88>
 800169c:	e7d2      	b.n	8001644 <__ledf2+0x6c>
 800169e:	4584      	cmp	ip, r0
 80016a0:	d1d0      	bne.n	8001644 <__ledf2+0x6c>
 80016a2:	2000      	movs	r0, #0
 80016a4:	e7dc      	b.n	8001660 <__ledf2+0x88>
 80016a6:	45c8      	cmp	r8, r9
 80016a8:	d8cc      	bhi.n	8001644 <__ledf2+0x6c>
 80016aa:	2000      	movs	r0, #0
 80016ac:	45c8      	cmp	r8, r9
 80016ae:	d2d7      	bcs.n	8001660 <__ledf2+0x88>
 80016b0:	e7e9      	b.n	8001686 <__ledf2+0xae>
 80016b2:	4584      	cmp	ip, r0
 80016b4:	d0e3      	beq.n	800167e <__ledf2+0xa6>
 80016b6:	e7c5      	b.n	8001644 <__ledf2+0x6c>
 80016b8:	000007ff 	.word	0x000007ff

080016bc <__aeabi_dmul>:
 80016bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80016be:	4657      	mov	r7, sl
 80016c0:	46de      	mov	lr, fp
 80016c2:	464e      	mov	r6, r9
 80016c4:	4645      	mov	r5, r8
 80016c6:	b5e0      	push	{r5, r6, r7, lr}
 80016c8:	001f      	movs	r7, r3
 80016ca:	030b      	lsls	r3, r1, #12
 80016cc:	0b1b      	lsrs	r3, r3, #12
 80016ce:	0016      	movs	r6, r2
 80016d0:	469a      	mov	sl, r3
 80016d2:	0fca      	lsrs	r2, r1, #31
 80016d4:	004b      	lsls	r3, r1, #1
 80016d6:	0004      	movs	r4, r0
 80016d8:	4693      	mov	fp, r2
 80016da:	b087      	sub	sp, #28
 80016dc:	0d5b      	lsrs	r3, r3, #21
 80016de:	d100      	bne.n	80016e2 <__aeabi_dmul+0x26>
 80016e0:	e0d5      	b.n	800188e <__aeabi_dmul+0x1d2>
 80016e2:	4abb      	ldr	r2, [pc, #748]	@ (80019d0 <__aeabi_dmul+0x314>)
 80016e4:	4293      	cmp	r3, r2
 80016e6:	d100      	bne.n	80016ea <__aeabi_dmul+0x2e>
 80016e8:	e0f8      	b.n	80018dc <__aeabi_dmul+0x220>
 80016ea:	4651      	mov	r1, sl
 80016ec:	0f42      	lsrs	r2, r0, #29
 80016ee:	00c9      	lsls	r1, r1, #3
 80016f0:	430a      	orrs	r2, r1
 80016f2:	2180      	movs	r1, #128	@ 0x80
 80016f4:	0409      	lsls	r1, r1, #16
 80016f6:	4311      	orrs	r1, r2
 80016f8:	00c2      	lsls	r2, r0, #3
 80016fa:	4691      	mov	r9, r2
 80016fc:	4ab5      	ldr	r2, [pc, #724]	@ (80019d4 <__aeabi_dmul+0x318>)
 80016fe:	468a      	mov	sl, r1
 8001700:	189d      	adds	r5, r3, r2
 8001702:	2300      	movs	r3, #0
 8001704:	4698      	mov	r8, r3
 8001706:	9302      	str	r3, [sp, #8]
 8001708:	033c      	lsls	r4, r7, #12
 800170a:	007b      	lsls	r3, r7, #1
 800170c:	0ffa      	lsrs	r2, r7, #31
 800170e:	0030      	movs	r0, r6
 8001710:	0b24      	lsrs	r4, r4, #12
 8001712:	0d5b      	lsrs	r3, r3, #21
 8001714:	9200      	str	r2, [sp, #0]
 8001716:	d100      	bne.n	800171a <__aeabi_dmul+0x5e>
 8001718:	e096      	b.n	8001848 <__aeabi_dmul+0x18c>
 800171a:	4aad      	ldr	r2, [pc, #692]	@ (80019d0 <__aeabi_dmul+0x314>)
 800171c:	4293      	cmp	r3, r2
 800171e:	d031      	beq.n	8001784 <__aeabi_dmul+0xc8>
 8001720:	0f72      	lsrs	r2, r6, #29
 8001722:	00e4      	lsls	r4, r4, #3
 8001724:	4322      	orrs	r2, r4
 8001726:	2480      	movs	r4, #128	@ 0x80
 8001728:	0424      	lsls	r4, r4, #16
 800172a:	4314      	orrs	r4, r2
 800172c:	4aa9      	ldr	r2, [pc, #676]	@ (80019d4 <__aeabi_dmul+0x318>)
 800172e:	00f0      	lsls	r0, r6, #3
 8001730:	4694      	mov	ip, r2
 8001732:	4463      	add	r3, ip
 8001734:	195b      	adds	r3, r3, r5
 8001736:	1c5a      	adds	r2, r3, #1
 8001738:	9201      	str	r2, [sp, #4]
 800173a:	4642      	mov	r2, r8
 800173c:	2600      	movs	r6, #0
 800173e:	2a0a      	cmp	r2, #10
 8001740:	dc42      	bgt.n	80017c8 <__aeabi_dmul+0x10c>
 8001742:	465a      	mov	r2, fp
 8001744:	9900      	ldr	r1, [sp, #0]
 8001746:	404a      	eors	r2, r1
 8001748:	4693      	mov	fp, r2
 800174a:	4642      	mov	r2, r8
 800174c:	2a02      	cmp	r2, #2
 800174e:	dc32      	bgt.n	80017b6 <__aeabi_dmul+0xfa>
 8001750:	3a01      	subs	r2, #1
 8001752:	2a01      	cmp	r2, #1
 8001754:	d900      	bls.n	8001758 <__aeabi_dmul+0x9c>
 8001756:	e149      	b.n	80019ec <__aeabi_dmul+0x330>
 8001758:	2e02      	cmp	r6, #2
 800175a:	d100      	bne.n	800175e <__aeabi_dmul+0xa2>
 800175c:	e0ca      	b.n	80018f4 <__aeabi_dmul+0x238>
 800175e:	2e01      	cmp	r6, #1
 8001760:	d13d      	bne.n	80017de <__aeabi_dmul+0x122>
 8001762:	2300      	movs	r3, #0
 8001764:	2400      	movs	r4, #0
 8001766:	2200      	movs	r2, #0
 8001768:	0010      	movs	r0, r2
 800176a:	465a      	mov	r2, fp
 800176c:	051b      	lsls	r3, r3, #20
 800176e:	4323      	orrs	r3, r4
 8001770:	07d2      	lsls	r2, r2, #31
 8001772:	4313      	orrs	r3, r2
 8001774:	0019      	movs	r1, r3
 8001776:	b007      	add	sp, #28
 8001778:	bcf0      	pop	{r4, r5, r6, r7}
 800177a:	46bb      	mov	fp, r7
 800177c:	46b2      	mov	sl, r6
 800177e:	46a9      	mov	r9, r5
 8001780:	46a0      	mov	r8, r4
 8001782:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001784:	4b92      	ldr	r3, [pc, #584]	@ (80019d0 <__aeabi_dmul+0x314>)
 8001786:	4326      	orrs	r6, r4
 8001788:	18eb      	adds	r3, r5, r3
 800178a:	2e00      	cmp	r6, #0
 800178c:	d100      	bne.n	8001790 <__aeabi_dmul+0xd4>
 800178e:	e0bb      	b.n	8001908 <__aeabi_dmul+0x24c>
 8001790:	2203      	movs	r2, #3
 8001792:	4641      	mov	r1, r8
 8001794:	4311      	orrs	r1, r2
 8001796:	465a      	mov	r2, fp
 8001798:	4688      	mov	r8, r1
 800179a:	9900      	ldr	r1, [sp, #0]
 800179c:	404a      	eors	r2, r1
 800179e:	2180      	movs	r1, #128	@ 0x80
 80017a0:	0109      	lsls	r1, r1, #4
 80017a2:	468c      	mov	ip, r1
 80017a4:	0029      	movs	r1, r5
 80017a6:	4461      	add	r1, ip
 80017a8:	9101      	str	r1, [sp, #4]
 80017aa:	4641      	mov	r1, r8
 80017ac:	290a      	cmp	r1, #10
 80017ae:	dd00      	ble.n	80017b2 <__aeabi_dmul+0xf6>
 80017b0:	e233      	b.n	8001c1a <__aeabi_dmul+0x55e>
 80017b2:	4693      	mov	fp, r2
 80017b4:	2603      	movs	r6, #3
 80017b6:	4642      	mov	r2, r8
 80017b8:	2701      	movs	r7, #1
 80017ba:	4097      	lsls	r7, r2
 80017bc:	21a6      	movs	r1, #166	@ 0xa6
 80017be:	003a      	movs	r2, r7
 80017c0:	00c9      	lsls	r1, r1, #3
 80017c2:	400a      	ands	r2, r1
 80017c4:	420f      	tst	r7, r1
 80017c6:	d031      	beq.n	800182c <__aeabi_dmul+0x170>
 80017c8:	9e02      	ldr	r6, [sp, #8]
 80017ca:	2e02      	cmp	r6, #2
 80017cc:	d100      	bne.n	80017d0 <__aeabi_dmul+0x114>
 80017ce:	e235      	b.n	8001c3c <__aeabi_dmul+0x580>
 80017d0:	2e03      	cmp	r6, #3
 80017d2:	d100      	bne.n	80017d6 <__aeabi_dmul+0x11a>
 80017d4:	e1d2      	b.n	8001b7c <__aeabi_dmul+0x4c0>
 80017d6:	4654      	mov	r4, sl
 80017d8:	4648      	mov	r0, r9
 80017da:	2e01      	cmp	r6, #1
 80017dc:	d0c1      	beq.n	8001762 <__aeabi_dmul+0xa6>
 80017de:	9a01      	ldr	r2, [sp, #4]
 80017e0:	4b7d      	ldr	r3, [pc, #500]	@ (80019d8 <__aeabi_dmul+0x31c>)
 80017e2:	4694      	mov	ip, r2
 80017e4:	4463      	add	r3, ip
 80017e6:	2b00      	cmp	r3, #0
 80017e8:	dc00      	bgt.n	80017ec <__aeabi_dmul+0x130>
 80017ea:	e0c0      	b.n	800196e <__aeabi_dmul+0x2b2>
 80017ec:	0742      	lsls	r2, r0, #29
 80017ee:	d009      	beq.n	8001804 <__aeabi_dmul+0x148>
 80017f0:	220f      	movs	r2, #15
 80017f2:	4002      	ands	r2, r0
 80017f4:	2a04      	cmp	r2, #4
 80017f6:	d005      	beq.n	8001804 <__aeabi_dmul+0x148>
 80017f8:	1d02      	adds	r2, r0, #4
 80017fa:	4282      	cmp	r2, r0
 80017fc:	4180      	sbcs	r0, r0
 80017fe:	4240      	negs	r0, r0
 8001800:	1824      	adds	r4, r4, r0
 8001802:	0010      	movs	r0, r2
 8001804:	01e2      	lsls	r2, r4, #7
 8001806:	d506      	bpl.n	8001816 <__aeabi_dmul+0x15a>
 8001808:	4b74      	ldr	r3, [pc, #464]	@ (80019dc <__aeabi_dmul+0x320>)
 800180a:	9a01      	ldr	r2, [sp, #4]
 800180c:	401c      	ands	r4, r3
 800180e:	2380      	movs	r3, #128	@ 0x80
 8001810:	4694      	mov	ip, r2
 8001812:	00db      	lsls	r3, r3, #3
 8001814:	4463      	add	r3, ip
 8001816:	4a72      	ldr	r2, [pc, #456]	@ (80019e0 <__aeabi_dmul+0x324>)
 8001818:	4293      	cmp	r3, r2
 800181a:	dc6b      	bgt.n	80018f4 <__aeabi_dmul+0x238>
 800181c:	0762      	lsls	r2, r4, #29
 800181e:	08c0      	lsrs	r0, r0, #3
 8001820:	0264      	lsls	r4, r4, #9
 8001822:	055b      	lsls	r3, r3, #21
 8001824:	4302      	orrs	r2, r0
 8001826:	0b24      	lsrs	r4, r4, #12
 8001828:	0d5b      	lsrs	r3, r3, #21
 800182a:	e79d      	b.n	8001768 <__aeabi_dmul+0xac>
 800182c:	2190      	movs	r1, #144	@ 0x90
 800182e:	0089      	lsls	r1, r1, #2
 8001830:	420f      	tst	r7, r1
 8001832:	d163      	bne.n	80018fc <__aeabi_dmul+0x240>
 8001834:	2288      	movs	r2, #136	@ 0x88
 8001836:	423a      	tst	r2, r7
 8001838:	d100      	bne.n	800183c <__aeabi_dmul+0x180>
 800183a:	e0d7      	b.n	80019ec <__aeabi_dmul+0x330>
 800183c:	9b00      	ldr	r3, [sp, #0]
 800183e:	46a2      	mov	sl, r4
 8001840:	469b      	mov	fp, r3
 8001842:	4681      	mov	r9, r0
 8001844:	9602      	str	r6, [sp, #8]
 8001846:	e7bf      	b.n	80017c8 <__aeabi_dmul+0x10c>
 8001848:	0023      	movs	r3, r4
 800184a:	4333      	orrs	r3, r6
 800184c:	d100      	bne.n	8001850 <__aeabi_dmul+0x194>
 800184e:	e07f      	b.n	8001950 <__aeabi_dmul+0x294>
 8001850:	2c00      	cmp	r4, #0
 8001852:	d100      	bne.n	8001856 <__aeabi_dmul+0x19a>
 8001854:	e1ad      	b.n	8001bb2 <__aeabi_dmul+0x4f6>
 8001856:	0020      	movs	r0, r4
 8001858:	f000 ff10 	bl	800267c <__clzsi2>
 800185c:	0002      	movs	r2, r0
 800185e:	0003      	movs	r3, r0
 8001860:	3a0b      	subs	r2, #11
 8001862:	201d      	movs	r0, #29
 8001864:	0019      	movs	r1, r3
 8001866:	1a82      	subs	r2, r0, r2
 8001868:	0030      	movs	r0, r6
 800186a:	3908      	subs	r1, #8
 800186c:	40d0      	lsrs	r0, r2
 800186e:	408c      	lsls	r4, r1
 8001870:	4304      	orrs	r4, r0
 8001872:	0030      	movs	r0, r6
 8001874:	4088      	lsls	r0, r1
 8001876:	4a5b      	ldr	r2, [pc, #364]	@ (80019e4 <__aeabi_dmul+0x328>)
 8001878:	1aeb      	subs	r3, r5, r3
 800187a:	4694      	mov	ip, r2
 800187c:	4463      	add	r3, ip
 800187e:	1c5a      	adds	r2, r3, #1
 8001880:	9201      	str	r2, [sp, #4]
 8001882:	4642      	mov	r2, r8
 8001884:	2600      	movs	r6, #0
 8001886:	2a0a      	cmp	r2, #10
 8001888:	dc00      	bgt.n	800188c <__aeabi_dmul+0x1d0>
 800188a:	e75a      	b.n	8001742 <__aeabi_dmul+0x86>
 800188c:	e79c      	b.n	80017c8 <__aeabi_dmul+0x10c>
 800188e:	4653      	mov	r3, sl
 8001890:	4303      	orrs	r3, r0
 8001892:	4699      	mov	r9, r3
 8001894:	d054      	beq.n	8001940 <__aeabi_dmul+0x284>
 8001896:	4653      	mov	r3, sl
 8001898:	2b00      	cmp	r3, #0
 800189a:	d100      	bne.n	800189e <__aeabi_dmul+0x1e2>
 800189c:	e177      	b.n	8001b8e <__aeabi_dmul+0x4d2>
 800189e:	4650      	mov	r0, sl
 80018a0:	f000 feec 	bl	800267c <__clzsi2>
 80018a4:	230b      	movs	r3, #11
 80018a6:	425b      	negs	r3, r3
 80018a8:	469c      	mov	ip, r3
 80018aa:	0002      	movs	r2, r0
 80018ac:	4484      	add	ip, r0
 80018ae:	0011      	movs	r1, r2
 80018b0:	4650      	mov	r0, sl
 80018b2:	3908      	subs	r1, #8
 80018b4:	4088      	lsls	r0, r1
 80018b6:	231d      	movs	r3, #29
 80018b8:	4680      	mov	r8, r0
 80018ba:	4660      	mov	r0, ip
 80018bc:	1a1b      	subs	r3, r3, r0
 80018be:	0020      	movs	r0, r4
 80018c0:	40d8      	lsrs	r0, r3
 80018c2:	0003      	movs	r3, r0
 80018c4:	4640      	mov	r0, r8
 80018c6:	4303      	orrs	r3, r0
 80018c8:	469a      	mov	sl, r3
 80018ca:	0023      	movs	r3, r4
 80018cc:	408b      	lsls	r3, r1
 80018ce:	4699      	mov	r9, r3
 80018d0:	2300      	movs	r3, #0
 80018d2:	4d44      	ldr	r5, [pc, #272]	@ (80019e4 <__aeabi_dmul+0x328>)
 80018d4:	4698      	mov	r8, r3
 80018d6:	1aad      	subs	r5, r5, r2
 80018d8:	9302      	str	r3, [sp, #8]
 80018da:	e715      	b.n	8001708 <__aeabi_dmul+0x4c>
 80018dc:	4652      	mov	r2, sl
 80018de:	4302      	orrs	r2, r0
 80018e0:	4691      	mov	r9, r2
 80018e2:	d126      	bne.n	8001932 <__aeabi_dmul+0x276>
 80018e4:	2200      	movs	r2, #0
 80018e6:	001d      	movs	r5, r3
 80018e8:	2302      	movs	r3, #2
 80018ea:	4692      	mov	sl, r2
 80018ec:	3208      	adds	r2, #8
 80018ee:	4690      	mov	r8, r2
 80018f0:	9302      	str	r3, [sp, #8]
 80018f2:	e709      	b.n	8001708 <__aeabi_dmul+0x4c>
 80018f4:	2400      	movs	r4, #0
 80018f6:	2200      	movs	r2, #0
 80018f8:	4b35      	ldr	r3, [pc, #212]	@ (80019d0 <__aeabi_dmul+0x314>)
 80018fa:	e735      	b.n	8001768 <__aeabi_dmul+0xac>
 80018fc:	2300      	movs	r3, #0
 80018fe:	2480      	movs	r4, #128	@ 0x80
 8001900:	469b      	mov	fp, r3
 8001902:	0324      	lsls	r4, r4, #12
 8001904:	4b32      	ldr	r3, [pc, #200]	@ (80019d0 <__aeabi_dmul+0x314>)
 8001906:	e72f      	b.n	8001768 <__aeabi_dmul+0xac>
 8001908:	2202      	movs	r2, #2
 800190a:	4641      	mov	r1, r8
 800190c:	4311      	orrs	r1, r2
 800190e:	2280      	movs	r2, #128	@ 0x80
 8001910:	0112      	lsls	r2, r2, #4
 8001912:	4694      	mov	ip, r2
 8001914:	002a      	movs	r2, r5
 8001916:	4462      	add	r2, ip
 8001918:	4688      	mov	r8, r1
 800191a:	9201      	str	r2, [sp, #4]
 800191c:	290a      	cmp	r1, #10
 800191e:	dd00      	ble.n	8001922 <__aeabi_dmul+0x266>
 8001920:	e752      	b.n	80017c8 <__aeabi_dmul+0x10c>
 8001922:	465a      	mov	r2, fp
 8001924:	2000      	movs	r0, #0
 8001926:	9900      	ldr	r1, [sp, #0]
 8001928:	0004      	movs	r4, r0
 800192a:	404a      	eors	r2, r1
 800192c:	4693      	mov	fp, r2
 800192e:	2602      	movs	r6, #2
 8001930:	e70b      	b.n	800174a <__aeabi_dmul+0x8e>
 8001932:	220c      	movs	r2, #12
 8001934:	001d      	movs	r5, r3
 8001936:	2303      	movs	r3, #3
 8001938:	4681      	mov	r9, r0
 800193a:	4690      	mov	r8, r2
 800193c:	9302      	str	r3, [sp, #8]
 800193e:	e6e3      	b.n	8001708 <__aeabi_dmul+0x4c>
 8001940:	2300      	movs	r3, #0
 8001942:	469a      	mov	sl, r3
 8001944:	3304      	adds	r3, #4
 8001946:	4698      	mov	r8, r3
 8001948:	3b03      	subs	r3, #3
 800194a:	2500      	movs	r5, #0
 800194c:	9302      	str	r3, [sp, #8]
 800194e:	e6db      	b.n	8001708 <__aeabi_dmul+0x4c>
 8001950:	4642      	mov	r2, r8
 8001952:	3301      	adds	r3, #1
 8001954:	431a      	orrs	r2, r3
 8001956:	002b      	movs	r3, r5
 8001958:	4690      	mov	r8, r2
 800195a:	1c5a      	adds	r2, r3, #1
 800195c:	9201      	str	r2, [sp, #4]
 800195e:	4642      	mov	r2, r8
 8001960:	2400      	movs	r4, #0
 8001962:	2000      	movs	r0, #0
 8001964:	2601      	movs	r6, #1
 8001966:	2a0a      	cmp	r2, #10
 8001968:	dc00      	bgt.n	800196c <__aeabi_dmul+0x2b0>
 800196a:	e6ea      	b.n	8001742 <__aeabi_dmul+0x86>
 800196c:	e72c      	b.n	80017c8 <__aeabi_dmul+0x10c>
 800196e:	2201      	movs	r2, #1
 8001970:	1ad2      	subs	r2, r2, r3
 8001972:	2a38      	cmp	r2, #56	@ 0x38
 8001974:	dd00      	ble.n	8001978 <__aeabi_dmul+0x2bc>
 8001976:	e6f4      	b.n	8001762 <__aeabi_dmul+0xa6>
 8001978:	2a1f      	cmp	r2, #31
 800197a:	dc00      	bgt.n	800197e <__aeabi_dmul+0x2c2>
 800197c:	e12a      	b.n	8001bd4 <__aeabi_dmul+0x518>
 800197e:	211f      	movs	r1, #31
 8001980:	4249      	negs	r1, r1
 8001982:	1acb      	subs	r3, r1, r3
 8001984:	0021      	movs	r1, r4
 8001986:	40d9      	lsrs	r1, r3
 8001988:	000b      	movs	r3, r1
 800198a:	2a20      	cmp	r2, #32
 800198c:	d005      	beq.n	800199a <__aeabi_dmul+0x2de>
 800198e:	4a16      	ldr	r2, [pc, #88]	@ (80019e8 <__aeabi_dmul+0x32c>)
 8001990:	9d01      	ldr	r5, [sp, #4]
 8001992:	4694      	mov	ip, r2
 8001994:	4465      	add	r5, ip
 8001996:	40ac      	lsls	r4, r5
 8001998:	4320      	orrs	r0, r4
 800199a:	1e42      	subs	r2, r0, #1
 800199c:	4190      	sbcs	r0, r2
 800199e:	4318      	orrs	r0, r3
 80019a0:	2307      	movs	r3, #7
 80019a2:	0019      	movs	r1, r3
 80019a4:	2400      	movs	r4, #0
 80019a6:	4001      	ands	r1, r0
 80019a8:	4203      	tst	r3, r0
 80019aa:	d00c      	beq.n	80019c6 <__aeabi_dmul+0x30a>
 80019ac:	230f      	movs	r3, #15
 80019ae:	4003      	ands	r3, r0
 80019b0:	2b04      	cmp	r3, #4
 80019b2:	d100      	bne.n	80019b6 <__aeabi_dmul+0x2fa>
 80019b4:	e140      	b.n	8001c38 <__aeabi_dmul+0x57c>
 80019b6:	1d03      	adds	r3, r0, #4
 80019b8:	4283      	cmp	r3, r0
 80019ba:	41a4      	sbcs	r4, r4
 80019bc:	0018      	movs	r0, r3
 80019be:	4264      	negs	r4, r4
 80019c0:	0761      	lsls	r1, r4, #29
 80019c2:	0264      	lsls	r4, r4, #9
 80019c4:	0b24      	lsrs	r4, r4, #12
 80019c6:	08c2      	lsrs	r2, r0, #3
 80019c8:	2300      	movs	r3, #0
 80019ca:	430a      	orrs	r2, r1
 80019cc:	e6cc      	b.n	8001768 <__aeabi_dmul+0xac>
 80019ce:	46c0      	nop			@ (mov r8, r8)
 80019d0:	000007ff 	.word	0x000007ff
 80019d4:	fffffc01 	.word	0xfffffc01
 80019d8:	000003ff 	.word	0x000003ff
 80019dc:	feffffff 	.word	0xfeffffff
 80019e0:	000007fe 	.word	0x000007fe
 80019e4:	fffffc0d 	.word	0xfffffc0d
 80019e8:	0000043e 	.word	0x0000043e
 80019ec:	4649      	mov	r1, r9
 80019ee:	464a      	mov	r2, r9
 80019f0:	0409      	lsls	r1, r1, #16
 80019f2:	0c09      	lsrs	r1, r1, #16
 80019f4:	000d      	movs	r5, r1
 80019f6:	0c16      	lsrs	r6, r2, #16
 80019f8:	0c02      	lsrs	r2, r0, #16
 80019fa:	0400      	lsls	r0, r0, #16
 80019fc:	0c00      	lsrs	r0, r0, #16
 80019fe:	4345      	muls	r5, r0
 8001a00:	46ac      	mov	ip, r5
 8001a02:	0005      	movs	r5, r0
 8001a04:	4375      	muls	r5, r6
 8001a06:	46a8      	mov	r8, r5
 8001a08:	0015      	movs	r5, r2
 8001a0a:	000f      	movs	r7, r1
 8001a0c:	4375      	muls	r5, r6
 8001a0e:	9200      	str	r2, [sp, #0]
 8001a10:	9502      	str	r5, [sp, #8]
 8001a12:	002a      	movs	r2, r5
 8001a14:	9d00      	ldr	r5, [sp, #0]
 8001a16:	436f      	muls	r7, r5
 8001a18:	4665      	mov	r5, ip
 8001a1a:	0c2d      	lsrs	r5, r5, #16
 8001a1c:	46a9      	mov	r9, r5
 8001a1e:	4447      	add	r7, r8
 8001a20:	444f      	add	r7, r9
 8001a22:	45b8      	cmp	r8, r7
 8001a24:	d905      	bls.n	8001a32 <__aeabi_dmul+0x376>
 8001a26:	0015      	movs	r5, r2
 8001a28:	2280      	movs	r2, #128	@ 0x80
 8001a2a:	0252      	lsls	r2, r2, #9
 8001a2c:	4690      	mov	r8, r2
 8001a2e:	4445      	add	r5, r8
 8001a30:	9502      	str	r5, [sp, #8]
 8001a32:	0c3d      	lsrs	r5, r7, #16
 8001a34:	9503      	str	r5, [sp, #12]
 8001a36:	4665      	mov	r5, ip
 8001a38:	042d      	lsls	r5, r5, #16
 8001a3a:	043f      	lsls	r7, r7, #16
 8001a3c:	0c2d      	lsrs	r5, r5, #16
 8001a3e:	46ac      	mov	ip, r5
 8001a40:	003d      	movs	r5, r7
 8001a42:	4465      	add	r5, ip
 8001a44:	9504      	str	r5, [sp, #16]
 8001a46:	0c25      	lsrs	r5, r4, #16
 8001a48:	0424      	lsls	r4, r4, #16
 8001a4a:	0c24      	lsrs	r4, r4, #16
 8001a4c:	46ac      	mov	ip, r5
 8001a4e:	0025      	movs	r5, r4
 8001a50:	4375      	muls	r5, r6
 8001a52:	46a8      	mov	r8, r5
 8001a54:	4665      	mov	r5, ip
 8001a56:	000f      	movs	r7, r1
 8001a58:	4369      	muls	r1, r5
 8001a5a:	4441      	add	r1, r8
 8001a5c:	4689      	mov	r9, r1
 8001a5e:	4367      	muls	r7, r4
 8001a60:	0c39      	lsrs	r1, r7, #16
 8001a62:	4449      	add	r1, r9
 8001a64:	436e      	muls	r6, r5
 8001a66:	4588      	cmp	r8, r1
 8001a68:	d903      	bls.n	8001a72 <__aeabi_dmul+0x3b6>
 8001a6a:	2280      	movs	r2, #128	@ 0x80
 8001a6c:	0252      	lsls	r2, r2, #9
 8001a6e:	4690      	mov	r8, r2
 8001a70:	4446      	add	r6, r8
 8001a72:	0c0d      	lsrs	r5, r1, #16
 8001a74:	46a8      	mov	r8, r5
 8001a76:	0035      	movs	r5, r6
 8001a78:	4445      	add	r5, r8
 8001a7a:	9505      	str	r5, [sp, #20]
 8001a7c:	9d03      	ldr	r5, [sp, #12]
 8001a7e:	043f      	lsls	r7, r7, #16
 8001a80:	46a8      	mov	r8, r5
 8001a82:	0c3f      	lsrs	r7, r7, #16
 8001a84:	0409      	lsls	r1, r1, #16
 8001a86:	19c9      	adds	r1, r1, r7
 8001a88:	4488      	add	r8, r1
 8001a8a:	4645      	mov	r5, r8
 8001a8c:	9503      	str	r5, [sp, #12]
 8001a8e:	4655      	mov	r5, sl
 8001a90:	042e      	lsls	r6, r5, #16
 8001a92:	0c36      	lsrs	r6, r6, #16
 8001a94:	0c2f      	lsrs	r7, r5, #16
 8001a96:	0035      	movs	r5, r6
 8001a98:	4345      	muls	r5, r0
 8001a9a:	4378      	muls	r0, r7
 8001a9c:	4681      	mov	r9, r0
 8001a9e:	0038      	movs	r0, r7
 8001aa0:	46a8      	mov	r8, r5
 8001aa2:	0c2d      	lsrs	r5, r5, #16
 8001aa4:	46aa      	mov	sl, r5
 8001aa6:	9a00      	ldr	r2, [sp, #0]
 8001aa8:	4350      	muls	r0, r2
 8001aaa:	4372      	muls	r2, r6
 8001aac:	444a      	add	r2, r9
 8001aae:	4452      	add	r2, sl
 8001ab0:	4591      	cmp	r9, r2
 8001ab2:	d903      	bls.n	8001abc <__aeabi_dmul+0x400>
 8001ab4:	2580      	movs	r5, #128	@ 0x80
 8001ab6:	026d      	lsls	r5, r5, #9
 8001ab8:	46a9      	mov	r9, r5
 8001aba:	4448      	add	r0, r9
 8001abc:	0c15      	lsrs	r5, r2, #16
 8001abe:	46a9      	mov	r9, r5
 8001ac0:	4645      	mov	r5, r8
 8001ac2:	042d      	lsls	r5, r5, #16
 8001ac4:	0c2d      	lsrs	r5, r5, #16
 8001ac6:	46a8      	mov	r8, r5
 8001ac8:	4665      	mov	r5, ip
 8001aca:	437d      	muls	r5, r7
 8001acc:	0412      	lsls	r2, r2, #16
 8001ace:	4448      	add	r0, r9
 8001ad0:	4490      	add	r8, r2
 8001ad2:	46a9      	mov	r9, r5
 8001ad4:	0032      	movs	r2, r6
 8001ad6:	4665      	mov	r5, ip
 8001ad8:	4362      	muls	r2, r4
 8001ada:	436e      	muls	r6, r5
 8001adc:	437c      	muls	r4, r7
 8001ade:	0c17      	lsrs	r7, r2, #16
 8001ae0:	1936      	adds	r6, r6, r4
 8001ae2:	19bf      	adds	r7, r7, r6
 8001ae4:	42bc      	cmp	r4, r7
 8001ae6:	d903      	bls.n	8001af0 <__aeabi_dmul+0x434>
 8001ae8:	2480      	movs	r4, #128	@ 0x80
 8001aea:	0264      	lsls	r4, r4, #9
 8001aec:	46a4      	mov	ip, r4
 8001aee:	44e1      	add	r9, ip
 8001af0:	9c02      	ldr	r4, [sp, #8]
 8001af2:	9e03      	ldr	r6, [sp, #12]
 8001af4:	46a4      	mov	ip, r4
 8001af6:	9d05      	ldr	r5, [sp, #20]
 8001af8:	4466      	add	r6, ip
 8001afa:	428e      	cmp	r6, r1
 8001afc:	4189      	sbcs	r1, r1
 8001afe:	46ac      	mov	ip, r5
 8001b00:	0412      	lsls	r2, r2, #16
 8001b02:	043c      	lsls	r4, r7, #16
 8001b04:	0c12      	lsrs	r2, r2, #16
 8001b06:	18a2      	adds	r2, r4, r2
 8001b08:	4462      	add	r2, ip
 8001b0a:	4249      	negs	r1, r1
 8001b0c:	1854      	adds	r4, r2, r1
 8001b0e:	4446      	add	r6, r8
 8001b10:	46a4      	mov	ip, r4
 8001b12:	4546      	cmp	r6, r8
 8001b14:	41a4      	sbcs	r4, r4
 8001b16:	4682      	mov	sl, r0
 8001b18:	4264      	negs	r4, r4
 8001b1a:	46a0      	mov	r8, r4
 8001b1c:	42aa      	cmp	r2, r5
 8001b1e:	4192      	sbcs	r2, r2
 8001b20:	458c      	cmp	ip, r1
 8001b22:	4189      	sbcs	r1, r1
 8001b24:	44e2      	add	sl, ip
 8001b26:	44d0      	add	r8, sl
 8001b28:	4249      	negs	r1, r1
 8001b2a:	4252      	negs	r2, r2
 8001b2c:	430a      	orrs	r2, r1
 8001b2e:	45a0      	cmp	r8, r4
 8001b30:	41a4      	sbcs	r4, r4
 8001b32:	4582      	cmp	sl, r0
 8001b34:	4189      	sbcs	r1, r1
 8001b36:	4264      	negs	r4, r4
 8001b38:	4249      	negs	r1, r1
 8001b3a:	430c      	orrs	r4, r1
 8001b3c:	4641      	mov	r1, r8
 8001b3e:	0c3f      	lsrs	r7, r7, #16
 8001b40:	19d2      	adds	r2, r2, r7
 8001b42:	1912      	adds	r2, r2, r4
 8001b44:	0dcc      	lsrs	r4, r1, #23
 8001b46:	9904      	ldr	r1, [sp, #16]
 8001b48:	0270      	lsls	r0, r6, #9
 8001b4a:	4308      	orrs	r0, r1
 8001b4c:	1e41      	subs	r1, r0, #1
 8001b4e:	4188      	sbcs	r0, r1
 8001b50:	4641      	mov	r1, r8
 8001b52:	444a      	add	r2, r9
 8001b54:	0df6      	lsrs	r6, r6, #23
 8001b56:	0252      	lsls	r2, r2, #9
 8001b58:	4330      	orrs	r0, r6
 8001b5a:	0249      	lsls	r1, r1, #9
 8001b5c:	4314      	orrs	r4, r2
 8001b5e:	4308      	orrs	r0, r1
 8001b60:	01d2      	lsls	r2, r2, #7
 8001b62:	d535      	bpl.n	8001bd0 <__aeabi_dmul+0x514>
 8001b64:	2201      	movs	r2, #1
 8001b66:	0843      	lsrs	r3, r0, #1
 8001b68:	4002      	ands	r2, r0
 8001b6a:	4313      	orrs	r3, r2
 8001b6c:	07e0      	lsls	r0, r4, #31
 8001b6e:	4318      	orrs	r0, r3
 8001b70:	0864      	lsrs	r4, r4, #1
 8001b72:	e634      	b.n	80017de <__aeabi_dmul+0x122>
 8001b74:	9b00      	ldr	r3, [sp, #0]
 8001b76:	46a2      	mov	sl, r4
 8001b78:	469b      	mov	fp, r3
 8001b7a:	4681      	mov	r9, r0
 8001b7c:	2480      	movs	r4, #128	@ 0x80
 8001b7e:	4653      	mov	r3, sl
 8001b80:	0324      	lsls	r4, r4, #12
 8001b82:	431c      	orrs	r4, r3
 8001b84:	0324      	lsls	r4, r4, #12
 8001b86:	464a      	mov	r2, r9
 8001b88:	4b2e      	ldr	r3, [pc, #184]	@ (8001c44 <__aeabi_dmul+0x588>)
 8001b8a:	0b24      	lsrs	r4, r4, #12
 8001b8c:	e5ec      	b.n	8001768 <__aeabi_dmul+0xac>
 8001b8e:	f000 fd75 	bl	800267c <__clzsi2>
 8001b92:	2315      	movs	r3, #21
 8001b94:	469c      	mov	ip, r3
 8001b96:	4484      	add	ip, r0
 8001b98:	0002      	movs	r2, r0
 8001b9a:	4663      	mov	r3, ip
 8001b9c:	3220      	adds	r2, #32
 8001b9e:	2b1c      	cmp	r3, #28
 8001ba0:	dc00      	bgt.n	8001ba4 <__aeabi_dmul+0x4e8>
 8001ba2:	e684      	b.n	80018ae <__aeabi_dmul+0x1f2>
 8001ba4:	2300      	movs	r3, #0
 8001ba6:	4699      	mov	r9, r3
 8001ba8:	0023      	movs	r3, r4
 8001baa:	3808      	subs	r0, #8
 8001bac:	4083      	lsls	r3, r0
 8001bae:	469a      	mov	sl, r3
 8001bb0:	e68e      	b.n	80018d0 <__aeabi_dmul+0x214>
 8001bb2:	f000 fd63 	bl	800267c <__clzsi2>
 8001bb6:	0002      	movs	r2, r0
 8001bb8:	0003      	movs	r3, r0
 8001bba:	3215      	adds	r2, #21
 8001bbc:	3320      	adds	r3, #32
 8001bbe:	2a1c      	cmp	r2, #28
 8001bc0:	dc00      	bgt.n	8001bc4 <__aeabi_dmul+0x508>
 8001bc2:	e64e      	b.n	8001862 <__aeabi_dmul+0x1a6>
 8001bc4:	0002      	movs	r2, r0
 8001bc6:	0034      	movs	r4, r6
 8001bc8:	3a08      	subs	r2, #8
 8001bca:	2000      	movs	r0, #0
 8001bcc:	4094      	lsls	r4, r2
 8001bce:	e652      	b.n	8001876 <__aeabi_dmul+0x1ba>
 8001bd0:	9301      	str	r3, [sp, #4]
 8001bd2:	e604      	b.n	80017de <__aeabi_dmul+0x122>
 8001bd4:	4b1c      	ldr	r3, [pc, #112]	@ (8001c48 <__aeabi_dmul+0x58c>)
 8001bd6:	0021      	movs	r1, r4
 8001bd8:	469c      	mov	ip, r3
 8001bda:	0003      	movs	r3, r0
 8001bdc:	9d01      	ldr	r5, [sp, #4]
 8001bde:	40d3      	lsrs	r3, r2
 8001be0:	4465      	add	r5, ip
 8001be2:	40a9      	lsls	r1, r5
 8001be4:	4319      	orrs	r1, r3
 8001be6:	0003      	movs	r3, r0
 8001be8:	40ab      	lsls	r3, r5
 8001bea:	1e58      	subs	r0, r3, #1
 8001bec:	4183      	sbcs	r3, r0
 8001bee:	4319      	orrs	r1, r3
 8001bf0:	0008      	movs	r0, r1
 8001bf2:	40d4      	lsrs	r4, r2
 8001bf4:	074b      	lsls	r3, r1, #29
 8001bf6:	d009      	beq.n	8001c0c <__aeabi_dmul+0x550>
 8001bf8:	230f      	movs	r3, #15
 8001bfa:	400b      	ands	r3, r1
 8001bfc:	2b04      	cmp	r3, #4
 8001bfe:	d005      	beq.n	8001c0c <__aeabi_dmul+0x550>
 8001c00:	1d0b      	adds	r3, r1, #4
 8001c02:	428b      	cmp	r3, r1
 8001c04:	4180      	sbcs	r0, r0
 8001c06:	4240      	negs	r0, r0
 8001c08:	1824      	adds	r4, r4, r0
 8001c0a:	0018      	movs	r0, r3
 8001c0c:	0223      	lsls	r3, r4, #8
 8001c0e:	d400      	bmi.n	8001c12 <__aeabi_dmul+0x556>
 8001c10:	e6d6      	b.n	80019c0 <__aeabi_dmul+0x304>
 8001c12:	2301      	movs	r3, #1
 8001c14:	2400      	movs	r4, #0
 8001c16:	2200      	movs	r2, #0
 8001c18:	e5a6      	b.n	8001768 <__aeabi_dmul+0xac>
 8001c1a:	290f      	cmp	r1, #15
 8001c1c:	d1aa      	bne.n	8001b74 <__aeabi_dmul+0x4b8>
 8001c1e:	2380      	movs	r3, #128	@ 0x80
 8001c20:	4652      	mov	r2, sl
 8001c22:	031b      	lsls	r3, r3, #12
 8001c24:	421a      	tst	r2, r3
 8001c26:	d0a9      	beq.n	8001b7c <__aeabi_dmul+0x4c0>
 8001c28:	421c      	tst	r4, r3
 8001c2a:	d1a7      	bne.n	8001b7c <__aeabi_dmul+0x4c0>
 8001c2c:	431c      	orrs	r4, r3
 8001c2e:	9b00      	ldr	r3, [sp, #0]
 8001c30:	0002      	movs	r2, r0
 8001c32:	469b      	mov	fp, r3
 8001c34:	4b03      	ldr	r3, [pc, #12]	@ (8001c44 <__aeabi_dmul+0x588>)
 8001c36:	e597      	b.n	8001768 <__aeabi_dmul+0xac>
 8001c38:	2400      	movs	r4, #0
 8001c3a:	e6c1      	b.n	80019c0 <__aeabi_dmul+0x304>
 8001c3c:	2400      	movs	r4, #0
 8001c3e:	4b01      	ldr	r3, [pc, #4]	@ (8001c44 <__aeabi_dmul+0x588>)
 8001c40:	0022      	movs	r2, r4
 8001c42:	e591      	b.n	8001768 <__aeabi_dmul+0xac>
 8001c44:	000007ff 	.word	0x000007ff
 8001c48:	0000041e 	.word	0x0000041e

08001c4c <__aeabi_dsub>:
 8001c4c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001c4e:	464e      	mov	r6, r9
 8001c50:	4645      	mov	r5, r8
 8001c52:	46de      	mov	lr, fp
 8001c54:	4657      	mov	r7, sl
 8001c56:	b5e0      	push	{r5, r6, r7, lr}
 8001c58:	b085      	sub	sp, #20
 8001c5a:	9000      	str	r0, [sp, #0]
 8001c5c:	9101      	str	r1, [sp, #4]
 8001c5e:	030c      	lsls	r4, r1, #12
 8001c60:	004f      	lsls	r7, r1, #1
 8001c62:	0fce      	lsrs	r6, r1, #31
 8001c64:	0a61      	lsrs	r1, r4, #9
 8001c66:	9c00      	ldr	r4, [sp, #0]
 8001c68:	46b0      	mov	r8, r6
 8001c6a:	0f64      	lsrs	r4, r4, #29
 8001c6c:	430c      	orrs	r4, r1
 8001c6e:	9900      	ldr	r1, [sp, #0]
 8001c70:	0d7f      	lsrs	r7, r7, #21
 8001c72:	00c8      	lsls	r0, r1, #3
 8001c74:	0011      	movs	r1, r2
 8001c76:	001a      	movs	r2, r3
 8001c78:	031b      	lsls	r3, r3, #12
 8001c7a:	469c      	mov	ip, r3
 8001c7c:	9100      	str	r1, [sp, #0]
 8001c7e:	9201      	str	r2, [sp, #4]
 8001c80:	0051      	lsls	r1, r2, #1
 8001c82:	0d4b      	lsrs	r3, r1, #21
 8001c84:	4699      	mov	r9, r3
 8001c86:	9b01      	ldr	r3, [sp, #4]
 8001c88:	9d00      	ldr	r5, [sp, #0]
 8001c8a:	0fd9      	lsrs	r1, r3, #31
 8001c8c:	4663      	mov	r3, ip
 8001c8e:	0f6a      	lsrs	r2, r5, #29
 8001c90:	0a5b      	lsrs	r3, r3, #9
 8001c92:	4313      	orrs	r3, r2
 8001c94:	00ea      	lsls	r2, r5, #3
 8001c96:	4694      	mov	ip, r2
 8001c98:	4693      	mov	fp, r2
 8001c9a:	4ac1      	ldr	r2, [pc, #772]	@ (8001fa0 <__aeabi_dsub+0x354>)
 8001c9c:	9003      	str	r0, [sp, #12]
 8001c9e:	9302      	str	r3, [sp, #8]
 8001ca0:	4591      	cmp	r9, r2
 8001ca2:	d100      	bne.n	8001ca6 <__aeabi_dsub+0x5a>
 8001ca4:	e0cd      	b.n	8001e42 <__aeabi_dsub+0x1f6>
 8001ca6:	2501      	movs	r5, #1
 8001ca8:	4069      	eors	r1, r5
 8001caa:	464d      	mov	r5, r9
 8001cac:	1b7d      	subs	r5, r7, r5
 8001cae:	46aa      	mov	sl, r5
 8001cb0:	428e      	cmp	r6, r1
 8001cb2:	d100      	bne.n	8001cb6 <__aeabi_dsub+0x6a>
 8001cb4:	e080      	b.n	8001db8 <__aeabi_dsub+0x16c>
 8001cb6:	2d00      	cmp	r5, #0
 8001cb8:	dc00      	bgt.n	8001cbc <__aeabi_dsub+0x70>
 8001cba:	e335      	b.n	8002328 <__aeabi_dsub+0x6dc>
 8001cbc:	4649      	mov	r1, r9
 8001cbe:	2900      	cmp	r1, #0
 8001cc0:	d100      	bne.n	8001cc4 <__aeabi_dsub+0x78>
 8001cc2:	e0df      	b.n	8001e84 <__aeabi_dsub+0x238>
 8001cc4:	4297      	cmp	r7, r2
 8001cc6:	d100      	bne.n	8001cca <__aeabi_dsub+0x7e>
 8001cc8:	e194      	b.n	8001ff4 <__aeabi_dsub+0x3a8>
 8001cca:	4652      	mov	r2, sl
 8001ccc:	2501      	movs	r5, #1
 8001cce:	2a38      	cmp	r2, #56	@ 0x38
 8001cd0:	dc19      	bgt.n	8001d06 <__aeabi_dsub+0xba>
 8001cd2:	2280      	movs	r2, #128	@ 0x80
 8001cd4:	9b02      	ldr	r3, [sp, #8]
 8001cd6:	0412      	lsls	r2, r2, #16
 8001cd8:	4313      	orrs	r3, r2
 8001cda:	9302      	str	r3, [sp, #8]
 8001cdc:	4652      	mov	r2, sl
 8001cde:	2a1f      	cmp	r2, #31
 8001ce0:	dd00      	ble.n	8001ce4 <__aeabi_dsub+0x98>
 8001ce2:	e1e3      	b.n	80020ac <__aeabi_dsub+0x460>
 8001ce4:	4653      	mov	r3, sl
 8001ce6:	2220      	movs	r2, #32
 8001ce8:	4661      	mov	r1, ip
 8001cea:	9d02      	ldr	r5, [sp, #8]
 8001cec:	1ad2      	subs	r2, r2, r3
 8001cee:	4095      	lsls	r5, r2
 8001cf0:	40d9      	lsrs	r1, r3
 8001cf2:	430d      	orrs	r5, r1
 8001cf4:	4661      	mov	r1, ip
 8001cf6:	4091      	lsls	r1, r2
 8001cf8:	000a      	movs	r2, r1
 8001cfa:	1e51      	subs	r1, r2, #1
 8001cfc:	418a      	sbcs	r2, r1
 8001cfe:	4315      	orrs	r5, r2
 8001d00:	9a02      	ldr	r2, [sp, #8]
 8001d02:	40da      	lsrs	r2, r3
 8001d04:	1aa4      	subs	r4, r4, r2
 8001d06:	1b45      	subs	r5, r0, r5
 8001d08:	42a8      	cmp	r0, r5
 8001d0a:	4180      	sbcs	r0, r0
 8001d0c:	4240      	negs	r0, r0
 8001d0e:	1a24      	subs	r4, r4, r0
 8001d10:	0223      	lsls	r3, r4, #8
 8001d12:	d400      	bmi.n	8001d16 <__aeabi_dsub+0xca>
 8001d14:	e13d      	b.n	8001f92 <__aeabi_dsub+0x346>
 8001d16:	0264      	lsls	r4, r4, #9
 8001d18:	0a64      	lsrs	r4, r4, #9
 8001d1a:	2c00      	cmp	r4, #0
 8001d1c:	d100      	bne.n	8001d20 <__aeabi_dsub+0xd4>
 8001d1e:	e147      	b.n	8001fb0 <__aeabi_dsub+0x364>
 8001d20:	0020      	movs	r0, r4
 8001d22:	f000 fcab 	bl	800267c <__clzsi2>
 8001d26:	0003      	movs	r3, r0
 8001d28:	3b08      	subs	r3, #8
 8001d2a:	2120      	movs	r1, #32
 8001d2c:	0028      	movs	r0, r5
 8001d2e:	1aca      	subs	r2, r1, r3
 8001d30:	40d0      	lsrs	r0, r2
 8001d32:	409c      	lsls	r4, r3
 8001d34:	0002      	movs	r2, r0
 8001d36:	409d      	lsls	r5, r3
 8001d38:	4322      	orrs	r2, r4
 8001d3a:	429f      	cmp	r7, r3
 8001d3c:	dd00      	ble.n	8001d40 <__aeabi_dsub+0xf4>
 8001d3e:	e177      	b.n	8002030 <__aeabi_dsub+0x3e4>
 8001d40:	1bd8      	subs	r0, r3, r7
 8001d42:	3001      	adds	r0, #1
 8001d44:	1a09      	subs	r1, r1, r0
 8001d46:	002c      	movs	r4, r5
 8001d48:	408d      	lsls	r5, r1
 8001d4a:	40c4      	lsrs	r4, r0
 8001d4c:	1e6b      	subs	r3, r5, #1
 8001d4e:	419d      	sbcs	r5, r3
 8001d50:	0013      	movs	r3, r2
 8001d52:	40c2      	lsrs	r2, r0
 8001d54:	408b      	lsls	r3, r1
 8001d56:	4325      	orrs	r5, r4
 8001d58:	2700      	movs	r7, #0
 8001d5a:	0014      	movs	r4, r2
 8001d5c:	431d      	orrs	r5, r3
 8001d5e:	076b      	lsls	r3, r5, #29
 8001d60:	d009      	beq.n	8001d76 <__aeabi_dsub+0x12a>
 8001d62:	230f      	movs	r3, #15
 8001d64:	402b      	ands	r3, r5
 8001d66:	2b04      	cmp	r3, #4
 8001d68:	d005      	beq.n	8001d76 <__aeabi_dsub+0x12a>
 8001d6a:	1d2b      	adds	r3, r5, #4
 8001d6c:	42ab      	cmp	r3, r5
 8001d6e:	41ad      	sbcs	r5, r5
 8001d70:	426d      	negs	r5, r5
 8001d72:	1964      	adds	r4, r4, r5
 8001d74:	001d      	movs	r5, r3
 8001d76:	0223      	lsls	r3, r4, #8
 8001d78:	d400      	bmi.n	8001d7c <__aeabi_dsub+0x130>
 8001d7a:	e140      	b.n	8001ffe <__aeabi_dsub+0x3b2>
 8001d7c:	4a88      	ldr	r2, [pc, #544]	@ (8001fa0 <__aeabi_dsub+0x354>)
 8001d7e:	3701      	adds	r7, #1
 8001d80:	4297      	cmp	r7, r2
 8001d82:	d100      	bne.n	8001d86 <__aeabi_dsub+0x13a>
 8001d84:	e101      	b.n	8001f8a <__aeabi_dsub+0x33e>
 8001d86:	2601      	movs	r6, #1
 8001d88:	4643      	mov	r3, r8
 8001d8a:	4986      	ldr	r1, [pc, #536]	@ (8001fa4 <__aeabi_dsub+0x358>)
 8001d8c:	08ed      	lsrs	r5, r5, #3
 8001d8e:	4021      	ands	r1, r4
 8001d90:	074a      	lsls	r2, r1, #29
 8001d92:	432a      	orrs	r2, r5
 8001d94:	057c      	lsls	r4, r7, #21
 8001d96:	024d      	lsls	r5, r1, #9
 8001d98:	0b2d      	lsrs	r5, r5, #12
 8001d9a:	0d64      	lsrs	r4, r4, #21
 8001d9c:	401e      	ands	r6, r3
 8001d9e:	0524      	lsls	r4, r4, #20
 8001da0:	432c      	orrs	r4, r5
 8001da2:	07f6      	lsls	r6, r6, #31
 8001da4:	4334      	orrs	r4, r6
 8001da6:	0010      	movs	r0, r2
 8001da8:	0021      	movs	r1, r4
 8001daa:	b005      	add	sp, #20
 8001dac:	bcf0      	pop	{r4, r5, r6, r7}
 8001dae:	46bb      	mov	fp, r7
 8001db0:	46b2      	mov	sl, r6
 8001db2:	46a9      	mov	r9, r5
 8001db4:	46a0      	mov	r8, r4
 8001db6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001db8:	2d00      	cmp	r5, #0
 8001dba:	dc00      	bgt.n	8001dbe <__aeabi_dsub+0x172>
 8001dbc:	e2d0      	b.n	8002360 <__aeabi_dsub+0x714>
 8001dbe:	4649      	mov	r1, r9
 8001dc0:	2900      	cmp	r1, #0
 8001dc2:	d000      	beq.n	8001dc6 <__aeabi_dsub+0x17a>
 8001dc4:	e0d4      	b.n	8001f70 <__aeabi_dsub+0x324>
 8001dc6:	4661      	mov	r1, ip
 8001dc8:	9b02      	ldr	r3, [sp, #8]
 8001dca:	4319      	orrs	r1, r3
 8001dcc:	d100      	bne.n	8001dd0 <__aeabi_dsub+0x184>
 8001dce:	e12b      	b.n	8002028 <__aeabi_dsub+0x3dc>
 8001dd0:	1e69      	subs	r1, r5, #1
 8001dd2:	2d01      	cmp	r5, #1
 8001dd4:	d100      	bne.n	8001dd8 <__aeabi_dsub+0x18c>
 8001dd6:	e1d9      	b.n	800218c <__aeabi_dsub+0x540>
 8001dd8:	4295      	cmp	r5, r2
 8001dda:	d100      	bne.n	8001dde <__aeabi_dsub+0x192>
 8001ddc:	e10a      	b.n	8001ff4 <__aeabi_dsub+0x3a8>
 8001dde:	2501      	movs	r5, #1
 8001de0:	2938      	cmp	r1, #56	@ 0x38
 8001de2:	dc17      	bgt.n	8001e14 <__aeabi_dsub+0x1c8>
 8001de4:	468a      	mov	sl, r1
 8001de6:	4653      	mov	r3, sl
 8001de8:	2b1f      	cmp	r3, #31
 8001dea:	dd00      	ble.n	8001dee <__aeabi_dsub+0x1a2>
 8001dec:	e1e7      	b.n	80021be <__aeabi_dsub+0x572>
 8001dee:	2220      	movs	r2, #32
 8001df0:	1ad2      	subs	r2, r2, r3
 8001df2:	9b02      	ldr	r3, [sp, #8]
 8001df4:	4661      	mov	r1, ip
 8001df6:	4093      	lsls	r3, r2
 8001df8:	001d      	movs	r5, r3
 8001dfa:	4653      	mov	r3, sl
 8001dfc:	40d9      	lsrs	r1, r3
 8001dfe:	4663      	mov	r3, ip
 8001e00:	4093      	lsls	r3, r2
 8001e02:	001a      	movs	r2, r3
 8001e04:	430d      	orrs	r5, r1
 8001e06:	1e51      	subs	r1, r2, #1
 8001e08:	418a      	sbcs	r2, r1
 8001e0a:	4653      	mov	r3, sl
 8001e0c:	4315      	orrs	r5, r2
 8001e0e:	9a02      	ldr	r2, [sp, #8]
 8001e10:	40da      	lsrs	r2, r3
 8001e12:	18a4      	adds	r4, r4, r2
 8001e14:	182d      	adds	r5, r5, r0
 8001e16:	4285      	cmp	r5, r0
 8001e18:	4180      	sbcs	r0, r0
 8001e1a:	4240      	negs	r0, r0
 8001e1c:	1824      	adds	r4, r4, r0
 8001e1e:	0223      	lsls	r3, r4, #8
 8001e20:	d400      	bmi.n	8001e24 <__aeabi_dsub+0x1d8>
 8001e22:	e0b6      	b.n	8001f92 <__aeabi_dsub+0x346>
 8001e24:	4b5e      	ldr	r3, [pc, #376]	@ (8001fa0 <__aeabi_dsub+0x354>)
 8001e26:	3701      	adds	r7, #1
 8001e28:	429f      	cmp	r7, r3
 8001e2a:	d100      	bne.n	8001e2e <__aeabi_dsub+0x1e2>
 8001e2c:	e0ad      	b.n	8001f8a <__aeabi_dsub+0x33e>
 8001e2e:	2101      	movs	r1, #1
 8001e30:	4b5c      	ldr	r3, [pc, #368]	@ (8001fa4 <__aeabi_dsub+0x358>)
 8001e32:	086a      	lsrs	r2, r5, #1
 8001e34:	401c      	ands	r4, r3
 8001e36:	4029      	ands	r1, r5
 8001e38:	430a      	orrs	r2, r1
 8001e3a:	07e5      	lsls	r5, r4, #31
 8001e3c:	4315      	orrs	r5, r2
 8001e3e:	0864      	lsrs	r4, r4, #1
 8001e40:	e78d      	b.n	8001d5e <__aeabi_dsub+0x112>
 8001e42:	4a59      	ldr	r2, [pc, #356]	@ (8001fa8 <__aeabi_dsub+0x35c>)
 8001e44:	9b02      	ldr	r3, [sp, #8]
 8001e46:	4692      	mov	sl, r2
 8001e48:	4662      	mov	r2, ip
 8001e4a:	44ba      	add	sl, r7
 8001e4c:	431a      	orrs	r2, r3
 8001e4e:	d02c      	beq.n	8001eaa <__aeabi_dsub+0x25e>
 8001e50:	428e      	cmp	r6, r1
 8001e52:	d02e      	beq.n	8001eb2 <__aeabi_dsub+0x266>
 8001e54:	4652      	mov	r2, sl
 8001e56:	2a00      	cmp	r2, #0
 8001e58:	d060      	beq.n	8001f1c <__aeabi_dsub+0x2d0>
 8001e5a:	2f00      	cmp	r7, #0
 8001e5c:	d100      	bne.n	8001e60 <__aeabi_dsub+0x214>
 8001e5e:	e0db      	b.n	8002018 <__aeabi_dsub+0x3cc>
 8001e60:	4663      	mov	r3, ip
 8001e62:	000e      	movs	r6, r1
 8001e64:	9c02      	ldr	r4, [sp, #8]
 8001e66:	08d8      	lsrs	r0, r3, #3
 8001e68:	0762      	lsls	r2, r4, #29
 8001e6a:	4302      	orrs	r2, r0
 8001e6c:	08e4      	lsrs	r4, r4, #3
 8001e6e:	0013      	movs	r3, r2
 8001e70:	4323      	orrs	r3, r4
 8001e72:	d100      	bne.n	8001e76 <__aeabi_dsub+0x22a>
 8001e74:	e254      	b.n	8002320 <__aeabi_dsub+0x6d4>
 8001e76:	2580      	movs	r5, #128	@ 0x80
 8001e78:	032d      	lsls	r5, r5, #12
 8001e7a:	4325      	orrs	r5, r4
 8001e7c:	032d      	lsls	r5, r5, #12
 8001e7e:	4c48      	ldr	r4, [pc, #288]	@ (8001fa0 <__aeabi_dsub+0x354>)
 8001e80:	0b2d      	lsrs	r5, r5, #12
 8001e82:	e78c      	b.n	8001d9e <__aeabi_dsub+0x152>
 8001e84:	4661      	mov	r1, ip
 8001e86:	9b02      	ldr	r3, [sp, #8]
 8001e88:	4319      	orrs	r1, r3
 8001e8a:	d100      	bne.n	8001e8e <__aeabi_dsub+0x242>
 8001e8c:	e0cc      	b.n	8002028 <__aeabi_dsub+0x3dc>
 8001e8e:	0029      	movs	r1, r5
 8001e90:	3901      	subs	r1, #1
 8001e92:	2d01      	cmp	r5, #1
 8001e94:	d100      	bne.n	8001e98 <__aeabi_dsub+0x24c>
 8001e96:	e188      	b.n	80021aa <__aeabi_dsub+0x55e>
 8001e98:	4295      	cmp	r5, r2
 8001e9a:	d100      	bne.n	8001e9e <__aeabi_dsub+0x252>
 8001e9c:	e0aa      	b.n	8001ff4 <__aeabi_dsub+0x3a8>
 8001e9e:	2501      	movs	r5, #1
 8001ea0:	2938      	cmp	r1, #56	@ 0x38
 8001ea2:	dd00      	ble.n	8001ea6 <__aeabi_dsub+0x25a>
 8001ea4:	e72f      	b.n	8001d06 <__aeabi_dsub+0xba>
 8001ea6:	468a      	mov	sl, r1
 8001ea8:	e718      	b.n	8001cdc <__aeabi_dsub+0x90>
 8001eaa:	2201      	movs	r2, #1
 8001eac:	4051      	eors	r1, r2
 8001eae:	428e      	cmp	r6, r1
 8001eb0:	d1d0      	bne.n	8001e54 <__aeabi_dsub+0x208>
 8001eb2:	4653      	mov	r3, sl
 8001eb4:	2b00      	cmp	r3, #0
 8001eb6:	d100      	bne.n	8001eba <__aeabi_dsub+0x26e>
 8001eb8:	e0be      	b.n	8002038 <__aeabi_dsub+0x3ec>
 8001eba:	2f00      	cmp	r7, #0
 8001ebc:	d000      	beq.n	8001ec0 <__aeabi_dsub+0x274>
 8001ebe:	e138      	b.n	8002132 <__aeabi_dsub+0x4e6>
 8001ec0:	46ca      	mov	sl, r9
 8001ec2:	0022      	movs	r2, r4
 8001ec4:	4302      	orrs	r2, r0
 8001ec6:	d100      	bne.n	8001eca <__aeabi_dsub+0x27e>
 8001ec8:	e1e2      	b.n	8002290 <__aeabi_dsub+0x644>
 8001eca:	4653      	mov	r3, sl
 8001ecc:	1e59      	subs	r1, r3, #1
 8001ece:	2b01      	cmp	r3, #1
 8001ed0:	d100      	bne.n	8001ed4 <__aeabi_dsub+0x288>
 8001ed2:	e20d      	b.n	80022f0 <__aeabi_dsub+0x6a4>
 8001ed4:	4a32      	ldr	r2, [pc, #200]	@ (8001fa0 <__aeabi_dsub+0x354>)
 8001ed6:	4592      	cmp	sl, r2
 8001ed8:	d100      	bne.n	8001edc <__aeabi_dsub+0x290>
 8001eda:	e1d2      	b.n	8002282 <__aeabi_dsub+0x636>
 8001edc:	2701      	movs	r7, #1
 8001ede:	2938      	cmp	r1, #56	@ 0x38
 8001ee0:	dc13      	bgt.n	8001f0a <__aeabi_dsub+0x2be>
 8001ee2:	291f      	cmp	r1, #31
 8001ee4:	dd00      	ble.n	8001ee8 <__aeabi_dsub+0x29c>
 8001ee6:	e1ee      	b.n	80022c6 <__aeabi_dsub+0x67a>
 8001ee8:	2220      	movs	r2, #32
 8001eea:	9b02      	ldr	r3, [sp, #8]
 8001eec:	1a52      	subs	r2, r2, r1
 8001eee:	0025      	movs	r5, r4
 8001ef0:	0007      	movs	r7, r0
 8001ef2:	469a      	mov	sl, r3
 8001ef4:	40cc      	lsrs	r4, r1
 8001ef6:	4090      	lsls	r0, r2
 8001ef8:	4095      	lsls	r5, r2
 8001efa:	40cf      	lsrs	r7, r1
 8001efc:	44a2      	add	sl, r4
 8001efe:	1e42      	subs	r2, r0, #1
 8001f00:	4190      	sbcs	r0, r2
 8001f02:	4653      	mov	r3, sl
 8001f04:	432f      	orrs	r7, r5
 8001f06:	4307      	orrs	r7, r0
 8001f08:	9302      	str	r3, [sp, #8]
 8001f0a:	003d      	movs	r5, r7
 8001f0c:	4465      	add	r5, ip
 8001f0e:	4565      	cmp	r5, ip
 8001f10:	4192      	sbcs	r2, r2
 8001f12:	9b02      	ldr	r3, [sp, #8]
 8001f14:	4252      	negs	r2, r2
 8001f16:	464f      	mov	r7, r9
 8001f18:	18d4      	adds	r4, r2, r3
 8001f1a:	e780      	b.n	8001e1e <__aeabi_dsub+0x1d2>
 8001f1c:	4a23      	ldr	r2, [pc, #140]	@ (8001fac <__aeabi_dsub+0x360>)
 8001f1e:	1c7d      	adds	r5, r7, #1
 8001f20:	4215      	tst	r5, r2
 8001f22:	d000      	beq.n	8001f26 <__aeabi_dsub+0x2da>
 8001f24:	e0aa      	b.n	800207c <__aeabi_dsub+0x430>
 8001f26:	4662      	mov	r2, ip
 8001f28:	0025      	movs	r5, r4
 8001f2a:	9b02      	ldr	r3, [sp, #8]
 8001f2c:	4305      	orrs	r5, r0
 8001f2e:	431a      	orrs	r2, r3
 8001f30:	2f00      	cmp	r7, #0
 8001f32:	d000      	beq.n	8001f36 <__aeabi_dsub+0x2ea>
 8001f34:	e0f5      	b.n	8002122 <__aeabi_dsub+0x4d6>
 8001f36:	2d00      	cmp	r5, #0
 8001f38:	d100      	bne.n	8001f3c <__aeabi_dsub+0x2f0>
 8001f3a:	e16b      	b.n	8002214 <__aeabi_dsub+0x5c8>
 8001f3c:	2a00      	cmp	r2, #0
 8001f3e:	d100      	bne.n	8001f42 <__aeabi_dsub+0x2f6>
 8001f40:	e152      	b.n	80021e8 <__aeabi_dsub+0x59c>
 8001f42:	4663      	mov	r3, ip
 8001f44:	1ac5      	subs	r5, r0, r3
 8001f46:	9b02      	ldr	r3, [sp, #8]
 8001f48:	1ae2      	subs	r2, r4, r3
 8001f4a:	42a8      	cmp	r0, r5
 8001f4c:	419b      	sbcs	r3, r3
 8001f4e:	425b      	negs	r3, r3
 8001f50:	1ad3      	subs	r3, r2, r3
 8001f52:	021a      	lsls	r2, r3, #8
 8001f54:	d400      	bmi.n	8001f58 <__aeabi_dsub+0x30c>
 8001f56:	e1d5      	b.n	8002304 <__aeabi_dsub+0x6b8>
 8001f58:	4663      	mov	r3, ip
 8001f5a:	1a1d      	subs	r5, r3, r0
 8001f5c:	45ac      	cmp	ip, r5
 8001f5e:	4192      	sbcs	r2, r2
 8001f60:	2601      	movs	r6, #1
 8001f62:	9b02      	ldr	r3, [sp, #8]
 8001f64:	4252      	negs	r2, r2
 8001f66:	1b1c      	subs	r4, r3, r4
 8001f68:	4688      	mov	r8, r1
 8001f6a:	1aa4      	subs	r4, r4, r2
 8001f6c:	400e      	ands	r6, r1
 8001f6e:	e6f6      	b.n	8001d5e <__aeabi_dsub+0x112>
 8001f70:	4297      	cmp	r7, r2
 8001f72:	d03f      	beq.n	8001ff4 <__aeabi_dsub+0x3a8>
 8001f74:	4652      	mov	r2, sl
 8001f76:	2501      	movs	r5, #1
 8001f78:	2a38      	cmp	r2, #56	@ 0x38
 8001f7a:	dd00      	ble.n	8001f7e <__aeabi_dsub+0x332>
 8001f7c:	e74a      	b.n	8001e14 <__aeabi_dsub+0x1c8>
 8001f7e:	2280      	movs	r2, #128	@ 0x80
 8001f80:	9b02      	ldr	r3, [sp, #8]
 8001f82:	0412      	lsls	r2, r2, #16
 8001f84:	4313      	orrs	r3, r2
 8001f86:	9302      	str	r3, [sp, #8]
 8001f88:	e72d      	b.n	8001de6 <__aeabi_dsub+0x19a>
 8001f8a:	003c      	movs	r4, r7
 8001f8c:	2500      	movs	r5, #0
 8001f8e:	2200      	movs	r2, #0
 8001f90:	e705      	b.n	8001d9e <__aeabi_dsub+0x152>
 8001f92:	2307      	movs	r3, #7
 8001f94:	402b      	ands	r3, r5
 8001f96:	2b00      	cmp	r3, #0
 8001f98:	d000      	beq.n	8001f9c <__aeabi_dsub+0x350>
 8001f9a:	e6e2      	b.n	8001d62 <__aeabi_dsub+0x116>
 8001f9c:	e06b      	b.n	8002076 <__aeabi_dsub+0x42a>
 8001f9e:	46c0      	nop			@ (mov r8, r8)
 8001fa0:	000007ff 	.word	0x000007ff
 8001fa4:	ff7fffff 	.word	0xff7fffff
 8001fa8:	fffff801 	.word	0xfffff801
 8001fac:	000007fe 	.word	0x000007fe
 8001fb0:	0028      	movs	r0, r5
 8001fb2:	f000 fb63 	bl	800267c <__clzsi2>
 8001fb6:	0003      	movs	r3, r0
 8001fb8:	3318      	adds	r3, #24
 8001fba:	2b1f      	cmp	r3, #31
 8001fbc:	dc00      	bgt.n	8001fc0 <__aeabi_dsub+0x374>
 8001fbe:	e6b4      	b.n	8001d2a <__aeabi_dsub+0xde>
 8001fc0:	002a      	movs	r2, r5
 8001fc2:	3808      	subs	r0, #8
 8001fc4:	4082      	lsls	r2, r0
 8001fc6:	429f      	cmp	r7, r3
 8001fc8:	dd00      	ble.n	8001fcc <__aeabi_dsub+0x380>
 8001fca:	e0b9      	b.n	8002140 <__aeabi_dsub+0x4f4>
 8001fcc:	1bdb      	subs	r3, r3, r7
 8001fce:	1c58      	adds	r0, r3, #1
 8001fd0:	281f      	cmp	r0, #31
 8001fd2:	dc00      	bgt.n	8001fd6 <__aeabi_dsub+0x38a>
 8001fd4:	e1a0      	b.n	8002318 <__aeabi_dsub+0x6cc>
 8001fd6:	0015      	movs	r5, r2
 8001fd8:	3b1f      	subs	r3, #31
 8001fda:	40dd      	lsrs	r5, r3
 8001fdc:	2820      	cmp	r0, #32
 8001fde:	d005      	beq.n	8001fec <__aeabi_dsub+0x3a0>
 8001fe0:	2340      	movs	r3, #64	@ 0x40
 8001fe2:	1a1b      	subs	r3, r3, r0
 8001fe4:	409a      	lsls	r2, r3
 8001fe6:	1e53      	subs	r3, r2, #1
 8001fe8:	419a      	sbcs	r2, r3
 8001fea:	4315      	orrs	r5, r2
 8001fec:	2307      	movs	r3, #7
 8001fee:	2700      	movs	r7, #0
 8001ff0:	402b      	ands	r3, r5
 8001ff2:	e7d0      	b.n	8001f96 <__aeabi_dsub+0x34a>
 8001ff4:	08c0      	lsrs	r0, r0, #3
 8001ff6:	0762      	lsls	r2, r4, #29
 8001ff8:	4302      	orrs	r2, r0
 8001ffa:	08e4      	lsrs	r4, r4, #3
 8001ffc:	e737      	b.n	8001e6e <__aeabi_dsub+0x222>
 8001ffe:	08ea      	lsrs	r2, r5, #3
 8002000:	0763      	lsls	r3, r4, #29
 8002002:	431a      	orrs	r2, r3
 8002004:	4bd3      	ldr	r3, [pc, #844]	@ (8002354 <__aeabi_dsub+0x708>)
 8002006:	08e4      	lsrs	r4, r4, #3
 8002008:	429f      	cmp	r7, r3
 800200a:	d100      	bne.n	800200e <__aeabi_dsub+0x3c2>
 800200c:	e72f      	b.n	8001e6e <__aeabi_dsub+0x222>
 800200e:	0324      	lsls	r4, r4, #12
 8002010:	0b25      	lsrs	r5, r4, #12
 8002012:	057c      	lsls	r4, r7, #21
 8002014:	0d64      	lsrs	r4, r4, #21
 8002016:	e6c2      	b.n	8001d9e <__aeabi_dsub+0x152>
 8002018:	46ca      	mov	sl, r9
 800201a:	0022      	movs	r2, r4
 800201c:	4302      	orrs	r2, r0
 800201e:	d158      	bne.n	80020d2 <__aeabi_dsub+0x486>
 8002020:	4663      	mov	r3, ip
 8002022:	000e      	movs	r6, r1
 8002024:	9c02      	ldr	r4, [sp, #8]
 8002026:	9303      	str	r3, [sp, #12]
 8002028:	9b03      	ldr	r3, [sp, #12]
 800202a:	4657      	mov	r7, sl
 800202c:	08da      	lsrs	r2, r3, #3
 800202e:	e7e7      	b.n	8002000 <__aeabi_dsub+0x3b4>
 8002030:	4cc9      	ldr	r4, [pc, #804]	@ (8002358 <__aeabi_dsub+0x70c>)
 8002032:	1aff      	subs	r7, r7, r3
 8002034:	4014      	ands	r4, r2
 8002036:	e692      	b.n	8001d5e <__aeabi_dsub+0x112>
 8002038:	4dc8      	ldr	r5, [pc, #800]	@ (800235c <__aeabi_dsub+0x710>)
 800203a:	1c7a      	adds	r2, r7, #1
 800203c:	422a      	tst	r2, r5
 800203e:	d000      	beq.n	8002042 <__aeabi_dsub+0x3f6>
 8002040:	e084      	b.n	800214c <__aeabi_dsub+0x500>
 8002042:	0022      	movs	r2, r4
 8002044:	4302      	orrs	r2, r0
 8002046:	2f00      	cmp	r7, #0
 8002048:	d000      	beq.n	800204c <__aeabi_dsub+0x400>
 800204a:	e0ef      	b.n	800222c <__aeabi_dsub+0x5e0>
 800204c:	2a00      	cmp	r2, #0
 800204e:	d100      	bne.n	8002052 <__aeabi_dsub+0x406>
 8002050:	e0e5      	b.n	800221e <__aeabi_dsub+0x5d2>
 8002052:	4662      	mov	r2, ip
 8002054:	9902      	ldr	r1, [sp, #8]
 8002056:	430a      	orrs	r2, r1
 8002058:	d100      	bne.n	800205c <__aeabi_dsub+0x410>
 800205a:	e0c5      	b.n	80021e8 <__aeabi_dsub+0x59c>
 800205c:	4663      	mov	r3, ip
 800205e:	18c5      	adds	r5, r0, r3
 8002060:	468c      	mov	ip, r1
 8002062:	4285      	cmp	r5, r0
 8002064:	4180      	sbcs	r0, r0
 8002066:	4464      	add	r4, ip
 8002068:	4240      	negs	r0, r0
 800206a:	1824      	adds	r4, r4, r0
 800206c:	0223      	lsls	r3, r4, #8
 800206e:	d502      	bpl.n	8002076 <__aeabi_dsub+0x42a>
 8002070:	4bb9      	ldr	r3, [pc, #740]	@ (8002358 <__aeabi_dsub+0x70c>)
 8002072:	3701      	adds	r7, #1
 8002074:	401c      	ands	r4, r3
 8002076:	46ba      	mov	sl, r7
 8002078:	9503      	str	r5, [sp, #12]
 800207a:	e7d5      	b.n	8002028 <__aeabi_dsub+0x3dc>
 800207c:	4662      	mov	r2, ip
 800207e:	1a85      	subs	r5, r0, r2
 8002080:	42a8      	cmp	r0, r5
 8002082:	4192      	sbcs	r2, r2
 8002084:	4252      	negs	r2, r2
 8002086:	4691      	mov	r9, r2
 8002088:	9b02      	ldr	r3, [sp, #8]
 800208a:	1ae3      	subs	r3, r4, r3
 800208c:	001a      	movs	r2, r3
 800208e:	464b      	mov	r3, r9
 8002090:	1ad2      	subs	r2, r2, r3
 8002092:	0013      	movs	r3, r2
 8002094:	4691      	mov	r9, r2
 8002096:	021a      	lsls	r2, r3, #8
 8002098:	d46c      	bmi.n	8002174 <__aeabi_dsub+0x528>
 800209a:	464a      	mov	r2, r9
 800209c:	464c      	mov	r4, r9
 800209e:	432a      	orrs	r2, r5
 80020a0:	d000      	beq.n	80020a4 <__aeabi_dsub+0x458>
 80020a2:	e63a      	b.n	8001d1a <__aeabi_dsub+0xce>
 80020a4:	2600      	movs	r6, #0
 80020a6:	2400      	movs	r4, #0
 80020a8:	2500      	movs	r5, #0
 80020aa:	e678      	b.n	8001d9e <__aeabi_dsub+0x152>
 80020ac:	9902      	ldr	r1, [sp, #8]
 80020ae:	4653      	mov	r3, sl
 80020b0:	000d      	movs	r5, r1
 80020b2:	3a20      	subs	r2, #32
 80020b4:	40d5      	lsrs	r5, r2
 80020b6:	2b20      	cmp	r3, #32
 80020b8:	d006      	beq.n	80020c8 <__aeabi_dsub+0x47c>
 80020ba:	2240      	movs	r2, #64	@ 0x40
 80020bc:	1ad2      	subs	r2, r2, r3
 80020be:	000b      	movs	r3, r1
 80020c0:	4093      	lsls	r3, r2
 80020c2:	4662      	mov	r2, ip
 80020c4:	431a      	orrs	r2, r3
 80020c6:	4693      	mov	fp, r2
 80020c8:	465b      	mov	r3, fp
 80020ca:	1e5a      	subs	r2, r3, #1
 80020cc:	4193      	sbcs	r3, r2
 80020ce:	431d      	orrs	r5, r3
 80020d0:	e619      	b.n	8001d06 <__aeabi_dsub+0xba>
 80020d2:	4653      	mov	r3, sl
 80020d4:	1e5a      	subs	r2, r3, #1
 80020d6:	2b01      	cmp	r3, #1
 80020d8:	d100      	bne.n	80020dc <__aeabi_dsub+0x490>
 80020da:	e0c6      	b.n	800226a <__aeabi_dsub+0x61e>
 80020dc:	4e9d      	ldr	r6, [pc, #628]	@ (8002354 <__aeabi_dsub+0x708>)
 80020de:	45b2      	cmp	sl, r6
 80020e0:	d100      	bne.n	80020e4 <__aeabi_dsub+0x498>
 80020e2:	e6bd      	b.n	8001e60 <__aeabi_dsub+0x214>
 80020e4:	4688      	mov	r8, r1
 80020e6:	000e      	movs	r6, r1
 80020e8:	2501      	movs	r5, #1
 80020ea:	2a38      	cmp	r2, #56	@ 0x38
 80020ec:	dc10      	bgt.n	8002110 <__aeabi_dsub+0x4c4>
 80020ee:	2a1f      	cmp	r2, #31
 80020f0:	dc7f      	bgt.n	80021f2 <__aeabi_dsub+0x5a6>
 80020f2:	2120      	movs	r1, #32
 80020f4:	0025      	movs	r5, r4
 80020f6:	1a89      	subs	r1, r1, r2
 80020f8:	0007      	movs	r7, r0
 80020fa:	4088      	lsls	r0, r1
 80020fc:	408d      	lsls	r5, r1
 80020fe:	40d7      	lsrs	r7, r2
 8002100:	40d4      	lsrs	r4, r2
 8002102:	1e41      	subs	r1, r0, #1
 8002104:	4188      	sbcs	r0, r1
 8002106:	9b02      	ldr	r3, [sp, #8]
 8002108:	433d      	orrs	r5, r7
 800210a:	1b1b      	subs	r3, r3, r4
 800210c:	4305      	orrs	r5, r0
 800210e:	9302      	str	r3, [sp, #8]
 8002110:	4662      	mov	r2, ip
 8002112:	1b55      	subs	r5, r2, r5
 8002114:	45ac      	cmp	ip, r5
 8002116:	4192      	sbcs	r2, r2
 8002118:	9b02      	ldr	r3, [sp, #8]
 800211a:	4252      	negs	r2, r2
 800211c:	464f      	mov	r7, r9
 800211e:	1a9c      	subs	r4, r3, r2
 8002120:	e5f6      	b.n	8001d10 <__aeabi_dsub+0xc4>
 8002122:	2d00      	cmp	r5, #0
 8002124:	d000      	beq.n	8002128 <__aeabi_dsub+0x4dc>
 8002126:	e0b7      	b.n	8002298 <__aeabi_dsub+0x64c>
 8002128:	2a00      	cmp	r2, #0
 800212a:	d100      	bne.n	800212e <__aeabi_dsub+0x4e2>
 800212c:	e0f0      	b.n	8002310 <__aeabi_dsub+0x6c4>
 800212e:	2601      	movs	r6, #1
 8002130:	400e      	ands	r6, r1
 8002132:	4663      	mov	r3, ip
 8002134:	9802      	ldr	r0, [sp, #8]
 8002136:	08d9      	lsrs	r1, r3, #3
 8002138:	0742      	lsls	r2, r0, #29
 800213a:	430a      	orrs	r2, r1
 800213c:	08c4      	lsrs	r4, r0, #3
 800213e:	e696      	b.n	8001e6e <__aeabi_dsub+0x222>
 8002140:	4c85      	ldr	r4, [pc, #532]	@ (8002358 <__aeabi_dsub+0x70c>)
 8002142:	1aff      	subs	r7, r7, r3
 8002144:	4014      	ands	r4, r2
 8002146:	0762      	lsls	r2, r4, #29
 8002148:	08e4      	lsrs	r4, r4, #3
 800214a:	e760      	b.n	800200e <__aeabi_dsub+0x3c2>
 800214c:	4981      	ldr	r1, [pc, #516]	@ (8002354 <__aeabi_dsub+0x708>)
 800214e:	428a      	cmp	r2, r1
 8002150:	d100      	bne.n	8002154 <__aeabi_dsub+0x508>
 8002152:	e0c9      	b.n	80022e8 <__aeabi_dsub+0x69c>
 8002154:	4663      	mov	r3, ip
 8002156:	18c1      	adds	r1, r0, r3
 8002158:	4281      	cmp	r1, r0
 800215a:	4180      	sbcs	r0, r0
 800215c:	9b02      	ldr	r3, [sp, #8]
 800215e:	4240      	negs	r0, r0
 8002160:	18e3      	adds	r3, r4, r3
 8002162:	181b      	adds	r3, r3, r0
 8002164:	07dd      	lsls	r5, r3, #31
 8002166:	085c      	lsrs	r4, r3, #1
 8002168:	2307      	movs	r3, #7
 800216a:	0849      	lsrs	r1, r1, #1
 800216c:	430d      	orrs	r5, r1
 800216e:	0017      	movs	r7, r2
 8002170:	402b      	ands	r3, r5
 8002172:	e710      	b.n	8001f96 <__aeabi_dsub+0x34a>
 8002174:	4663      	mov	r3, ip
 8002176:	1a1d      	subs	r5, r3, r0
 8002178:	45ac      	cmp	ip, r5
 800217a:	4192      	sbcs	r2, r2
 800217c:	2601      	movs	r6, #1
 800217e:	9b02      	ldr	r3, [sp, #8]
 8002180:	4252      	negs	r2, r2
 8002182:	1b1c      	subs	r4, r3, r4
 8002184:	4688      	mov	r8, r1
 8002186:	1aa4      	subs	r4, r4, r2
 8002188:	400e      	ands	r6, r1
 800218a:	e5c6      	b.n	8001d1a <__aeabi_dsub+0xce>
 800218c:	4663      	mov	r3, ip
 800218e:	18c5      	adds	r5, r0, r3
 8002190:	9b02      	ldr	r3, [sp, #8]
 8002192:	4285      	cmp	r5, r0
 8002194:	4180      	sbcs	r0, r0
 8002196:	469c      	mov	ip, r3
 8002198:	4240      	negs	r0, r0
 800219a:	4464      	add	r4, ip
 800219c:	1824      	adds	r4, r4, r0
 800219e:	2701      	movs	r7, #1
 80021a0:	0223      	lsls	r3, r4, #8
 80021a2:	d400      	bmi.n	80021a6 <__aeabi_dsub+0x55a>
 80021a4:	e6f5      	b.n	8001f92 <__aeabi_dsub+0x346>
 80021a6:	2702      	movs	r7, #2
 80021a8:	e641      	b.n	8001e2e <__aeabi_dsub+0x1e2>
 80021aa:	4663      	mov	r3, ip
 80021ac:	1ac5      	subs	r5, r0, r3
 80021ae:	42a8      	cmp	r0, r5
 80021b0:	4180      	sbcs	r0, r0
 80021b2:	9b02      	ldr	r3, [sp, #8]
 80021b4:	4240      	negs	r0, r0
 80021b6:	1ae4      	subs	r4, r4, r3
 80021b8:	2701      	movs	r7, #1
 80021ba:	1a24      	subs	r4, r4, r0
 80021bc:	e5a8      	b.n	8001d10 <__aeabi_dsub+0xc4>
 80021be:	9d02      	ldr	r5, [sp, #8]
 80021c0:	4652      	mov	r2, sl
 80021c2:	002b      	movs	r3, r5
 80021c4:	3a20      	subs	r2, #32
 80021c6:	40d3      	lsrs	r3, r2
 80021c8:	0019      	movs	r1, r3
 80021ca:	4653      	mov	r3, sl
 80021cc:	2b20      	cmp	r3, #32
 80021ce:	d006      	beq.n	80021de <__aeabi_dsub+0x592>
 80021d0:	2240      	movs	r2, #64	@ 0x40
 80021d2:	1ad2      	subs	r2, r2, r3
 80021d4:	002b      	movs	r3, r5
 80021d6:	4093      	lsls	r3, r2
 80021d8:	4662      	mov	r2, ip
 80021da:	431a      	orrs	r2, r3
 80021dc:	4693      	mov	fp, r2
 80021de:	465d      	mov	r5, fp
 80021e0:	1e6b      	subs	r3, r5, #1
 80021e2:	419d      	sbcs	r5, r3
 80021e4:	430d      	orrs	r5, r1
 80021e6:	e615      	b.n	8001e14 <__aeabi_dsub+0x1c8>
 80021e8:	0762      	lsls	r2, r4, #29
 80021ea:	08c0      	lsrs	r0, r0, #3
 80021ec:	4302      	orrs	r2, r0
 80021ee:	08e4      	lsrs	r4, r4, #3
 80021f0:	e70d      	b.n	800200e <__aeabi_dsub+0x3c2>
 80021f2:	0011      	movs	r1, r2
 80021f4:	0027      	movs	r7, r4
 80021f6:	3920      	subs	r1, #32
 80021f8:	40cf      	lsrs	r7, r1
 80021fa:	2a20      	cmp	r2, #32
 80021fc:	d005      	beq.n	800220a <__aeabi_dsub+0x5be>
 80021fe:	2140      	movs	r1, #64	@ 0x40
 8002200:	1a8a      	subs	r2, r1, r2
 8002202:	4094      	lsls	r4, r2
 8002204:	0025      	movs	r5, r4
 8002206:	4305      	orrs	r5, r0
 8002208:	9503      	str	r5, [sp, #12]
 800220a:	9d03      	ldr	r5, [sp, #12]
 800220c:	1e6a      	subs	r2, r5, #1
 800220e:	4195      	sbcs	r5, r2
 8002210:	433d      	orrs	r5, r7
 8002212:	e77d      	b.n	8002110 <__aeabi_dsub+0x4c4>
 8002214:	2a00      	cmp	r2, #0
 8002216:	d100      	bne.n	800221a <__aeabi_dsub+0x5ce>
 8002218:	e744      	b.n	80020a4 <__aeabi_dsub+0x458>
 800221a:	2601      	movs	r6, #1
 800221c:	400e      	ands	r6, r1
 800221e:	4663      	mov	r3, ip
 8002220:	08d9      	lsrs	r1, r3, #3
 8002222:	9b02      	ldr	r3, [sp, #8]
 8002224:	075a      	lsls	r2, r3, #29
 8002226:	430a      	orrs	r2, r1
 8002228:	08dc      	lsrs	r4, r3, #3
 800222a:	e6f0      	b.n	800200e <__aeabi_dsub+0x3c2>
 800222c:	2a00      	cmp	r2, #0
 800222e:	d028      	beq.n	8002282 <__aeabi_dsub+0x636>
 8002230:	4662      	mov	r2, ip
 8002232:	9f02      	ldr	r7, [sp, #8]
 8002234:	08c0      	lsrs	r0, r0, #3
 8002236:	433a      	orrs	r2, r7
 8002238:	d100      	bne.n	800223c <__aeabi_dsub+0x5f0>
 800223a:	e6dc      	b.n	8001ff6 <__aeabi_dsub+0x3aa>
 800223c:	0762      	lsls	r2, r4, #29
 800223e:	4310      	orrs	r0, r2
 8002240:	2280      	movs	r2, #128	@ 0x80
 8002242:	08e4      	lsrs	r4, r4, #3
 8002244:	0312      	lsls	r2, r2, #12
 8002246:	4214      	tst	r4, r2
 8002248:	d009      	beq.n	800225e <__aeabi_dsub+0x612>
 800224a:	08fd      	lsrs	r5, r7, #3
 800224c:	4215      	tst	r5, r2
 800224e:	d106      	bne.n	800225e <__aeabi_dsub+0x612>
 8002250:	4663      	mov	r3, ip
 8002252:	2601      	movs	r6, #1
 8002254:	002c      	movs	r4, r5
 8002256:	08d8      	lsrs	r0, r3, #3
 8002258:	077b      	lsls	r3, r7, #29
 800225a:	4318      	orrs	r0, r3
 800225c:	400e      	ands	r6, r1
 800225e:	0f42      	lsrs	r2, r0, #29
 8002260:	00c0      	lsls	r0, r0, #3
 8002262:	08c0      	lsrs	r0, r0, #3
 8002264:	0752      	lsls	r2, r2, #29
 8002266:	4302      	orrs	r2, r0
 8002268:	e601      	b.n	8001e6e <__aeabi_dsub+0x222>
 800226a:	4663      	mov	r3, ip
 800226c:	1a1d      	subs	r5, r3, r0
 800226e:	45ac      	cmp	ip, r5
 8002270:	4192      	sbcs	r2, r2
 8002272:	9b02      	ldr	r3, [sp, #8]
 8002274:	4252      	negs	r2, r2
 8002276:	1b1c      	subs	r4, r3, r4
 8002278:	000e      	movs	r6, r1
 800227a:	4688      	mov	r8, r1
 800227c:	2701      	movs	r7, #1
 800227e:	1aa4      	subs	r4, r4, r2
 8002280:	e546      	b.n	8001d10 <__aeabi_dsub+0xc4>
 8002282:	4663      	mov	r3, ip
 8002284:	08d9      	lsrs	r1, r3, #3
 8002286:	9b02      	ldr	r3, [sp, #8]
 8002288:	075a      	lsls	r2, r3, #29
 800228a:	430a      	orrs	r2, r1
 800228c:	08dc      	lsrs	r4, r3, #3
 800228e:	e5ee      	b.n	8001e6e <__aeabi_dsub+0x222>
 8002290:	4663      	mov	r3, ip
 8002292:	9c02      	ldr	r4, [sp, #8]
 8002294:	9303      	str	r3, [sp, #12]
 8002296:	e6c7      	b.n	8002028 <__aeabi_dsub+0x3dc>
 8002298:	08c0      	lsrs	r0, r0, #3
 800229a:	2a00      	cmp	r2, #0
 800229c:	d100      	bne.n	80022a0 <__aeabi_dsub+0x654>
 800229e:	e6aa      	b.n	8001ff6 <__aeabi_dsub+0x3aa>
 80022a0:	0762      	lsls	r2, r4, #29
 80022a2:	4310      	orrs	r0, r2
 80022a4:	2280      	movs	r2, #128	@ 0x80
 80022a6:	08e4      	lsrs	r4, r4, #3
 80022a8:	0312      	lsls	r2, r2, #12
 80022aa:	4214      	tst	r4, r2
 80022ac:	d0d7      	beq.n	800225e <__aeabi_dsub+0x612>
 80022ae:	9f02      	ldr	r7, [sp, #8]
 80022b0:	08fd      	lsrs	r5, r7, #3
 80022b2:	4215      	tst	r5, r2
 80022b4:	d1d3      	bne.n	800225e <__aeabi_dsub+0x612>
 80022b6:	4663      	mov	r3, ip
 80022b8:	2601      	movs	r6, #1
 80022ba:	08d8      	lsrs	r0, r3, #3
 80022bc:	077b      	lsls	r3, r7, #29
 80022be:	002c      	movs	r4, r5
 80022c0:	4318      	orrs	r0, r3
 80022c2:	400e      	ands	r6, r1
 80022c4:	e7cb      	b.n	800225e <__aeabi_dsub+0x612>
 80022c6:	000a      	movs	r2, r1
 80022c8:	0027      	movs	r7, r4
 80022ca:	3a20      	subs	r2, #32
 80022cc:	40d7      	lsrs	r7, r2
 80022ce:	2920      	cmp	r1, #32
 80022d0:	d005      	beq.n	80022de <__aeabi_dsub+0x692>
 80022d2:	2240      	movs	r2, #64	@ 0x40
 80022d4:	1a52      	subs	r2, r2, r1
 80022d6:	4094      	lsls	r4, r2
 80022d8:	0025      	movs	r5, r4
 80022da:	4305      	orrs	r5, r0
 80022dc:	9503      	str	r5, [sp, #12]
 80022de:	9d03      	ldr	r5, [sp, #12]
 80022e0:	1e6a      	subs	r2, r5, #1
 80022e2:	4195      	sbcs	r5, r2
 80022e4:	432f      	orrs	r7, r5
 80022e6:	e610      	b.n	8001f0a <__aeabi_dsub+0x2be>
 80022e8:	0014      	movs	r4, r2
 80022ea:	2500      	movs	r5, #0
 80022ec:	2200      	movs	r2, #0
 80022ee:	e556      	b.n	8001d9e <__aeabi_dsub+0x152>
 80022f0:	9b02      	ldr	r3, [sp, #8]
 80022f2:	4460      	add	r0, ip
 80022f4:	4699      	mov	r9, r3
 80022f6:	4560      	cmp	r0, ip
 80022f8:	4192      	sbcs	r2, r2
 80022fa:	444c      	add	r4, r9
 80022fc:	4252      	negs	r2, r2
 80022fe:	0005      	movs	r5, r0
 8002300:	18a4      	adds	r4, r4, r2
 8002302:	e74c      	b.n	800219e <__aeabi_dsub+0x552>
 8002304:	001a      	movs	r2, r3
 8002306:	001c      	movs	r4, r3
 8002308:	432a      	orrs	r2, r5
 800230a:	d000      	beq.n	800230e <__aeabi_dsub+0x6c2>
 800230c:	e6b3      	b.n	8002076 <__aeabi_dsub+0x42a>
 800230e:	e6c9      	b.n	80020a4 <__aeabi_dsub+0x458>
 8002310:	2480      	movs	r4, #128	@ 0x80
 8002312:	2600      	movs	r6, #0
 8002314:	0324      	lsls	r4, r4, #12
 8002316:	e5ae      	b.n	8001e76 <__aeabi_dsub+0x22a>
 8002318:	2120      	movs	r1, #32
 800231a:	2500      	movs	r5, #0
 800231c:	1a09      	subs	r1, r1, r0
 800231e:	e517      	b.n	8001d50 <__aeabi_dsub+0x104>
 8002320:	2200      	movs	r2, #0
 8002322:	2500      	movs	r5, #0
 8002324:	4c0b      	ldr	r4, [pc, #44]	@ (8002354 <__aeabi_dsub+0x708>)
 8002326:	e53a      	b.n	8001d9e <__aeabi_dsub+0x152>
 8002328:	2d00      	cmp	r5, #0
 800232a:	d100      	bne.n	800232e <__aeabi_dsub+0x6e2>
 800232c:	e5f6      	b.n	8001f1c <__aeabi_dsub+0x2d0>
 800232e:	464b      	mov	r3, r9
 8002330:	1bda      	subs	r2, r3, r7
 8002332:	4692      	mov	sl, r2
 8002334:	2f00      	cmp	r7, #0
 8002336:	d100      	bne.n	800233a <__aeabi_dsub+0x6ee>
 8002338:	e66f      	b.n	800201a <__aeabi_dsub+0x3ce>
 800233a:	2a38      	cmp	r2, #56	@ 0x38
 800233c:	dc05      	bgt.n	800234a <__aeabi_dsub+0x6fe>
 800233e:	2680      	movs	r6, #128	@ 0x80
 8002340:	0436      	lsls	r6, r6, #16
 8002342:	4334      	orrs	r4, r6
 8002344:	4688      	mov	r8, r1
 8002346:	000e      	movs	r6, r1
 8002348:	e6d1      	b.n	80020ee <__aeabi_dsub+0x4a2>
 800234a:	4688      	mov	r8, r1
 800234c:	000e      	movs	r6, r1
 800234e:	2501      	movs	r5, #1
 8002350:	e6de      	b.n	8002110 <__aeabi_dsub+0x4c4>
 8002352:	46c0      	nop			@ (mov r8, r8)
 8002354:	000007ff 	.word	0x000007ff
 8002358:	ff7fffff 	.word	0xff7fffff
 800235c:	000007fe 	.word	0x000007fe
 8002360:	2d00      	cmp	r5, #0
 8002362:	d100      	bne.n	8002366 <__aeabi_dsub+0x71a>
 8002364:	e668      	b.n	8002038 <__aeabi_dsub+0x3ec>
 8002366:	464b      	mov	r3, r9
 8002368:	1bd9      	subs	r1, r3, r7
 800236a:	2f00      	cmp	r7, #0
 800236c:	d101      	bne.n	8002372 <__aeabi_dsub+0x726>
 800236e:	468a      	mov	sl, r1
 8002370:	e5a7      	b.n	8001ec2 <__aeabi_dsub+0x276>
 8002372:	2701      	movs	r7, #1
 8002374:	2938      	cmp	r1, #56	@ 0x38
 8002376:	dd00      	ble.n	800237a <__aeabi_dsub+0x72e>
 8002378:	e5c7      	b.n	8001f0a <__aeabi_dsub+0x2be>
 800237a:	2280      	movs	r2, #128	@ 0x80
 800237c:	0412      	lsls	r2, r2, #16
 800237e:	4314      	orrs	r4, r2
 8002380:	e5af      	b.n	8001ee2 <__aeabi_dsub+0x296>
 8002382:	46c0      	nop			@ (mov r8, r8)

08002384 <__aeabi_dcmpun>:
 8002384:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002386:	46c6      	mov	lr, r8
 8002388:	031e      	lsls	r6, r3, #12
 800238a:	0b36      	lsrs	r6, r6, #12
 800238c:	46b0      	mov	r8, r6
 800238e:	4e0d      	ldr	r6, [pc, #52]	@ (80023c4 <__aeabi_dcmpun+0x40>)
 8002390:	030c      	lsls	r4, r1, #12
 8002392:	004d      	lsls	r5, r1, #1
 8002394:	005f      	lsls	r7, r3, #1
 8002396:	b500      	push	{lr}
 8002398:	0b24      	lsrs	r4, r4, #12
 800239a:	0d6d      	lsrs	r5, r5, #21
 800239c:	0d7f      	lsrs	r7, r7, #21
 800239e:	42b5      	cmp	r5, r6
 80023a0:	d00b      	beq.n	80023ba <__aeabi_dcmpun+0x36>
 80023a2:	4908      	ldr	r1, [pc, #32]	@ (80023c4 <__aeabi_dcmpun+0x40>)
 80023a4:	2000      	movs	r0, #0
 80023a6:	428f      	cmp	r7, r1
 80023a8:	d104      	bne.n	80023b4 <__aeabi_dcmpun+0x30>
 80023aa:	4646      	mov	r6, r8
 80023ac:	4316      	orrs	r6, r2
 80023ae:	0030      	movs	r0, r6
 80023b0:	1e43      	subs	r3, r0, #1
 80023b2:	4198      	sbcs	r0, r3
 80023b4:	bc80      	pop	{r7}
 80023b6:	46b8      	mov	r8, r7
 80023b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80023ba:	4304      	orrs	r4, r0
 80023bc:	2001      	movs	r0, #1
 80023be:	2c00      	cmp	r4, #0
 80023c0:	d1f8      	bne.n	80023b4 <__aeabi_dcmpun+0x30>
 80023c2:	e7ee      	b.n	80023a2 <__aeabi_dcmpun+0x1e>
 80023c4:	000007ff 	.word	0x000007ff

080023c8 <__aeabi_d2iz>:
 80023c8:	000b      	movs	r3, r1
 80023ca:	0002      	movs	r2, r0
 80023cc:	b570      	push	{r4, r5, r6, lr}
 80023ce:	4d16      	ldr	r5, [pc, #88]	@ (8002428 <__aeabi_d2iz+0x60>)
 80023d0:	030c      	lsls	r4, r1, #12
 80023d2:	b082      	sub	sp, #8
 80023d4:	0049      	lsls	r1, r1, #1
 80023d6:	2000      	movs	r0, #0
 80023d8:	9200      	str	r2, [sp, #0]
 80023da:	9301      	str	r3, [sp, #4]
 80023dc:	0b24      	lsrs	r4, r4, #12
 80023de:	0d49      	lsrs	r1, r1, #21
 80023e0:	0fde      	lsrs	r6, r3, #31
 80023e2:	42a9      	cmp	r1, r5
 80023e4:	dd04      	ble.n	80023f0 <__aeabi_d2iz+0x28>
 80023e6:	4811      	ldr	r0, [pc, #68]	@ (800242c <__aeabi_d2iz+0x64>)
 80023e8:	4281      	cmp	r1, r0
 80023ea:	dd03      	ble.n	80023f4 <__aeabi_d2iz+0x2c>
 80023ec:	4b10      	ldr	r3, [pc, #64]	@ (8002430 <__aeabi_d2iz+0x68>)
 80023ee:	18f0      	adds	r0, r6, r3
 80023f0:	b002      	add	sp, #8
 80023f2:	bd70      	pop	{r4, r5, r6, pc}
 80023f4:	2080      	movs	r0, #128	@ 0x80
 80023f6:	0340      	lsls	r0, r0, #13
 80023f8:	4320      	orrs	r0, r4
 80023fa:	4c0e      	ldr	r4, [pc, #56]	@ (8002434 <__aeabi_d2iz+0x6c>)
 80023fc:	1a64      	subs	r4, r4, r1
 80023fe:	2c1f      	cmp	r4, #31
 8002400:	dd08      	ble.n	8002414 <__aeabi_d2iz+0x4c>
 8002402:	4b0d      	ldr	r3, [pc, #52]	@ (8002438 <__aeabi_d2iz+0x70>)
 8002404:	1a5b      	subs	r3, r3, r1
 8002406:	40d8      	lsrs	r0, r3
 8002408:	0003      	movs	r3, r0
 800240a:	4258      	negs	r0, r3
 800240c:	2e00      	cmp	r6, #0
 800240e:	d1ef      	bne.n	80023f0 <__aeabi_d2iz+0x28>
 8002410:	0018      	movs	r0, r3
 8002412:	e7ed      	b.n	80023f0 <__aeabi_d2iz+0x28>
 8002414:	4b09      	ldr	r3, [pc, #36]	@ (800243c <__aeabi_d2iz+0x74>)
 8002416:	9a00      	ldr	r2, [sp, #0]
 8002418:	469c      	mov	ip, r3
 800241a:	0003      	movs	r3, r0
 800241c:	4461      	add	r1, ip
 800241e:	408b      	lsls	r3, r1
 8002420:	40e2      	lsrs	r2, r4
 8002422:	4313      	orrs	r3, r2
 8002424:	e7f1      	b.n	800240a <__aeabi_d2iz+0x42>
 8002426:	46c0      	nop			@ (mov r8, r8)
 8002428:	000003fe 	.word	0x000003fe
 800242c:	0000041d 	.word	0x0000041d
 8002430:	7fffffff 	.word	0x7fffffff
 8002434:	00000433 	.word	0x00000433
 8002438:	00000413 	.word	0x00000413
 800243c:	fffffbed 	.word	0xfffffbed

08002440 <__aeabi_i2d>:
 8002440:	b570      	push	{r4, r5, r6, lr}
 8002442:	2800      	cmp	r0, #0
 8002444:	d016      	beq.n	8002474 <__aeabi_i2d+0x34>
 8002446:	17c3      	asrs	r3, r0, #31
 8002448:	18c5      	adds	r5, r0, r3
 800244a:	405d      	eors	r5, r3
 800244c:	0fc4      	lsrs	r4, r0, #31
 800244e:	0028      	movs	r0, r5
 8002450:	f000 f914 	bl	800267c <__clzsi2>
 8002454:	4b10      	ldr	r3, [pc, #64]	@ (8002498 <__aeabi_i2d+0x58>)
 8002456:	1a1b      	subs	r3, r3, r0
 8002458:	055b      	lsls	r3, r3, #21
 800245a:	0d5b      	lsrs	r3, r3, #21
 800245c:	280a      	cmp	r0, #10
 800245e:	dc14      	bgt.n	800248a <__aeabi_i2d+0x4a>
 8002460:	0002      	movs	r2, r0
 8002462:	002e      	movs	r6, r5
 8002464:	3215      	adds	r2, #21
 8002466:	4096      	lsls	r6, r2
 8002468:	220b      	movs	r2, #11
 800246a:	1a12      	subs	r2, r2, r0
 800246c:	40d5      	lsrs	r5, r2
 800246e:	032d      	lsls	r5, r5, #12
 8002470:	0b2d      	lsrs	r5, r5, #12
 8002472:	e003      	b.n	800247c <__aeabi_i2d+0x3c>
 8002474:	2400      	movs	r4, #0
 8002476:	2300      	movs	r3, #0
 8002478:	2500      	movs	r5, #0
 800247a:	2600      	movs	r6, #0
 800247c:	051b      	lsls	r3, r3, #20
 800247e:	432b      	orrs	r3, r5
 8002480:	07e4      	lsls	r4, r4, #31
 8002482:	4323      	orrs	r3, r4
 8002484:	0030      	movs	r0, r6
 8002486:	0019      	movs	r1, r3
 8002488:	bd70      	pop	{r4, r5, r6, pc}
 800248a:	380b      	subs	r0, #11
 800248c:	4085      	lsls	r5, r0
 800248e:	032d      	lsls	r5, r5, #12
 8002490:	2600      	movs	r6, #0
 8002492:	0b2d      	lsrs	r5, r5, #12
 8002494:	e7f2      	b.n	800247c <__aeabi_i2d+0x3c>
 8002496:	46c0      	nop			@ (mov r8, r8)
 8002498:	0000041e 	.word	0x0000041e

0800249c <__aeabi_ui2d>:
 800249c:	b510      	push	{r4, lr}
 800249e:	1e04      	subs	r4, r0, #0
 80024a0:	d010      	beq.n	80024c4 <__aeabi_ui2d+0x28>
 80024a2:	f000 f8eb 	bl	800267c <__clzsi2>
 80024a6:	4b0e      	ldr	r3, [pc, #56]	@ (80024e0 <__aeabi_ui2d+0x44>)
 80024a8:	1a1b      	subs	r3, r3, r0
 80024aa:	055b      	lsls	r3, r3, #21
 80024ac:	0d5b      	lsrs	r3, r3, #21
 80024ae:	280a      	cmp	r0, #10
 80024b0:	dc0f      	bgt.n	80024d2 <__aeabi_ui2d+0x36>
 80024b2:	220b      	movs	r2, #11
 80024b4:	0021      	movs	r1, r4
 80024b6:	1a12      	subs	r2, r2, r0
 80024b8:	40d1      	lsrs	r1, r2
 80024ba:	3015      	adds	r0, #21
 80024bc:	030a      	lsls	r2, r1, #12
 80024be:	4084      	lsls	r4, r0
 80024c0:	0b12      	lsrs	r2, r2, #12
 80024c2:	e001      	b.n	80024c8 <__aeabi_ui2d+0x2c>
 80024c4:	2300      	movs	r3, #0
 80024c6:	2200      	movs	r2, #0
 80024c8:	051b      	lsls	r3, r3, #20
 80024ca:	4313      	orrs	r3, r2
 80024cc:	0020      	movs	r0, r4
 80024ce:	0019      	movs	r1, r3
 80024d0:	bd10      	pop	{r4, pc}
 80024d2:	0022      	movs	r2, r4
 80024d4:	380b      	subs	r0, #11
 80024d6:	4082      	lsls	r2, r0
 80024d8:	0312      	lsls	r2, r2, #12
 80024da:	2400      	movs	r4, #0
 80024dc:	0b12      	lsrs	r2, r2, #12
 80024de:	e7f3      	b.n	80024c8 <__aeabi_ui2d+0x2c>
 80024e0:	0000041e 	.word	0x0000041e

080024e4 <__aeabi_f2d>:
 80024e4:	b570      	push	{r4, r5, r6, lr}
 80024e6:	0242      	lsls	r2, r0, #9
 80024e8:	0043      	lsls	r3, r0, #1
 80024ea:	0fc4      	lsrs	r4, r0, #31
 80024ec:	20fe      	movs	r0, #254	@ 0xfe
 80024ee:	0e1b      	lsrs	r3, r3, #24
 80024f0:	1c59      	adds	r1, r3, #1
 80024f2:	0a55      	lsrs	r5, r2, #9
 80024f4:	4208      	tst	r0, r1
 80024f6:	d00c      	beq.n	8002512 <__aeabi_f2d+0x2e>
 80024f8:	21e0      	movs	r1, #224	@ 0xe0
 80024fa:	0089      	lsls	r1, r1, #2
 80024fc:	468c      	mov	ip, r1
 80024fe:	076d      	lsls	r5, r5, #29
 8002500:	0b12      	lsrs	r2, r2, #12
 8002502:	4463      	add	r3, ip
 8002504:	051b      	lsls	r3, r3, #20
 8002506:	4313      	orrs	r3, r2
 8002508:	07e4      	lsls	r4, r4, #31
 800250a:	4323      	orrs	r3, r4
 800250c:	0028      	movs	r0, r5
 800250e:	0019      	movs	r1, r3
 8002510:	bd70      	pop	{r4, r5, r6, pc}
 8002512:	2b00      	cmp	r3, #0
 8002514:	d114      	bne.n	8002540 <__aeabi_f2d+0x5c>
 8002516:	2d00      	cmp	r5, #0
 8002518:	d01b      	beq.n	8002552 <__aeabi_f2d+0x6e>
 800251a:	0028      	movs	r0, r5
 800251c:	f000 f8ae 	bl	800267c <__clzsi2>
 8002520:	280a      	cmp	r0, #10
 8002522:	dc1c      	bgt.n	800255e <__aeabi_f2d+0x7a>
 8002524:	230b      	movs	r3, #11
 8002526:	002a      	movs	r2, r5
 8002528:	1a1b      	subs	r3, r3, r0
 800252a:	40da      	lsrs	r2, r3
 800252c:	0003      	movs	r3, r0
 800252e:	3315      	adds	r3, #21
 8002530:	409d      	lsls	r5, r3
 8002532:	4b0e      	ldr	r3, [pc, #56]	@ (800256c <__aeabi_f2d+0x88>)
 8002534:	0312      	lsls	r2, r2, #12
 8002536:	1a1b      	subs	r3, r3, r0
 8002538:	055b      	lsls	r3, r3, #21
 800253a:	0b12      	lsrs	r2, r2, #12
 800253c:	0d5b      	lsrs	r3, r3, #21
 800253e:	e7e1      	b.n	8002504 <__aeabi_f2d+0x20>
 8002540:	2d00      	cmp	r5, #0
 8002542:	d009      	beq.n	8002558 <__aeabi_f2d+0x74>
 8002544:	0b13      	lsrs	r3, r2, #12
 8002546:	2280      	movs	r2, #128	@ 0x80
 8002548:	0312      	lsls	r2, r2, #12
 800254a:	431a      	orrs	r2, r3
 800254c:	076d      	lsls	r5, r5, #29
 800254e:	4b08      	ldr	r3, [pc, #32]	@ (8002570 <__aeabi_f2d+0x8c>)
 8002550:	e7d8      	b.n	8002504 <__aeabi_f2d+0x20>
 8002552:	2300      	movs	r3, #0
 8002554:	2200      	movs	r2, #0
 8002556:	e7d5      	b.n	8002504 <__aeabi_f2d+0x20>
 8002558:	2200      	movs	r2, #0
 800255a:	4b05      	ldr	r3, [pc, #20]	@ (8002570 <__aeabi_f2d+0x8c>)
 800255c:	e7d2      	b.n	8002504 <__aeabi_f2d+0x20>
 800255e:	0003      	movs	r3, r0
 8002560:	002a      	movs	r2, r5
 8002562:	3b0b      	subs	r3, #11
 8002564:	409a      	lsls	r2, r3
 8002566:	2500      	movs	r5, #0
 8002568:	e7e3      	b.n	8002532 <__aeabi_f2d+0x4e>
 800256a:	46c0      	nop			@ (mov r8, r8)
 800256c:	00000389 	.word	0x00000389
 8002570:	000007ff 	.word	0x000007ff

08002574 <__aeabi_d2f>:
 8002574:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002576:	004b      	lsls	r3, r1, #1
 8002578:	030f      	lsls	r7, r1, #12
 800257a:	0d5b      	lsrs	r3, r3, #21
 800257c:	4c3b      	ldr	r4, [pc, #236]	@ (800266c <__aeabi_d2f+0xf8>)
 800257e:	0f45      	lsrs	r5, r0, #29
 8002580:	b083      	sub	sp, #12
 8002582:	0a7f      	lsrs	r7, r7, #9
 8002584:	1c5e      	adds	r6, r3, #1
 8002586:	432f      	orrs	r7, r5
 8002588:	9000      	str	r0, [sp, #0]
 800258a:	9101      	str	r1, [sp, #4]
 800258c:	0fca      	lsrs	r2, r1, #31
 800258e:	00c5      	lsls	r5, r0, #3
 8002590:	4226      	tst	r6, r4
 8002592:	d00b      	beq.n	80025ac <__aeabi_d2f+0x38>
 8002594:	4936      	ldr	r1, [pc, #216]	@ (8002670 <__aeabi_d2f+0xfc>)
 8002596:	185c      	adds	r4, r3, r1
 8002598:	2cfe      	cmp	r4, #254	@ 0xfe
 800259a:	dd13      	ble.n	80025c4 <__aeabi_d2f+0x50>
 800259c:	20ff      	movs	r0, #255	@ 0xff
 800259e:	2300      	movs	r3, #0
 80025a0:	05c0      	lsls	r0, r0, #23
 80025a2:	4318      	orrs	r0, r3
 80025a4:	07d2      	lsls	r2, r2, #31
 80025a6:	4310      	orrs	r0, r2
 80025a8:	b003      	add	sp, #12
 80025aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80025ac:	2b00      	cmp	r3, #0
 80025ae:	d102      	bne.n	80025b6 <__aeabi_d2f+0x42>
 80025b0:	2000      	movs	r0, #0
 80025b2:	2300      	movs	r3, #0
 80025b4:	e7f4      	b.n	80025a0 <__aeabi_d2f+0x2c>
 80025b6:	433d      	orrs	r5, r7
 80025b8:	d0f0      	beq.n	800259c <__aeabi_d2f+0x28>
 80025ba:	2380      	movs	r3, #128	@ 0x80
 80025bc:	03db      	lsls	r3, r3, #15
 80025be:	20ff      	movs	r0, #255	@ 0xff
 80025c0:	433b      	orrs	r3, r7
 80025c2:	e7ed      	b.n	80025a0 <__aeabi_d2f+0x2c>
 80025c4:	2c00      	cmp	r4, #0
 80025c6:	dd14      	ble.n	80025f2 <__aeabi_d2f+0x7e>
 80025c8:	9b00      	ldr	r3, [sp, #0]
 80025ca:	00ff      	lsls	r7, r7, #3
 80025cc:	019b      	lsls	r3, r3, #6
 80025ce:	1e58      	subs	r0, r3, #1
 80025d0:	4183      	sbcs	r3, r0
 80025d2:	0f69      	lsrs	r1, r5, #29
 80025d4:	433b      	orrs	r3, r7
 80025d6:	430b      	orrs	r3, r1
 80025d8:	0759      	lsls	r1, r3, #29
 80025da:	d041      	beq.n	8002660 <__aeabi_d2f+0xec>
 80025dc:	210f      	movs	r1, #15
 80025de:	4019      	ands	r1, r3
 80025e0:	2904      	cmp	r1, #4
 80025e2:	d028      	beq.n	8002636 <__aeabi_d2f+0xc2>
 80025e4:	3304      	adds	r3, #4
 80025e6:	0159      	lsls	r1, r3, #5
 80025e8:	d525      	bpl.n	8002636 <__aeabi_d2f+0xc2>
 80025ea:	3401      	adds	r4, #1
 80025ec:	2300      	movs	r3, #0
 80025ee:	b2e0      	uxtb	r0, r4
 80025f0:	e7d6      	b.n	80025a0 <__aeabi_d2f+0x2c>
 80025f2:	0021      	movs	r1, r4
 80025f4:	3117      	adds	r1, #23
 80025f6:	dbdb      	blt.n	80025b0 <__aeabi_d2f+0x3c>
 80025f8:	2180      	movs	r1, #128	@ 0x80
 80025fa:	201e      	movs	r0, #30
 80025fc:	0409      	lsls	r1, r1, #16
 80025fe:	4339      	orrs	r1, r7
 8002600:	1b00      	subs	r0, r0, r4
 8002602:	281f      	cmp	r0, #31
 8002604:	dd1b      	ble.n	800263e <__aeabi_d2f+0xca>
 8002606:	2602      	movs	r6, #2
 8002608:	4276      	negs	r6, r6
 800260a:	1b34      	subs	r4, r6, r4
 800260c:	000e      	movs	r6, r1
 800260e:	40e6      	lsrs	r6, r4
 8002610:	0034      	movs	r4, r6
 8002612:	2820      	cmp	r0, #32
 8002614:	d004      	beq.n	8002620 <__aeabi_d2f+0xac>
 8002616:	4817      	ldr	r0, [pc, #92]	@ (8002674 <__aeabi_d2f+0x100>)
 8002618:	4684      	mov	ip, r0
 800261a:	4463      	add	r3, ip
 800261c:	4099      	lsls	r1, r3
 800261e:	430d      	orrs	r5, r1
 8002620:	002b      	movs	r3, r5
 8002622:	1e59      	subs	r1, r3, #1
 8002624:	418b      	sbcs	r3, r1
 8002626:	4323      	orrs	r3, r4
 8002628:	0759      	lsls	r1, r3, #29
 800262a:	d015      	beq.n	8002658 <__aeabi_d2f+0xe4>
 800262c:	210f      	movs	r1, #15
 800262e:	2400      	movs	r4, #0
 8002630:	4019      	ands	r1, r3
 8002632:	2904      	cmp	r1, #4
 8002634:	d117      	bne.n	8002666 <__aeabi_d2f+0xf2>
 8002636:	019b      	lsls	r3, r3, #6
 8002638:	0a5b      	lsrs	r3, r3, #9
 800263a:	b2e0      	uxtb	r0, r4
 800263c:	e7b0      	b.n	80025a0 <__aeabi_d2f+0x2c>
 800263e:	4c0e      	ldr	r4, [pc, #56]	@ (8002678 <__aeabi_d2f+0x104>)
 8002640:	191c      	adds	r4, r3, r4
 8002642:	002b      	movs	r3, r5
 8002644:	40a5      	lsls	r5, r4
 8002646:	40c3      	lsrs	r3, r0
 8002648:	40a1      	lsls	r1, r4
 800264a:	1e68      	subs	r0, r5, #1
 800264c:	4185      	sbcs	r5, r0
 800264e:	4329      	orrs	r1, r5
 8002650:	430b      	orrs	r3, r1
 8002652:	2400      	movs	r4, #0
 8002654:	0759      	lsls	r1, r3, #29
 8002656:	d1c1      	bne.n	80025dc <__aeabi_d2f+0x68>
 8002658:	019b      	lsls	r3, r3, #6
 800265a:	2000      	movs	r0, #0
 800265c:	0a5b      	lsrs	r3, r3, #9
 800265e:	e79f      	b.n	80025a0 <__aeabi_d2f+0x2c>
 8002660:	08db      	lsrs	r3, r3, #3
 8002662:	b2e0      	uxtb	r0, r4
 8002664:	e79c      	b.n	80025a0 <__aeabi_d2f+0x2c>
 8002666:	3304      	adds	r3, #4
 8002668:	e7e5      	b.n	8002636 <__aeabi_d2f+0xc2>
 800266a:	46c0      	nop			@ (mov r8, r8)
 800266c:	000007fe 	.word	0x000007fe
 8002670:	fffffc80 	.word	0xfffffc80
 8002674:	fffffca2 	.word	0xfffffca2
 8002678:	fffffc82 	.word	0xfffffc82

0800267c <__clzsi2>:
 800267c:	211c      	movs	r1, #28
 800267e:	2301      	movs	r3, #1
 8002680:	041b      	lsls	r3, r3, #16
 8002682:	4298      	cmp	r0, r3
 8002684:	d301      	bcc.n	800268a <__clzsi2+0xe>
 8002686:	0c00      	lsrs	r0, r0, #16
 8002688:	3910      	subs	r1, #16
 800268a:	0a1b      	lsrs	r3, r3, #8
 800268c:	4298      	cmp	r0, r3
 800268e:	d301      	bcc.n	8002694 <__clzsi2+0x18>
 8002690:	0a00      	lsrs	r0, r0, #8
 8002692:	3908      	subs	r1, #8
 8002694:	091b      	lsrs	r3, r3, #4
 8002696:	4298      	cmp	r0, r3
 8002698:	d301      	bcc.n	800269e <__clzsi2+0x22>
 800269a:	0900      	lsrs	r0, r0, #4
 800269c:	3904      	subs	r1, #4
 800269e:	a202      	add	r2, pc, #8	@ (adr r2, 80026a8 <__clzsi2+0x2c>)
 80026a0:	5c10      	ldrb	r0, [r2, r0]
 80026a2:	1840      	adds	r0, r0, r1
 80026a4:	4770      	bx	lr
 80026a6:	46c0      	nop			@ (mov r8, r8)
 80026a8:	02020304 	.word	0x02020304
 80026ac:	01010101 	.word	0x01010101
	...

080026b8 <initPins>:
/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */


void initPins()
{
 80026b8:	b510      	push	{r4, lr}
	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, GPIO_PIN_RESET);
 80026ba:	2200      	movs	r2, #0
 80026bc:	2110      	movs	r1, #16
 80026be:	4802      	ldr	r0, [pc, #8]	@ (80026c8 <initPins+0x10>)
 80026c0:	f000 feca 	bl	8003458 <HAL_GPIO_WritePin>
}
 80026c4:	bd10      	pop	{r4, pc}
 80026c6:	46c0      	nop			@ (mov r8, r8)
 80026c8:	48000400 	.word	0x48000400

080026cc <HAL_ADC_ConvCpltCallback>:

// override function to set adcConversionComplete flag and end conversion
// _weak means that it can be overwritten
void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
{
	adcConversionComplete = 1;
 80026cc:	2201      	movs	r2, #1
 80026ce:	4b01      	ldr	r3, [pc, #4]	@ (80026d4 <HAL_ADC_ConvCpltCallback+0x8>)
 80026d0:	601a      	str	r2, [r3, #0]
}
 80026d2:	4770      	bx	lr
 80026d4:	200001f0 	.word	0x200001f0

080026d8 <thermistor>:
	HAL_ADC_Stop(&hadc);
}


float thermistor(uint16_t adcValue)
{
 80026d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	float raw = (float) adcValue;
 80026da:	f7fe f805 	bl	80006e8 <__aeabi_ui2f>
	raw = (raw / 4095.0) * 3.3;
 80026de:	f7ff ff01 	bl	80024e4 <__aeabi_f2d>
 80026e2:	2200      	movs	r2, #0
 80026e4:	4b1e      	ldr	r3, [pc, #120]	@ (8002760 <thermistor+0x88>)
 80026e6:	f7fe fba5 	bl	8000e34 <__aeabi_ddiv>
 80026ea:	4a1e      	ldr	r2, [pc, #120]	@ (8002764 <thermistor+0x8c>)
 80026ec:	4b1e      	ldr	r3, [pc, #120]	@ (8002768 <thermistor+0x90>)
 80026ee:	f7fe ffe5 	bl	80016bc <__aeabi_dmul>
 80026f2:	f7ff ff3f 	bl	8002574 <__aeabi_d2f>
	float Rt = 10000.0 * raw / (3.3 - raw);
 80026f6:	f7ff fef5 	bl	80024e4 <__aeabi_f2d>
 80026fa:	2200      	movs	r2, #0
 80026fc:	4b1b      	ldr	r3, [pc, #108]	@ (800276c <thermistor+0x94>)
 80026fe:	000d      	movs	r5, r1
 8002700:	0004      	movs	r4, r0
 8002702:	f7fe ffdb 	bl	80016bc <__aeabi_dmul>
 8002706:	002b      	movs	r3, r5
 8002708:	0006      	movs	r6, r0
 800270a:	000f      	movs	r7, r1
 800270c:	0022      	movs	r2, r4
 800270e:	4815      	ldr	r0, [pc, #84]	@ (8002764 <thermistor+0x8c>)
 8002710:	4915      	ldr	r1, [pc, #84]	@ (8002768 <thermistor+0x90>)
 8002712:	f7ff fa9b 	bl	8001c4c <__aeabi_dsub>
 8002716:	0002      	movs	r2, r0
 8002718:	000b      	movs	r3, r1
 800271a:	0030      	movs	r0, r6
 800271c:	0039      	movs	r1, r7
 800271e:	f7fe fb89 	bl	8000e34 <__aeabi_ddiv>
 8002722:	f7ff ff27 	bl	8002574 <__aeabi_d2f>
	float beta = 4300.0;
	float R0 = 8000.0;
	float T0 = 298.15;	// T0 in Kelvin (25°C)

	float temp = beta / (log(Rt/R0) + beta/T0);
 8002726:	4912      	ldr	r1, [pc, #72]	@ (8002770 <thermistor+0x98>)
 8002728:	f7fd febe 	bl	80004a8 <__aeabi_fdiv>
 800272c:	f7ff feda 	bl	80024e4 <__aeabi_f2d>
 8002730:	f004 fb2c 	bl	8006d8c <log>
 8002734:	22e0      	movs	r2, #224	@ 0xe0
 8002736:	4b0f      	ldr	r3, [pc, #60]	@ (8002774 <thermistor+0x9c>)
 8002738:	0612      	lsls	r2, r2, #24
 800273a:	f7fe f817 	bl	800076c <__aeabi_dadd>
 800273e:	0002      	movs	r2, r0
 8002740:	000b      	movs	r3, r1
 8002742:	2000      	movs	r0, #0
 8002744:	490c      	ldr	r1, [pc, #48]	@ (8002778 <thermistor+0xa0>)
 8002746:	f7fe fb75 	bl	8000e34 <__aeabi_ddiv>
 800274a:	f7ff ff13 	bl	8002574 <__aeabi_d2f>
    float t = (temp - 273.15);
 800274e:	f7ff fec9 	bl	80024e4 <__aeabi_f2d>
 8002752:	4a04      	ldr	r2, [pc, #16]	@ (8002764 <thermistor+0x8c>)
 8002754:	4b09      	ldr	r3, [pc, #36]	@ (800277c <thermistor+0xa4>)
 8002756:	f7ff fa79 	bl	8001c4c <__aeabi_dsub>
 800275a:	f7ff ff0b 	bl	8002574 <__aeabi_d2f>

    return t;
}
 800275e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002760:	40affe00 	.word	0x40affe00
 8002764:	66666666 	.word	0x66666666
 8002768:	400a6666 	.word	0x400a6666
 800276c:	40c38800 	.word	0x40c38800
 8002770:	45fa0000 	.word	0x45fa0000
 8002774:	402cd833 	.word	0x402cd833
 8002778:	40b0cc00 	.word	0x40b0cc00
 800277c:	40711266 	.word	0x40711266

08002780 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002780:	b510      	push	{r4, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002782:	2410      	movs	r4, #16
{
 8002784:	b092      	sub	sp, #72	@ 0x48
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002786:	2230      	movs	r2, #48	@ 0x30
 8002788:	2100      	movs	r1, #0
 800278a:	a806      	add	r0, sp, #24
 800278c:	f002 f93e 	bl	8004a0c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002790:	2100      	movs	r1, #0
 8002792:	0022      	movs	r2, r4
 8002794:	a801      	add	r0, sp, #4
 8002796:	f002 f939 	bl	8004a0c <memset>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800279a:	2302      	movs	r3, #2
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800279c:	a805      	add	r0, sp, #20
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800279e:	9305      	str	r3, [sp, #20]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80027a0:	3b01      	subs	r3, #1
 80027a2:	9308      	str	r3, [sp, #32]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80027a4:	9409      	str	r4, [sp, #36]	@ 0x24
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80027a6:	f000 fe5d 	bl	8003464 <HAL_RCC_OscConfig>
 80027aa:	1e01      	subs	r1, r0, #0
 80027ac:	d001      	beq.n	80027b2 <SystemClock_Config+0x32>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80027ae:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80027b0:	e7fe      	b.n	80027b0 <SystemClock_Config+0x30>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80027b2:	2307      	movs	r3, #7
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 80027b4:	9002      	str	r0, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80027b6:	9003      	str	r0, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80027b8:	9004      	str	r0, [sp, #16]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80027ba:	a801      	add	r0, sp, #4
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80027bc:	9301      	str	r3, [sp, #4]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80027be:	f001 f8d7 	bl	8003970 <HAL_RCC_ClockConfig>
 80027c2:	2800      	cmp	r0, #0
 80027c4:	d001      	beq.n	80027ca <SystemClock_Config+0x4a>
 80027c6:	b672      	cpsid	i
  while (1)
 80027c8:	e7fe      	b.n	80027c8 <SystemClock_Config+0x48>
}
 80027ca:	b012      	add	sp, #72	@ 0x48
 80027cc:	bd10      	pop	{r4, pc}
	...

080027d0 <main>:
{
 80027d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80027d2:	b08d      	sub	sp, #52	@ 0x34
  HAL_Init();
 80027d4:	f000 fa46 	bl	8002c64 <HAL_Init>
  SystemClock_Config();
 80027d8:	f7ff ffd2 	bl	8002780 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80027dc:	2214      	movs	r2, #20
 80027de:	2100      	movs	r1, #0
 80027e0:	a807      	add	r0, sp, #28
 80027e2:	f002 f913 	bl	8004a0c <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80027e6:	2280      	movs	r2, #128	@ 0x80
 80027e8:	4c5a      	ldr	r4, [pc, #360]	@ (8002954 <main+0x184>)
 80027ea:	03d2      	lsls	r2, r2, #15
 80027ec:	6963      	ldr	r3, [r4, #20]
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, GPIO_PIN_RESET);
 80027ee:	2110      	movs	r1, #16
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80027f0:	4313      	orrs	r3, r2
 80027f2:	6163      	str	r3, [r4, #20]
 80027f4:	6963      	ldr	r3, [r4, #20]
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, GPIO_PIN_RESET);
 80027f6:	4858      	ldr	r0, [pc, #352]	@ (8002958 <main+0x188>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80027f8:	4013      	ands	r3, r2
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80027fa:	2280      	movs	r2, #128	@ 0x80
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80027fc:	9304      	str	r3, [sp, #16]
 80027fe:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002800:	6963      	ldr	r3, [r4, #20]
 8002802:	0292      	lsls	r2, r2, #10
 8002804:	4313      	orrs	r3, r2
 8002806:	6163      	str	r3, [r4, #20]
 8002808:	6963      	ldr	r3, [r4, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800280a:	2600      	movs	r6, #0
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800280c:	4013      	ands	r3, r2
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800280e:	2280      	movs	r2, #128	@ 0x80
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002810:	9305      	str	r3, [sp, #20]
 8002812:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002814:	6963      	ldr	r3, [r4, #20]
 8002816:	02d2      	lsls	r2, r2, #11
 8002818:	4313      	orrs	r3, r2
 800281a:	6163      	str	r3, [r4, #20]
 800281c:	6963      	ldr	r3, [r4, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800281e:	2701      	movs	r7, #1
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002820:	4013      	ands	r3, r2
 8002822:	9306      	str	r3, [sp, #24]
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, GPIO_PIN_RESET);
 8002824:	2200      	movs	r2, #0
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002826:	9b06      	ldr	r3, [sp, #24]
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, GPIO_PIN_RESET);
 8002828:	f000 fe16 	bl	8003458 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = GPIO_PIN_4;
 800282c:	2310      	movs	r3, #16
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800282e:	484a      	ldr	r0, [pc, #296]	@ (8002958 <main+0x188>)
 8002830:	a907      	add	r1, sp, #28
  GPIO_InitStruct.Pin = GPIO_PIN_4;
 8002832:	9307      	str	r3, [sp, #28]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002834:	9609      	str	r6, [sp, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002836:	960a      	str	r6, [sp, #40]	@ 0x28
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002838:	9708      	str	r7, [sp, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800283a:	f000 fd5b 	bl	80032f4 <HAL_GPIO_Init>
  __HAL_RCC_DMA1_CLK_ENABLE();
 800283e:	6963      	ldr	r3, [r4, #20]
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 8002840:	0032      	movs	r2, r6
  __HAL_RCC_DMA1_CLK_ENABLE();
 8002842:	433b      	orrs	r3, r7
 8002844:	6163      	str	r3, [r4, #20]
 8002846:	6963      	ldr	r3, [r4, #20]
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 8002848:	0031      	movs	r1, r6
  __HAL_RCC_DMA1_CLK_ENABLE();
 800284a:	403b      	ands	r3, r7
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 800284c:	2009      	movs	r0, #9
  __HAL_RCC_DMA1_CLK_ENABLE();
 800284e:	9303      	str	r3, [sp, #12]
 8002850:	9b03      	ldr	r3, [sp, #12]
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 8002852:	f000 fc47 	bl	80030e4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 8002856:	2009      	movs	r0, #9
 8002858:	f000 fc6e 	bl	8003138 <HAL_NVIC_EnableIRQ>
  huart2.Instance = USART2;
 800285c:	4d3f      	ldr	r5, [pc, #252]	@ (800295c <main+0x18c>)
 800285e:	4b40      	ldr	r3, [pc, #256]	@ (8002960 <main+0x190>)
  huart2.Init.Mode = UART_MODE_TX_RX;
 8002860:	240c      	movs	r4, #12
  huart2.Instance = USART2;
 8002862:	602b      	str	r3, [r5, #0]
  huart2.Init.BaudRate = 115200;
 8002864:	23e1      	movs	r3, #225	@ 0xe1
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8002866:	0028      	movs	r0, r5
  huart2.Init.BaudRate = 115200;
 8002868:	025b      	lsls	r3, r3, #9
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800286a:	60ae      	str	r6, [r5, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 800286c:	60ee      	str	r6, [r5, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 800286e:	612e      	str	r6, [r5, #16]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002870:	61ae      	str	r6, [r5, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8002872:	61ee      	str	r6, [r5, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8002874:	622e      	str	r6, [r5, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8002876:	626e      	str	r6, [r5, #36]	@ 0x24
  huart2.Init.BaudRate = 115200;
 8002878:	606b      	str	r3, [r5, #4]
  huart2.Init.Mode = UART_MODE_TX_RX;
 800287a:	616c      	str	r4, [r5, #20]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800287c:	f001 fb4e 	bl	8003f1c <HAL_UART_Init>
 8002880:	1e06      	subs	r6, r0, #0
 8002882:	d001      	beq.n	8002888 <main+0xb8>
 8002884:	b672      	cpsid	i
  while (1)
 8002886:	e7fe      	b.n	8002886 <main+0xb6>
  ADC_ChannelConfTypeDef sConfig = {0};
 8002888:	0022      	movs	r2, r4
 800288a:	0001      	movs	r1, r0
 800288c:	a807      	add	r0, sp, #28
 800288e:	f002 f8bd 	bl	8004a0c <memset>
  hadc.Instance = ADC1;
 8002892:	4c34      	ldr	r4, [pc, #208]	@ (8002964 <main+0x194>)
 8002894:	4b34      	ldr	r3, [pc, #208]	@ (8002968 <main+0x198>)
  if (HAL_ADC_Init(&hadc) != HAL_OK)
 8002896:	0020      	movs	r0, r4
  hadc.Instance = ADC1;
 8002898:	6023      	str	r3, [r4, #0]
  hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 800289a:	2380      	movs	r3, #128	@ 0x80
 800289c:	05db      	lsls	r3, r3, #23
 800289e:	6063      	str	r3, [r4, #4]
  hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80028a0:	2304      	movs	r3, #4
 80028a2:	6163      	str	r3, [r4, #20]
  hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80028a4:	23c2      	movs	r3, #194	@ 0xc2
 80028a6:	33ff      	adds	r3, #255	@ 0xff
 80028a8:	61e3      	str	r3, [r4, #28]
  hadc.Init.DMAContinuousRequests = DISABLE;
 80028aa:	1d63      	adds	r3, r4, #5
  hadc.Init.Resolution = ADC_RESOLUTION_12B;
 80028ac:	60a6      	str	r6, [r4, #8]
  hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80028ae:	60e6      	str	r6, [r4, #12]
  hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 80028b0:	6127      	str	r7, [r4, #16]
  hadc.Init.LowPowerAutoWait = DISABLE;
 80028b2:	61a6      	str	r6, [r4, #24]
  hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80028b4:	6226      	str	r6, [r4, #32]
  hadc.Init.DMAContinuousRequests = DISABLE;
 80028b6:	77de      	strb	r6, [r3, #31]
  hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 80028b8:	62a7      	str	r7, [r4, #40]	@ 0x28
  if (HAL_ADC_Init(&hadc) != HAL_OK)
 80028ba:	f000 fa57 	bl	8002d6c <HAL_ADC_Init>
 80028be:	2800      	cmp	r0, #0
 80028c0:	d001      	beq.n	80028c6 <main+0xf6>
 80028c2:	b672      	cpsid	i
  while (1)
 80028c4:	e7fe      	b.n	80028c4 <main+0xf4>
  sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 80028c6:	2380      	movs	r3, #128	@ 0x80
 80028c8:	015b      	lsls	r3, r3, #5
 80028ca:	9308      	str	r3, [sp, #32]
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 80028cc:	2380      	movs	r3, #128	@ 0x80
  sConfig.Channel = ADC_CHANNEL_0;
 80028ce:	9007      	str	r0, [sp, #28]
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 80028d0:	055b      	lsls	r3, r3, #21
  if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 80028d2:	0020      	movs	r0, r4
 80028d4:	a907      	add	r1, sp, #28
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 80028d6:	9309      	str	r3, [sp, #36]	@ 0x24
  if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 80028d8:	f000 fb80 	bl	8002fdc <HAL_ADC_ConfigChannel>
 80028dc:	2800      	cmp	r0, #0
 80028de:	d001      	beq.n	80028e4 <main+0x114>
 80028e0:	b672      	cpsid	i
  while (1)
 80028e2:	e7fe      	b.n	80028e2 <main+0x112>
  sConfig.Channel = ADC_CHANNEL_8;
 80028e4:	2308      	movs	r3, #8
  if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 80028e6:	0020      	movs	r0, r4
 80028e8:	a907      	add	r1, sp, #28
  sConfig.Channel = ADC_CHANNEL_8;
 80028ea:	9307      	str	r3, [sp, #28]
  if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 80028ec:	f000 fb76 	bl	8002fdc <HAL_ADC_ConfigChannel>
 80028f0:	2800      	cmp	r0, #0
 80028f2:	d001      	beq.n	80028f8 <main+0x128>
 80028f4:	b672      	cpsid	i
  while (1)
 80028f6:	e7fe      	b.n	80028f6 <main+0x126>
	  HAL_UART_Transmit(&huart2, buffer, strlen(buffer), HAL_MAX_DELAY);
 80028f8:	2701      	movs	r7, #1
  initPins();
 80028fa:	f7ff fedd 	bl	80026b8 <initPins>
	  HAL_UART_Transmit(&huart2, buffer, strlen(buffer), HAL_MAX_DELAY);
 80028fe:	427f      	negs	r7, r7
	  HAL_ADC_Start_DMA(&hadc, (uint32_t) adcResultsDMA, adcChannelCount);
 8002900:	4e1a      	ldr	r6, [pc, #104]	@ (800296c <main+0x19c>)
 8002902:	2202      	movs	r2, #2
 8002904:	0031      	movs	r1, r6
 8002906:	0020      	movs	r0, r4
 8002908:	f000 fad2 	bl	8002eb0 <HAL_ADC_Start_DMA>
	  while (adcConversionComplete == 0) {}
 800290c:	4b18      	ldr	r3, [pc, #96]	@ (8002970 <main+0x1a0>)
 800290e:	681a      	ldr	r2, [r3, #0]
 8002910:	2a00      	cmp	r2, #0
 8002912:	d0fc      	beq.n	800290e <main+0x13e>
	  adcConversionComplete = 0; 	// to be ready for next conversion
 8002914:	2200      	movs	r2, #0
 8002916:	601a      	str	r2, [r3, #0]
	  float temp = thermistor(adcResultsDMA[0]);		// thermistor has bigger priority (smaller pin value)
 8002918:	8830      	ldrh	r0, [r6, #0]
 800291a:	b280      	uxth	r0, r0
 800291c:	f7ff fedc 	bl	80026d8 <thermistor>
	  sprintf((char*)buffer,"Temperature: %.2f, Potentiometer: %hu\n", temp, adcResultsDMA[1]);
 8002920:	f7ff fde0 	bl	80024e4 <__aeabi_f2d>
 8002924:	8876      	ldrh	r6, [r6, #2]
 8002926:	0002      	movs	r2, r0
 8002928:	4812      	ldr	r0, [pc, #72]	@ (8002974 <main+0x1a4>)
 800292a:	b2b6      	uxth	r6, r6
 800292c:	9600      	str	r6, [sp, #0]
 800292e:	0006      	movs	r6, r0
 8002930:	000b      	movs	r3, r1
 8002932:	4911      	ldr	r1, [pc, #68]	@ (8002978 <main+0x1a8>)
 8002934:	f001 ff86 	bl	8004844 <siprintf>
	  HAL_UART_Transmit(&huart2, buffer, strlen(buffer), HAL_MAX_DELAY);
 8002938:	0030      	movs	r0, r6
 800293a:	f7fd fbe5 	bl	8000108 <strlen>
 800293e:	003b      	movs	r3, r7
 8002940:	b282      	uxth	r2, r0
 8002942:	0031      	movs	r1, r6
 8002944:	0028      	movs	r0, r5
 8002946:	f001 fa23 	bl	8003d90 <HAL_UART_Transmit>
	  HAL_Delay(100);
 800294a:	2064      	movs	r0, #100	@ 0x64
 800294c:	f000 f9ac 	bl	8002ca8 <HAL_Delay>
  {
 8002950:	e7d6      	b.n	8002900 <main+0x130>
 8002952:	46c0      	nop			@ (mov r8, r8)
 8002954:	40021000 	.word	0x40021000
 8002958:	48000400 	.word	0x48000400
 800295c:	200002c0 	.word	0x200002c0
 8002960:	40004400 	.word	0x40004400
 8002964:	2000038c 	.word	0x2000038c
 8002968:	40012400 	.word	0x40012400
 800296c:	200001f4 	.word	0x200001f4
 8002970:	200001f0 	.word	0x200001f0
 8002974:	200001f8 	.word	0x200001f8
 8002978:	0800723c 	.word	0x0800723c

0800297c <Error_Handler>:
 800297c:	b672      	cpsid	i
  while (1)
 800297e:	e7fe      	b.n	800297e <Error_Handler+0x2>

08002980 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002980:	2101      	movs	r1, #1
 8002982:	4b0a      	ldr	r3, [pc, #40]	@ (80029ac <HAL_MspInit+0x2c>)
{
 8002984:	b082      	sub	sp, #8
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002986:	699a      	ldr	r2, [r3, #24]
 8002988:	430a      	orrs	r2, r1
 800298a:	619a      	str	r2, [r3, #24]
 800298c:	699a      	ldr	r2, [r3, #24]
 800298e:	400a      	ands	r2, r1
  __HAL_RCC_PWR_CLK_ENABLE();
 8002990:	2180      	movs	r1, #128	@ 0x80
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002992:	9200      	str	r2, [sp, #0]
 8002994:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002996:	69da      	ldr	r2, [r3, #28]
 8002998:	0549      	lsls	r1, r1, #21
 800299a:	430a      	orrs	r2, r1
 800299c:	61da      	str	r2, [r3, #28]
 800299e:	69db      	ldr	r3, [r3, #28]
 80029a0:	400b      	ands	r3, r1
 80029a2:	9301      	str	r3, [sp, #4]
 80029a4:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80029a6:	b002      	add	sp, #8
 80029a8:	4770      	bx	lr
 80029aa:	46c0      	nop			@ (mov r8, r8)
 80029ac:	40021000 	.word	0x40021000

080029b0 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 80029b0:	b570      	push	{r4, r5, r6, lr}
 80029b2:	0005      	movs	r5, r0
 80029b4:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80029b6:	2214      	movs	r2, #20
 80029b8:	2100      	movs	r1, #0
 80029ba:	a803      	add	r0, sp, #12
 80029bc:	f002 f826 	bl	8004a0c <memset>
  if(hadc->Instance==ADC1)
 80029c0:	4b24      	ldr	r3, [pc, #144]	@ (8002a54 <HAL_ADC_MspInit+0xa4>)
 80029c2:	682a      	ldr	r2, [r5, #0]
 80029c4:	429a      	cmp	r2, r3
 80029c6:	d143      	bne.n	8002a50 <HAL_ADC_MspInit+0xa0>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 80029c8:	2180      	movs	r1, #128	@ 0x80
 80029ca:	4b23      	ldr	r3, [pc, #140]	@ (8002a58 <HAL_ADC_MspInit+0xa8>)
 80029cc:	0089      	lsls	r1, r1, #2
 80029ce:	699a      	ldr	r2, [r3, #24]
    PB0     ------> ADC_IN8
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80029d0:	2090      	movs	r0, #144	@ 0x90
    __HAL_RCC_ADC1_CLK_ENABLE();
 80029d2:	430a      	orrs	r2, r1
 80029d4:	619a      	str	r2, [r3, #24]
 80029d6:	699a      	ldr	r2, [r3, #24]
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 80029d8:	2601      	movs	r6, #1
    __HAL_RCC_ADC1_CLK_ENABLE();
 80029da:	400a      	ands	r2, r1
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80029dc:	2180      	movs	r1, #128	@ 0x80
    __HAL_RCC_ADC1_CLK_ENABLE();
 80029de:	9200      	str	r2, [sp, #0]
 80029e0:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80029e2:	695a      	ldr	r2, [r3, #20]
 80029e4:	0289      	lsls	r1, r1, #10
 80029e6:	430a      	orrs	r2, r1
 80029e8:	615a      	str	r2, [r3, #20]
 80029ea:	695a      	ldr	r2, [r3, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80029ec:	2403      	movs	r4, #3
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80029ee:	400a      	ands	r2, r1
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80029f0:	2180      	movs	r1, #128	@ 0x80
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80029f2:	9201      	str	r2, [sp, #4]
 80029f4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80029f6:	695a      	ldr	r2, [r3, #20]
 80029f8:	02c9      	lsls	r1, r1, #11
 80029fa:	430a      	orrs	r2, r1
 80029fc:	615a      	str	r2, [r3, #20]
 80029fe:	695b      	ldr	r3, [r3, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002a00:	05c0      	lsls	r0, r0, #23
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002a02:	400b      	ands	r3, r1
 8002a04:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002a06:	a903      	add	r1, sp, #12
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002a08:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8002a0a:	9603      	str	r6, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8002a0c:	9404      	str	r4, [sp, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002a0e:	f000 fc71 	bl	80032f4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8002a12:	9603      	str	r6, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a14:	2600      	movs	r6, #0
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002a16:	4811      	ldr	r0, [pc, #68]	@ (8002a5c <HAL_ADC_MspInit+0xac>)
 8002a18:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8002a1a:	9404      	str	r4, [sp, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a1c:	9605      	str	r6, [sp, #20]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002a1e:	f000 fc69 	bl	80032f4 <HAL_GPIO_Init>

    /* ADC1 DMA Init */
    /* ADC Init */
    hdma_adc.Instance = DMA1_Channel1;
 8002a22:	4c0f      	ldr	r4, [pc, #60]	@ (8002a60 <HAL_ADC_MspInit+0xb0>)
 8002a24:	4b0f      	ldr	r3, [pc, #60]	@ (8002a64 <HAL_ADC_MspInit+0xb4>)
    hdma_adc.Init.MemInc = DMA_MINC_ENABLE;
    hdma_adc.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
    hdma_adc.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
    hdma_adc.Init.Mode = DMA_NORMAL;
    hdma_adc.Init.Priority = DMA_PRIORITY_LOW;
    if (HAL_DMA_Init(&hdma_adc) != HAL_OK)
 8002a26:	0020      	movs	r0, r4
    hdma_adc.Instance = DMA1_Channel1;
 8002a28:	6023      	str	r3, [r4, #0]
    hdma_adc.Init.MemInc = DMA_MINC_ENABLE;
 8002a2a:	2380      	movs	r3, #128	@ 0x80
 8002a2c:	60e3      	str	r3, [r4, #12]
    hdma_adc.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8002a2e:	18db      	adds	r3, r3, r3
 8002a30:	6123      	str	r3, [r4, #16]
    hdma_adc.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 8002a32:	2380      	movs	r3, #128	@ 0x80
 8002a34:	00db      	lsls	r3, r3, #3
    hdma_adc.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8002a36:	6066      	str	r6, [r4, #4]
    hdma_adc.Init.PeriphInc = DMA_PINC_DISABLE;
 8002a38:	60a6      	str	r6, [r4, #8]
    hdma_adc.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 8002a3a:	6163      	str	r3, [r4, #20]
    hdma_adc.Init.Mode = DMA_NORMAL;
 8002a3c:	61a6      	str	r6, [r4, #24]
    hdma_adc.Init.Priority = DMA_PRIORITY_LOW;
 8002a3e:	61e6      	str	r6, [r4, #28]
    if (HAL_DMA_Init(&hdma_adc) != HAL_OK)
 8002a40:	f000 fba0 	bl	8003184 <HAL_DMA_Init>
 8002a44:	42b0      	cmp	r0, r6
 8002a46:	d001      	beq.n	8002a4c <HAL_ADC_MspInit+0x9c>
    {
      Error_Handler();
 8002a48:	f7ff ff98 	bl	800297c <Error_Handler>
    }

    __HAL_LINKDMA(hadc,DMA_Handle,hdma_adc);
 8002a4c:	632c      	str	r4, [r5, #48]	@ 0x30
 8002a4e:	6265      	str	r5, [r4, #36]	@ 0x24

  /* USER CODE END ADC1_MspInit 1 */

  }

}
 8002a50:	b008      	add	sp, #32
 8002a52:	bd70      	pop	{r4, r5, r6, pc}
 8002a54:	40012400 	.word	0x40012400
 8002a58:	40021000 	.word	0x40021000
 8002a5c:	48000400 	.word	0x48000400
 8002a60:	20000348 	.word	0x20000348
 8002a64:	40020008 	.word	0x40020008

08002a68 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8002a68:	b510      	push	{r4, lr}
 8002a6a:	0004      	movs	r4, r0
 8002a6c:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002a6e:	2214      	movs	r2, #20
 8002a70:	2100      	movs	r1, #0
 8002a72:	a803      	add	r0, sp, #12
 8002a74:	f001 ffca 	bl	8004a0c <memset>
  if(huart->Instance==USART2)
 8002a78:	4b11      	ldr	r3, [pc, #68]	@ (8002ac0 <HAL_UART_MspInit+0x58>)
 8002a7a:	6822      	ldr	r2, [r4, #0]
 8002a7c:	429a      	cmp	r2, r3
 8002a7e:	d11d      	bne.n	8002abc <HAL_UART_MspInit+0x54>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8002a80:	2280      	movs	r2, #128	@ 0x80
 8002a82:	4b10      	ldr	r3, [pc, #64]	@ (8002ac4 <HAL_UART_MspInit+0x5c>)
 8002a84:	0292      	lsls	r2, r2, #10
 8002a86:	69d9      	ldr	r1, [r3, #28]
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002a88:	2090      	movs	r0, #144	@ 0x90
    __HAL_RCC_USART2_CLK_ENABLE();
 8002a8a:	4311      	orrs	r1, r2
 8002a8c:	61d9      	str	r1, [r3, #28]
 8002a8e:	69d9      	ldr	r1, [r3, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002a90:	05c0      	lsls	r0, r0, #23
    __HAL_RCC_USART2_CLK_ENABLE();
 8002a92:	4011      	ands	r1, r2
 8002a94:	9101      	str	r1, [sp, #4]
 8002a96:	9901      	ldr	r1, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002a98:	6959      	ldr	r1, [r3, #20]
 8002a9a:	4311      	orrs	r1, r2
 8002a9c:	6159      	str	r1, [r3, #20]
 8002a9e:	695b      	ldr	r3, [r3, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002aa0:	a903      	add	r1, sp, #12
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002aa2:	4013      	ands	r3, r2
 8002aa4:	9302      	str	r3, [sp, #8]
 8002aa6:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8002aa8:	230c      	movs	r3, #12
 8002aaa:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002aac:	3b0a      	subs	r3, #10
 8002aae:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002ab0:	3301      	adds	r3, #1
 8002ab2:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
 8002ab4:	3b02      	subs	r3, #2
 8002ab6:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002ab8:	f000 fc1c 	bl	80032f4 <HAL_GPIO_Init>

  /* USER CODE END USART2_MspInit 1 */

  }

}
 8002abc:	b008      	add	sp, #32
 8002abe:	bd10      	pop	{r4, pc}
 8002ac0:	40004400 	.word	0x40004400
 8002ac4:	40021000 	.word	0x40021000

08002ac8 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8002ac8:	e7fe      	b.n	8002ac8 <NMI_Handler>

08002aca <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002aca:	e7fe      	b.n	8002aca <HardFault_Handler>

08002acc <SVC_Handler>:

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8002acc:	4770      	bx	lr

08002ace <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
 8002ace:	4770      	bx	lr

08002ad0 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002ad0:	b510      	push	{r4, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002ad2:	f000 f8d7 	bl	8002c84 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002ad6:	bd10      	pop	{r4, pc}

08002ad8 <DMA1_Channel1_IRQHandler>:

/**
  * @brief This function handles DMA1 channel 1 interrupt.
  */
void DMA1_Channel1_IRQHandler(void)
{
 8002ad8:	b510      	push	{r4, lr}
  /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */

  /* USER CODE END DMA1_Channel1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc);
 8002ada:	4802      	ldr	r0, [pc, #8]	@ (8002ae4 <DMA1_Channel1_IRQHandler+0xc>)
 8002adc:	f000 fbc0 	bl	8003260 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */

  /* USER CODE END DMA1_Channel1_IRQn 1 */
}
 8002ae0:	bd10      	pop	{r4, pc}
 8002ae2:	46c0      	nop			@ (mov r8, r8)
 8002ae4:	20000348 	.word	0x20000348

08002ae8 <_getpid>:
}

int _getpid(void)
{
  return 1;
}
 8002ae8:	2001      	movs	r0, #1
 8002aea:	4770      	bx	lr

08002aec <_kill>:

int _kill(int pid, int sig)
{
 8002aec:	b510      	push	{r4, lr}
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8002aee:	f001 ff99 	bl	8004a24 <__errno>
 8002af2:	2316      	movs	r3, #22
 8002af4:	6003      	str	r3, [r0, #0]
  return -1;
 8002af6:	2001      	movs	r0, #1
}
 8002af8:	4240      	negs	r0, r0
 8002afa:	bd10      	pop	{r4, pc}

08002afc <_exit>:

void _exit (int status)
{
 8002afc:	b510      	push	{r4, lr}
  errno = EINVAL;
 8002afe:	f001 ff91 	bl	8004a24 <__errno>
 8002b02:	2316      	movs	r3, #22
 8002b04:	6003      	str	r3, [r0, #0]
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
 8002b06:	e7fe      	b.n	8002b06 <_exit+0xa>

08002b08 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002b08:	b570      	push	{r4, r5, r6, lr}
 8002b0a:	000e      	movs	r6, r1
 8002b0c:	0014      	movs	r4, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002b0e:	2500      	movs	r5, #0
 8002b10:	42a5      	cmp	r5, r4
 8002b12:	db01      	blt.n	8002b18 <_read+0x10>
  {
    *ptr++ = __io_getchar();
  }

  return len;
}
 8002b14:	0020      	movs	r0, r4
 8002b16:	bd70      	pop	{r4, r5, r6, pc}
    *ptr++ = __io_getchar();
 8002b18:	e000      	b.n	8002b1c <_read+0x14>
 8002b1a:	bf00      	nop
 8002b1c:	5570      	strb	r0, [r6, r5]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002b1e:	3501      	adds	r5, #1
 8002b20:	e7f6      	b.n	8002b10 <_read+0x8>

08002b22 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002b22:	b570      	push	{r4, r5, r6, lr}
 8002b24:	000e      	movs	r6, r1
 8002b26:	0014      	movs	r4, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002b28:	2500      	movs	r5, #0
 8002b2a:	42a5      	cmp	r5, r4
 8002b2c:	db01      	blt.n	8002b32 <_write+0x10>
  {
    __io_putchar(*ptr++);
  }
  return len;
}
 8002b2e:	0020      	movs	r0, r4
 8002b30:	bd70      	pop	{r4, r5, r6, pc}
    __io_putchar(*ptr++);
 8002b32:	5d70      	ldrb	r0, [r6, r5]
 8002b34:	e000      	b.n	8002b38 <_write+0x16>
 8002b36:	bf00      	nop
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002b38:	3501      	adds	r5, #1
 8002b3a:	e7f6      	b.n	8002b2a <_write+0x8>

08002b3c <_close>:

int _close(int file)
{
  (void)file;
  return -1;
 8002b3c:	2001      	movs	r0, #1
}
 8002b3e:	4240      	negs	r0, r0
 8002b40:	4770      	bx	lr

08002b42 <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
 8002b42:	2380      	movs	r3, #128	@ 0x80
 8002b44:	019b      	lsls	r3, r3, #6
  return 0;
}
 8002b46:	2000      	movs	r0, #0
  st->st_mode = S_IFCHR;
 8002b48:	604b      	str	r3, [r1, #4]
}
 8002b4a:	4770      	bx	lr

08002b4c <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
 8002b4c:	2001      	movs	r0, #1
 8002b4e:	4770      	bx	lr

08002b50 <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
 8002b50:	2000      	movs	r0, #0
 8002b52:	4770      	bx	lr

08002b54 <_sbrk>:
void *_sbrk(ptrdiff_t incr)
{
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002b54:	490b      	ldr	r1, [pc, #44]	@ (8002b84 <_sbrk+0x30>)
 8002b56:	4a0c      	ldr	r2, [pc, #48]	@ (8002b88 <_sbrk+0x34>)
{
 8002b58:	0003      	movs	r3, r0
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002b5a:	1a52      	subs	r2, r2, r1
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002b5c:	490b      	ldr	r1, [pc, #44]	@ (8002b8c <_sbrk+0x38>)
{
 8002b5e:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 8002b60:	6808      	ldr	r0, [r1, #0]
 8002b62:	2800      	cmp	r0, #0
 8002b64:	d101      	bne.n	8002b6a <_sbrk+0x16>
  {
    __sbrk_heap_end = &_end;
 8002b66:	480a      	ldr	r0, [pc, #40]	@ (8002b90 <_sbrk+0x3c>)
 8002b68:	6008      	str	r0, [r1, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002b6a:	6808      	ldr	r0, [r1, #0]
 8002b6c:	18c3      	adds	r3, r0, r3
 8002b6e:	4293      	cmp	r3, r2
 8002b70:	d906      	bls.n	8002b80 <_sbrk+0x2c>
  {
    errno = ENOMEM;
 8002b72:	f001 ff57 	bl	8004a24 <__errno>
 8002b76:	230c      	movs	r3, #12
 8002b78:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8002b7a:	2001      	movs	r0, #1
 8002b7c:	4240      	negs	r0, r0

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 8002b7e:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 8002b80:	600b      	str	r3, [r1, #0]
  return (void *)prev_heap_end;
 8002b82:	e7fc      	b.n	8002b7e <_sbrk+0x2a>
 8002b84:	00000400 	.word	0x00000400
 8002b88:	20001800 	.word	0x20001800
 8002b8c:	200003cc 	.word	0x200003cc
 8002b90:	20000520 	.word	0x20000520

08002b94 <SystemInit>:
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 8002b94:	4770      	bx	lr
	...

08002b98 <Reset_Handler>:
 8002b98:	4813      	ldr	r0, [pc, #76]	@ (8002be8 <LoopForever+0x2>)
 8002b9a:	4685      	mov	sp, r0
 8002b9c:	f7ff fffa 	bl	8002b94 <SystemInit>
 8002ba0:	4812      	ldr	r0, [pc, #72]	@ (8002bec <LoopForever+0x6>)
 8002ba2:	6801      	ldr	r1, [r0, #0]
 8002ba4:	0e09      	lsrs	r1, r1, #24
 8002ba6:	4a12      	ldr	r2, [pc, #72]	@ (8002bf0 <LoopForever+0xa>)
 8002ba8:	4291      	cmp	r1, r2
 8002baa:	d105      	bne.n	8002bb8 <ApplicationStart>
 8002bac:	4811      	ldr	r0, [pc, #68]	@ (8002bf4 <LoopForever+0xe>)
 8002bae:	4912      	ldr	r1, [pc, #72]	@ (8002bf8 <LoopForever+0x12>)
 8002bb0:	6001      	str	r1, [r0, #0]
 8002bb2:	4812      	ldr	r0, [pc, #72]	@ (8002bfc <LoopForever+0x16>)
 8002bb4:	4912      	ldr	r1, [pc, #72]	@ (8002c00 <LoopForever+0x1a>)
 8002bb6:	6001      	str	r1, [r0, #0]

08002bb8 <ApplicationStart>:
 8002bb8:	4812      	ldr	r0, [pc, #72]	@ (8002c04 <LoopForever+0x1e>)
 8002bba:	4913      	ldr	r1, [pc, #76]	@ (8002c08 <LoopForever+0x22>)
 8002bbc:	4a13      	ldr	r2, [pc, #76]	@ (8002c0c <LoopForever+0x26>)
 8002bbe:	2300      	movs	r3, #0
 8002bc0:	e002      	b.n	8002bc8 <LoopCopyDataInit>

08002bc2 <CopyDataInit>:
 8002bc2:	58d4      	ldr	r4, [r2, r3]
 8002bc4:	50c4      	str	r4, [r0, r3]
 8002bc6:	3304      	adds	r3, #4

08002bc8 <LoopCopyDataInit>:
 8002bc8:	18c4      	adds	r4, r0, r3
 8002bca:	428c      	cmp	r4, r1
 8002bcc:	d3f9      	bcc.n	8002bc2 <CopyDataInit>
 8002bce:	4a10      	ldr	r2, [pc, #64]	@ (8002c10 <LoopForever+0x2a>)
 8002bd0:	4c10      	ldr	r4, [pc, #64]	@ (8002c14 <LoopForever+0x2e>)
 8002bd2:	2300      	movs	r3, #0
 8002bd4:	e001      	b.n	8002bda <LoopFillZerobss>

08002bd6 <FillZerobss>:
 8002bd6:	6013      	str	r3, [r2, #0]
 8002bd8:	3204      	adds	r2, #4

08002bda <LoopFillZerobss>:
 8002bda:	42a2      	cmp	r2, r4
 8002bdc:	d3fb      	bcc.n	8002bd6 <FillZerobss>
 8002bde:	f001 ff27 	bl	8004a30 <__libc_init_array>
 8002be2:	f7ff fdf5 	bl	80027d0 <main>

08002be6 <LoopForever>:
 8002be6:	e7fe      	b.n	8002be6 <LoopForever>
 8002be8:	20001800 	.word	0x20001800
 8002bec:	00000004 	.word	0x00000004
 8002bf0:	0000001f 	.word	0x0000001f
 8002bf4:	40021018 	.word	0x40021018
 8002bf8:	00000001 	.word	0x00000001
 8002bfc:	40010000 	.word	0x40010000
 8002c00:	00000000 	.word	0x00000000
 8002c04:	20000000 	.word	0x20000000
 8002c08:	200001d4 	.word	0x200001d4
 8002c0c:	08007618 	.word	0x08007618
 8002c10:	200001d4 	.word	0x200001d4
 8002c14:	20000520 	.word	0x20000520

08002c18 <ADC1_IRQHandler>:
 8002c18:	e7fe      	b.n	8002c18 <ADC1_IRQHandler>
	...

08002c1c <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002c1c:	b570      	push	{r4, r5, r6, lr}
 8002c1e:	0005      	movs	r5, r0
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8002c20:	20fa      	movs	r0, #250	@ 0xfa
 8002c22:	4b0d      	ldr	r3, [pc, #52]	@ (8002c58 <HAL_InitTick+0x3c>)
 8002c24:	0080      	lsls	r0, r0, #2
 8002c26:	7819      	ldrb	r1, [r3, #0]
 8002c28:	f7fd fa8a 	bl	8000140 <__udivsi3>
 8002c2c:	4c0b      	ldr	r4, [pc, #44]	@ (8002c5c <HAL_InitTick+0x40>)
 8002c2e:	0001      	movs	r1, r0
 8002c30:	6820      	ldr	r0, [r4, #0]
 8002c32:	f7fd fa85 	bl	8000140 <__udivsi3>
 8002c36:	f000 fa8b 	bl	8003150 <HAL_SYSTICK_Config>
 8002c3a:	0004      	movs	r4, r0
  {
    return HAL_ERROR;
 8002c3c:	2001      	movs	r0, #1
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8002c3e:	2c00      	cmp	r4, #0
 8002c40:	d109      	bne.n	8002c56 <HAL_InitTick+0x3a>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002c42:	2d03      	cmp	r5, #3
 8002c44:	d807      	bhi.n	8002c56 <HAL_InitTick+0x3a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8002c46:	3802      	subs	r0, #2
 8002c48:	0022      	movs	r2, r4
 8002c4a:	0029      	movs	r1, r5
 8002c4c:	f000 fa4a 	bl	80030e4 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8002c50:	0020      	movs	r0, r4
 8002c52:	4b03      	ldr	r3, [pc, #12]	@ (8002c60 <HAL_InitTick+0x44>)
 8002c54:	601d      	str	r5, [r3, #0]
    return HAL_ERROR;
  }

   /* Return function status */
  return HAL_OK;
}
 8002c56:	bd70      	pop	{r4, r5, r6, pc}
 8002c58:	20000004 	.word	0x20000004
 8002c5c:	20000000 	.word	0x20000000
 8002c60:	20000008 	.word	0x20000008

08002c64 <HAL_Init>:
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002c64:	2310      	movs	r3, #16
 8002c66:	4a06      	ldr	r2, [pc, #24]	@ (8002c80 <HAL_Init+0x1c>)
{
 8002c68:	b510      	push	{r4, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002c6a:	6811      	ldr	r1, [r2, #0]
  HAL_InitTick(TICK_INT_PRIORITY);
 8002c6c:	2000      	movs	r0, #0
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002c6e:	430b      	orrs	r3, r1
 8002c70:	6013      	str	r3, [r2, #0]
  HAL_InitTick(TICK_INT_PRIORITY);
 8002c72:	f7ff ffd3 	bl	8002c1c <HAL_InitTick>
  HAL_MspInit();
 8002c76:	f7ff fe83 	bl	8002980 <HAL_MspInit>
}
 8002c7a:	2000      	movs	r0, #0
 8002c7c:	bd10      	pop	{r4, pc}
 8002c7e:	46c0      	nop			@ (mov r8, r8)
 8002c80:	40022000 	.word	0x40022000

08002c84 <HAL_IncTick>:
  *       implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8002c84:	4a03      	ldr	r2, [pc, #12]	@ (8002c94 <HAL_IncTick+0x10>)
 8002c86:	4b04      	ldr	r3, [pc, #16]	@ (8002c98 <HAL_IncTick+0x14>)
 8002c88:	6811      	ldr	r1, [r2, #0]
 8002c8a:	781b      	ldrb	r3, [r3, #0]
 8002c8c:	185b      	adds	r3, r3, r1
 8002c8e:	6013      	str	r3, [r2, #0]
}
 8002c90:	4770      	bx	lr
 8002c92:	46c0      	nop			@ (mov r8, r8)
 8002c94:	200003d0 	.word	0x200003d0
 8002c98:	20000004 	.word	0x20000004

08002c9c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8002c9c:	4b01      	ldr	r3, [pc, #4]	@ (8002ca4 <HAL_GetTick+0x8>)
 8002c9e:	6818      	ldr	r0, [r3, #0]
}
 8002ca0:	4770      	bx	lr
 8002ca2:	46c0      	nop			@ (mov r8, r8)
 8002ca4:	200003d0 	.word	0x200003d0

08002ca8 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8002ca8:	b570      	push	{r4, r5, r6, lr}
 8002caa:	0004      	movs	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8002cac:	f7ff fff6 	bl	8002c9c <HAL_GetTick>
 8002cb0:	0005      	movs	r5, r0
  uint32_t wait = Delay;
  
  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8002cb2:	1c63      	adds	r3, r4, #1
 8002cb4:	d002      	beq.n	8002cbc <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8002cb6:	4b04      	ldr	r3, [pc, #16]	@ (8002cc8 <HAL_Delay+0x20>)
 8002cb8:	781b      	ldrb	r3, [r3, #0]
 8002cba:	18e4      	adds	r4, r4, r3
  }
  
  while((HAL_GetTick() - tickstart) < wait)
 8002cbc:	f7ff ffee 	bl	8002c9c <HAL_GetTick>
 8002cc0:	1b40      	subs	r0, r0, r5
 8002cc2:	42a0      	cmp	r0, r4
 8002cc4:	d3fa      	bcc.n	8002cbc <HAL_Delay+0x14>
  {
  }
}
 8002cc6:	bd70      	pop	{r4, r5, r6, pc}
 8002cc8:	20000004 	.word	0x20000004

08002ccc <ADC_Enable.constprop.0>:
  * @retval HAL status.
  */
static HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef* hadc)
{
  uint32_t tickstart = 0U;
  __IO uint32_t wait_loop_index = 0U;
 8002ccc:	2300      	movs	r3, #0
static HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef* hadc)
 8002cce:	b573      	push	{r0, r1, r4, r5, r6, lr}
  
  /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
  /* enabling phase not yet completed: flag ADC ready not yet set).           */
  /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
  /* causes: ADC clock not running, ...).                                     */
  if (ADC_IS_ENABLE(hadc) == RESET)
 8002cd0:	2103      	movs	r1, #3
  __IO uint32_t wait_loop_index = 0U;
 8002cd2:	9301      	str	r3, [sp, #4]
  if (ADC_IS_ENABLE(hadc) == RESET)
 8002cd4:	6803      	ldr	r3, [r0, #0]
static HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef* hadc)
 8002cd6:	0004      	movs	r4, r0
  if (ADC_IS_ENABLE(hadc) == RESET)
 8002cd8:	689a      	ldr	r2, [r3, #8]
 8002cda:	400a      	ands	r2, r1
 8002cdc:	2a01      	cmp	r2, #1
 8002cde:	d107      	bne.n	8002cf0 <ADC_Enable.constprop.0+0x24>
 8002ce0:	6819      	ldr	r1, [r3, #0]
 8002ce2:	4211      	tst	r1, r2
 8002ce4:	d001      	beq.n	8002cea <ADC_Enable.constprop.0+0x1e>
      }
    }
  }
   
  /* Return HAL status */
  return HAL_OK;
 8002ce6:	2000      	movs	r0, #0
}
 8002ce8:	bd76      	pop	{r1, r2, r4, r5, r6, pc}
  if (ADC_IS_ENABLE(hadc) == RESET)
 8002cea:	68da      	ldr	r2, [r3, #12]
 8002cec:	0412      	lsls	r2, r2, #16
 8002cee:	d4fa      	bmi.n	8002ce6 <ADC_Enable.constprop.0+0x1a>
    if (ADC_ENABLING_CONDITIONS(hadc) == RESET)
 8002cf0:	6899      	ldr	r1, [r3, #8]
 8002cf2:	4a1b      	ldr	r2, [pc, #108]	@ (8002d60 <ADC_Enable.constprop.0+0x94>)
 8002cf4:	4211      	tst	r1, r2
 8002cf6:	d009      	beq.n	8002d0c <ADC_Enable.constprop.0+0x40>
      SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8002cf8:	2310      	movs	r3, #16
 8002cfa:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8002cfc:	4313      	orrs	r3, r2
 8002cfe:	63a3      	str	r3, [r4, #56]	@ 0x38
      SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002d00:	2301      	movs	r3, #1
 8002d02:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8002d04:	4313      	orrs	r3, r2
      return HAL_ERROR;
 8002d06:	2001      	movs	r0, #1
          SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002d08:	63e3      	str	r3, [r4, #60]	@ 0x3c
          return HAL_ERROR;
 8002d0a:	e7ed      	b.n	8002ce8 <ADC_Enable.constprop.0+0x1c>
    __HAL_ADC_ENABLE(hadc);
 8002d0c:	2201      	movs	r2, #1
 8002d0e:	6899      	ldr	r1, [r3, #8]
 8002d10:	430a      	orrs	r2, r1
 8002d12:	609a      	str	r2, [r3, #8]
    wait_loop_index = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8002d14:	4b13      	ldr	r3, [pc, #76]	@ (8002d64 <ADC_Enable.constprop.0+0x98>)
 8002d16:	4914      	ldr	r1, [pc, #80]	@ (8002d68 <ADC_Enable.constprop.0+0x9c>)
 8002d18:	6818      	ldr	r0, [r3, #0]
 8002d1a:	f7fd fa11 	bl	8000140 <__udivsi3>
 8002d1e:	9001      	str	r0, [sp, #4]
    while(wait_loop_index != 0U)
 8002d20:	9b01      	ldr	r3, [sp, #4]
 8002d22:	2b00      	cmp	r3, #0
 8002d24:	d117      	bne.n	8002d56 <ADC_Enable.constprop.0+0x8a>
    tickstart = HAL_GetTick();
 8002d26:	f7ff ffb9 	bl	8002c9c <HAL_GetTick>
    while(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == RESET)
 8002d2a:	2501      	movs	r5, #1
    tickstart = HAL_GetTick();
 8002d2c:	0006      	movs	r6, r0
    while(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == RESET)
 8002d2e:	6823      	ldr	r3, [r4, #0]
 8002d30:	681b      	ldr	r3, [r3, #0]
 8002d32:	422b      	tst	r3, r5
 8002d34:	d1d7      	bne.n	8002ce6 <ADC_Enable.constprop.0+0x1a>
      if((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
 8002d36:	f7ff ffb1 	bl	8002c9c <HAL_GetTick>
 8002d3a:	1b80      	subs	r0, r0, r6
 8002d3c:	2802      	cmp	r0, #2
 8002d3e:	d9f6      	bls.n	8002d2e <ADC_Enable.constprop.0+0x62>
        if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == RESET)
 8002d40:	6823      	ldr	r3, [r4, #0]
 8002d42:	681b      	ldr	r3, [r3, #0]
 8002d44:	422b      	tst	r3, r5
 8002d46:	d1f2      	bne.n	8002d2e <ADC_Enable.constprop.0+0x62>
          SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8002d48:	2310      	movs	r3, #16
 8002d4a:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8002d4c:	4313      	orrs	r3, r2
 8002d4e:	63a3      	str	r3, [r4, #56]	@ 0x38
          SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002d50:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8002d52:	432b      	orrs	r3, r5
 8002d54:	e7d7      	b.n	8002d06 <ADC_Enable.constprop.0+0x3a>
      wait_loop_index--;
 8002d56:	9b01      	ldr	r3, [sp, #4]
 8002d58:	3b01      	subs	r3, #1
 8002d5a:	9301      	str	r3, [sp, #4]
 8002d5c:	e7e0      	b.n	8002d20 <ADC_Enable.constprop.0+0x54>
 8002d5e:	46c0      	nop			@ (mov r8, r8)
 8002d60:	80000017 	.word	0x80000017
 8002d64:	20000000 	.word	0x20000000
 8002d68:	000f4240 	.word	0x000f4240

08002d6c <HAL_ADC_Init>:
{
 8002d6c:	b570      	push	{r4, r5, r6, lr}
 8002d6e:	1e04      	subs	r4, r0, #0
  if(hadc == NULL)
 8002d70:	d100      	bne.n	8002d74 <HAL_ADC_Init+0x8>
 8002d72:	e090      	b.n	8002e96 <HAL_ADC_Init+0x12a>
  if (hadc->State == HAL_ADC_STATE_RESET)
 8002d74:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8002d76:	2b00      	cmp	r3, #0
 8002d78:	d105      	bne.n	8002d86 <HAL_ADC_Init+0x1a>
    hadc->Lock = HAL_UNLOCKED;
 8002d7a:	0002      	movs	r2, r0
 8002d7c:	3234      	adds	r2, #52	@ 0x34
    ADC_CLEAR_ERRORCODE(hadc);
 8002d7e:	63c3      	str	r3, [r0, #60]	@ 0x3c
    hadc->Lock = HAL_UNLOCKED;
 8002d80:	7013      	strb	r3, [r2, #0]
    HAL_ADC_MspInit(hadc);
 8002d82:	f7ff fe15 	bl	80029b0 <HAL_ADC_MspInit>
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL) &&
 8002d86:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8002d88:	06db      	lsls	r3, r3, #27
 8002d8a:	d500      	bpl.n	8002d8e <HAL_ADC_Init+0x22>
 8002d8c:	e085      	b.n	8002e9a <HAL_ADC_Init+0x12e>
      (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)          )
 8002d8e:	6822      	ldr	r2, [r4, #0]
 8002d90:	6893      	ldr	r3, [r2, #8]
      (tmp_hal_status == HAL_OK)                                &&
 8002d92:	075b      	lsls	r3, r3, #29
 8002d94:	d500      	bpl.n	8002d98 <HAL_ADC_Init+0x2c>
 8002d96:	e080      	b.n	8002e9a <HAL_ADC_Init+0x12e>
    ADC_STATE_CLR_SET(hadc->State,
 8002d98:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8002d9a:	4b42      	ldr	r3, [pc, #264]	@ (8002ea4 <HAL_ADC_Init+0x138>)
 8002d9c:	4019      	ands	r1, r3
 8002d9e:	3306      	adds	r3, #6
 8002da0:	33ff      	adds	r3, #255	@ 0xff
 8002da2:	430b      	orrs	r3, r1
    if (ADC_IS_ENABLE(hadc) == RESET)
 8002da4:	2103      	movs	r1, #3
    ADC_STATE_CLR_SET(hadc->State,
 8002da6:	63a3      	str	r3, [r4, #56]	@ 0x38
    if (ADC_IS_ENABLE(hadc) == RESET)
 8002da8:	6893      	ldr	r3, [r2, #8]
 8002daa:	400b      	ands	r3, r1
 8002dac:	2b01      	cmp	r3, #1
 8002dae:	d105      	bne.n	8002dbc <HAL_ADC_Init+0x50>
 8002db0:	6811      	ldr	r1, [r2, #0]
 8002db2:	4219      	tst	r1, r3
 8002db4:	d10e      	bne.n	8002dd4 <HAL_ADC_Init+0x68>
 8002db6:	68d3      	ldr	r3, [r2, #12]
 8002db8:	041b      	lsls	r3, r3, #16
 8002dba:	d40b      	bmi.n	8002dd4 <HAL_ADC_Init+0x68>
      MODIFY_REG(hadc->Instance->CFGR1,
 8002dbc:	2118      	movs	r1, #24
 8002dbe:	68d3      	ldr	r3, [r2, #12]
 8002dc0:	438b      	bics	r3, r1
 8002dc2:	68a1      	ldr	r1, [r4, #8]
 8002dc4:	430b      	orrs	r3, r1
 8002dc6:	60d3      	str	r3, [r2, #12]
      MODIFY_REG(hadc->Instance->CFGR2    ,
 8002dc8:	6913      	ldr	r3, [r2, #16]
 8002dca:	6861      	ldr	r1, [r4, #4]
 8002dcc:	009b      	lsls	r3, r3, #2
 8002dce:	089b      	lsrs	r3, r3, #2
 8002dd0:	430b      	orrs	r3, r1
 8002dd2:	6113      	str	r3, [r2, #16]
    hadc->Instance->CFGR1 &= ~( ADC_CFGR1_DISCEN  |
 8002dd4:	68d3      	ldr	r3, [r2, #12]
 8002dd6:	4934      	ldr	r1, [pc, #208]	@ (8002ea8 <HAL_ADC_Init+0x13c>)
 8002dd8:	400b      	ands	r3, r1
 8002dda:	60d3      	str	r3, [r2, #12]
    tmpCFGR1 |= (ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 8002ddc:	7e23      	ldrb	r3, [r4, #24]
                 ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)     |
 8002dde:	7e60      	ldrb	r0, [r4, #25]
    tmpCFGR1 |= (ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 8002de0:	039b      	lsls	r3, r3, #14
                 ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)     |
 8002de2:	03c0      	lsls	r0, r0, #15
    tmpCFGR1 |= (ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 8002de4:	4303      	orrs	r3, r0
                 ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)    |
 8002de6:	7ea1      	ldrb	r1, [r4, #26]
                 ADC_SCANDIR(hadc->Init.ScanConvMode)                             |
 8002de8:	68e0      	ldr	r0, [r4, #12]
 8002dea:	4303      	orrs	r3, r0
                 ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)    |
 8002dec:	0348      	lsls	r0, r1, #13
                 ADC_SCANDIR(hadc->Init.ScanConvMode)                             |
 8002dee:	4303      	orrs	r3, r0
                 ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests)  );
 8002df0:	1d60      	adds	r0, r4, #5
 8002df2:	7fc0      	ldrb	r0, [r0, #31]
 8002df4:	0040      	lsls	r0, r0, #1
                 ADC_SCANDIR(hadc->Init.ScanConvMode)                             |
 8002df6:	4303      	orrs	r3, r0
                 ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                            |
 8002df8:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8002dfa:	3801      	subs	r0, #1
 8002dfc:	1e45      	subs	r5, r0, #1
 8002dfe:	41a8      	sbcs	r0, r5
 8002e00:	0300      	lsls	r0, r0, #12
                 ADC_SCANDIR(hadc->Init.ScanConvMode)                             |
 8002e02:	4303      	orrs	r3, r0
 8002e04:	6920      	ldr	r0, [r4, #16]
 8002e06:	3802      	subs	r0, #2
 8002e08:	4245      	negs	r5, r0
 8002e0a:	4168      	adcs	r0, r5
 8002e0c:	0080      	lsls	r0, r0, #2
 8002e0e:	4303      	orrs	r3, r0
    if (hadc->Init.DiscontinuousConvMode == ENABLE)
 8002e10:	7ee0      	ldrb	r0, [r4, #27]
 8002e12:	2801      	cmp	r0, #1
 8002e14:	d104      	bne.n	8002e20 <HAL_ADC_Init+0xb4>
      if (hadc->Init.ContinuousConvMode == DISABLE)
 8002e16:	2900      	cmp	r1, #0
 8002e18:	d12b      	bne.n	8002e72 <HAL_ADC_Init+0x106>
        tmpCFGR1 |= ADC_CFGR1_DISCEN;
 8002e1a:	2180      	movs	r1, #128	@ 0x80
 8002e1c:	0249      	lsls	r1, r1, #9
 8002e1e:	430b      	orrs	r3, r1
    if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8002e20:	20c2      	movs	r0, #194	@ 0xc2
 8002e22:	69e1      	ldr	r1, [r4, #28]
 8002e24:	30ff      	adds	r0, #255	@ 0xff
 8002e26:	4281      	cmp	r1, r0
 8002e28:	d002      	beq.n	8002e30 <HAL_ADC_Init+0xc4>
      tmpCFGR1 |= ( hadc->Init.ExternalTrigConv    |
 8002e2a:	6a20      	ldr	r0, [r4, #32]
 8002e2c:	4301      	orrs	r1, r0
 8002e2e:	430b      	orrs	r3, r1
    if (IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon))
 8002e30:	2080      	movs	r0, #128	@ 0x80
    hadc->Instance->CFGR1 |= tmpCFGR1;
 8002e32:	68d1      	ldr	r1, [r2, #12]
    if (IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon))
 8002e34:	0540      	lsls	r0, r0, #21
    hadc->Instance->CFGR1 |= tmpCFGR1;
 8002e36:	4319      	orrs	r1, r3
 8002e38:	60d1      	str	r1, [r2, #12]
    if (IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon))
 8002e3a:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8002e3c:	4281      	cmp	r1, r0
 8002e3e:	d002      	beq.n	8002e46 <HAL_ADC_Init+0xda>
 8002e40:	1e48      	subs	r0, r1, #1
 8002e42:	2806      	cmp	r0, #6
 8002e44:	d807      	bhi.n	8002e56 <HAL_ADC_Init+0xea>
      hadc->Instance->SMPR &= ~(ADC_SMPR_SMP);
 8002e46:	2507      	movs	r5, #7
 8002e48:	6950      	ldr	r0, [r2, #20]
      hadc->Instance->SMPR |= ADC_SMPR_SET(hadc->Init.SamplingTimeCommon);
 8002e4a:	4029      	ands	r1, r5
      hadc->Instance->SMPR &= ~(ADC_SMPR_SMP);
 8002e4c:	43a8      	bics	r0, r5
 8002e4e:	6150      	str	r0, [r2, #20]
      hadc->Instance->SMPR |= ADC_SMPR_SET(hadc->Init.SamplingTimeCommon);
 8002e50:	6950      	ldr	r0, [r2, #20]
 8002e52:	4301      	orrs	r1, r0
 8002e54:	6151      	str	r1, [r2, #20]
    if ((hadc->Instance->CFGR1 & ~(ADC_CFGR1_AWDCH | ADC_CFGR1_AWDEN | ADC_CFGR1_AWDSGL | ADC_CFGR1_RES))
 8002e56:	68d2      	ldr	r2, [r2, #12]
 8002e58:	4914      	ldr	r1, [pc, #80]	@ (8002eac <HAL_ADC_Init+0x140>)
 8002e5a:	400a      	ands	r2, r1
 8002e5c:	429a      	cmp	r2, r3
 8002e5e:	d110      	bne.n	8002e82 <HAL_ADC_Init+0x116>
      ADC_CLEAR_ERRORCODE(hadc);
 8002e60:	2000      	movs	r0, #0
      ADC_STATE_CLR_SET(hadc->State,
 8002e62:	2303      	movs	r3, #3
      ADC_CLEAR_ERRORCODE(hadc);
 8002e64:	63e0      	str	r0, [r4, #60]	@ 0x3c
      ADC_STATE_CLR_SET(hadc->State,
 8002e66:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8002e68:	439a      	bics	r2, r3
 8002e6a:	3b02      	subs	r3, #2
 8002e6c:	4313      	orrs	r3, r2
 8002e6e:	63a3      	str	r3, [r4, #56]	@ 0x38
}
 8002e70:	bd70      	pop	{r4, r5, r6, pc}
        SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8002e72:	2120      	movs	r1, #32
 8002e74:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
 8002e76:	4329      	orrs	r1, r5
 8002e78:	63a1      	str	r1, [r4, #56]	@ 0x38
        SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002e7a:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 8002e7c:	4308      	orrs	r0, r1
 8002e7e:	63e0      	str	r0, [r4, #60]	@ 0x3c
 8002e80:	e7ce      	b.n	8002e20 <HAL_ADC_Init+0xb4>
      ADC_STATE_CLR_SET(hadc->State,
 8002e82:	2312      	movs	r3, #18
 8002e84:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8002e86:	439a      	bics	r2, r3
 8002e88:	3b02      	subs	r3, #2
 8002e8a:	4313      	orrs	r3, r2
 8002e8c:	63a3      	str	r3, [r4, #56]	@ 0x38
      SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002e8e:	2301      	movs	r3, #1
 8002e90:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8002e92:	4313      	orrs	r3, r2
 8002e94:	63e3      	str	r3, [r4, #60]	@ 0x3c
    return HAL_ERROR;
 8002e96:	2001      	movs	r0, #1
 8002e98:	e7ea      	b.n	8002e70 <HAL_ADC_Init+0x104>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8002e9a:	2310      	movs	r3, #16
 8002e9c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8002e9e:	4313      	orrs	r3, r2
 8002ea0:	63a3      	str	r3, [r4, #56]	@ 0x38
    tmp_hal_status = HAL_ERROR;
 8002ea2:	e7f8      	b.n	8002e96 <HAL_ADC_Init+0x12a>
 8002ea4:	fffffefd 	.word	0xfffffefd
 8002ea8:	fffe0219 	.word	0xfffe0219
 8002eac:	833fffe7 	.word	0x833fffe7

08002eb0 <HAL_ADC_Start_DMA>:
{
 8002eb0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 8002eb2:	6803      	ldr	r3, [r0, #0]
{
 8002eb4:	0004      	movs	r4, r0
  if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 8002eb6:	689b      	ldr	r3, [r3, #8]
{
 8002eb8:	000e      	movs	r6, r1
    __HAL_LOCK(hadc);
 8002eba:	2002      	movs	r0, #2
{
 8002ebc:	9201      	str	r2, [sp, #4]
  if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 8002ebe:	075b      	lsls	r3, r3, #29
 8002ec0:	d430      	bmi.n	8002f24 <HAL_ADC_Start_DMA+0x74>
    __HAL_LOCK(hadc);
 8002ec2:	0027      	movs	r7, r4
 8002ec4:	3734      	adds	r7, #52	@ 0x34
 8002ec6:	783b      	ldrb	r3, [r7, #0]
 8002ec8:	2b01      	cmp	r3, #1
 8002eca:	d02b      	beq.n	8002f24 <HAL_ADC_Start_DMA+0x74>
 8002ecc:	2301      	movs	r3, #1
 8002ece:	703b      	strb	r3, [r7, #0]
    if (hadc->Init.LowPowerAutoPowerOff != ENABLE)
 8002ed0:	7e63      	ldrb	r3, [r4, #25]
 8002ed2:	2b01      	cmp	r3, #1
 8002ed4:	d127      	bne.n	8002f26 <HAL_ADC_Start_DMA+0x76>
      ADC_STATE_CLR_SET(hadc->State,
 8002ed6:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8002ed8:	4b16      	ldr	r3, [pc, #88]	@ (8002f34 <HAL_ADC_Start_DMA+0x84>)
      ADC_CLEAR_ERRORCODE(hadc);
 8002eda:	2500      	movs	r5, #0
      ADC_STATE_CLR_SET(hadc->State,
 8002edc:	401a      	ands	r2, r3
 8002ede:	2380      	movs	r3, #128	@ 0x80
 8002ee0:	005b      	lsls	r3, r3, #1
 8002ee2:	4313      	orrs	r3, r2
 8002ee4:	63a3      	str	r3, [r4, #56]	@ 0x38
      ADC_CLEAR_ERRORCODE(hadc);
 8002ee6:	63e5      	str	r5, [r4, #60]	@ 0x3c
      __HAL_UNLOCK(hadc);
 8002ee8:	703d      	strb	r5, [r7, #0]
      hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 8002eea:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8002eec:	4b12      	ldr	r3, [pc, #72]	@ (8002f38 <HAL_ADC_Start_DMA+0x88>)
      __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
 8002eee:	6821      	ldr	r1, [r4, #0]
      hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 8002ef0:	6283      	str	r3, [r0, #40]	@ 0x28
      hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 8002ef2:	4b12      	ldr	r3, [pc, #72]	@ (8002f3c <HAL_ADC_Start_DMA+0x8c>)
 8002ef4:	62c3      	str	r3, [r0, #44]	@ 0x2c
      hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 8002ef6:	4b12      	ldr	r3, [pc, #72]	@ (8002f40 <HAL_ADC_Start_DMA+0x90>)
 8002ef8:	6303      	str	r3, [r0, #48]	@ 0x30
      __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
 8002efa:	231c      	movs	r3, #28
 8002efc:	600b      	str	r3, [r1, #0]
      __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 8002efe:	684a      	ldr	r2, [r1, #4]
 8002f00:	3b0c      	subs	r3, #12
 8002f02:	4313      	orrs	r3, r2
 8002f04:	604b      	str	r3, [r1, #4]
      hadc->Instance->CFGR1 |= ADC_CFGR1_DMAEN;
 8002f06:	2301      	movs	r3, #1
 8002f08:	68ca      	ldr	r2, [r1, #12]
 8002f0a:	4313      	orrs	r3, r2
 8002f0c:	60cb      	str	r3, [r1, #12]
      HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 8002f0e:	0032      	movs	r2, r6
 8002f10:	9b01      	ldr	r3, [sp, #4]
 8002f12:	3140      	adds	r1, #64	@ 0x40
 8002f14:	f000 f968 	bl	80031e8 <HAL_DMA_Start_IT>
      hadc->Instance->CR |= ADC_CR_ADSTART;
 8002f18:	2304      	movs	r3, #4
 8002f1a:	0028      	movs	r0, r5
 8002f1c:	6822      	ldr	r2, [r4, #0]
 8002f1e:	6891      	ldr	r1, [r2, #8]
 8002f20:	430b      	orrs	r3, r1
 8002f22:	6093      	str	r3, [r2, #8]
}
 8002f24:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
      tmp_hal_status = ADC_Enable(hadc);
 8002f26:	0020      	movs	r0, r4
 8002f28:	f7ff fed0 	bl	8002ccc <ADC_Enable.constprop.0>
    if (tmp_hal_status == HAL_OK)
 8002f2c:	2800      	cmp	r0, #0
 8002f2e:	d0d2      	beq.n	8002ed6 <HAL_ADC_Start_DMA+0x26>
 8002f30:	e7f8      	b.n	8002f24 <HAL_ADC_Start_DMA+0x74>
 8002f32:	46c0      	nop			@ (mov r8, r8)
 8002f34:	fffff0fe 	.word	0xfffff0fe
 8002f38:	08002f45 	.word	0x08002f45
 8002f3c:	08002fb7 	.word	0x08002fb7
 8002f40:	08002fc3 	.word	0x08002fc3

08002f44 <ADC_DMAConvCplt>:
{
  /* Retrieve ADC handle corresponding to current DMA handle */
  ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
  
  /* Update state machine on conversion status if not in error state */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 8002f44:	2250      	movs	r2, #80	@ 0x50
  ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 8002f46:	6a43      	ldr	r3, [r0, #36]	@ 0x24
{
 8002f48:	b510      	push	{r4, lr}
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 8002f4a:	6b99      	ldr	r1, [r3, #56]	@ 0x38
 8002f4c:	4211      	tst	r1, r2
 8002f4e:	d12b      	bne.n	8002fa8 <ADC_DMAConvCplt+0x64>
  {
    /* Set ADC state */
    SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
 8002f50:	6b99      	ldr	r1, [r3, #56]	@ 0x38
 8002f52:	32b1      	adds	r2, #177	@ 0xb1
 8002f54:	32ff      	adds	r2, #255	@ 0xff
 8002f56:	430a      	orrs	r2, r1
    
    /* Determine whether any further conversion upcoming on group regular     */
    /* by external trigger, continuous mode or scan sequence on going.        */
    if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
 8002f58:	21c0      	movs	r1, #192	@ 0xc0
    SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
 8002f5a:	639a      	str	r2, [r3, #56]	@ 0x38
    if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
 8002f5c:	681a      	ldr	r2, [r3, #0]
 8002f5e:	0109      	lsls	r1, r1, #4
 8002f60:	68d0      	ldr	r0, [r2, #12]
 8002f62:	4208      	tst	r0, r1
 8002f64:	d113      	bne.n	8002f8e <ADC_DMAConvCplt+0x4a>
 8002f66:	7e99      	ldrb	r1, [r3, #26]
 8002f68:	2900      	cmp	r1, #0
 8002f6a:	d110      	bne.n	8002f8e <ADC_DMAConvCplt+0x4a>
       (hadc->Init.ContinuousConvMode == DISABLE)   )
    {
      /* If End of Sequence is reached, disable interrupts */
      if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) )
 8002f6c:	6811      	ldr	r1, [r2, #0]
 8002f6e:	0709      	lsls	r1, r1, #28
 8002f70:	d50d      	bpl.n	8002f8e <ADC_DMAConvCplt+0x4a>
      {
        /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit           */
        /* ADSTART==0 (no conversion on going)                                */
        if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 8002f72:	6891      	ldr	r1, [r2, #8]
 8002f74:	0749      	lsls	r1, r1, #29
 8002f76:	d40e      	bmi.n	8002f96 <ADC_DMAConvCplt+0x52>
        {
          /* Disable ADC end of single conversion interrupt on group regular */
          /* Note: Overrun interrupt was enabled with EOC interrupt in        */
          /* HAL_Start_IT(), but is not disabled here because can be used     */
          /* by overrun IRQ process below.                                    */
          __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
 8002f78:	200c      	movs	r0, #12
 8002f7a:	6851      	ldr	r1, [r2, #4]
 8002f7c:	4381      	bics	r1, r0
 8002f7e:	6051      	str	r1, [r2, #4]
          
          /* Set ADC state */
          ADC_STATE_CLR_SET(hadc->State,
 8002f80:	6b99      	ldr	r1, [r3, #56]	@ 0x38
 8002f82:	4a0b      	ldr	r2, [pc, #44]	@ (8002fb0 <ADC_DMAConvCplt+0x6c>)
 8002f84:	4011      	ands	r1, r2
 8002f86:	3204      	adds	r2, #4
 8002f88:	32ff      	adds	r2, #255	@ 0xff
 8002f8a:	430a      	orrs	r2, r1
 8002f8c:	639a      	str	r2, [r3, #56]	@ 0x38

    /* Conversion complete callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
    hadc->ConvCpltCallback(hadc);
#else
    HAL_ADC_ConvCpltCallback(hadc);
 8002f8e:	0018      	movs	r0, r3
 8002f90:	f7ff fb9c 	bl	80026cc <HAL_ADC_ConvCpltCallback>
  {
    /* Call DMA error callback */
    hadc->DMA_Handle->XferErrorCallback(hdma);
  }

}
 8002f94:	bd10      	pop	{r4, pc}
          SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8002f96:	2220      	movs	r2, #32
 8002f98:	6b99      	ldr	r1, [r3, #56]	@ 0x38
 8002f9a:	430a      	orrs	r2, r1
 8002f9c:	639a      	str	r2, [r3, #56]	@ 0x38
          SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002f9e:	2201      	movs	r2, #1
 8002fa0:	6bd9      	ldr	r1, [r3, #60]	@ 0x3c
 8002fa2:	430a      	orrs	r2, r1
 8002fa4:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002fa6:	e7f2      	b.n	8002f8e <ADC_DMAConvCplt+0x4a>
    hadc->DMA_Handle->XferErrorCallback(hdma);
 8002fa8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002faa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002fac:	4798      	blx	r3
}
 8002fae:	e7f1      	b.n	8002f94 <ADC_DMAConvCplt+0x50>
 8002fb0:	fffffefe 	.word	0xfffffefe

08002fb4 <HAL_ADC_ConvHalfCpltCallback>:
__weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
 8002fb4:	4770      	bx	lr

08002fb6 <ADC_DMAHalfConvCplt>:
  * @brief  DMA half transfer complete callback. 
  * @param  hdma pointer to DMA handle.
  * @retval None
  */
static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)   
{
 8002fb6:	b510      	push	{r4, lr}
  
  /* Half conversion callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
    hadc->ConvHalfCpltCallback(hadc);
#else
  HAL_ADC_ConvHalfCpltCallback(hadc); 
 8002fb8:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8002fba:	f7ff fffb 	bl	8002fb4 <HAL_ADC_ConvHalfCpltCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 8002fbe:	bd10      	pop	{r4, pc}

08002fc0 <HAL_ADC_ErrorCallback>:
__weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
 8002fc0:	4770      	bx	lr

08002fc2 <ADC_DMAError>:
{
  /* Retrieve ADC handle corresponding to current DMA handle */
  ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
  
  /* Set ADC state */
  SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 8002fc2:	2340      	movs	r3, #64	@ 0x40
  ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 8002fc4:	6a40      	ldr	r0, [r0, #36]	@ 0x24
{
 8002fc6:	b510      	push	{r4, lr}
  SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 8002fc8:	6b82      	ldr	r2, [r0, #56]	@ 0x38
 8002fca:	4313      	orrs	r3, r2
 8002fcc:	6383      	str	r3, [r0, #56]	@ 0x38
  
  /* Set ADC error code to DMA error */
  SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
 8002fce:	2304      	movs	r3, #4
 8002fd0:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8002fd2:	4313      	orrs	r3, r2
 8002fd4:	63c3      	str	r3, [r0, #60]	@ 0x3c
  
  /* Error callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ErrorCallback(hadc);
#else
  HAL_ADC_ErrorCallback(hadc); 
 8002fd6:	f7ff fff3 	bl	8002fc0 <HAL_ADC_ErrorCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 8002fda:	bd10      	pop	{r4, pc}

08002fdc <HAL_ADC_ConfigChannel>:
{
 8002fdc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t wait_loop_index = 0U;
 8002fde:	2200      	movs	r2, #0
  __HAL_LOCK(hadc);
 8002fe0:	0004      	movs	r4, r0
  __IO uint32_t wait_loop_index = 0U;
 8002fe2:	9201      	str	r2, [sp, #4]
  __HAL_LOCK(hadc);
 8002fe4:	3434      	adds	r4, #52	@ 0x34
 8002fe6:	7822      	ldrb	r2, [r4, #0]
{
 8002fe8:	0003      	movs	r3, r0
  if (! IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon))
 8002fea:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
  __HAL_LOCK(hadc);
 8002fec:	2002      	movs	r0, #2
 8002fee:	2a01      	cmp	r2, #1
 8002ff0:	d02a      	beq.n	8003048 <HAL_ADC_ConfigChannel+0x6c>
 8002ff2:	3801      	subs	r0, #1
 8002ff4:	7020      	strb	r0, [r4, #0]
  if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 8002ff6:	681a      	ldr	r2, [r3, #0]
 8002ff8:	6896      	ldr	r6, [r2, #8]
 8002ffa:	0776      	lsls	r6, r6, #29
 8002ffc:	d45e      	bmi.n	80030bc <HAL_ADC_ConfigChannel+0xe0>
      hadc->Instance->CHSELR |= ADC_CHSELR_CHANNEL(sConfig->Channel);
 8002ffe:	680b      	ldr	r3, [r1, #0]
    if (sConfig->Rank != ADC_RANK_NONE)
 8003000:	684f      	ldr	r7, [r1, #4]
      if(ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
 8003002:	001e      	movs	r6, r3
    if (sConfig->Rank != ADC_RANK_NONE)
 8003004:	46bc      	mov	ip, r7
 8003006:	4f30      	ldr	r7, [pc, #192]	@ (80030c8 <HAL_ADC_ConfigChannel+0xec>)
      hadc->Instance->CHSELR |= ADC_CHSELR_CHANNEL(sConfig->Channel);
 8003008:	4098      	lsls	r0, r3
      if(ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
 800300a:	3e10      	subs	r6, #16
    if (sConfig->Rank != ADC_RANK_NONE)
 800300c:	45bc      	cmp	ip, r7
 800300e:	d03f      	beq.n	8003090 <HAL_ADC_ConfigChannel+0xb4>
      hadc->Instance->CHSELR |= ADC_CHSELR_CHANNEL(sConfig->Channel);
 8003010:	6a97      	ldr	r7, [r2, #40]	@ 0x28
 8003012:	4338      	orrs	r0, r7
 8003014:	6290      	str	r0, [r2, #40]	@ 0x28
      if (! IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon))
 8003016:	2080      	movs	r0, #128	@ 0x80
 8003018:	0540      	lsls	r0, r0, #21
 800301a:	4285      	cmp	r5, r0
 800301c:	d00f      	beq.n	800303e <HAL_ADC_ConfigChannel+0x62>
 800301e:	3d01      	subs	r5, #1
 8003020:	2d06      	cmp	r5, #6
 8003022:	d90c      	bls.n	800303e <HAL_ADC_ConfigChannel+0x62>
        if (sConfig->SamplingTime != ADC_GET_SAMPLINGTIME(hadc))
 8003024:	2007      	movs	r0, #7
 8003026:	6955      	ldr	r5, [r2, #20]
 8003028:	6889      	ldr	r1, [r1, #8]
 800302a:	4005      	ands	r5, r0
 800302c:	42a9      	cmp	r1, r5
 800302e:	d006      	beq.n	800303e <HAL_ADC_ConfigChannel+0x62>
          hadc->Instance->SMPR &= ~(ADC_SMPR_SMP);
 8003030:	6955      	ldr	r5, [r2, #20]
          hadc->Instance->SMPR |= ADC_SMPR_SET(sConfig->SamplingTime);
 8003032:	4001      	ands	r1, r0
          hadc->Instance->SMPR &= ~(ADC_SMPR_SMP);
 8003034:	4385      	bics	r5, r0
 8003036:	6155      	str	r5, [r2, #20]
          hadc->Instance->SMPR |= ADC_SMPR_SET(sConfig->SamplingTime);
 8003038:	6955      	ldr	r5, [r2, #20]
 800303a:	4329      	orrs	r1, r5
 800303c:	6151      	str	r1, [r2, #20]
      if(ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
 800303e:	2e02      	cmp	r6, #2
 8003040:	d903      	bls.n	800304a <HAL_ADC_ConfigChannel+0x6e>
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8003042:	2000      	movs	r0, #0
  __HAL_UNLOCK(hadc);
 8003044:	2300      	movs	r3, #0
 8003046:	7023      	strb	r3, [r4, #0]
}
 8003048:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
        ADC->CCR |= ADC_CHANNEL_INTERNAL_PATH(sConfig->Channel);
 800304a:	4820      	ldr	r0, [pc, #128]	@ (80030cc <HAL_ADC_ConfigChannel+0xf0>)
 800304c:	6801      	ldr	r1, [r0, #0]
 800304e:	2b10      	cmp	r3, #16
 8003050:	d01b      	beq.n	800308a <HAL_ADC_ConfigChannel+0xae>
 8003052:	001a      	movs	r2, r3
 8003054:	3a11      	subs	r2, #17
 8003056:	4255      	negs	r5, r2
 8003058:	416a      	adcs	r2, r5
 800305a:	4d1d      	ldr	r5, [pc, #116]	@ (80030d0 <HAL_ADC_ConfigChannel+0xf4>)
 800305c:	4252      	negs	r2, r2
 800305e:	402a      	ands	r2, r5
 8003060:	2580      	movs	r5, #128	@ 0x80
 8003062:	046d      	lsls	r5, r5, #17
 8003064:	1952      	adds	r2, r2, r5
 8003066:	430a      	orrs	r2, r1
 8003068:	6002      	str	r2, [r0, #0]
        if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 800306a:	2b10      	cmp	r3, #16
 800306c:	d1e9      	bne.n	8003042 <HAL_ADC_ConfigChannel+0x66>
          wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 800306e:	4b19      	ldr	r3, [pc, #100]	@ (80030d4 <HAL_ADC_ConfigChannel+0xf8>)
 8003070:	4919      	ldr	r1, [pc, #100]	@ (80030d8 <HAL_ADC_ConfigChannel+0xfc>)
 8003072:	6818      	ldr	r0, [r3, #0]
 8003074:	f7fd f864 	bl	8000140 <__udivsi3>
 8003078:	230a      	movs	r3, #10
 800307a:	4343      	muls	r3, r0
            wait_loop_index--;
 800307c:	9301      	str	r3, [sp, #4]
          while(wait_loop_index != 0U)
 800307e:	9b01      	ldr	r3, [sp, #4]
 8003080:	2b00      	cmp	r3, #0
 8003082:	d0de      	beq.n	8003042 <HAL_ADC_ConfigChannel+0x66>
            wait_loop_index--;
 8003084:	9b01      	ldr	r3, [sp, #4]
 8003086:	3b01      	subs	r3, #1
 8003088:	e7f8      	b.n	800307c <HAL_ADC_ConfigChannel+0xa0>
        ADC->CCR |= ADC_CHANNEL_INTERNAL_PATH(sConfig->Channel);
 800308a:	2280      	movs	r2, #128	@ 0x80
 800308c:	0412      	lsls	r2, r2, #16
 800308e:	e7ea      	b.n	8003066 <HAL_ADC_ConfigChannel+0x8a>
      hadc->Instance->CHSELR &= ~ADC_CHSELR_CHANNEL(sConfig->Channel);
 8003090:	6a91      	ldr	r1, [r2, #40]	@ 0x28
 8003092:	4381      	bics	r1, r0
 8003094:	6291      	str	r1, [r2, #40]	@ 0x28
      if(ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
 8003096:	2e02      	cmp	r6, #2
 8003098:	d8d3      	bhi.n	8003042 <HAL_ADC_ConfigChannel+0x66>
        ADC->CCR &= ~ADC_CHANNEL_INTERNAL_PATH(sConfig->Channel);
 800309a:	4a0c      	ldr	r2, [pc, #48]	@ (80030cc <HAL_ADC_ConfigChannel+0xf0>)
 800309c:	6811      	ldr	r1, [r2, #0]
 800309e:	2b10      	cmp	r3, #16
 80030a0:	d00a      	beq.n	80030b8 <HAL_ADC_ConfigChannel+0xdc>
 80030a2:	3b11      	subs	r3, #17
 80030a4:	1e58      	subs	r0, r3, #1
 80030a6:	4183      	sbcs	r3, r0
 80030a8:	4809      	ldr	r0, [pc, #36]	@ (80030d0 <HAL_ADC_ConfigChannel+0xf4>)
 80030aa:	425b      	negs	r3, r3
 80030ac:	4003      	ands	r3, r0
 80030ae:	480b      	ldr	r0, [pc, #44]	@ (80030dc <HAL_ADC_ConfigChannel+0x100>)
 80030b0:	181b      	adds	r3, r3, r0
 80030b2:	400b      	ands	r3, r1
 80030b4:	6013      	str	r3, [r2, #0]
 80030b6:	e7c4      	b.n	8003042 <HAL_ADC_ConfigChannel+0x66>
 80030b8:	4b09      	ldr	r3, [pc, #36]	@ (80030e0 <HAL_ADC_ConfigChannel+0x104>)
 80030ba:	e7fa      	b.n	80030b2 <HAL_ADC_ConfigChannel+0xd6>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 80030bc:	2220      	movs	r2, #32
 80030be:	6b99      	ldr	r1, [r3, #56]	@ 0x38
 80030c0:	430a      	orrs	r2, r1
 80030c2:	639a      	str	r2, [r3, #56]	@ 0x38
    tmp_hal_status = HAL_ERROR;
 80030c4:	e7be      	b.n	8003044 <HAL_ADC_ConfigChannel+0x68>
 80030c6:	46c0      	nop			@ (mov r8, r8)
 80030c8:	00001001 	.word	0x00001001
 80030cc:	40012708 	.word	0x40012708
 80030d0:	ff400000 	.word	0xff400000
 80030d4:	20000000 	.word	0x20000000
 80030d8:	000f4240 	.word	0x000f4240
 80030dc:	ffbfffff 	.word	0xffbfffff
 80030e0:	ff7fffff 	.word	0xff7fffff

080030e4 <HAL_NVIC_SetPriority>:
  *         with stm32f0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0 based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80030e4:	b510      	push	{r4, lr}
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80030e6:	24ff      	movs	r4, #255	@ 0xff
 80030e8:	2203      	movs	r2, #3
 80030ea:	000b      	movs	r3, r1
 80030ec:	0021      	movs	r1, r4
 80030ee:	4002      	ands	r2, r0
 80030f0:	00d2      	lsls	r2, r2, #3
 80030f2:	4091      	lsls	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80030f4:	019b      	lsls	r3, r3, #6
 80030f6:	4023      	ands	r3, r4
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80030f8:	43c9      	mvns	r1, r1
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80030fa:	4093      	lsls	r3, r2
  if ((int32_t)(IRQn) >= 0)
 80030fc:	2800      	cmp	r0, #0
 80030fe:	db0a      	blt.n	8003116 <HAL_NVIC_SetPriority+0x32>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003100:	24c0      	movs	r4, #192	@ 0xc0
 8003102:	4a0b      	ldr	r2, [pc, #44]	@ (8003130 <HAL_NVIC_SetPriority+0x4c>)
 8003104:	0880      	lsrs	r0, r0, #2
 8003106:	0080      	lsls	r0, r0, #2
 8003108:	1880      	adds	r0, r0, r2
 800310a:	00a4      	lsls	r4, r4, #2
 800310c:	5902      	ldr	r2, [r0, r4]
 800310e:	400a      	ands	r2, r1
 8003110:	4313      	orrs	r3, r2
 8003112:	5103      	str	r3, [r0, r4]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);

  /* Prevent unused argument(s) compilation warning */
  UNUSED(SubPriority);
}
 8003114:	bd10      	pop	{r4, pc}
  }
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003116:	220f      	movs	r2, #15
 8003118:	4010      	ands	r0, r2
 800311a:	3808      	subs	r0, #8
 800311c:	4a05      	ldr	r2, [pc, #20]	@ (8003134 <HAL_NVIC_SetPriority+0x50>)
 800311e:	0880      	lsrs	r0, r0, #2
 8003120:	0080      	lsls	r0, r0, #2
 8003122:	1880      	adds	r0, r0, r2
 8003124:	69c2      	ldr	r2, [r0, #28]
 8003126:	4011      	ands	r1, r2
 8003128:	4319      	orrs	r1, r3
 800312a:	61c1      	str	r1, [r0, #28]
 800312c:	e7f2      	b.n	8003114 <HAL_NVIC_SetPriority+0x30>
 800312e:	46c0      	nop			@ (mov r8, r8)
 8003130:	e000e100 	.word	0xe000e100
 8003134:	e000ed00 	.word	0xe000ed00

08003138 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003138:	2800      	cmp	r0, #0
 800313a:	db05      	blt.n	8003148 <HAL_NVIC_EnableIRQ+0x10>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800313c:	231f      	movs	r3, #31
 800313e:	4018      	ands	r0, r3
 8003140:	3b1e      	subs	r3, #30
 8003142:	4083      	lsls	r3, r0
 8003144:	4a01      	ldr	r2, [pc, #4]	@ (800314c <HAL_NVIC_EnableIRQ+0x14>)
 8003146:	6013      	str	r3, [r2, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8003148:	4770      	bx	lr
 800314a:	46c0      	nop			@ (mov r8, r8)
 800314c:	e000e100 	.word	0xe000e100

08003150 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8003150:	2280      	movs	r2, #128	@ 0x80
 8003152:	1e43      	subs	r3, r0, #1
 8003154:	0452      	lsls	r2, r2, #17
  {
    return (1UL);                                                   /* Reload value impossible */
 8003156:	2001      	movs	r0, #1
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8003158:	4293      	cmp	r3, r2
 800315a:	d20d      	bcs.n	8003178 <HAL_SYSTICK_Config+0x28>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800315c:	21c0      	movs	r1, #192	@ 0xc0
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800315e:	4a07      	ldr	r2, [pc, #28]	@ (800317c <HAL_SYSTICK_Config+0x2c>)
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003160:	4807      	ldr	r0, [pc, #28]	@ (8003180 <HAL_SYSTICK_Config+0x30>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8003162:	6053      	str	r3, [r2, #4]
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003164:	6a03      	ldr	r3, [r0, #32]
 8003166:	0609      	lsls	r1, r1, #24
 8003168:	021b      	lsls	r3, r3, #8
 800316a:	0a1b      	lsrs	r3, r3, #8
 800316c:	430b      	orrs	r3, r1
 800316e:	6203      	str	r3, [r0, #32]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8003170:	2000      	movs	r0, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8003172:	2307      	movs	r3, #7
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8003174:	6090      	str	r0, [r2, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8003176:	6013      	str	r3, [r2, #0]
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 8003178:	4770      	bx	lr
 800317a:	46c0      	nop			@ (mov r8, r8)
 800317c:	e000e010 	.word	0xe000e010
 8003180:	e000ed00 	.word	0xe000ed00

08003184 <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 8003184:	b570      	push	{r4, r5, r6, lr}
 8003186:	0004      	movs	r4, r0
  uint32_t tmp = 0U;

  /* Check the DMA handle allocation */
  if (NULL == hdma)
  {
    return HAL_ERROR;
 8003188:	2001      	movs	r0, #1
  if (NULL == hdma)
 800318a:	2c00      	cmp	r4, #0
 800318c:	d024      	beq.n	80031d8 <HAL_DMA_Init+0x54>
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));

  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;
 800318e:	2302      	movs	r3, #2
 8003190:	1ca5      	adds	r5, r4, #2
 8003192:	77eb      	strb	r3, [r5, #31]

  /* Get the CR register value */
  tmp = hdma->Instance->CCR;
 8003194:	6820      	ldr	r0, [r4, #0]

  /* Clear PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR bits */
  tmp &= ((uint32_t)~(DMA_CCR_PL    | DMA_CCR_MSIZE  | DMA_CCR_PSIZE  | \
 8003196:	4b11      	ldr	r3, [pc, #68]	@ (80031dc <HAL_DMA_Init+0x58>)
  tmp = hdma->Instance->CCR;
 8003198:	6802      	ldr	r2, [r0, #0]
                      DMA_CCR_MINC  | DMA_CCR_PINC   | DMA_CCR_CIRC   | \
                      DMA_CCR_DIR));

  /* Prepare the DMA Channel configuration */
  tmp |=  hdma->Init.Direction        |
 800319a:	68a1      	ldr	r1, [r4, #8]
  tmp &= ((uint32_t)~(DMA_CCR_PL    | DMA_CCR_MSIZE  | DMA_CCR_PSIZE  | \
 800319c:	401a      	ands	r2, r3
  tmp |=  hdma->Init.Direction        |
 800319e:	6863      	ldr	r3, [r4, #4]
 80031a0:	430b      	orrs	r3, r1
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80031a2:	68e1      	ldr	r1, [r4, #12]
 80031a4:	430b      	orrs	r3, r1
 80031a6:	6921      	ldr	r1, [r4, #16]
 80031a8:	430b      	orrs	r3, r1
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80031aa:	6961      	ldr	r1, [r4, #20]
 80031ac:	430b      	orrs	r3, r1
 80031ae:	69a1      	ldr	r1, [r4, #24]
 80031b0:	430b      	orrs	r3, r1
          hdma->Init.Mode                | hdma->Init.Priority;
 80031b2:	69e1      	ldr	r1, [r4, #28]
 80031b4:	430b      	orrs	r3, r1
  tmp |=  hdma->Init.Direction        |
 80031b6:	4313      	orrs	r3, r2

  /* Write to DMA Channel CR register */
  hdma->Instance->CCR = tmp;
 80031b8:	6003      	str	r3, [r0, #0]
    hdma->DmaBaseAddress = DMA2;
  }
#else
  /* calculation of the channel index */
  /* DMA1 */
  hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Channel2 - (uint32_t)DMA1_Channel1)) << 2U;
 80031ba:	4b09      	ldr	r3, [pc, #36]	@ (80031e0 <HAL_DMA_Init+0x5c>)
 80031bc:	2114      	movs	r1, #20
 80031be:	18c0      	adds	r0, r0, r3
 80031c0:	f7fc ffbe 	bl	8000140 <__udivsi3>
  hdma->DmaBaseAddress = DMA1;
 80031c4:	4b07      	ldr	r3, [pc, #28]	@ (80031e4 <HAL_DMA_Init+0x60>)
  hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Channel2 - (uint32_t)DMA1_Channel1)) << 2U;
 80031c6:	0080      	lsls	r0, r0, #2
 80031c8:	6420      	str	r0, [r4, #64]	@ 0x40
  hdma->DmaBaseAddress = DMA1;
 80031ca:	63e3      	str	r3, [r4, #60]	@ 0x3c
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80031cc:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 80031ce:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80031d0:	63a0      	str	r0, [r4, #56]	@ 0x38
  hdma->Lock = HAL_UNLOCKED;
 80031d2:	18e4      	adds	r4, r4, r3
  hdma->State = HAL_DMA_STATE_READY;
 80031d4:	77eb      	strb	r3, [r5, #31]
  hdma->Lock = HAL_UNLOCKED;
 80031d6:	77e0      	strb	r0, [r4, #31]
}
 80031d8:	bd70      	pop	{r4, r5, r6, pc}
 80031da:	46c0      	nop			@ (mov r8, r8)
 80031dc:	ffffc00f 	.word	0xffffc00f
 80031e0:	bffdfff8 	.word	0xbffdfff8
 80031e4:	40020000 	.word	0x40020000

080031e8 <HAL_DMA_Start_IT>:
{
 80031e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __HAL_LOCK(hdma);
 80031ea:	1c44      	adds	r4, r0, #1
{
 80031ec:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hdma);
 80031ee:	7fe5      	ldrb	r5, [r4, #31]
 80031f0:	2d01      	cmp	r5, #1
 80031f2:	d033      	beq.n	800325c <HAL_DMA_Start_IT+0x74>
 80031f4:	2501      	movs	r5, #1
  if (HAL_DMA_STATE_READY == hdma->State)
 80031f6:	1c87      	adds	r7, r0, #2
  __HAL_LOCK(hdma);
 80031f8:	77e5      	strb	r5, [r4, #31]
  if (HAL_DMA_STATE_READY == hdma->State)
 80031fa:	7ffd      	ldrb	r5, [r7, #31]
 80031fc:	2600      	movs	r6, #0
 80031fe:	46ac      	mov	ip, r5
 8003200:	4663      	mov	r3, ip
 8003202:	b2ed      	uxtb	r5, r5
 8003204:	2b01      	cmp	r3, #1
 8003206:	d128      	bne.n	800325a <HAL_DMA_Start_IT+0x72>
    hdma->State = HAL_DMA_STATE_BUSY;
 8003208:	2402      	movs	r4, #2
 800320a:	77fc      	strb	r4, [r7, #31]
    hdma->Instance->CCR &= ~DMA_CCR_EN;
 800320c:	6804      	ldr	r4, [r0, #0]
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800320e:	6386      	str	r6, [r0, #56]	@ 0x38
    hdma->Instance->CCR &= ~DMA_CCR_EN;
 8003210:	6826      	ldr	r6, [r4, #0]
  hdma->DmaBaseAddress->IFCR  = (DMA_FLAG_GL1 << hdma->ChannelIndex);
 8003212:	6c07      	ldr	r7, [r0, #64]	@ 0x40
    hdma->Instance->CCR &= ~DMA_CCR_EN;
 8003214:	43ae      	bics	r6, r5
  hdma->DmaBaseAddress->IFCR  = (DMA_FLAG_GL1 << hdma->ChannelIndex);
 8003216:	40bd      	lsls	r5, r7
    hdma->Instance->CCR &= ~DMA_CCR_EN;
 8003218:	6026      	str	r6, [r4, #0]
  hdma->Instance->CNDTR = DataLength;
 800321a:	9b01      	ldr	r3, [sp, #4]
  hdma->DmaBaseAddress->IFCR  = (DMA_FLAG_GL1 << hdma->ChannelIndex);
 800321c:	6bc6      	ldr	r6, [r0, #60]	@ 0x3c
 800321e:	6075      	str	r5, [r6, #4]
  hdma->Instance->CNDTR = DataLength;
 8003220:	6063      	str	r3, [r4, #4]
  if ((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8003222:	6843      	ldr	r3, [r0, #4]
 8003224:	2b10      	cmp	r3, #16
 8003226:	d10e      	bne.n	8003246 <HAL_DMA_Start_IT+0x5e>
    hdma->Instance->CPAR = DstAddress;
 8003228:	60a2      	str	r2, [r4, #8]
    hdma->Instance->CMAR = SrcAddress;
 800322a:	60e1      	str	r1, [r4, #12]
    if (NULL != hdma->XferHalfCpltCallback)
 800322c:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
      hdma->Instance->CCR |= (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE);
 800322e:	6822      	ldr	r2, [r4, #0]
    if (NULL != hdma->XferHalfCpltCallback)
 8003230:	2b00      	cmp	r3, #0
 8003232:	d00b      	beq.n	800324c <HAL_DMA_Start_IT+0x64>
      hdma->Instance->CCR |= (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE);
 8003234:	230e      	movs	r3, #14
 8003236:	4313      	orrs	r3, r2
      hdma->Instance->CCR &= ~DMA_IT_HT;
 8003238:	6023      	str	r3, [r4, #0]
    hdma->Instance->CCR |= DMA_CCR_EN;
 800323a:	2301      	movs	r3, #1
  HAL_StatusTypeDef status = HAL_OK;
 800323c:	2000      	movs	r0, #0
    hdma->Instance->CCR |= DMA_CCR_EN;
 800323e:	6822      	ldr	r2, [r4, #0]
 8003240:	4313      	orrs	r3, r2
 8003242:	6023      	str	r3, [r4, #0]
}
 8003244:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    hdma->Instance->CPAR = SrcAddress;
 8003246:	60a1      	str	r1, [r4, #8]
    hdma->Instance->CMAR = DstAddress;
 8003248:	60e2      	str	r2, [r4, #12]
 800324a:	e7ef      	b.n	800322c <HAL_DMA_Start_IT+0x44>
      hdma->Instance->CCR |= (DMA_IT_TC | DMA_IT_TE);
 800324c:	230a      	movs	r3, #10
 800324e:	4313      	orrs	r3, r2
      hdma->Instance->CCR &= ~DMA_IT_HT;
 8003250:	2204      	movs	r2, #4
      hdma->Instance->CCR |= (DMA_IT_TC | DMA_IT_TE);
 8003252:	6023      	str	r3, [r4, #0]
      hdma->Instance->CCR &= ~DMA_IT_HT;
 8003254:	6823      	ldr	r3, [r4, #0]
 8003256:	4393      	bics	r3, r2
 8003258:	e7ee      	b.n	8003238 <HAL_DMA_Start_IT+0x50>
    __HAL_UNLOCK(hdma);
 800325a:	77e6      	strb	r6, [r4, #31]
  __HAL_LOCK(hdma);
 800325c:	2002      	movs	r0, #2
 800325e:	e7f1      	b.n	8003244 <HAL_DMA_Start_IT+0x5c>

08003260 <HAL_DMA_IRQHandler>:
{
 8003260:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if ((RESET != (flag_it & (DMA_FLAG_HT1 << hdma->ChannelIndex))) && (RESET != (source_it & DMA_IT_HT)))
 8003262:	2704      	movs	r7, #4
 8003264:	003e      	movs	r6, r7
 8003266:	6c01      	ldr	r1, [r0, #64]	@ 0x40
  uint32_t flag_it = hdma->DmaBaseAddress->ISR;
 8003268:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
  if ((RESET != (flag_it & (DMA_FLAG_HT1 << hdma->ChannelIndex))) && (RESET != (source_it & DMA_IT_HT)))
 800326a:	408e      	lsls	r6, r1
  uint32_t flag_it = hdma->DmaBaseAddress->ISR;
 800326c:	6815      	ldr	r5, [r2, #0]
  uint32_t source_it = hdma->Instance->CCR;
 800326e:	6803      	ldr	r3, [r0, #0]
 8003270:	681c      	ldr	r4, [r3, #0]
  if ((RESET != (flag_it & (DMA_FLAG_HT1 << hdma->ChannelIndex))) && (RESET != (source_it & DMA_IT_HT)))
 8003272:	4235      	tst	r5, r6
 8003274:	d00d      	beq.n	8003292 <HAL_DMA_IRQHandler+0x32>
 8003276:	423c      	tst	r4, r7
 8003278:	d00b      	beq.n	8003292 <HAL_DMA_IRQHandler+0x32>
    if ((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 800327a:	6819      	ldr	r1, [r3, #0]
 800327c:	0689      	lsls	r1, r1, #26
 800327e:	d402      	bmi.n	8003286 <HAL_DMA_IRQHandler+0x26>
      hdma->Instance->CCR &= ~DMA_IT_HT;
 8003280:	6819      	ldr	r1, [r3, #0]
 8003282:	43b9      	bics	r1, r7
 8003284:	6019      	str	r1, [r3, #0]
    if (hdma->XferHalfCpltCallback != NULL)
 8003286:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
    hdma->DmaBaseAddress->IFCR = DMA_FLAG_HT1 << hdma->ChannelIndex;
 8003288:	6056      	str	r6, [r2, #4]
    if (hdma->XferHalfCpltCallback != NULL)
 800328a:	2b00      	cmp	r3, #0
 800328c:	d019      	beq.n	80032c2 <HAL_DMA_IRQHandler+0x62>
      hdma->XferErrorCallback(hdma);
 800328e:	4798      	blx	r3
}
 8003290:	e017      	b.n	80032c2 <HAL_DMA_IRQHandler+0x62>
  else if ((RESET != (flag_it & (DMA_FLAG_TC1 << hdma->ChannelIndex))) && (RESET != (source_it & DMA_IT_TC)))
 8003292:	2702      	movs	r7, #2
 8003294:	003e      	movs	r6, r7
 8003296:	408e      	lsls	r6, r1
 8003298:	4235      	tst	r5, r6
 800329a:	d013      	beq.n	80032c4 <HAL_DMA_IRQHandler+0x64>
 800329c:	423c      	tst	r4, r7
 800329e:	d011      	beq.n	80032c4 <HAL_DMA_IRQHandler+0x64>
    if ((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 80032a0:	6819      	ldr	r1, [r3, #0]
 80032a2:	0689      	lsls	r1, r1, #26
 80032a4:	d406      	bmi.n	80032b4 <HAL_DMA_IRQHandler+0x54>
      hdma->Instance->CCR &= ~(DMA_IT_TC | DMA_IT_TE);
 80032a6:	240a      	movs	r4, #10
 80032a8:	6819      	ldr	r1, [r3, #0]
 80032aa:	43a1      	bics	r1, r4
 80032ac:	6019      	str	r1, [r3, #0]
      hdma->State = HAL_DMA_STATE_READY;
 80032ae:	2101      	movs	r1, #1
 80032b0:	19c3      	adds	r3, r0, r7
 80032b2:	77d9      	strb	r1, [r3, #31]
    hdma->DmaBaseAddress->IFCR = DMA_FLAG_TC1 << hdma->ChannelIndex;
 80032b4:	6056      	str	r6, [r2, #4]
    __HAL_UNLOCK(hdma);
 80032b6:	2200      	movs	r2, #0
 80032b8:	1c43      	adds	r3, r0, #1
 80032ba:	77da      	strb	r2, [r3, #31]
    if (hdma->XferCpltCallback != NULL)
 80032bc:	6a83      	ldr	r3, [r0, #40]	@ 0x28
    if (hdma->XferErrorCallback != NULL)
 80032be:	4293      	cmp	r3, r2
 80032c0:	d1e5      	bne.n	800328e <HAL_DMA_IRQHandler+0x2e>
}
 80032c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  else if ((RESET != (flag_it & (DMA_FLAG_TE1 << hdma->ChannelIndex))) && (RESET != (source_it & DMA_IT_TE)))
 80032c4:	2608      	movs	r6, #8
 80032c6:	0037      	movs	r7, r6
 80032c8:	408f      	lsls	r7, r1
 80032ca:	423d      	tst	r5, r7
 80032cc:	d0f9      	beq.n	80032c2 <HAL_DMA_IRQHandler+0x62>
 80032ce:	4234      	tst	r4, r6
 80032d0:	d0f7      	beq.n	80032c2 <HAL_DMA_IRQHandler+0x62>
    hdma->Instance->CCR &= ~(DMA_IT_TC | DMA_IT_HT | DMA_IT_TE);
 80032d2:	250e      	movs	r5, #14
 80032d4:	681c      	ldr	r4, [r3, #0]
 80032d6:	43ac      	bics	r4, r5
 80032d8:	601c      	str	r4, [r3, #0]
    hdma->DmaBaseAddress->IFCR = DMA_FLAG_GL1 << hdma->ChannelIndex;
 80032da:	2301      	movs	r3, #1
 80032dc:	001c      	movs	r4, r3
 80032de:	408c      	lsls	r4, r1
 80032e0:	6054      	str	r4, [r2, #4]
    hdma->State = HAL_DMA_STATE_READY;
 80032e2:	1c82      	adds	r2, r0, #2
    hdma->ErrorCode = HAL_DMA_ERROR_TE;
 80032e4:	6383      	str	r3, [r0, #56]	@ 0x38
    hdma->State = HAL_DMA_STATE_READY;
 80032e6:	77d3      	strb	r3, [r2, #31]
    __HAL_UNLOCK(hdma);
 80032e8:	2200      	movs	r2, #0
 80032ea:	18c3      	adds	r3, r0, r3
 80032ec:	77da      	strb	r2, [r3, #31]
    if (hdma->XferErrorCallback != NULL)
 80032ee:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 80032f0:	e7e5      	b.n	80032be <HAL_DMA_IRQHandler+0x5e>
	...

080032f4 <HAL_GPIO_Init>:
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
  uint32_t position = 0x00u;
 80032f4:	2300      	movs	r3, #0
{
 80032f6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80032f8:	b087      	sub	sp, #28
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 80032fa:	680a      	ldr	r2, [r1, #0]
 80032fc:	0014      	movs	r4, r2
 80032fe:	40dc      	lsrs	r4, r3
 8003300:	d101      	bne.n	8003306 <HAL_GPIO_Init+0x12>
      }
    }

    position++;
  } 
}
 8003302:	b007      	add	sp, #28
 8003304:	bdf0      	pop	{r4, r5, r6, r7, pc}
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 8003306:	2501      	movs	r5, #1
 8003308:	0014      	movs	r4, r2
 800330a:	409d      	lsls	r5, r3
 800330c:	402c      	ands	r4, r5
 800330e:	9400      	str	r4, [sp, #0]
    if (iocurrent != 0x00u)
 8003310:	422a      	tst	r2, r5
 8003312:	d100      	bne.n	8003316 <HAL_GPIO_Init+0x22>
 8003314:	e094      	b.n	8003440 <HAL_GPIO_Init+0x14c>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 8003316:	684a      	ldr	r2, [r1, #4]
 8003318:	005f      	lsls	r7, r3, #1
 800331a:	4694      	mov	ip, r2
 800331c:	2203      	movs	r2, #3
 800331e:	4664      	mov	r4, ip
 8003320:	4022      	ands	r2, r4
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2u));
 8003322:	2403      	movs	r4, #3
 8003324:	40bc      	lsls	r4, r7
 8003326:	43e4      	mvns	r4, r4
 8003328:	9401      	str	r4, [sp, #4]
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 800332a:	1e54      	subs	r4, r2, #1
 800332c:	2c01      	cmp	r4, #1
 800332e:	d82e      	bhi.n	800338e <HAL_GPIO_Init+0x9a>
        temp = GPIOx->OSPEEDR;
 8003330:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2u));
 8003332:	9c01      	ldr	r4, [sp, #4]
 8003334:	4026      	ands	r6, r4
        temp |= (GPIO_Init->Speed << (position * 2u));
 8003336:	68cc      	ldr	r4, [r1, #12]
 8003338:	40bc      	lsls	r4, r7
 800333a:	4334      	orrs	r4, r6
        GPIOx->OSPEEDR = temp;
 800333c:	6084      	str	r4, [r0, #8]
        temp = GPIOx->OTYPER;
 800333e:	6844      	ldr	r4, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8003340:	2601      	movs	r6, #1
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003342:	43ac      	bics	r4, r5
 8003344:	0025      	movs	r5, r4
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8003346:	4664      	mov	r4, ip
 8003348:	0924      	lsrs	r4, r4, #4
 800334a:	4034      	ands	r4, r6
 800334c:	409c      	lsls	r4, r3
 800334e:	432c      	orrs	r4, r5
        GPIOx->OTYPER = temp;
 8003350:	6044      	str	r4, [r0, #4]
        temp = GPIOx->PUPDR;
 8003352:	68c5      	ldr	r5, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2u));
 8003354:	9c01      	ldr	r4, [sp, #4]
 8003356:	4025      	ands	r5, r4
        temp |= ((GPIO_Init->Pull) << (position * 2u));
 8003358:	688c      	ldr	r4, [r1, #8]
 800335a:	40bc      	lsls	r4, r7
 800335c:	432c      	orrs	r4, r5
        GPIOx->PUPDR = temp;
 800335e:	60c4      	str	r4, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8003360:	2a02      	cmp	r2, #2
 8003362:	d116      	bne.n	8003392 <HAL_GPIO_Init+0x9e>
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8003364:	2507      	movs	r5, #7
 8003366:	260f      	movs	r6, #15
 8003368:	401d      	ands	r5, r3
 800336a:	00ad      	lsls	r5, r5, #2
 800336c:	40ae      	lsls	r6, r5
        temp = GPIOx->AFR[position >> 3u];
 800336e:	08dc      	lsrs	r4, r3, #3
 8003370:	00a4      	lsls	r4, r4, #2
 8003372:	1904      	adds	r4, r0, r4
 8003374:	9402      	str	r4, [sp, #8]
 8003376:	6a24      	ldr	r4, [r4, #32]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8003378:	9603      	str	r6, [sp, #12]
 800337a:	0026      	movs	r6, r4
 800337c:	9c03      	ldr	r4, [sp, #12]
 800337e:	43a6      	bics	r6, r4
 8003380:	0034      	movs	r4, r6
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 8003382:	690e      	ldr	r6, [r1, #16]
 8003384:	40ae      	lsls	r6, r5
 8003386:	4326      	orrs	r6, r4
        GPIOx->AFR[position >> 3u] = temp;
 8003388:	9c02      	ldr	r4, [sp, #8]
 800338a:	6226      	str	r6, [r4, #32]
 800338c:	e001      	b.n	8003392 <HAL_GPIO_Init+0x9e>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800338e:	2a03      	cmp	r2, #3
 8003390:	d1df      	bne.n	8003352 <HAL_GPIO_Init+0x5e>
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 8003392:	40ba      	lsls	r2, r7
      temp = GPIOx->MODER;
 8003394:	6804      	ldr	r4, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2u));
 8003396:	9d01      	ldr	r5, [sp, #4]
 8003398:	4025      	ands	r5, r4
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 800339a:	432a      	orrs	r2, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 800339c:	24c0      	movs	r4, #192	@ 0xc0
      GPIOx->MODER = temp;
 800339e:	6002      	str	r2, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 80033a0:	4662      	mov	r2, ip
 80033a2:	02a4      	lsls	r4, r4, #10
 80033a4:	4222      	tst	r2, r4
 80033a6:	d04b      	beq.n	8003440 <HAL_GPIO_Init+0x14c>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80033a8:	2501      	movs	r5, #1
 80033aa:	4a26      	ldr	r2, [pc, #152]	@ (8003444 <HAL_GPIO_Init+0x150>)
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 80033ac:	2790      	movs	r7, #144	@ 0x90
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80033ae:	6994      	ldr	r4, [r2, #24]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 80033b0:	05ff      	lsls	r7, r7, #23
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80033b2:	432c      	orrs	r4, r5
 80033b4:	6194      	str	r4, [r2, #24]
 80033b6:	6992      	ldr	r2, [r2, #24]
        temp = SYSCFG->EXTICR[position >> 2u];
 80033b8:	089c      	lsrs	r4, r3, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80033ba:	402a      	ands	r2, r5
 80033bc:	9205      	str	r2, [sp, #20]
 80033be:	9a05      	ldr	r2, [sp, #20]
        temp = SYSCFG->EXTICR[position >> 2u];
 80033c0:	4a21      	ldr	r2, [pc, #132]	@ (8003448 <HAL_GPIO_Init+0x154>)
 80033c2:	00a4      	lsls	r4, r4, #2
 80033c4:	18a4      	adds	r4, r4, r2
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 80033c6:	220f      	movs	r2, #15
 80033c8:	3502      	adds	r5, #2
 80033ca:	401d      	ands	r5, r3
 80033cc:	00ad      	lsls	r5, r5, #2
 80033ce:	40aa      	lsls	r2, r5
        temp = SYSCFG->EXTICR[position >> 2u];
 80033d0:	68a6      	ldr	r6, [r4, #8]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 80033d2:	4396      	bics	r6, r2
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 80033d4:	2200      	movs	r2, #0
 80033d6:	42b8      	cmp	r0, r7
 80033d8:	d008      	beq.n	80033ec <HAL_GPIO_Init+0xf8>
 80033da:	4f1c      	ldr	r7, [pc, #112]	@ (800344c <HAL_GPIO_Init+0x158>)
 80033dc:	3201      	adds	r2, #1
 80033de:	42b8      	cmp	r0, r7
 80033e0:	d004      	beq.n	80033ec <HAL_GPIO_Init+0xf8>
 80033e2:	4f1b      	ldr	r7, [pc, #108]	@ (8003450 <HAL_GPIO_Init+0x15c>)
 80033e4:	3204      	adds	r2, #4
 80033e6:	42b8      	cmp	r0, r7
 80033e8:	d100      	bne.n	80033ec <HAL_GPIO_Init+0xf8>
 80033ea:	3a03      	subs	r2, #3
 80033ec:	40aa      	lsls	r2, r5
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 80033ee:	4667      	mov	r7, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 80033f0:	4332      	orrs	r2, r6
        SYSCFG->EXTICR[position >> 2u] = temp;
 80033f2:	60a2      	str	r2, [r4, #8]
        temp = EXTI->RTSR;
 80033f4:	4a17      	ldr	r2, [pc, #92]	@ (8003454 <HAL_GPIO_Init+0x160>)
        temp &= ~(iocurrent);
 80033f6:	9c00      	ldr	r4, [sp, #0]
        temp = EXTI->RTSR;
 80033f8:	6896      	ldr	r6, [r2, #8]
          temp |= iocurrent;
 80033fa:	9d00      	ldr	r5, [sp, #0]
        temp &= ~(iocurrent);
 80033fc:	43e4      	mvns	r4, r4
          temp |= iocurrent;
 80033fe:	4335      	orrs	r5, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8003400:	02ff      	lsls	r7, r7, #11
 8003402:	d401      	bmi.n	8003408 <HAL_GPIO_Init+0x114>
        temp &= ~(iocurrent);
 8003404:	0035      	movs	r5, r6
 8003406:	4025      	ands	r5, r4
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8003408:	4667      	mov	r7, ip
        EXTI->RTSR = temp;
 800340a:	6095      	str	r5, [r2, #8]
        temp = EXTI->FTSR;
 800340c:	68d6      	ldr	r6, [r2, #12]
          temp |= iocurrent;
 800340e:	9d00      	ldr	r5, [sp, #0]
 8003410:	4335      	orrs	r5, r6
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8003412:	02bf      	lsls	r7, r7, #10
 8003414:	d401      	bmi.n	800341a <HAL_GPIO_Init+0x126>
        temp &= ~(iocurrent);
 8003416:	0035      	movs	r5, r6
 8003418:	4025      	ands	r5, r4
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 800341a:	4667      	mov	r7, ip
        EXTI->FTSR = temp;
 800341c:	60d5      	str	r5, [r2, #12]
        temp = EXTI->EMR;
 800341e:	6856      	ldr	r6, [r2, #4]
          temp |= iocurrent;
 8003420:	9d00      	ldr	r5, [sp, #0]
 8003422:	4335      	orrs	r5, r6
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 8003424:	03bf      	lsls	r7, r7, #14
 8003426:	d401      	bmi.n	800342c <HAL_GPIO_Init+0x138>
        temp &= ~(iocurrent);
 8003428:	0035      	movs	r5, r6
 800342a:	4025      	ands	r5, r4
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 800342c:	4667      	mov	r7, ip
        EXTI->EMR = temp;
 800342e:	6055      	str	r5, [r2, #4]
        temp = EXTI->IMR;
 8003430:	6815      	ldr	r5, [r2, #0]
          temp |= iocurrent;
 8003432:	9e00      	ldr	r6, [sp, #0]
 8003434:	432e      	orrs	r6, r5
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8003436:	03ff      	lsls	r7, r7, #15
 8003438:	d401      	bmi.n	800343e <HAL_GPIO_Init+0x14a>
        temp &= ~(iocurrent);
 800343a:	4025      	ands	r5, r4
 800343c:	002e      	movs	r6, r5
        EXTI->IMR = temp;
 800343e:	6016      	str	r6, [r2, #0]
    position++;
 8003440:	3301      	adds	r3, #1
 8003442:	e75a      	b.n	80032fa <HAL_GPIO_Init+0x6>
 8003444:	40021000 	.word	0x40021000
 8003448:	40010000 	.word	0x40010000
 800344c:	48000400 	.word	0x48000400
 8003450:	48000800 	.word	0x48000800
 8003454:	40010400 	.word	0x40010400

08003458 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8003458:	2a00      	cmp	r2, #0
 800345a:	d001      	beq.n	8003460 <HAL_GPIO_WritePin+0x8>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 800345c:	6181      	str	r1, [r0, #24]
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
  }
}
 800345e:	4770      	bx	lr
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 8003460:	6281      	str	r1, [r0, #40]	@ 0x28
}
 8003462:	e7fc      	b.n	800345e <HAL_GPIO_WritePin+0x6>

08003464 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8003464:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003466:	0004      	movs	r4, r0
 8003468:	b085      	sub	sp, #20
  uint32_t tickstart;
  uint32_t pll_config;
  uint32_t pll_config2;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800346a:	2800      	cmp	r0, #0
 800346c:	d102      	bne.n	8003474 <HAL_RCC_OscConfig+0x10>
  {
    return HAL_ERROR;
 800346e:	2001      	movs	r0, #1
      }
    }
  }

  return HAL_OK;
}
 8003470:	b005      	add	sp, #20
 8003472:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8003474:	6803      	ldr	r3, [r0, #0]
 8003476:	07db      	lsls	r3, r3, #31
 8003478:	d433      	bmi.n	80034e2 <HAL_RCC_OscConfig+0x7e>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800347a:	6823      	ldr	r3, [r4, #0]
 800347c:	079b      	lsls	r3, r3, #30
 800347e:	d500      	bpl.n	8003482 <HAL_RCC_OscConfig+0x1e>
 8003480:	e087      	b.n	8003592 <HAL_RCC_OscConfig+0x12e>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8003482:	6823      	ldr	r3, [r4, #0]
 8003484:	071b      	lsls	r3, r3, #28
 8003486:	d500      	bpl.n	800348a <HAL_RCC_OscConfig+0x26>
 8003488:	e0c8      	b.n	800361c <HAL_RCC_OscConfig+0x1b8>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800348a:	6823      	ldr	r3, [r4, #0]
 800348c:	075b      	lsls	r3, r3, #29
 800348e:	d500      	bpl.n	8003492 <HAL_RCC_OscConfig+0x2e>
 8003490:	e0eb      	b.n	800366a <HAL_RCC_OscConfig+0x206>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 8003492:	6823      	ldr	r3, [r4, #0]
 8003494:	06db      	lsls	r3, r3, #27
 8003496:	d51a      	bpl.n	80034ce <HAL_RCC_OscConfig+0x6a>
    if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 8003498:	6962      	ldr	r2, [r4, #20]
 800349a:	2304      	movs	r3, #4
 800349c:	4db9      	ldr	r5, [pc, #740]	@ (8003784 <HAL_RCC_OscConfig+0x320>)
 800349e:	2a01      	cmp	r2, #1
 80034a0:	d000      	beq.n	80034a4 <HAL_RCC_OscConfig+0x40>
 80034a2:	e154      	b.n	800374e <HAL_RCC_OscConfig+0x2ea>
      __HAL_RCC_HSI14ADC_DISABLE();
 80034a4:	6b69      	ldr	r1, [r5, #52]	@ 0x34
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 80034a6:	2702      	movs	r7, #2
      __HAL_RCC_HSI14ADC_DISABLE();
 80034a8:	430b      	orrs	r3, r1
 80034aa:	636b      	str	r3, [r5, #52]	@ 0x34
      __HAL_RCC_HSI14_ENABLE();
 80034ac:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 80034ae:	431a      	orrs	r2, r3
 80034b0:	636a      	str	r2, [r5, #52]	@ 0x34
      tickstart = HAL_GetTick();
 80034b2:	f7ff fbf3 	bl	8002c9c <HAL_GetTick>
 80034b6:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 80034b8:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 80034ba:	423b      	tst	r3, r7
 80034bc:	d100      	bne.n	80034c0 <HAL_RCC_OscConfig+0x5c>
 80034be:	e13f      	b.n	8003740 <HAL_RCC_OscConfig+0x2dc>
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 80034c0:	21f8      	movs	r1, #248	@ 0xf8
 80034c2:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
 80034c4:	69a3      	ldr	r3, [r4, #24]
 80034c6:	438a      	bics	r2, r1
 80034c8:	00db      	lsls	r3, r3, #3
 80034ca:	4313      	orrs	r3, r2
 80034cc:	636b      	str	r3, [r5, #52]	@ 0x34
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 80034ce:	6823      	ldr	r3, [r4, #0]
 80034d0:	069b      	lsls	r3, r3, #26
 80034d2:	d500      	bpl.n	80034d6 <HAL_RCC_OscConfig+0x72>
 80034d4:	e162      	b.n	800379c <HAL_RCC_OscConfig+0x338>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80034d6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80034d8:	2b00      	cmp	r3, #0
 80034da:	d000      	beq.n	80034de <HAL_RCC_OscConfig+0x7a>
 80034dc:	e1a1      	b.n	8003822 <HAL_RCC_OscConfig+0x3be>
  return HAL_OK;
 80034de:	2000      	movs	r0, #0
 80034e0:	e7c6      	b.n	8003470 <HAL_RCC_OscConfig+0xc>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 80034e2:	220c      	movs	r2, #12
 80034e4:	4da7      	ldr	r5, [pc, #668]	@ (8003784 <HAL_RCC_OscConfig+0x320>)
 80034e6:	686b      	ldr	r3, [r5, #4]
 80034e8:	4013      	ands	r3, r2
 80034ea:	2b04      	cmp	r3, #4
 80034ec:	d00b      	beq.n	8003506 <HAL_RCC_OscConfig+0xa2>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 80034ee:	686b      	ldr	r3, [r5, #4]
 80034f0:	4013      	ands	r3, r2
 80034f2:	2b08      	cmp	r3, #8
 80034f4:	d10e      	bne.n	8003514 <HAL_RCC_OscConfig+0xb0>
 80034f6:	22c0      	movs	r2, #192	@ 0xc0
 80034f8:	686b      	ldr	r3, [r5, #4]
 80034fa:	0252      	lsls	r2, r2, #9
 80034fc:	4013      	ands	r3, r2
 80034fe:	2280      	movs	r2, #128	@ 0x80
 8003500:	0252      	lsls	r2, r2, #9
 8003502:	4293      	cmp	r3, r2
 8003504:	d106      	bne.n	8003514 <HAL_RCC_OscConfig+0xb0>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8003506:	682b      	ldr	r3, [r5, #0]
 8003508:	039b      	lsls	r3, r3, #14
 800350a:	d5b6      	bpl.n	800347a <HAL_RCC_OscConfig+0x16>
 800350c:	6863      	ldr	r3, [r4, #4]
 800350e:	2b00      	cmp	r3, #0
 8003510:	d1b3      	bne.n	800347a <HAL_RCC_OscConfig+0x16>
 8003512:	e7ac      	b.n	800346e <HAL_RCC_OscConfig+0xa>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8003514:	6863      	ldr	r3, [r4, #4]
 8003516:	2b01      	cmp	r3, #1
 8003518:	d113      	bne.n	8003542 <HAL_RCC_OscConfig+0xde>
 800351a:	2380      	movs	r3, #128	@ 0x80
 800351c:	682a      	ldr	r2, [r5, #0]
 800351e:	025b      	lsls	r3, r3, #9
 8003520:	4313      	orrs	r3, r2
 8003522:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8003524:	f7ff fbba 	bl	8002c9c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8003528:	2780      	movs	r7, #128	@ 0x80
        tickstart = HAL_GetTick();
 800352a:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800352c:	02bf      	lsls	r7, r7, #10
 800352e:	682b      	ldr	r3, [r5, #0]
 8003530:	423b      	tst	r3, r7
 8003532:	d1a2      	bne.n	800347a <HAL_RCC_OscConfig+0x16>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8003534:	f7ff fbb2 	bl	8002c9c <HAL_GetTick>
 8003538:	1b80      	subs	r0, r0, r6
 800353a:	2864      	cmp	r0, #100	@ 0x64
 800353c:	d9f7      	bls.n	800352e <HAL_RCC_OscConfig+0xca>
            return HAL_TIMEOUT;
 800353e:	2003      	movs	r0, #3
 8003540:	e796      	b.n	8003470 <HAL_RCC_OscConfig+0xc>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8003542:	2b00      	cmp	r3, #0
 8003544:	d115      	bne.n	8003572 <HAL_RCC_OscConfig+0x10e>
 8003546:	682b      	ldr	r3, [r5, #0]
 8003548:	4a8f      	ldr	r2, [pc, #572]	@ (8003788 <HAL_RCC_OscConfig+0x324>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800354a:	2780      	movs	r7, #128	@ 0x80
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800354c:	4013      	ands	r3, r2
 800354e:	602b      	str	r3, [r5, #0]
 8003550:	682b      	ldr	r3, [r5, #0]
 8003552:	4a8e      	ldr	r2, [pc, #568]	@ (800378c <HAL_RCC_OscConfig+0x328>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8003554:	02bf      	lsls	r7, r7, #10
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8003556:	4013      	ands	r3, r2
 8003558:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800355a:	f7ff fb9f 	bl	8002c9c <HAL_GetTick>
 800355e:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8003560:	682b      	ldr	r3, [r5, #0]
 8003562:	423b      	tst	r3, r7
 8003564:	d089      	beq.n	800347a <HAL_RCC_OscConfig+0x16>
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8003566:	f7ff fb99 	bl	8002c9c <HAL_GetTick>
 800356a:	1b80      	subs	r0, r0, r6
 800356c:	2864      	cmp	r0, #100	@ 0x64
 800356e:	d9f7      	bls.n	8003560 <HAL_RCC_OscConfig+0xfc>
 8003570:	e7e5      	b.n	800353e <HAL_RCC_OscConfig+0xda>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8003572:	2b05      	cmp	r3, #5
 8003574:	d105      	bne.n	8003582 <HAL_RCC_OscConfig+0x11e>
 8003576:	2380      	movs	r3, #128	@ 0x80
 8003578:	682a      	ldr	r2, [r5, #0]
 800357a:	02db      	lsls	r3, r3, #11
 800357c:	4313      	orrs	r3, r2
 800357e:	602b      	str	r3, [r5, #0]
 8003580:	e7cb      	b.n	800351a <HAL_RCC_OscConfig+0xb6>
 8003582:	682b      	ldr	r3, [r5, #0]
 8003584:	4a80      	ldr	r2, [pc, #512]	@ (8003788 <HAL_RCC_OscConfig+0x324>)
 8003586:	4013      	ands	r3, r2
 8003588:	602b      	str	r3, [r5, #0]
 800358a:	682b      	ldr	r3, [r5, #0]
 800358c:	4a7f      	ldr	r2, [pc, #508]	@ (800378c <HAL_RCC_OscConfig+0x328>)
 800358e:	4013      	ands	r3, r2
 8003590:	e7c7      	b.n	8003522 <HAL_RCC_OscConfig+0xbe>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 8003592:	220c      	movs	r2, #12
 8003594:	4d7b      	ldr	r5, [pc, #492]	@ (8003784 <HAL_RCC_OscConfig+0x320>)
 8003596:	686b      	ldr	r3, [r5, #4]
 8003598:	4213      	tst	r3, r2
 800359a:	d00b      	beq.n	80035b4 <HAL_RCC_OscConfig+0x150>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI)))
 800359c:	686b      	ldr	r3, [r5, #4]
 800359e:	4013      	ands	r3, r2
 80035a0:	2b08      	cmp	r3, #8
 80035a2:	d116      	bne.n	80035d2 <HAL_RCC_OscConfig+0x16e>
 80035a4:	22c0      	movs	r2, #192	@ 0xc0
 80035a6:	686b      	ldr	r3, [r5, #4]
 80035a8:	0252      	lsls	r2, r2, #9
 80035aa:	4013      	ands	r3, r2
 80035ac:	2280      	movs	r2, #128	@ 0x80
 80035ae:	0212      	lsls	r2, r2, #8
 80035b0:	4293      	cmp	r3, r2
 80035b2:	d10e      	bne.n	80035d2 <HAL_RCC_OscConfig+0x16e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80035b4:	682b      	ldr	r3, [r5, #0]
 80035b6:	079b      	lsls	r3, r3, #30
 80035b8:	d503      	bpl.n	80035c2 <HAL_RCC_OscConfig+0x15e>
 80035ba:	68e3      	ldr	r3, [r4, #12]
 80035bc:	2b01      	cmp	r3, #1
 80035be:	d000      	beq.n	80035c2 <HAL_RCC_OscConfig+0x15e>
 80035c0:	e755      	b.n	800346e <HAL_RCC_OscConfig+0xa>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80035c2:	21f8      	movs	r1, #248	@ 0xf8
 80035c4:	682a      	ldr	r2, [r5, #0]
 80035c6:	6923      	ldr	r3, [r4, #16]
 80035c8:	438a      	bics	r2, r1
 80035ca:	00db      	lsls	r3, r3, #3
 80035cc:	4313      	orrs	r3, r2
 80035ce:	602b      	str	r3, [r5, #0]
 80035d0:	e757      	b.n	8003482 <HAL_RCC_OscConfig+0x1e>
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 80035d2:	68e2      	ldr	r2, [r4, #12]
 80035d4:	2301      	movs	r3, #1
 80035d6:	2a00      	cmp	r2, #0
 80035d8:	d00f      	beq.n	80035fa <HAL_RCC_OscConfig+0x196>
        __HAL_RCC_HSI_ENABLE();
 80035da:	682a      	ldr	r2, [r5, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80035dc:	2702      	movs	r7, #2
        __HAL_RCC_HSI_ENABLE();
 80035de:	4313      	orrs	r3, r2
 80035e0:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80035e2:	f7ff fb5b 	bl	8002c9c <HAL_GetTick>
 80035e6:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80035e8:	682b      	ldr	r3, [r5, #0]
 80035ea:	423b      	tst	r3, r7
 80035ec:	d1e9      	bne.n	80035c2 <HAL_RCC_OscConfig+0x15e>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80035ee:	f7ff fb55 	bl	8002c9c <HAL_GetTick>
 80035f2:	1b80      	subs	r0, r0, r6
 80035f4:	2802      	cmp	r0, #2
 80035f6:	d9f7      	bls.n	80035e8 <HAL_RCC_OscConfig+0x184>
 80035f8:	e7a1      	b.n	800353e <HAL_RCC_OscConfig+0xda>
        __HAL_RCC_HSI_DISABLE();
 80035fa:	682a      	ldr	r2, [r5, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80035fc:	2702      	movs	r7, #2
        __HAL_RCC_HSI_DISABLE();
 80035fe:	439a      	bics	r2, r3
 8003600:	602a      	str	r2, [r5, #0]
        tickstart = HAL_GetTick();
 8003602:	f7ff fb4b 	bl	8002c9c <HAL_GetTick>
 8003606:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8003608:	682b      	ldr	r3, [r5, #0]
 800360a:	423b      	tst	r3, r7
 800360c:	d100      	bne.n	8003610 <HAL_RCC_OscConfig+0x1ac>
 800360e:	e738      	b.n	8003482 <HAL_RCC_OscConfig+0x1e>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8003610:	f7ff fb44 	bl	8002c9c <HAL_GetTick>
 8003614:	1b80      	subs	r0, r0, r6
 8003616:	2802      	cmp	r0, #2
 8003618:	d9f6      	bls.n	8003608 <HAL_RCC_OscConfig+0x1a4>
 800361a:	e790      	b.n	800353e <HAL_RCC_OscConfig+0xda>
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 800361c:	69e2      	ldr	r2, [r4, #28]
 800361e:	2301      	movs	r3, #1
 8003620:	4d58      	ldr	r5, [pc, #352]	@ (8003784 <HAL_RCC_OscConfig+0x320>)
 8003622:	2a00      	cmp	r2, #0
 8003624:	d010      	beq.n	8003648 <HAL_RCC_OscConfig+0x1e4>
      __HAL_RCC_LSI_ENABLE();
 8003626:	6a6a      	ldr	r2, [r5, #36]	@ 0x24
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8003628:	2702      	movs	r7, #2
      __HAL_RCC_LSI_ENABLE();
 800362a:	4313      	orrs	r3, r2
 800362c:	626b      	str	r3, [r5, #36]	@ 0x24
      tickstart = HAL_GetTick();
 800362e:	f7ff fb35 	bl	8002c9c <HAL_GetTick>
 8003632:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8003634:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 8003636:	423b      	tst	r3, r7
 8003638:	d000      	beq.n	800363c <HAL_RCC_OscConfig+0x1d8>
 800363a:	e726      	b.n	800348a <HAL_RCC_OscConfig+0x26>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800363c:	f7ff fb2e 	bl	8002c9c <HAL_GetTick>
 8003640:	1b80      	subs	r0, r0, r6
 8003642:	2802      	cmp	r0, #2
 8003644:	d9f6      	bls.n	8003634 <HAL_RCC_OscConfig+0x1d0>
 8003646:	e77a      	b.n	800353e <HAL_RCC_OscConfig+0xda>
      __HAL_RCC_LSI_DISABLE();
 8003648:	6a6a      	ldr	r2, [r5, #36]	@ 0x24
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800364a:	2702      	movs	r7, #2
      __HAL_RCC_LSI_DISABLE();
 800364c:	439a      	bics	r2, r3
 800364e:	626a      	str	r2, [r5, #36]	@ 0x24
      tickstart = HAL_GetTick();
 8003650:	f7ff fb24 	bl	8002c9c <HAL_GetTick>
 8003654:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8003656:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 8003658:	423b      	tst	r3, r7
 800365a:	d100      	bne.n	800365e <HAL_RCC_OscConfig+0x1fa>
 800365c:	e715      	b.n	800348a <HAL_RCC_OscConfig+0x26>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800365e:	f7ff fb1d 	bl	8002c9c <HAL_GetTick>
 8003662:	1b80      	subs	r0, r0, r6
 8003664:	2802      	cmp	r0, #2
 8003666:	d9f6      	bls.n	8003656 <HAL_RCC_OscConfig+0x1f2>
 8003668:	e769      	b.n	800353e <HAL_RCC_OscConfig+0xda>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800366a:	2280      	movs	r2, #128	@ 0x80
    FlagStatus       pwrclkchanged = RESET;
 800366c:	2100      	movs	r1, #0
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800366e:	4d45      	ldr	r5, [pc, #276]	@ (8003784 <HAL_RCC_OscConfig+0x320>)
 8003670:	0552      	lsls	r2, r2, #21
 8003672:	69eb      	ldr	r3, [r5, #28]
    FlagStatus       pwrclkchanged = RESET;
 8003674:	9100      	str	r1, [sp, #0]
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8003676:	4213      	tst	r3, r2
 8003678:	d108      	bne.n	800368c <HAL_RCC_OscConfig+0x228>
      __HAL_RCC_PWR_CLK_ENABLE();
 800367a:	69eb      	ldr	r3, [r5, #28]
 800367c:	4313      	orrs	r3, r2
 800367e:	61eb      	str	r3, [r5, #28]
 8003680:	69eb      	ldr	r3, [r5, #28]
 8003682:	4013      	ands	r3, r2
 8003684:	9303      	str	r3, [sp, #12]
 8003686:	9b03      	ldr	r3, [sp, #12]
      pwrclkchanged = SET;
 8003688:	2301      	movs	r3, #1
 800368a:	9300      	str	r3, [sp, #0]
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800368c:	2780      	movs	r7, #128	@ 0x80
 800368e:	4e40      	ldr	r6, [pc, #256]	@ (8003790 <HAL_RCC_OscConfig+0x32c>)
 8003690:	007f      	lsls	r7, r7, #1
 8003692:	6833      	ldr	r3, [r6, #0]
 8003694:	423b      	tst	r3, r7
 8003696:	d015      	beq.n	80036c4 <HAL_RCC_OscConfig+0x260>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8003698:	68a3      	ldr	r3, [r4, #8]
 800369a:	2b01      	cmp	r3, #1
 800369c:	d122      	bne.n	80036e4 <HAL_RCC_OscConfig+0x280>
 800369e:	6a2a      	ldr	r2, [r5, #32]
 80036a0:	4313      	orrs	r3, r2
 80036a2:	622b      	str	r3, [r5, #32]
      tickstart = HAL_GetTick();
 80036a4:	f7ff fafa 	bl	8002c9c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80036a8:	2702      	movs	r7, #2
      tickstart = HAL_GetTick();
 80036aa:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80036ac:	6a2b      	ldr	r3, [r5, #32]
 80036ae:	423b      	tst	r3, r7
 80036b0:	d03f      	beq.n	8003732 <HAL_RCC_OscConfig+0x2ce>
    if(pwrclkchanged == SET)
 80036b2:	9b00      	ldr	r3, [sp, #0]
 80036b4:	2b01      	cmp	r3, #1
 80036b6:	d000      	beq.n	80036ba <HAL_RCC_OscConfig+0x256>
 80036b8:	e6eb      	b.n	8003492 <HAL_RCC_OscConfig+0x2e>
      __HAL_RCC_PWR_CLK_DISABLE();
 80036ba:	69eb      	ldr	r3, [r5, #28]
 80036bc:	4a35      	ldr	r2, [pc, #212]	@ (8003794 <HAL_RCC_OscConfig+0x330>)
 80036be:	4013      	ands	r3, r2
 80036c0:	61eb      	str	r3, [r5, #28]
 80036c2:	e6e6      	b.n	8003492 <HAL_RCC_OscConfig+0x2e>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80036c4:	6833      	ldr	r3, [r6, #0]
 80036c6:	433b      	orrs	r3, r7
 80036c8:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 80036ca:	f7ff fae7 	bl	8002c9c <HAL_GetTick>
 80036ce:	9001      	str	r0, [sp, #4]
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80036d0:	6833      	ldr	r3, [r6, #0]
 80036d2:	423b      	tst	r3, r7
 80036d4:	d1e0      	bne.n	8003698 <HAL_RCC_OscConfig+0x234>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80036d6:	f7ff fae1 	bl	8002c9c <HAL_GetTick>
 80036da:	9b01      	ldr	r3, [sp, #4]
 80036dc:	1ac0      	subs	r0, r0, r3
 80036de:	2864      	cmp	r0, #100	@ 0x64
 80036e0:	d9f6      	bls.n	80036d0 <HAL_RCC_OscConfig+0x26c>
 80036e2:	e72c      	b.n	800353e <HAL_RCC_OscConfig+0xda>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80036e4:	2201      	movs	r2, #1
 80036e6:	2b00      	cmp	r3, #0
 80036e8:	d114      	bne.n	8003714 <HAL_RCC_OscConfig+0x2b0>
 80036ea:	6a2b      	ldr	r3, [r5, #32]
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80036ec:	2702      	movs	r7, #2
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80036ee:	4393      	bics	r3, r2
 80036f0:	622b      	str	r3, [r5, #32]
 80036f2:	6a2b      	ldr	r3, [r5, #32]
 80036f4:	3203      	adds	r2, #3
 80036f6:	4393      	bics	r3, r2
 80036f8:	622b      	str	r3, [r5, #32]
      tickstart = HAL_GetTick();
 80036fa:	f7ff facf 	bl	8002c9c <HAL_GetTick>
 80036fe:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8003700:	6a2b      	ldr	r3, [r5, #32]
 8003702:	423b      	tst	r3, r7
 8003704:	d0d5      	beq.n	80036b2 <HAL_RCC_OscConfig+0x24e>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8003706:	f7ff fac9 	bl	8002c9c <HAL_GetTick>
 800370a:	4b23      	ldr	r3, [pc, #140]	@ (8003798 <HAL_RCC_OscConfig+0x334>)
 800370c:	1b80      	subs	r0, r0, r6
 800370e:	4298      	cmp	r0, r3
 8003710:	d9f6      	bls.n	8003700 <HAL_RCC_OscConfig+0x29c>
 8003712:	e714      	b.n	800353e <HAL_RCC_OscConfig+0xda>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8003714:	2b05      	cmp	r3, #5
 8003716:	d105      	bne.n	8003724 <HAL_RCC_OscConfig+0x2c0>
 8003718:	6a29      	ldr	r1, [r5, #32]
 800371a:	3b01      	subs	r3, #1
 800371c:	430b      	orrs	r3, r1
 800371e:	622b      	str	r3, [r5, #32]
 8003720:	6a2b      	ldr	r3, [r5, #32]
 8003722:	e7bd      	b.n	80036a0 <HAL_RCC_OscConfig+0x23c>
 8003724:	6a2b      	ldr	r3, [r5, #32]
 8003726:	4393      	bics	r3, r2
 8003728:	2204      	movs	r2, #4
 800372a:	622b      	str	r3, [r5, #32]
 800372c:	6a2b      	ldr	r3, [r5, #32]
 800372e:	4393      	bics	r3, r2
 8003730:	e7b7      	b.n	80036a2 <HAL_RCC_OscConfig+0x23e>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8003732:	f7ff fab3 	bl	8002c9c <HAL_GetTick>
 8003736:	4b18      	ldr	r3, [pc, #96]	@ (8003798 <HAL_RCC_OscConfig+0x334>)
 8003738:	1b80      	subs	r0, r0, r6
 800373a:	4298      	cmp	r0, r3
 800373c:	d9b6      	bls.n	80036ac <HAL_RCC_OscConfig+0x248>
 800373e:	e6fe      	b.n	800353e <HAL_RCC_OscConfig+0xda>
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 8003740:	f7ff faac 	bl	8002c9c <HAL_GetTick>
 8003744:	1b80      	subs	r0, r0, r6
 8003746:	2802      	cmp	r0, #2
 8003748:	d800      	bhi.n	800374c <HAL_RCC_OscConfig+0x2e8>
 800374a:	e6b5      	b.n	80034b8 <HAL_RCC_OscConfig+0x54>
 800374c:	e6f7      	b.n	800353e <HAL_RCC_OscConfig+0xda>
    else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 800374e:	3205      	adds	r2, #5
 8003750:	d103      	bne.n	800375a <HAL_RCC_OscConfig+0x2f6>
      __HAL_RCC_HSI14ADC_ENABLE();
 8003752:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
 8003754:	439a      	bics	r2, r3
 8003756:	636a      	str	r2, [r5, #52]	@ 0x34
 8003758:	e6b2      	b.n	80034c0 <HAL_RCC_OscConfig+0x5c>
      __HAL_RCC_HSI14ADC_DISABLE();
 800375a:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 800375c:	2702      	movs	r7, #2
      __HAL_RCC_HSI14ADC_DISABLE();
 800375e:	4313      	orrs	r3, r2
      __HAL_RCC_HSI14_DISABLE();
 8003760:	2201      	movs	r2, #1
      __HAL_RCC_HSI14ADC_DISABLE();
 8003762:	636b      	str	r3, [r5, #52]	@ 0x34
      __HAL_RCC_HSI14_DISABLE();
 8003764:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8003766:	4393      	bics	r3, r2
 8003768:	636b      	str	r3, [r5, #52]	@ 0x34
      tickstart = HAL_GetTick();
 800376a:	f7ff fa97 	bl	8002c9c <HAL_GetTick>
 800376e:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 8003770:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8003772:	423b      	tst	r3, r7
 8003774:	d100      	bne.n	8003778 <HAL_RCC_OscConfig+0x314>
 8003776:	e6aa      	b.n	80034ce <HAL_RCC_OscConfig+0x6a>
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 8003778:	f7ff fa90 	bl	8002c9c <HAL_GetTick>
 800377c:	1b80      	subs	r0, r0, r6
 800377e:	2802      	cmp	r0, #2
 8003780:	d9f6      	bls.n	8003770 <HAL_RCC_OscConfig+0x30c>
 8003782:	e6dc      	b.n	800353e <HAL_RCC_OscConfig+0xda>
 8003784:	40021000 	.word	0x40021000
 8003788:	fffeffff 	.word	0xfffeffff
 800378c:	fffbffff 	.word	0xfffbffff
 8003790:	40007000 	.word	0x40007000
 8003794:	efffffff 	.word	0xefffffff
 8003798:	00001388 	.word	0x00001388
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI48) ||
 800379c:	220c      	movs	r2, #12
 800379e:	4d55      	ldr	r5, [pc, #340]	@ (80038f4 <HAL_RCC_OscConfig+0x490>)
 80037a0:	686b      	ldr	r3, [r5, #4]
 80037a2:	4013      	ands	r3, r2
 80037a4:	4293      	cmp	r3, r2
 80037a6:	d009      	beq.n	80037bc <HAL_RCC_OscConfig+0x358>
       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI48)))
 80037a8:	686b      	ldr	r3, [r5, #4]
 80037aa:	4013      	ands	r3, r2
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI48) ||
 80037ac:	2b08      	cmp	r3, #8
 80037ae:	d10e      	bne.n	80037ce <HAL_RCC_OscConfig+0x36a>
       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI48)))
 80037b0:	22c0      	movs	r2, #192	@ 0xc0
 80037b2:	686b      	ldr	r3, [r5, #4]
 80037b4:	0252      	lsls	r2, r2, #9
 80037b6:	4013      	ands	r3, r2
 80037b8:	4293      	cmp	r3, r2
 80037ba:	d108      	bne.n	80037ce <HAL_RCC_OscConfig+0x36a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET) && (RCC_OscInitStruct->HSI48State != RCC_HSI48_ON))
 80037bc:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 80037be:	039b      	lsls	r3, r3, #14
 80037c0:	d400      	bmi.n	80037c4 <HAL_RCC_OscConfig+0x360>
 80037c2:	e688      	b.n	80034d6 <HAL_RCC_OscConfig+0x72>
 80037c4:	6a23      	ldr	r3, [r4, #32]
 80037c6:	2b01      	cmp	r3, #1
 80037c8:	d000      	beq.n	80037cc <HAL_RCC_OscConfig+0x368>
 80037ca:	e650      	b.n	800346e <HAL_RCC_OscConfig+0xa>
 80037cc:	e683      	b.n	80034d6 <HAL_RCC_OscConfig+0x72>
      if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 80037ce:	6a23      	ldr	r3, [r4, #32]
 80037d0:	2b00      	cmp	r3, #0
 80037d2:	d013      	beq.n	80037fc <HAL_RCC_OscConfig+0x398>
        __HAL_RCC_HSI48_ENABLE();
 80037d4:	2380      	movs	r3, #128	@ 0x80
 80037d6:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
 80037d8:	025b      	lsls	r3, r3, #9
 80037da:	4313      	orrs	r3, r2
 80037dc:	636b      	str	r3, [r5, #52]	@ 0x34
        tickstart = HAL_GetTick();
 80037de:	f7ff fa5d 	bl	8002c9c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 80037e2:	2780      	movs	r7, #128	@ 0x80
        tickstart = HAL_GetTick();
 80037e4:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 80037e6:	02bf      	lsls	r7, r7, #10
 80037e8:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 80037ea:	423b      	tst	r3, r7
 80037ec:	d000      	beq.n	80037f0 <HAL_RCC_OscConfig+0x38c>
 80037ee:	e672      	b.n	80034d6 <HAL_RCC_OscConfig+0x72>
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 80037f0:	f7ff fa54 	bl	8002c9c <HAL_GetTick>
 80037f4:	1b80      	subs	r0, r0, r6
 80037f6:	2802      	cmp	r0, #2
 80037f8:	d9f6      	bls.n	80037e8 <HAL_RCC_OscConfig+0x384>
 80037fa:	e6a0      	b.n	800353e <HAL_RCC_OscConfig+0xda>
        __HAL_RCC_HSI48_DISABLE();
 80037fc:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 80037fe:	4a3e      	ldr	r2, [pc, #248]	@ (80038f8 <HAL_RCC_OscConfig+0x494>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 8003800:	2780      	movs	r7, #128	@ 0x80
        __HAL_RCC_HSI48_DISABLE();
 8003802:	4013      	ands	r3, r2
 8003804:	636b      	str	r3, [r5, #52]	@ 0x34
        tickstart = HAL_GetTick();
 8003806:	f7ff fa49 	bl	8002c9c <HAL_GetTick>
 800380a:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 800380c:	02bf      	lsls	r7, r7, #10
 800380e:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8003810:	423b      	tst	r3, r7
 8003812:	d100      	bne.n	8003816 <HAL_RCC_OscConfig+0x3b2>
 8003814:	e65f      	b.n	80034d6 <HAL_RCC_OscConfig+0x72>
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8003816:	f7ff fa41 	bl	8002c9c <HAL_GetTick>
 800381a:	1b80      	subs	r0, r0, r6
 800381c:	2802      	cmp	r0, #2
 800381e:	d9f6      	bls.n	800380e <HAL_RCC_OscConfig+0x3aa>
 8003820:	e68d      	b.n	800353e <HAL_RCC_OscConfig+0xda>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8003822:	210c      	movs	r1, #12
 8003824:	4d33      	ldr	r5, [pc, #204]	@ (80038f4 <HAL_RCC_OscConfig+0x490>)
 8003826:	686a      	ldr	r2, [r5, #4]
 8003828:	400a      	ands	r2, r1
 800382a:	2a08      	cmp	r2, #8
 800382c:	d047      	beq.n	80038be <HAL_RCC_OscConfig+0x45a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800382e:	4a33      	ldr	r2, [pc, #204]	@ (80038fc <HAL_RCC_OscConfig+0x498>)
 8003830:	2b02      	cmp	r3, #2
 8003832:	d132      	bne.n	800389a <HAL_RCC_OscConfig+0x436>
        __HAL_RCC_PLL_DISABLE();
 8003834:	682b      	ldr	r3, [r5, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003836:	2780      	movs	r7, #128	@ 0x80
        __HAL_RCC_PLL_DISABLE();
 8003838:	4013      	ands	r3, r2
 800383a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800383c:	f7ff fa2e 	bl	8002c9c <HAL_GetTick>
 8003840:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003842:	04bf      	lsls	r7, r7, #18
 8003844:	682b      	ldr	r3, [r5, #0]
 8003846:	423b      	tst	r3, r7
 8003848:	d121      	bne.n	800388e <HAL_RCC_OscConfig+0x42a>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 800384a:	220f      	movs	r2, #15
 800384c:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 800384e:	2680      	movs	r6, #128	@ 0x80
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8003850:	4393      	bics	r3, r2
 8003852:	6b22      	ldr	r2, [r4, #48]	@ 0x30
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8003854:	04b6      	lsls	r6, r6, #18
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8003856:	4313      	orrs	r3, r2
 8003858:	62eb      	str	r3, [r5, #44]	@ 0x2c
 800385a:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800385c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800385e:	686a      	ldr	r2, [r5, #4]
 8003860:	430b      	orrs	r3, r1
 8003862:	4927      	ldr	r1, [pc, #156]	@ (8003900 <HAL_RCC_OscConfig+0x49c>)
 8003864:	400a      	ands	r2, r1
 8003866:	4313      	orrs	r3, r2
 8003868:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800386a:	2380      	movs	r3, #128	@ 0x80
 800386c:	682a      	ldr	r2, [r5, #0]
 800386e:	045b      	lsls	r3, r3, #17
 8003870:	4313      	orrs	r3, r2
 8003872:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8003874:	f7ff fa12 	bl	8002c9c <HAL_GetTick>
 8003878:	0004      	movs	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 800387a:	682b      	ldr	r3, [r5, #0]
 800387c:	4233      	tst	r3, r6
 800387e:	d000      	beq.n	8003882 <HAL_RCC_OscConfig+0x41e>
 8003880:	e62d      	b.n	80034de <HAL_RCC_OscConfig+0x7a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003882:	f7ff fa0b 	bl	8002c9c <HAL_GetTick>
 8003886:	1b00      	subs	r0, r0, r4
 8003888:	2802      	cmp	r0, #2
 800388a:	d9f6      	bls.n	800387a <HAL_RCC_OscConfig+0x416>
 800388c:	e657      	b.n	800353e <HAL_RCC_OscConfig+0xda>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800388e:	f7ff fa05 	bl	8002c9c <HAL_GetTick>
 8003892:	1b80      	subs	r0, r0, r6
 8003894:	2802      	cmp	r0, #2
 8003896:	d9d5      	bls.n	8003844 <HAL_RCC_OscConfig+0x3e0>
 8003898:	e651      	b.n	800353e <HAL_RCC_OscConfig+0xda>
        __HAL_RCC_PLL_DISABLE();
 800389a:	682b      	ldr	r3, [r5, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 800389c:	2680      	movs	r6, #128	@ 0x80
        __HAL_RCC_PLL_DISABLE();
 800389e:	4013      	ands	r3, r2
 80038a0:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80038a2:	f7ff f9fb 	bl	8002c9c <HAL_GetTick>
 80038a6:	0004      	movs	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 80038a8:	04b6      	lsls	r6, r6, #18
 80038aa:	682b      	ldr	r3, [r5, #0]
 80038ac:	4233      	tst	r3, r6
 80038ae:	d100      	bne.n	80038b2 <HAL_RCC_OscConfig+0x44e>
 80038b0:	e615      	b.n	80034de <HAL_RCC_OscConfig+0x7a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80038b2:	f7ff f9f3 	bl	8002c9c <HAL_GetTick>
 80038b6:	1b00      	subs	r0, r0, r4
 80038b8:	2802      	cmp	r0, #2
 80038ba:	d9f6      	bls.n	80038aa <HAL_RCC_OscConfig+0x446>
 80038bc:	e63f      	b.n	800353e <HAL_RCC_OscConfig+0xda>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80038be:	2b01      	cmp	r3, #1
 80038c0:	d100      	bne.n	80038c4 <HAL_RCC_OscConfig+0x460>
 80038c2:	e5d4      	b.n	800346e <HAL_RCC_OscConfig+0xa>
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 80038c4:	22c0      	movs	r2, #192	@ 0xc0
        pll_config  = RCC->CFGR;
 80038c6:	6868      	ldr	r0, [r5, #4]
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 80038c8:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 80038ca:	0252      	lsls	r2, r2, #9
        pll_config2 = RCC->CFGR2;
 80038cc:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 80038ce:	4002      	ands	r2, r0
 80038d0:	428a      	cmp	r2, r1
 80038d2:	d000      	beq.n	80038d6 <HAL_RCC_OscConfig+0x472>
 80038d4:	e5cb      	b.n	800346e <HAL_RCC_OscConfig+0xa>
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 80038d6:	220f      	movs	r2, #15
 80038d8:	4013      	ands	r3, r2
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 80038da:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 80038dc:	4293      	cmp	r3, r2
 80038de:	d000      	beq.n	80038e2 <HAL_RCC_OscConfig+0x47e>
 80038e0:	e5c5      	b.n	800346e <HAL_RCC_OscConfig+0xa>
           (READ_BIT(pll_config,  RCC_CFGR_PLLMUL)  != RCC_OscInitStruct->PLL.PLLMUL))
 80038e2:	23f0      	movs	r3, #240	@ 0xf0
 80038e4:	039b      	lsls	r3, r3, #14
 80038e6:	4018      	ands	r0, r3
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 80038e8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80038ea:	1ac0      	subs	r0, r0, r3
 80038ec:	1e43      	subs	r3, r0, #1
 80038ee:	4198      	sbcs	r0, r3
 80038f0:	b2c0      	uxtb	r0, r0
 80038f2:	e5bd      	b.n	8003470 <HAL_RCC_OscConfig+0xc>
 80038f4:	40021000 	.word	0x40021000
 80038f8:	fffeffff 	.word	0xfffeffff
 80038fc:	feffffff 	.word	0xfeffffff
 8003900:	ffc27fff 	.word	0xffc27fff

08003904 <HAL_RCC_GetSysClockFreq>:
  uint32_t sysclockfreq = 0U;
  
  tmpreg = RCC->CFGR;
  
  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8003904:	200c      	movs	r0, #12
{
 8003906:	b570      	push	{r4, r5, r6, lr}
  tmpreg = RCC->CFGR;
 8003908:	4d13      	ldr	r5, [pc, #76]	@ (8003958 <HAL_RCC_GetSysClockFreq+0x54>)
 800390a:	686b      	ldr	r3, [r5, #4]
  switch (tmpreg & RCC_CFGR_SWS)
 800390c:	4018      	ands	r0, r3
 800390e:	2808      	cmp	r0, #8
 8003910:	d008      	beq.n	8003924 <HAL_RCC_GetSysClockFreq+0x20>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 8003912:	380c      	subs	r0, #12
 8003914:	4243      	negs	r3, r0
 8003916:	4158      	adcs	r0, r3
 8003918:	4b10      	ldr	r3, [pc, #64]	@ (800395c <HAL_RCC_GetSysClockFreq+0x58>)
 800391a:	4240      	negs	r0, r0
 800391c:	4018      	ands	r0, r3
 800391e:	4b10      	ldr	r3, [pc, #64]	@ (8003960 <HAL_RCC_GetSysClockFreq+0x5c>)
 8003920:	18c0      	adds	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8003922:	bd70      	pop	{r4, r5, r6, pc}
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER];
 8003924:	200f      	movs	r0, #15
 8003926:	490f      	ldr	r1, [pc, #60]	@ (8003964 <HAL_RCC_GetSysClockFreq+0x60>)
 8003928:	0c9a      	lsrs	r2, r3, #18
 800392a:	4002      	ands	r2, r0
 800392c:	5c8c      	ldrb	r4, [r1, r2]
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 800392e:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
 8003930:	490d      	ldr	r1, [pc, #52]	@ (8003968 <HAL_RCC_GetSysClockFreq+0x64>)
 8003932:	4002      	ands	r2, r0
 8003934:	5c89      	ldrb	r1, [r1, r2]
      if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 8003936:	22c0      	movs	r2, #192	@ 0xc0
 8003938:	2080      	movs	r0, #128	@ 0x80
 800393a:	0252      	lsls	r2, r2, #9
 800393c:	4013      	ands	r3, r2
 800393e:	0240      	lsls	r0, r0, #9
 8003940:	4283      	cmp	r3, r0
 8003942:	d101      	bne.n	8003948 <HAL_RCC_GetSysClockFreq+0x44>
        pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 8003944:	4806      	ldr	r0, [pc, #24]	@ (8003960 <HAL_RCC_GetSysClockFreq+0x5c>)
 8003946:	e002      	b.n	800394e <HAL_RCC_GetSysClockFreq+0x4a>
      else if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSI48)
 8003948:	4293      	cmp	r3, r2
 800394a:	d1fb      	bne.n	8003944 <HAL_RCC_GetSysClockFreq+0x40>
        pllclk = (uint32_t)((uint64_t) HSI48_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 800394c:	4807      	ldr	r0, [pc, #28]	@ (800396c <HAL_RCC_GetSysClockFreq+0x68>)
        pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 800394e:	f7fc fbf7 	bl	8000140 <__udivsi3>
 8003952:	4360      	muls	r0, r4
 8003954:	e7e5      	b.n	8003922 <HAL_RCC_GetSysClockFreq+0x1e>
 8003956:	46c0      	nop			@ (mov r8, r8)
 8003958:	40021000 	.word	0x40021000
 800395c:	02625a00 	.word	0x02625a00
 8003960:	007a1200 	.word	0x007a1200
 8003964:	0800728b 	.word	0x0800728b
 8003968:	0800727b 	.word	0x0800727b
 800396c:	02dc6c00 	.word	0x02dc6c00

08003970 <HAL_RCC_ClockConfig>:
{
 8003970:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003972:	0004      	movs	r4, r0
 8003974:	000f      	movs	r7, r1
  if(RCC_ClkInitStruct == NULL)
 8003976:	2800      	cmp	r0, #0
 8003978:	d101      	bne.n	800397e <HAL_RCC_ClockConfig+0xe>
    return HAL_ERROR;
 800397a:	2001      	movs	r0, #1
}
 800397c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800397e:	2201      	movs	r2, #1
 8003980:	4d3a      	ldr	r5, [pc, #232]	@ (8003a6c <HAL_RCC_ClockConfig+0xfc>)
 8003982:	682b      	ldr	r3, [r5, #0]
 8003984:	4013      	ands	r3, r2
 8003986:	428b      	cmp	r3, r1
 8003988:	d31c      	bcc.n	80039c4 <HAL_RCC_ClockConfig+0x54>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800398a:	6822      	ldr	r2, [r4, #0]
 800398c:	0793      	lsls	r3, r2, #30
 800398e:	d422      	bmi.n	80039d6 <HAL_RCC_ClockConfig+0x66>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8003990:	07d2      	lsls	r2, r2, #31
 8003992:	d42f      	bmi.n	80039f4 <HAL_RCC_ClockConfig+0x84>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8003994:	2301      	movs	r3, #1
 8003996:	682a      	ldr	r2, [r5, #0]
 8003998:	401a      	ands	r2, r3
 800399a:	42ba      	cmp	r2, r7
 800399c:	d857      	bhi.n	8003a4e <HAL_RCC_ClockConfig+0xde>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800399e:	6823      	ldr	r3, [r4, #0]
 80039a0:	4d33      	ldr	r5, [pc, #204]	@ (8003a70 <HAL_RCC_ClockConfig+0x100>)
 80039a2:	075b      	lsls	r3, r3, #29
 80039a4:	d45a      	bmi.n	8003a5c <HAL_RCC_ClockConfig+0xec>
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_BITNUMBER];
 80039a6:	f7ff ffad 	bl	8003904 <HAL_RCC_GetSysClockFreq>
 80039aa:	686b      	ldr	r3, [r5, #4]
 80039ac:	4a31      	ldr	r2, [pc, #196]	@ (8003a74 <HAL_RCC_ClockConfig+0x104>)
 80039ae:	061b      	lsls	r3, r3, #24
 80039b0:	0f1b      	lsrs	r3, r3, #28
 80039b2:	5cd3      	ldrb	r3, [r2, r3]
 80039b4:	4930      	ldr	r1, [pc, #192]	@ (8003a78 <HAL_RCC_ClockConfig+0x108>)
 80039b6:	40d8      	lsrs	r0, r3
 80039b8:	6008      	str	r0, [r1, #0]
  HAL_InitTick (TICK_INT_PRIORITY);
 80039ba:	2000      	movs	r0, #0
 80039bc:	f7ff f92e 	bl	8002c1c <HAL_InitTick>
  return HAL_OK;
 80039c0:	2000      	movs	r0, #0
 80039c2:	e7db      	b.n	800397c <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80039c4:	682b      	ldr	r3, [r5, #0]
 80039c6:	4393      	bics	r3, r2
 80039c8:	430b      	orrs	r3, r1
 80039ca:	602b      	str	r3, [r5, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80039cc:	682b      	ldr	r3, [r5, #0]
 80039ce:	4013      	ands	r3, r2
 80039d0:	428b      	cmp	r3, r1
 80039d2:	d1d2      	bne.n	800397a <HAL_RCC_ClockConfig+0xa>
 80039d4:	e7d9      	b.n	800398a <HAL_RCC_ClockConfig+0x1a>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80039d6:	4926      	ldr	r1, [pc, #152]	@ (8003a70 <HAL_RCC_ClockConfig+0x100>)
 80039d8:	0753      	lsls	r3, r2, #29
 80039da:	d504      	bpl.n	80039e6 <HAL_RCC_ClockConfig+0x76>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 80039dc:	23e0      	movs	r3, #224	@ 0xe0
 80039de:	6848      	ldr	r0, [r1, #4]
 80039e0:	00db      	lsls	r3, r3, #3
 80039e2:	4303      	orrs	r3, r0
 80039e4:	604b      	str	r3, [r1, #4]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80039e6:	20f0      	movs	r0, #240	@ 0xf0
 80039e8:	684b      	ldr	r3, [r1, #4]
 80039ea:	4383      	bics	r3, r0
 80039ec:	68a0      	ldr	r0, [r4, #8]
 80039ee:	4303      	orrs	r3, r0
 80039f0:	604b      	str	r3, [r1, #4]
 80039f2:	e7cd      	b.n	8003990 <HAL_RCC_ClockConfig+0x20>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80039f4:	6862      	ldr	r2, [r4, #4]
 80039f6:	4e1e      	ldr	r6, [pc, #120]	@ (8003a70 <HAL_RCC_ClockConfig+0x100>)
 80039f8:	2a01      	cmp	r2, #1
 80039fa:	d103      	bne.n	8003a04 <HAL_RCC_ClockConfig+0x94>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80039fc:	6833      	ldr	r3, [r6, #0]
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 80039fe:	039b      	lsls	r3, r3, #14
 8003a00:	d405      	bmi.n	8003a0e <HAL_RCC_ClockConfig+0x9e>
 8003a02:	e7ba      	b.n	800397a <HAL_RCC_ClockConfig+0xa>
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8003a04:	2a02      	cmp	r2, #2
 8003a06:	d11a      	bne.n	8003a3e <HAL_RCC_ClockConfig+0xce>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8003a08:	6833      	ldr	r3, [r6, #0]
 8003a0a:	019b      	lsls	r3, r3, #6
 8003a0c:	d5b5      	bpl.n	800397a <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8003a0e:	2103      	movs	r1, #3
 8003a10:	6873      	ldr	r3, [r6, #4]
 8003a12:	438b      	bics	r3, r1
 8003a14:	4313      	orrs	r3, r2
 8003a16:	6073      	str	r3, [r6, #4]
    tickstart = HAL_GetTick();
 8003a18:	f7ff f940 	bl	8002c9c <HAL_GetTick>
 8003a1c:	9001      	str	r0, [sp, #4]
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8003a1e:	230c      	movs	r3, #12
 8003a20:	6872      	ldr	r2, [r6, #4]
 8003a22:	401a      	ands	r2, r3
 8003a24:	6863      	ldr	r3, [r4, #4]
 8003a26:	009b      	lsls	r3, r3, #2
 8003a28:	429a      	cmp	r2, r3
 8003a2a:	d0b3      	beq.n	8003994 <HAL_RCC_ClockConfig+0x24>
      if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003a2c:	f7ff f936 	bl	8002c9c <HAL_GetTick>
 8003a30:	9b01      	ldr	r3, [sp, #4]
 8003a32:	1ac0      	subs	r0, r0, r3
 8003a34:	4b11      	ldr	r3, [pc, #68]	@ (8003a7c <HAL_RCC_ClockConfig+0x10c>)
 8003a36:	4298      	cmp	r0, r3
 8003a38:	d9f1      	bls.n	8003a1e <HAL_RCC_ClockConfig+0xae>
        return HAL_TIMEOUT;
 8003a3a:	2003      	movs	r0, #3
 8003a3c:	e79e      	b.n	800397c <HAL_RCC_ClockConfig+0xc>
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 8003a3e:	2a03      	cmp	r2, #3
 8003a40:	d101      	bne.n	8003a46 <HAL_RCC_ClockConfig+0xd6>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 8003a42:	6b73      	ldr	r3, [r6, #52]	@ 0x34
 8003a44:	e7db      	b.n	80039fe <HAL_RCC_ClockConfig+0x8e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8003a46:	6833      	ldr	r3, [r6, #0]
 8003a48:	079b      	lsls	r3, r3, #30
 8003a4a:	d4e0      	bmi.n	8003a0e <HAL_RCC_ClockConfig+0x9e>
 8003a4c:	e795      	b.n	800397a <HAL_RCC_ClockConfig+0xa>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003a4e:	682a      	ldr	r2, [r5, #0]
 8003a50:	439a      	bics	r2, r3
 8003a52:	602a      	str	r2, [r5, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8003a54:	682a      	ldr	r2, [r5, #0]
 8003a56:	421a      	tst	r2, r3
 8003a58:	d0a1      	beq.n	800399e <HAL_RCC_ClockConfig+0x2e>
 8003a5a:	e78e      	b.n	800397a <HAL_RCC_ClockConfig+0xa>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 8003a5c:	686b      	ldr	r3, [r5, #4]
 8003a5e:	4a08      	ldr	r2, [pc, #32]	@ (8003a80 <HAL_RCC_ClockConfig+0x110>)
 8003a60:	4013      	ands	r3, r2
 8003a62:	68e2      	ldr	r2, [r4, #12]
 8003a64:	4313      	orrs	r3, r2
 8003a66:	606b      	str	r3, [r5, #4]
 8003a68:	e79d      	b.n	80039a6 <HAL_RCC_ClockConfig+0x36>
 8003a6a:	46c0      	nop			@ (mov r8, r8)
 8003a6c:	40022000 	.word	0x40022000
 8003a70:	40021000 	.word	0x40021000
 8003a74:	0800726b 	.word	0x0800726b
 8003a78:	20000000 	.word	0x20000000
 8003a7c:	00001388 	.word	0x00001388
 8003a80:	fffff8ff 	.word	0xfffff8ff

08003a84 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE) >> RCC_CFGR_PPRE_BITNUMBER]);
 8003a84:	4b04      	ldr	r3, [pc, #16]	@ (8003a98 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 8003a86:	4a05      	ldr	r2, [pc, #20]	@ (8003a9c <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE) >> RCC_CFGR_PPRE_BITNUMBER]);
 8003a88:	685b      	ldr	r3, [r3, #4]
 8003a8a:	4905      	ldr	r1, [pc, #20]	@ (8003aa0 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8003a8c:	055b      	lsls	r3, r3, #21
 8003a8e:	0f5b      	lsrs	r3, r3, #29
 8003a90:	5ccb      	ldrb	r3, [r1, r3]
 8003a92:	6810      	ldr	r0, [r2, #0]
 8003a94:	40d8      	lsrs	r0, r3
}    
 8003a96:	4770      	bx	lr
 8003a98:	40021000 	.word	0x40021000
 8003a9c:	20000000 	.word	0x20000000
 8003aa0:	08007263 	.word	0x08007263

08003aa4 <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 8003aa4:	b530      	push	{r4, r5, lr}
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003aa6:	f3ef 8410 	mrs	r4, PRIMASK
  \details Assigns the given value to the Priority Mask Register.
  \param [in]    priMask  Priority Mask
 */
__STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
{
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003aaa:	2201      	movs	r2, #1
 8003aac:	f382 8810 	msr	PRIMASK, r2
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8003ab0:	6801      	ldr	r1, [r0, #0]
 8003ab2:	4d12      	ldr	r5, [pc, #72]	@ (8003afc <UART_EndRxTransfer+0x58>)
 8003ab4:	680b      	ldr	r3, [r1, #0]
 8003ab6:	402b      	ands	r3, r5
 8003ab8:	600b      	str	r3, [r1, #0]
 8003aba:	f384 8810 	msr	PRIMASK, r4
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003abe:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003ac2:	f382 8810 	msr	PRIMASK, r2
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8003ac6:	6801      	ldr	r1, [r0, #0]
 8003ac8:	688b      	ldr	r3, [r1, #8]
 8003aca:	4393      	bics	r3, r2
 8003acc:	608b      	str	r3, [r1, #8]
 8003ace:	f384 8810 	msr	PRIMASK, r4

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8003ad2:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 8003ad4:	4293      	cmp	r3, r2
 8003ad6:	d10a      	bne.n	8003aee <UART_EndRxTransfer+0x4a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003ad8:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003adc:	f383 8810 	msr	PRIMASK, r3
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8003ae0:	2410      	movs	r4, #16
 8003ae2:	6802      	ldr	r2, [r0, #0]
 8003ae4:	6813      	ldr	r3, [r2, #0]
 8003ae6:	43a3      	bics	r3, r4
 8003ae8:	6013      	str	r3, [r2, #0]
 8003aea:	f381 8810 	msr	PRIMASK, r1
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8003aee:	2220      	movs	r2, #32
 8003af0:	1d03      	adds	r3, r0, #4
 8003af2:	67da      	str	r2, [r3, #124]	@ 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003af4:	2300      	movs	r3, #0
 8003af6:	6603      	str	r3, [r0, #96]	@ 0x60

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 8003af8:	6683      	str	r3, [r0, #104]	@ 0x68
}
 8003afa:	bd30      	pop	{r4, r5, pc}
 8003afc:	fffffedf 	.word	0xfffffedf

08003b00 <UART_SetConfig>:
{
 8003b00:	b570      	push	{r4, r5, r6, lr}
 8003b02:	0004      	movs	r4, r0
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8003b04:	6925      	ldr	r5, [r4, #16]
 8003b06:	68a1      	ldr	r1, [r4, #8]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8003b08:	6803      	ldr	r3, [r0, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8003b0a:	4329      	orrs	r1, r5
 8003b0c:	6965      	ldr	r5, [r4, #20]
 8003b0e:	69c2      	ldr	r2, [r0, #28]
 8003b10:	4329      	orrs	r1, r5
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8003b12:	6818      	ldr	r0, [r3, #0]
 8003b14:	4d3d      	ldr	r5, [pc, #244]	@ (8003c0c <UART_SetConfig+0x10c>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8003b16:	4311      	orrs	r1, r2
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8003b18:	4028      	ands	r0, r5
 8003b1a:	4301      	orrs	r1, r0
 8003b1c:	6019      	str	r1, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8003b1e:	6859      	ldr	r1, [r3, #4]
 8003b20:	483b      	ldr	r0, [pc, #236]	@ (8003c10 <UART_SetConfig+0x110>)
  tmpreg |= huart->Init.OneBitSampling;
 8003b22:	6a25      	ldr	r5, [r4, #32]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8003b24:	4001      	ands	r1, r0
 8003b26:	68e0      	ldr	r0, [r4, #12]
 8003b28:	4301      	orrs	r1, r0
 8003b2a:	6059      	str	r1, [r3, #4]
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 8003b2c:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8003b2e:	6898      	ldr	r0, [r3, #8]
  tmpreg |= huart->Init.OneBitSampling;
 8003b30:	4329      	orrs	r1, r5
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8003b32:	4d38      	ldr	r5, [pc, #224]	@ (8003c14 <UART_SetConfig+0x114>)
 8003b34:	4028      	ands	r0, r5
 8003b36:	4301      	orrs	r1, r0
 8003b38:	6099      	str	r1, [r3, #8]
  UART_GETCLOCKSOURCE(huart, clocksource);
 8003b3a:	4937      	ldr	r1, [pc, #220]	@ (8003c18 <UART_SetConfig+0x118>)
 8003b3c:	428b      	cmp	r3, r1
 8003b3e:	d115      	bne.n	8003b6c <UART_SetConfig+0x6c>
 8003b40:	2103      	movs	r1, #3
 8003b42:	4b36      	ldr	r3, [pc, #216]	@ (8003c1c <UART_SetConfig+0x11c>)
 8003b44:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003b46:	400b      	ands	r3, r1
 8003b48:	3b01      	subs	r3, #1
 8003b4a:	2b02      	cmp	r3, #2
 8003b4c:	d851      	bhi.n	8003bf2 <UART_SetConfig+0xf2>
 8003b4e:	4934      	ldr	r1, [pc, #208]	@ (8003c20 <UART_SetConfig+0x120>)
 8003b50:	5cc8      	ldrb	r0, [r1, r3]
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8003b52:	2380      	movs	r3, #128	@ 0x80
 8003b54:	021b      	lsls	r3, r3, #8
 8003b56:	429a      	cmp	r2, r3
 8003b58:	d127      	bne.n	8003baa <UART_SetConfig+0xaa>
    switch (clocksource)
 8003b5a:	2808      	cmp	r0, #8
 8003b5c:	d847      	bhi.n	8003bee <UART_SetConfig+0xee>
 8003b5e:	f7fc fadb 	bl	8000118 <__gnu_thumb1_case_uqi>
 8003b62:	464c      	.short	0x464c
 8003b64:	460b460e 	.word	0x460b460e
 8003b68:	4646      	.short	0x4646
 8003b6a:	0f          	.byte	0x0f
 8003b6b:	00          	.byte	0x00
  UART_GETCLOCKSOURCE(huart, clocksource);
 8003b6c:	492d      	ldr	r1, [pc, #180]	@ (8003c24 <UART_SetConfig+0x124>)
 8003b6e:	185b      	adds	r3, r3, r1
 8003b70:	1e59      	subs	r1, r3, #1
 8003b72:	418b      	sbcs	r3, r1
 8003b74:	0118      	lsls	r0, r3, #4
 8003b76:	e7ec      	b.n	8003b52 <UART_SetConfig+0x52>
        pclk = HAL_RCC_GetSysClockFreq();
 8003b78:	f7ff fec4 	bl	8003904 <HAL_RCC_GetSysClockFreq>
 8003b7c:	e03f      	b.n	8003bfe <UART_SetConfig+0xfe>
    switch (clocksource)
 8003b7e:	4a2a      	ldr	r2, [pc, #168]	@ (8003c28 <UART_SetConfig+0x128>)
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8003b80:	6861      	ldr	r1, [r4, #4]
 8003b82:	0052      	lsls	r2, r2, #1
 8003b84:	0848      	lsrs	r0, r1, #1
 8003b86:	1810      	adds	r0, r2, r0
 8003b88:	f7fc fada 	bl	8000140 <__udivsi3>
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8003b8c:	0002      	movs	r2, r0
 8003b8e:	4b27      	ldr	r3, [pc, #156]	@ (8003c2c <UART_SetConfig+0x12c>)
 8003b90:	3a10      	subs	r2, #16
 8003b92:	429a      	cmp	r2, r3
 8003b94:	d82b      	bhi.n	8003bee <UART_SetConfig+0xee>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8003b96:	230f      	movs	r3, #15
 8003b98:	0002      	movs	r2, r0
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8003b9a:	0700      	lsls	r0, r0, #28
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8003b9c:	439a      	bics	r2, r3
 8003b9e:	b293      	uxth	r3, r2
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8003ba0:	0f40      	lsrs	r0, r0, #29
        huart->Instance->BRR = brrtemp;
 8003ba2:	6822      	ldr	r2, [r4, #0]
 8003ba4:	4303      	orrs	r3, r0
 8003ba6:	60d3      	str	r3, [r2, #12]
 8003ba8:	e02b      	b.n	8003c02 <UART_SetConfig+0x102>
    switch (clocksource)
 8003baa:	2808      	cmp	r0, #8
 8003bac:	d81f      	bhi.n	8003bee <UART_SetConfig+0xee>
 8003bae:	f7fc fab3 	bl	8000118 <__gnu_thumb1_case_uqi>
 8003bb2:	1e13      	.short	0x1e13
 8003bb4:	1e181e05 	.word	0x1e181e05
 8003bb8:	1e1e      	.short	0x1e1e
 8003bba:	1b          	.byte	0x1b
 8003bbb:	00          	.byte	0x00
        pclk = (uint32_t) HSI_VALUE;
 8003bbc:	481a      	ldr	r0, [pc, #104]	@ (8003c28 <UART_SetConfig+0x128>)
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 8003bbe:	6861      	ldr	r1, [r4, #4]
 8003bc0:	084b      	lsrs	r3, r1, #1
 8003bc2:	1818      	adds	r0, r3, r0
 8003bc4:	f7fc fabc 	bl	8000140 <__udivsi3>
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8003bc8:	0002      	movs	r2, r0
 8003bca:	4b18      	ldr	r3, [pc, #96]	@ (8003c2c <UART_SetConfig+0x12c>)
 8003bcc:	3a10      	subs	r2, #16
 8003bce:	429a      	cmp	r2, r3
 8003bd0:	d80d      	bhi.n	8003bee <UART_SetConfig+0xee>
        huart->Instance->BRR = (uint16_t)usartdiv;
 8003bd2:	6823      	ldr	r3, [r4, #0]
 8003bd4:	60d8      	str	r0, [r3, #12]
 8003bd6:	e014      	b.n	8003c02 <UART_SetConfig+0x102>
        pclk = HAL_RCC_GetPCLK1Freq();
 8003bd8:	f7ff ff54 	bl	8003a84 <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 8003bdc:	2800      	cmp	r0, #0
 8003bde:	d010      	beq.n	8003c02 <UART_SetConfig+0x102>
 8003be0:	e7ed      	b.n	8003bbe <UART_SetConfig+0xbe>
        pclk = HAL_RCC_GetSysClockFreq();
 8003be2:	f7ff fe8f 	bl	8003904 <HAL_RCC_GetSysClockFreq>
        break;
 8003be6:	e7f9      	b.n	8003bdc <UART_SetConfig+0xdc>
    switch (clocksource)
 8003be8:	2080      	movs	r0, #128	@ 0x80
 8003bea:	0200      	lsls	r0, r0, #8
 8003bec:	e7e7      	b.n	8003bbe <UART_SetConfig+0xbe>
        ret = HAL_ERROR;
 8003bee:	2001      	movs	r0, #1
 8003bf0:	e008      	b.n	8003c04 <UART_SetConfig+0x104>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8003bf2:	2380      	movs	r3, #128	@ 0x80
 8003bf4:	021b      	lsls	r3, r3, #8
 8003bf6:	429a      	cmp	r2, r3
 8003bf8:	d1ee      	bne.n	8003bd8 <UART_SetConfig+0xd8>
        pclk = HAL_RCC_GetPCLK1Freq();
 8003bfa:	f7ff ff43 	bl	8003a84 <HAL_RCC_GetPCLK1Freq>
        pclk = HAL_RCC_GetSysClockFreq();
 8003bfe:	1e02      	subs	r2, r0, #0
    if (pclk != 0U)
 8003c00:	d1be      	bne.n	8003b80 <UART_SetConfig+0x80>
        pclk = (uint32_t) HSI_VALUE;
 8003c02:	2000      	movs	r0, #0
  huart->RxISR = NULL;
 8003c04:	2300      	movs	r3, #0
 8003c06:	66a3      	str	r3, [r4, #104]	@ 0x68
  huart->TxISR = NULL;
 8003c08:	66e3      	str	r3, [r4, #108]	@ 0x6c
}
 8003c0a:	bd70      	pop	{r4, r5, r6, pc}
 8003c0c:	efff69f3 	.word	0xefff69f3
 8003c10:	ffffcfff 	.word	0xffffcfff
 8003c14:	fffff4ff 	.word	0xfffff4ff
 8003c18:	40013800 	.word	0x40013800
 8003c1c:	40021000 	.word	0x40021000
 8003c20:	0800729b 	.word	0x0800729b
 8003c24:	bfffbc00 	.word	0xbfffbc00
 8003c28:	007a1200 	.word	0x007a1200
 8003c2c:	0000ffef 	.word	0x0000ffef

08003c30 <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8003c30:	6a43      	ldr	r3, [r0, #36]	@ 0x24
{
 8003c32:	b530      	push	{r4, r5, lr}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8003c34:	071a      	lsls	r2, r3, #28
 8003c36:	d506      	bpl.n	8003c46 <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8003c38:	6801      	ldr	r1, [r0, #0]
 8003c3a:	4c28      	ldr	r4, [pc, #160]	@ (8003cdc <UART_AdvFeatureConfig+0xac>)
 8003c3c:	684a      	ldr	r2, [r1, #4]
 8003c3e:	4022      	ands	r2, r4
 8003c40:	6b44      	ldr	r4, [r0, #52]	@ 0x34
 8003c42:	4322      	orrs	r2, r4
 8003c44:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8003c46:	07da      	lsls	r2, r3, #31
 8003c48:	d506      	bpl.n	8003c58 <UART_AdvFeatureConfig+0x28>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8003c4a:	6801      	ldr	r1, [r0, #0]
 8003c4c:	4c24      	ldr	r4, [pc, #144]	@ (8003ce0 <UART_AdvFeatureConfig+0xb0>)
 8003c4e:	684a      	ldr	r2, [r1, #4]
 8003c50:	4022      	ands	r2, r4
 8003c52:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8003c54:	4322      	orrs	r2, r4
 8003c56:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8003c58:	079a      	lsls	r2, r3, #30
 8003c5a:	d506      	bpl.n	8003c6a <UART_AdvFeatureConfig+0x3a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8003c5c:	6801      	ldr	r1, [r0, #0]
 8003c5e:	4c21      	ldr	r4, [pc, #132]	@ (8003ce4 <UART_AdvFeatureConfig+0xb4>)
 8003c60:	684a      	ldr	r2, [r1, #4]
 8003c62:	4022      	ands	r2, r4
 8003c64:	6ac4      	ldr	r4, [r0, #44]	@ 0x2c
 8003c66:	4322      	orrs	r2, r4
 8003c68:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8003c6a:	075a      	lsls	r2, r3, #29
 8003c6c:	d506      	bpl.n	8003c7c <UART_AdvFeatureConfig+0x4c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8003c6e:	6801      	ldr	r1, [r0, #0]
 8003c70:	4c1d      	ldr	r4, [pc, #116]	@ (8003ce8 <UART_AdvFeatureConfig+0xb8>)
 8003c72:	684a      	ldr	r2, [r1, #4]
 8003c74:	4022      	ands	r2, r4
 8003c76:	6b04      	ldr	r4, [r0, #48]	@ 0x30
 8003c78:	4322      	orrs	r2, r4
 8003c7a:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8003c7c:	06da      	lsls	r2, r3, #27
 8003c7e:	d506      	bpl.n	8003c8e <UART_AdvFeatureConfig+0x5e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8003c80:	6801      	ldr	r1, [r0, #0]
 8003c82:	4c1a      	ldr	r4, [pc, #104]	@ (8003cec <UART_AdvFeatureConfig+0xbc>)
 8003c84:	688a      	ldr	r2, [r1, #8]
 8003c86:	4022      	ands	r2, r4
 8003c88:	6b84      	ldr	r4, [r0, #56]	@ 0x38
 8003c8a:	4322      	orrs	r2, r4
 8003c8c:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8003c8e:	069a      	lsls	r2, r3, #26
 8003c90:	d506      	bpl.n	8003ca0 <UART_AdvFeatureConfig+0x70>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8003c92:	6801      	ldr	r1, [r0, #0]
 8003c94:	4c16      	ldr	r4, [pc, #88]	@ (8003cf0 <UART_AdvFeatureConfig+0xc0>)
 8003c96:	688a      	ldr	r2, [r1, #8]
 8003c98:	4022      	ands	r2, r4
 8003c9a:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 8003c9c:	4322      	orrs	r2, r4
 8003c9e:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8003ca0:	065a      	lsls	r2, r3, #25
 8003ca2:	d510      	bpl.n	8003cc6 <UART_AdvFeatureConfig+0x96>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8003ca4:	6801      	ldr	r1, [r0, #0]
 8003ca6:	4d13      	ldr	r5, [pc, #76]	@ (8003cf4 <UART_AdvFeatureConfig+0xc4>)
 8003ca8:	684a      	ldr	r2, [r1, #4]
 8003caa:	6c04      	ldr	r4, [r0, #64]	@ 0x40
 8003cac:	402a      	ands	r2, r5
 8003cae:	4322      	orrs	r2, r4
 8003cb0:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8003cb2:	2280      	movs	r2, #128	@ 0x80
 8003cb4:	0352      	lsls	r2, r2, #13
 8003cb6:	4294      	cmp	r4, r2
 8003cb8:	d105      	bne.n	8003cc6 <UART_AdvFeatureConfig+0x96>
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8003cba:	684a      	ldr	r2, [r1, #4]
 8003cbc:	4c0e      	ldr	r4, [pc, #56]	@ (8003cf8 <UART_AdvFeatureConfig+0xc8>)
 8003cbe:	4022      	ands	r2, r4
 8003cc0:	6c44      	ldr	r4, [r0, #68]	@ 0x44
 8003cc2:	4322      	orrs	r2, r4
 8003cc4:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8003cc6:	061b      	lsls	r3, r3, #24
 8003cc8:	d506      	bpl.n	8003cd8 <UART_AdvFeatureConfig+0xa8>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8003cca:	6802      	ldr	r2, [r0, #0]
 8003ccc:	490b      	ldr	r1, [pc, #44]	@ (8003cfc <UART_AdvFeatureConfig+0xcc>)
 8003cce:	6853      	ldr	r3, [r2, #4]
 8003cd0:	400b      	ands	r3, r1
 8003cd2:	6c81      	ldr	r1, [r0, #72]	@ 0x48
 8003cd4:	430b      	orrs	r3, r1
 8003cd6:	6053      	str	r3, [r2, #4]
}
 8003cd8:	bd30      	pop	{r4, r5, pc}
 8003cda:	46c0      	nop			@ (mov r8, r8)
 8003cdc:	ffff7fff 	.word	0xffff7fff
 8003ce0:	fffdffff 	.word	0xfffdffff
 8003ce4:	fffeffff 	.word	0xfffeffff
 8003ce8:	fffbffff 	.word	0xfffbffff
 8003cec:	ffffefff 	.word	0xffffefff
 8003cf0:	ffffdfff 	.word	0xffffdfff
 8003cf4:	ffefffff 	.word	0xffefffff
 8003cf8:	ff9fffff 	.word	0xff9fffff
 8003cfc:	fff7ffff 	.word	0xfff7ffff

08003d00 <UART_WaitOnFlagUntilTimeout>:
{
 8003d00:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003d02:	0004      	movs	r4, r0
 8003d04:	000d      	movs	r5, r1
 8003d06:	0017      	movs	r7, r2
 8003d08:	9300      	str	r3, [sp, #0]
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8003d0a:	6822      	ldr	r2, [r4, #0]
 8003d0c:	69d3      	ldr	r3, [r2, #28]
 8003d0e:	402b      	ands	r3, r5
 8003d10:	1b5b      	subs	r3, r3, r5
 8003d12:	4259      	negs	r1, r3
 8003d14:	414b      	adcs	r3, r1
 8003d16:	42bb      	cmp	r3, r7
 8003d18:	d001      	beq.n	8003d1e <UART_WaitOnFlagUntilTimeout+0x1e>
  return HAL_OK;
 8003d1a:	2000      	movs	r0, #0
 8003d1c:	e025      	b.n	8003d6a <UART_WaitOnFlagUntilTimeout+0x6a>
    if (Timeout != HAL_MAX_DELAY)
 8003d1e:	9b08      	ldr	r3, [sp, #32]
 8003d20:	3301      	adds	r3, #1
 8003d22:	d0f3      	beq.n	8003d0c <UART_WaitOnFlagUntilTimeout+0xc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003d24:	f7fe ffba 	bl	8002c9c <HAL_GetTick>
 8003d28:	9b00      	ldr	r3, [sp, #0]
 8003d2a:	1ac0      	subs	r0, r0, r3
 8003d2c:	9b08      	ldr	r3, [sp, #32]
 8003d2e:	4298      	cmp	r0, r3
 8003d30:	d82c      	bhi.n	8003d8c <UART_WaitOnFlagUntilTimeout+0x8c>
 8003d32:	2b00      	cmp	r3, #0
 8003d34:	d02a      	beq.n	8003d8c <UART_WaitOnFlagUntilTimeout+0x8c>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
 8003d36:	6823      	ldr	r3, [r4, #0]
 8003d38:	681a      	ldr	r2, [r3, #0]
 8003d3a:	0752      	lsls	r2, r2, #29
 8003d3c:	d5e5      	bpl.n	8003d0a <UART_WaitOnFlagUntilTimeout+0xa>
 8003d3e:	002a      	movs	r2, r5
 8003d40:	2140      	movs	r1, #64	@ 0x40
 8003d42:	3a40      	subs	r2, #64	@ 0x40
 8003d44:	438a      	bics	r2, r1
 8003d46:	d0e0      	beq.n	8003d0a <UART_WaitOnFlagUntilTimeout+0xa>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 8003d48:	69da      	ldr	r2, [r3, #28]
 8003d4a:	2608      	movs	r6, #8
 8003d4c:	0011      	movs	r1, r2
 8003d4e:	4031      	ands	r1, r6
 8003d50:	9101      	str	r1, [sp, #4]
 8003d52:	4232      	tst	r2, r6
 8003d54:	d00a      	beq.n	8003d6c <UART_WaitOnFlagUntilTimeout+0x6c>
          UART_EndRxTransfer(huart);
 8003d56:	0020      	movs	r0, r4
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 8003d58:	621e      	str	r6, [r3, #32]
          UART_EndRxTransfer(huart);
 8003d5a:	f7ff fea3 	bl	8003aa4 <UART_EndRxTransfer>
          huart->ErrorCode = HAL_UART_ERROR_ORE;
 8003d5e:	19a3      	adds	r3, r4, r6
 8003d60:	67de      	str	r6, [r3, #124]	@ 0x7c
          __HAL_UNLOCK(huart);
 8003d62:	2300      	movs	r3, #0
          return HAL_ERROR;
 8003d64:	2001      	movs	r0, #1
          __HAL_UNLOCK(huart);
 8003d66:	3478      	adds	r4, #120	@ 0x78
 8003d68:	7023      	strb	r3, [r4, #0]
}
 8003d6a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8003d6c:	2280      	movs	r2, #128	@ 0x80
 8003d6e:	69d9      	ldr	r1, [r3, #28]
 8003d70:	0112      	lsls	r2, r2, #4
 8003d72:	4211      	tst	r1, r2
 8003d74:	d0c9      	beq.n	8003d0a <UART_WaitOnFlagUntilTimeout+0xa>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8003d76:	621a      	str	r2, [r3, #32]
          UART_EndRxTransfer(huart);
 8003d78:	0020      	movs	r0, r4
 8003d7a:	f7ff fe93 	bl	8003aa4 <UART_EndRxTransfer>
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8003d7e:	0023      	movs	r3, r4
 8003d80:	2220      	movs	r2, #32
 8003d82:	3308      	adds	r3, #8
 8003d84:	67da      	str	r2, [r3, #124]	@ 0x7c
          __HAL_UNLOCK(huart);
 8003d86:	9b01      	ldr	r3, [sp, #4]
 8003d88:	3478      	adds	r4, #120	@ 0x78
 8003d8a:	7023      	strb	r3, [r4, #0]
        return HAL_TIMEOUT;
 8003d8c:	2003      	movs	r0, #3
 8003d8e:	e7ec      	b.n	8003d6a <UART_WaitOnFlagUntilTimeout+0x6a>

08003d90 <HAL_UART_Transmit>:
{
 8003d90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003d92:	b087      	sub	sp, #28
 8003d94:	9305      	str	r3, [sp, #20]
  if (huart->gState == HAL_UART_STATE_READY)
 8003d96:	6fc3      	ldr	r3, [r0, #124]	@ 0x7c
{
 8003d98:	0004      	movs	r4, r0
 8003d9a:	000d      	movs	r5, r1
 8003d9c:	0017      	movs	r7, r2
    return HAL_BUSY;
 8003d9e:	2002      	movs	r0, #2
  if (huart->gState == HAL_UART_STATE_READY)
 8003da0:	2b20      	cmp	r3, #32
 8003da2:	d138      	bne.n	8003e16 <HAL_UART_Transmit+0x86>
      return  HAL_ERROR;
 8003da4:	3801      	subs	r0, #1
    if ((pData == NULL) || (Size == 0U))
 8003da6:	2900      	cmp	r1, #0
 8003da8:	d035      	beq.n	8003e16 <HAL_UART_Transmit+0x86>
 8003daa:	2a00      	cmp	r2, #0
 8003dac:	d033      	beq.n	8003e16 <HAL_UART_Transmit+0x86>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8003dae:	2380      	movs	r3, #128	@ 0x80
 8003db0:	68a2      	ldr	r2, [r4, #8]
 8003db2:	015b      	lsls	r3, r3, #5
 8003db4:	429a      	cmp	r2, r3
 8003db6:	d104      	bne.n	8003dc2 <HAL_UART_Transmit+0x32>
 8003db8:	6923      	ldr	r3, [r4, #16]
 8003dba:	2b00      	cmp	r3, #0
 8003dbc:	d101      	bne.n	8003dc2 <HAL_UART_Transmit+0x32>
      if ((((uint32_t)pData) & 1U) != 0U)
 8003dbe:	4201      	tst	r1, r0
 8003dc0:	d129      	bne.n	8003e16 <HAL_UART_Transmit+0x86>
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003dc2:	0023      	movs	r3, r4
 8003dc4:	2600      	movs	r6, #0
 8003dc6:	3308      	adds	r3, #8
 8003dc8:	67de      	str	r6, [r3, #124]	@ 0x7c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8003dca:	2321      	movs	r3, #33	@ 0x21
 8003dcc:	67e3      	str	r3, [r4, #124]	@ 0x7c
    tickstart = HAL_GetTick();
 8003dce:	f7fe ff65 	bl	8002c9c <HAL_GetTick>
    huart->TxXferSize  = Size;
 8003dd2:	0023      	movs	r3, r4
 8003dd4:	3350      	adds	r3, #80	@ 0x50
 8003dd6:	801f      	strh	r7, [r3, #0]
    huart->TxXferCount = Size;
 8003dd8:	3302      	adds	r3, #2
 8003dda:	9303      	str	r3, [sp, #12]
 8003ddc:	801f      	strh	r7, [r3, #0]
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8003dde:	2380      	movs	r3, #128	@ 0x80
 8003de0:	68a2      	ldr	r2, [r4, #8]
    tickstart = HAL_GetTick();
 8003de2:	9004      	str	r0, [sp, #16]
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8003de4:	015b      	lsls	r3, r3, #5
 8003de6:	429a      	cmp	r2, r3
 8003de8:	d104      	bne.n	8003df4 <HAL_UART_Transmit+0x64>
 8003dea:	6923      	ldr	r3, [r4, #16]
 8003dec:	42b3      	cmp	r3, r6
 8003dee:	d101      	bne.n	8003df4 <HAL_UART_Transmit+0x64>
 8003df0:	002e      	movs	r6, r5
      pdata8bits  = NULL;
 8003df2:	001d      	movs	r5, r3
    while (huart->TxXferCount > 0U)
 8003df4:	0023      	movs	r3, r4
 8003df6:	3352      	adds	r3, #82	@ 0x52
 8003df8:	881b      	ldrh	r3, [r3, #0]
 8003dfa:	b29a      	uxth	r2, r3
 8003dfc:	2b00      	cmp	r3, #0
 8003dfe:	d10c      	bne.n	8003e1a <HAL_UART_Transmit+0x8a>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8003e00:	9b05      	ldr	r3, [sp, #20]
 8003e02:	2140      	movs	r1, #64	@ 0x40
 8003e04:	9300      	str	r3, [sp, #0]
 8003e06:	0020      	movs	r0, r4
 8003e08:	9b04      	ldr	r3, [sp, #16]
 8003e0a:	f7ff ff79 	bl	8003d00 <UART_WaitOnFlagUntilTimeout>
 8003e0e:	2320      	movs	r3, #32
      huart->gState = HAL_UART_STATE_READY;
 8003e10:	67e3      	str	r3, [r4, #124]	@ 0x7c
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8003e12:	2800      	cmp	r0, #0
 8003e14:	d10d      	bne.n	8003e32 <HAL_UART_Transmit+0xa2>
}
 8003e16:	b007      	add	sp, #28
 8003e18:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8003e1a:	9b05      	ldr	r3, [sp, #20]
 8003e1c:	2200      	movs	r2, #0
 8003e1e:	9300      	str	r3, [sp, #0]
 8003e20:	2180      	movs	r1, #128	@ 0x80
 8003e22:	0020      	movs	r0, r4
 8003e24:	9b04      	ldr	r3, [sp, #16]
 8003e26:	f7ff ff6b 	bl	8003d00 <UART_WaitOnFlagUntilTimeout>
 8003e2a:	2800      	cmp	r0, #0
 8003e2c:	d003      	beq.n	8003e36 <HAL_UART_Transmit+0xa6>
        huart->gState = HAL_UART_STATE_READY;
 8003e2e:	2320      	movs	r3, #32
 8003e30:	67e3      	str	r3, [r4, #124]	@ 0x7c
        return HAL_TIMEOUT;
 8003e32:	2003      	movs	r0, #3
 8003e34:	e7ef      	b.n	8003e16 <HAL_UART_Transmit+0x86>
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8003e36:	6822      	ldr	r2, [r4, #0]
      if (pdata8bits == NULL)
 8003e38:	2d00      	cmp	r5, #0
 8003e3a:	d10b      	bne.n	8003e54 <HAL_UART_Transmit+0xc4>
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8003e3c:	8833      	ldrh	r3, [r6, #0]
        pdata16bits++;
 8003e3e:	3602      	adds	r6, #2
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8003e40:	05db      	lsls	r3, r3, #23
 8003e42:	0ddb      	lsrs	r3, r3, #23
 8003e44:	8513      	strh	r3, [r2, #40]	@ 0x28
      huart->TxXferCount--;
 8003e46:	9b03      	ldr	r3, [sp, #12]
 8003e48:	9a03      	ldr	r2, [sp, #12]
 8003e4a:	881b      	ldrh	r3, [r3, #0]
 8003e4c:	3b01      	subs	r3, #1
 8003e4e:	b29b      	uxth	r3, r3
 8003e50:	8013      	strh	r3, [r2, #0]
 8003e52:	e7cf      	b.n	8003df4 <HAL_UART_Transmit+0x64>
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8003e54:	782b      	ldrb	r3, [r5, #0]
        pdata8bits++;
 8003e56:	3501      	adds	r5, #1
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8003e58:	8513      	strh	r3, [r2, #40]	@ 0x28
        pdata8bits++;
 8003e5a:	e7f4      	b.n	8003e46 <HAL_UART_Transmit+0xb6>

08003e5c <UART_CheckIdleState>:
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003e5c:	0003      	movs	r3, r0
{
 8003e5e:	b573      	push	{r0, r1, r4, r5, r6, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003e60:	2500      	movs	r5, #0
{
 8003e62:	0004      	movs	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003e64:	3308      	adds	r3, #8
 8003e66:	67dd      	str	r5, [r3, #124]	@ 0x7c
  tickstart = HAL_GetTick();
 8003e68:	f7fe ff18 	bl	8002c9c <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8003e6c:	6823      	ldr	r3, [r4, #0]
  tickstart = HAL_GetTick();
 8003e6e:	0006      	movs	r6, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8003e70:	681b      	ldr	r3, [r3, #0]
 8003e72:	071b      	lsls	r3, r3, #28
 8003e74:	d51d      	bpl.n	8003eb2 <UART_CheckIdleState+0x56>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8003e76:	2180      	movs	r1, #128	@ 0x80
 8003e78:	4b26      	ldr	r3, [pc, #152]	@ (8003f14 <UART_CheckIdleState+0xb8>)
 8003e7a:	002a      	movs	r2, r5
 8003e7c:	9300      	str	r3, [sp, #0]
 8003e7e:	0389      	lsls	r1, r1, #14
 8003e80:	0003      	movs	r3, r0
 8003e82:	0020      	movs	r0, r4
 8003e84:	f7ff ff3c 	bl	8003d00 <UART_WaitOnFlagUntilTimeout>
 8003e88:	42a8      	cmp	r0, r5
 8003e8a:	d012      	beq.n	8003eb2 <UART_CheckIdleState+0x56>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003e8c:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003e90:	2301      	movs	r3, #1
 8003e92:	f383 8810 	msr	PRIMASK, r3
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE));
 8003e96:	2080      	movs	r0, #128	@ 0x80
 8003e98:	6822      	ldr	r2, [r4, #0]
 8003e9a:	6813      	ldr	r3, [r2, #0]
 8003e9c:	4383      	bics	r3, r0
 8003e9e:	6013      	str	r3, [r2, #0]
 8003ea0:	f381 8810 	msr	PRIMASK, r1
      huart->gState = HAL_UART_STATE_READY;
 8003ea4:	2320      	movs	r3, #32
 8003ea6:	67e3      	str	r3, [r4, #124]	@ 0x7c
      return HAL_TIMEOUT;
 8003ea8:	2003      	movs	r0, #3
      __HAL_UNLOCK(huart);
 8003eaa:	2300      	movs	r3, #0
 8003eac:	3478      	adds	r4, #120	@ 0x78
 8003eae:	7023      	strb	r3, [r4, #0]
}
 8003eb0:	bd76      	pop	{r1, r2, r4, r5, r6, pc}
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 8003eb2:	0025      	movs	r5, r4
 8003eb4:	cd08      	ldmia	r5!, {r3}
 8003eb6:	681b      	ldr	r3, [r3, #0]
 8003eb8:	075b      	lsls	r3, r3, #29
 8003eba:	d523      	bpl.n	8003f04 <UART_CheckIdleState+0xa8>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8003ebc:	2180      	movs	r1, #128	@ 0x80
 8003ebe:	4b15      	ldr	r3, [pc, #84]	@ (8003f14 <UART_CheckIdleState+0xb8>)
 8003ec0:	2200      	movs	r2, #0
 8003ec2:	9300      	str	r3, [sp, #0]
 8003ec4:	0020      	movs	r0, r4
 8003ec6:	0033      	movs	r3, r6
 8003ec8:	03c9      	lsls	r1, r1, #15
 8003eca:	f7ff ff19 	bl	8003d00 <UART_WaitOnFlagUntilTimeout>
 8003ece:	2800      	cmp	r0, #0
 8003ed0:	d018      	beq.n	8003f04 <UART_CheckIdleState+0xa8>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003ed2:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003ed6:	2201      	movs	r2, #1
 8003ed8:	f382 8810 	msr	PRIMASK, r2
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8003edc:	6821      	ldr	r1, [r4, #0]
 8003ede:	4e0e      	ldr	r6, [pc, #56]	@ (8003f18 <UART_CheckIdleState+0xbc>)
 8003ee0:	680b      	ldr	r3, [r1, #0]
 8003ee2:	4033      	ands	r3, r6
 8003ee4:	600b      	str	r3, [r1, #0]
 8003ee6:	f380 8810 	msr	PRIMASK, r0
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003eea:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003eee:	f382 8810 	msr	PRIMASK, r2
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8003ef2:	6821      	ldr	r1, [r4, #0]
 8003ef4:	688b      	ldr	r3, [r1, #8]
 8003ef6:	4393      	bics	r3, r2
 8003ef8:	608b      	str	r3, [r1, #8]
 8003efa:	f380 8810 	msr	PRIMASK, r0
      huart->RxState = HAL_UART_STATE_READY;
 8003efe:	2320      	movs	r3, #32
 8003f00:	67eb      	str	r3, [r5, #124]	@ 0x7c
      return HAL_TIMEOUT;
 8003f02:	e7d1      	b.n	8003ea8 <UART_CheckIdleState+0x4c>
  huart->gState = HAL_UART_STATE_READY;
 8003f04:	2320      	movs	r3, #32
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003f06:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 8003f08:	67e3      	str	r3, [r4, #124]	@ 0x7c
  huart->RxState = HAL_UART_STATE_READY;
 8003f0a:	67eb      	str	r3, [r5, #124]	@ 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003f0c:	6620      	str	r0, [r4, #96]	@ 0x60
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 8003f0e:	6660      	str	r0, [r4, #100]	@ 0x64
  return HAL_OK;
 8003f10:	e7cb      	b.n	8003eaa <UART_CheckIdleState+0x4e>
 8003f12:	46c0      	nop			@ (mov r8, r8)
 8003f14:	01ffffff 	.word	0x01ffffff
 8003f18:	fffffedf 	.word	0xfffffedf

08003f1c <HAL_UART_Init>:
{
 8003f1c:	b510      	push	{r4, lr}
 8003f1e:	1e04      	subs	r4, r0, #0
  if (huart == NULL)
 8003f20:	d101      	bne.n	8003f26 <HAL_UART_Init+0xa>
    return HAL_ERROR;
 8003f22:	2001      	movs	r0, #1
}
 8003f24:	bd10      	pop	{r4, pc}
  if (huart->gState == HAL_UART_STATE_RESET)
 8003f26:	6fc3      	ldr	r3, [r0, #124]	@ 0x7c
 8003f28:	2b00      	cmp	r3, #0
 8003f2a:	d104      	bne.n	8003f36 <HAL_UART_Init+0x1a>
    huart->Lock = HAL_UNLOCKED;
 8003f2c:	0002      	movs	r2, r0
 8003f2e:	3278      	adds	r2, #120	@ 0x78
 8003f30:	7013      	strb	r3, [r2, #0]
    HAL_UART_MspInit(huart);
 8003f32:	f7fe fd99 	bl	8002a68 <HAL_UART_MspInit>
  huart->gState = HAL_UART_STATE_BUSY;
 8003f36:	2324      	movs	r3, #36	@ 0x24
  __HAL_UART_DISABLE(huart);
 8003f38:	2101      	movs	r1, #1
 8003f3a:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8003f3c:	67e3      	str	r3, [r4, #124]	@ 0x7c
  __HAL_UART_DISABLE(huart);
 8003f3e:	6813      	ldr	r3, [r2, #0]
 8003f40:	438b      	bics	r3, r1
 8003f42:	6013      	str	r3, [r2, #0]
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8003f44:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8003f46:	2b00      	cmp	r3, #0
 8003f48:	d002      	beq.n	8003f50 <HAL_UART_Init+0x34>
    UART_AdvFeatureConfig(huart);
 8003f4a:	0020      	movs	r0, r4
 8003f4c:	f7ff fe70 	bl	8003c30 <UART_AdvFeatureConfig>
  if (UART_SetConfig(huart) == HAL_ERROR)
 8003f50:	0020      	movs	r0, r4
 8003f52:	f7ff fdd5 	bl	8003b00 <UART_SetConfig>
 8003f56:	2801      	cmp	r0, #1
 8003f58:	d0e3      	beq.n	8003f22 <HAL_UART_Init+0x6>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8003f5a:	6823      	ldr	r3, [r4, #0]
 8003f5c:	4907      	ldr	r1, [pc, #28]	@ (8003f7c <HAL_UART_Init+0x60>)
 8003f5e:	685a      	ldr	r2, [r3, #4]
  return (UART_CheckIdleState(huart));
 8003f60:	0020      	movs	r0, r4
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8003f62:	400a      	ands	r2, r1
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8003f64:	212a      	movs	r1, #42	@ 0x2a
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8003f66:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8003f68:	689a      	ldr	r2, [r3, #8]
 8003f6a:	438a      	bics	r2, r1
 8003f6c:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
 8003f6e:	2201      	movs	r2, #1
 8003f70:	6819      	ldr	r1, [r3, #0]
 8003f72:	430a      	orrs	r2, r1
 8003f74:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
 8003f76:	f7ff ff71 	bl	8003e5c <UART_CheckIdleState>
 8003f7a:	e7d3      	b.n	8003f24 <HAL_UART_Init+0x8>
 8003f7c:	ffffb7ff 	.word	0xffffb7ff

08003f80 <__cvt>:
 8003f80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003f82:	001f      	movs	r7, r3
 8003f84:	2300      	movs	r3, #0
 8003f86:	0016      	movs	r6, r2
 8003f88:	b08b      	sub	sp, #44	@ 0x2c
 8003f8a:	429f      	cmp	r7, r3
 8003f8c:	da04      	bge.n	8003f98 <__cvt+0x18>
 8003f8e:	2180      	movs	r1, #128	@ 0x80
 8003f90:	0609      	lsls	r1, r1, #24
 8003f92:	187b      	adds	r3, r7, r1
 8003f94:	001f      	movs	r7, r3
 8003f96:	232d      	movs	r3, #45	@ 0x2d
 8003f98:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8003f9a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8003f9c:	7013      	strb	r3, [r2, #0]
 8003f9e:	2320      	movs	r3, #32
 8003fa0:	2203      	movs	r2, #3
 8003fa2:	439d      	bics	r5, r3
 8003fa4:	2d46      	cmp	r5, #70	@ 0x46
 8003fa6:	d007      	beq.n	8003fb8 <__cvt+0x38>
 8003fa8:	002b      	movs	r3, r5
 8003faa:	3b45      	subs	r3, #69	@ 0x45
 8003fac:	4259      	negs	r1, r3
 8003fae:	414b      	adcs	r3, r1
 8003fb0:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8003fb2:	3a01      	subs	r2, #1
 8003fb4:	18cb      	adds	r3, r1, r3
 8003fb6:	9310      	str	r3, [sp, #64]	@ 0x40
 8003fb8:	ab09      	add	r3, sp, #36	@ 0x24
 8003fba:	9304      	str	r3, [sp, #16]
 8003fbc:	ab08      	add	r3, sp, #32
 8003fbe:	9303      	str	r3, [sp, #12]
 8003fc0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8003fc2:	9200      	str	r2, [sp, #0]
 8003fc4:	9302      	str	r3, [sp, #8]
 8003fc6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8003fc8:	0032      	movs	r2, r6
 8003fca:	9301      	str	r3, [sp, #4]
 8003fcc:	003b      	movs	r3, r7
 8003fce:	f000 fdef 	bl	8004bb0 <_dtoa_r>
 8003fd2:	0004      	movs	r4, r0
 8003fd4:	2d47      	cmp	r5, #71	@ 0x47
 8003fd6:	d11b      	bne.n	8004010 <__cvt+0x90>
 8003fd8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8003fda:	07db      	lsls	r3, r3, #31
 8003fdc:	d511      	bpl.n	8004002 <__cvt+0x82>
 8003fde:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8003fe0:	18c3      	adds	r3, r0, r3
 8003fe2:	9307      	str	r3, [sp, #28]
 8003fe4:	2200      	movs	r2, #0
 8003fe6:	2300      	movs	r3, #0
 8003fe8:	0030      	movs	r0, r6
 8003fea:	0039      	movs	r1, r7
 8003fec:	f7fc fa2e 	bl	800044c <__aeabi_dcmpeq>
 8003ff0:	2800      	cmp	r0, #0
 8003ff2:	d001      	beq.n	8003ff8 <__cvt+0x78>
 8003ff4:	9b07      	ldr	r3, [sp, #28]
 8003ff6:	9309      	str	r3, [sp, #36]	@ 0x24
 8003ff8:	2230      	movs	r2, #48	@ 0x30
 8003ffa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003ffc:	9907      	ldr	r1, [sp, #28]
 8003ffe:	428b      	cmp	r3, r1
 8004000:	d320      	bcc.n	8004044 <__cvt+0xc4>
 8004002:	0020      	movs	r0, r4
 8004004:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004006:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8004008:	1b1b      	subs	r3, r3, r4
 800400a:	6013      	str	r3, [r2, #0]
 800400c:	b00b      	add	sp, #44	@ 0x2c
 800400e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004010:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8004012:	18c3      	adds	r3, r0, r3
 8004014:	9307      	str	r3, [sp, #28]
 8004016:	2d46      	cmp	r5, #70	@ 0x46
 8004018:	d1e4      	bne.n	8003fe4 <__cvt+0x64>
 800401a:	7803      	ldrb	r3, [r0, #0]
 800401c:	2b30      	cmp	r3, #48	@ 0x30
 800401e:	d10c      	bne.n	800403a <__cvt+0xba>
 8004020:	2200      	movs	r2, #0
 8004022:	2300      	movs	r3, #0
 8004024:	0030      	movs	r0, r6
 8004026:	0039      	movs	r1, r7
 8004028:	f7fc fa10 	bl	800044c <__aeabi_dcmpeq>
 800402c:	2800      	cmp	r0, #0
 800402e:	d104      	bne.n	800403a <__cvt+0xba>
 8004030:	2301      	movs	r3, #1
 8004032:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8004034:	1a9b      	subs	r3, r3, r2
 8004036:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8004038:	6013      	str	r3, [r2, #0]
 800403a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800403c:	9a07      	ldr	r2, [sp, #28]
 800403e:	681b      	ldr	r3, [r3, #0]
 8004040:	18d3      	adds	r3, r2, r3
 8004042:	e7ce      	b.n	8003fe2 <__cvt+0x62>
 8004044:	1c59      	adds	r1, r3, #1
 8004046:	9109      	str	r1, [sp, #36]	@ 0x24
 8004048:	701a      	strb	r2, [r3, #0]
 800404a:	e7d6      	b.n	8003ffa <__cvt+0x7a>

0800404c <__exponent>:
 800404c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800404e:	232b      	movs	r3, #43	@ 0x2b
 8004050:	0005      	movs	r5, r0
 8004052:	000c      	movs	r4, r1
 8004054:	b085      	sub	sp, #20
 8004056:	7002      	strb	r2, [r0, #0]
 8004058:	2900      	cmp	r1, #0
 800405a:	da01      	bge.n	8004060 <__exponent+0x14>
 800405c:	424c      	negs	r4, r1
 800405e:	3302      	adds	r3, #2
 8004060:	706b      	strb	r3, [r5, #1]
 8004062:	2c09      	cmp	r4, #9
 8004064:	dd2c      	ble.n	80040c0 <__exponent+0x74>
 8004066:	ab02      	add	r3, sp, #8
 8004068:	1dde      	adds	r6, r3, #7
 800406a:	0020      	movs	r0, r4
 800406c:	210a      	movs	r1, #10
 800406e:	f7fc f9d7 	bl	8000420 <__aeabi_idivmod>
 8004072:	0037      	movs	r7, r6
 8004074:	3130      	adds	r1, #48	@ 0x30
 8004076:	3e01      	subs	r6, #1
 8004078:	0020      	movs	r0, r4
 800407a:	7031      	strb	r1, [r6, #0]
 800407c:	210a      	movs	r1, #10
 800407e:	9401      	str	r4, [sp, #4]
 8004080:	f7fc f8e8 	bl	8000254 <__divsi3>
 8004084:	9b01      	ldr	r3, [sp, #4]
 8004086:	0004      	movs	r4, r0
 8004088:	2b63      	cmp	r3, #99	@ 0x63
 800408a:	dcee      	bgt.n	800406a <__exponent+0x1e>
 800408c:	1eba      	subs	r2, r7, #2
 800408e:	1ca8      	adds	r0, r5, #2
 8004090:	0001      	movs	r1, r0
 8004092:	0013      	movs	r3, r2
 8004094:	3430      	adds	r4, #48	@ 0x30
 8004096:	7014      	strb	r4, [r2, #0]
 8004098:	ac02      	add	r4, sp, #8
 800409a:	3407      	adds	r4, #7
 800409c:	429c      	cmp	r4, r3
 800409e:	d80a      	bhi.n	80040b6 <__exponent+0x6a>
 80040a0:	2300      	movs	r3, #0
 80040a2:	42a2      	cmp	r2, r4
 80040a4:	d803      	bhi.n	80040ae <__exponent+0x62>
 80040a6:	3309      	adds	r3, #9
 80040a8:	aa02      	add	r2, sp, #8
 80040aa:	189b      	adds	r3, r3, r2
 80040ac:	1bdb      	subs	r3, r3, r7
 80040ae:	18c0      	adds	r0, r0, r3
 80040b0:	1b40      	subs	r0, r0, r5
 80040b2:	b005      	add	sp, #20
 80040b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80040b6:	781c      	ldrb	r4, [r3, #0]
 80040b8:	3301      	adds	r3, #1
 80040ba:	700c      	strb	r4, [r1, #0]
 80040bc:	3101      	adds	r1, #1
 80040be:	e7eb      	b.n	8004098 <__exponent+0x4c>
 80040c0:	2330      	movs	r3, #48	@ 0x30
 80040c2:	18e4      	adds	r4, r4, r3
 80040c4:	70ab      	strb	r3, [r5, #2]
 80040c6:	1d28      	adds	r0, r5, #4
 80040c8:	70ec      	strb	r4, [r5, #3]
 80040ca:	e7f1      	b.n	80040b0 <__exponent+0x64>

080040cc <_printf_float>:
 80040cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80040ce:	b097      	sub	sp, #92	@ 0x5c
 80040d0:	000d      	movs	r5, r1
 80040d2:	920a      	str	r2, [sp, #40]	@ 0x28
 80040d4:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 80040d6:	930b      	str	r3, [sp, #44]	@ 0x2c
 80040d8:	9009      	str	r0, [sp, #36]	@ 0x24
 80040da:	f000 fc9f 	bl	8004a1c <_localeconv_r>
 80040de:	6803      	ldr	r3, [r0, #0]
 80040e0:	0018      	movs	r0, r3
 80040e2:	930d      	str	r3, [sp, #52]	@ 0x34
 80040e4:	f7fc f810 	bl	8000108 <strlen>
 80040e8:	2300      	movs	r3, #0
 80040ea:	900f      	str	r0, [sp, #60]	@ 0x3c
 80040ec:	9314      	str	r3, [sp, #80]	@ 0x50
 80040ee:	7e2b      	ldrb	r3, [r5, #24]
 80040f0:	2207      	movs	r2, #7
 80040f2:	930c      	str	r3, [sp, #48]	@ 0x30
 80040f4:	682b      	ldr	r3, [r5, #0]
 80040f6:	930e      	str	r3, [sp, #56]	@ 0x38
 80040f8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80040fa:	6823      	ldr	r3, [r4, #0]
 80040fc:	05c9      	lsls	r1, r1, #23
 80040fe:	d545      	bpl.n	800418c <_printf_float+0xc0>
 8004100:	189b      	adds	r3, r3, r2
 8004102:	4393      	bics	r3, r2
 8004104:	001a      	movs	r2, r3
 8004106:	3208      	adds	r2, #8
 8004108:	6022      	str	r2, [r4, #0]
 800410a:	2201      	movs	r2, #1
 800410c:	681e      	ldr	r6, [r3, #0]
 800410e:	685f      	ldr	r7, [r3, #4]
 8004110:	007b      	lsls	r3, r7, #1
 8004112:	085b      	lsrs	r3, r3, #1
 8004114:	9311      	str	r3, [sp, #68]	@ 0x44
 8004116:	9610      	str	r6, [sp, #64]	@ 0x40
 8004118:	64ae      	str	r6, [r5, #72]	@ 0x48
 800411a:	64ef      	str	r7, [r5, #76]	@ 0x4c
 800411c:	9810      	ldr	r0, [sp, #64]	@ 0x40
 800411e:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8004120:	4ba7      	ldr	r3, [pc, #668]	@ (80043c0 <_printf_float+0x2f4>)
 8004122:	4252      	negs	r2, r2
 8004124:	f7fe f92e 	bl	8002384 <__aeabi_dcmpun>
 8004128:	2800      	cmp	r0, #0
 800412a:	d131      	bne.n	8004190 <_printf_float+0xc4>
 800412c:	9810      	ldr	r0, [sp, #64]	@ 0x40
 800412e:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8004130:	2201      	movs	r2, #1
 8004132:	4ba3      	ldr	r3, [pc, #652]	@ (80043c0 <_printf_float+0x2f4>)
 8004134:	4252      	negs	r2, r2
 8004136:	f7fc f999 	bl	800046c <__aeabi_dcmple>
 800413a:	2800      	cmp	r0, #0
 800413c:	d128      	bne.n	8004190 <_printf_float+0xc4>
 800413e:	2200      	movs	r2, #0
 8004140:	2300      	movs	r3, #0
 8004142:	0030      	movs	r0, r6
 8004144:	0039      	movs	r1, r7
 8004146:	f7fc f987 	bl	8000458 <__aeabi_dcmplt>
 800414a:	2800      	cmp	r0, #0
 800414c:	d003      	beq.n	8004156 <_printf_float+0x8a>
 800414e:	002b      	movs	r3, r5
 8004150:	222d      	movs	r2, #45	@ 0x2d
 8004152:	3343      	adds	r3, #67	@ 0x43
 8004154:	701a      	strb	r2, [r3, #0]
 8004156:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004158:	4f9a      	ldr	r7, [pc, #616]	@ (80043c4 <_printf_float+0x2f8>)
 800415a:	2b47      	cmp	r3, #71	@ 0x47
 800415c:	d900      	bls.n	8004160 <_printf_float+0x94>
 800415e:	4f9a      	ldr	r7, [pc, #616]	@ (80043c8 <_printf_float+0x2fc>)
 8004160:	2303      	movs	r3, #3
 8004162:	2400      	movs	r4, #0
 8004164:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8004166:	612b      	str	r3, [r5, #16]
 8004168:	3301      	adds	r3, #1
 800416a:	439a      	bics	r2, r3
 800416c:	602a      	str	r2, [r5, #0]
 800416e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004170:	0029      	movs	r1, r5
 8004172:	9300      	str	r3, [sp, #0]
 8004174:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004176:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004178:	aa15      	add	r2, sp, #84	@ 0x54
 800417a:	f000 f9e5 	bl	8004548 <_printf_common>
 800417e:	3001      	adds	r0, #1
 8004180:	d000      	beq.n	8004184 <_printf_float+0xb8>
 8004182:	e09f      	b.n	80042c4 <_printf_float+0x1f8>
 8004184:	2001      	movs	r0, #1
 8004186:	4240      	negs	r0, r0
 8004188:	b017      	add	sp, #92	@ 0x5c
 800418a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800418c:	3307      	adds	r3, #7
 800418e:	e7b8      	b.n	8004102 <_printf_float+0x36>
 8004190:	0032      	movs	r2, r6
 8004192:	003b      	movs	r3, r7
 8004194:	0030      	movs	r0, r6
 8004196:	0039      	movs	r1, r7
 8004198:	f7fe f8f4 	bl	8002384 <__aeabi_dcmpun>
 800419c:	2800      	cmp	r0, #0
 800419e:	d00b      	beq.n	80041b8 <_printf_float+0xec>
 80041a0:	2f00      	cmp	r7, #0
 80041a2:	da03      	bge.n	80041ac <_printf_float+0xe0>
 80041a4:	002b      	movs	r3, r5
 80041a6:	222d      	movs	r2, #45	@ 0x2d
 80041a8:	3343      	adds	r3, #67	@ 0x43
 80041aa:	701a      	strb	r2, [r3, #0]
 80041ac:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80041ae:	4f87      	ldr	r7, [pc, #540]	@ (80043cc <_printf_float+0x300>)
 80041b0:	2b47      	cmp	r3, #71	@ 0x47
 80041b2:	d9d5      	bls.n	8004160 <_printf_float+0x94>
 80041b4:	4f86      	ldr	r7, [pc, #536]	@ (80043d0 <_printf_float+0x304>)
 80041b6:	e7d3      	b.n	8004160 <_printf_float+0x94>
 80041b8:	2220      	movs	r2, #32
 80041ba:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80041bc:	686b      	ldr	r3, [r5, #4]
 80041be:	4394      	bics	r4, r2
 80041c0:	1c5a      	adds	r2, r3, #1
 80041c2:	d146      	bne.n	8004252 <_printf_float+0x186>
 80041c4:	3307      	adds	r3, #7
 80041c6:	606b      	str	r3, [r5, #4]
 80041c8:	2380      	movs	r3, #128	@ 0x80
 80041ca:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80041cc:	00db      	lsls	r3, r3, #3
 80041ce:	4313      	orrs	r3, r2
 80041d0:	2200      	movs	r2, #0
 80041d2:	602b      	str	r3, [r5, #0]
 80041d4:	9206      	str	r2, [sp, #24]
 80041d6:	aa14      	add	r2, sp, #80	@ 0x50
 80041d8:	9205      	str	r2, [sp, #20]
 80041da:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80041dc:	a90a      	add	r1, sp, #40	@ 0x28
 80041de:	9204      	str	r2, [sp, #16]
 80041e0:	aa13      	add	r2, sp, #76	@ 0x4c
 80041e2:	9203      	str	r2, [sp, #12]
 80041e4:	2223      	movs	r2, #35	@ 0x23
 80041e6:	1852      	adds	r2, r2, r1
 80041e8:	9202      	str	r2, [sp, #8]
 80041ea:	9301      	str	r3, [sp, #4]
 80041ec:	686b      	ldr	r3, [r5, #4]
 80041ee:	0032      	movs	r2, r6
 80041f0:	9300      	str	r3, [sp, #0]
 80041f2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80041f4:	003b      	movs	r3, r7
 80041f6:	f7ff fec3 	bl	8003f80 <__cvt>
 80041fa:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80041fc:	0007      	movs	r7, r0
 80041fe:	2c47      	cmp	r4, #71	@ 0x47
 8004200:	d12d      	bne.n	800425e <_printf_float+0x192>
 8004202:	1cd3      	adds	r3, r2, #3
 8004204:	db02      	blt.n	800420c <_printf_float+0x140>
 8004206:	686b      	ldr	r3, [r5, #4]
 8004208:	429a      	cmp	r2, r3
 800420a:	dd48      	ble.n	800429e <_printf_float+0x1d2>
 800420c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800420e:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8004210:	3b02      	subs	r3, #2
 8004212:	b2db      	uxtb	r3, r3
 8004214:	930c      	str	r3, [sp, #48]	@ 0x30
 8004216:	0028      	movs	r0, r5
 8004218:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 800421a:	3901      	subs	r1, #1
 800421c:	3050      	adds	r0, #80	@ 0x50
 800421e:	9113      	str	r1, [sp, #76]	@ 0x4c
 8004220:	f7ff ff14 	bl	800404c <__exponent>
 8004224:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8004226:	0004      	movs	r4, r0
 8004228:	1813      	adds	r3, r2, r0
 800422a:	612b      	str	r3, [r5, #16]
 800422c:	2a01      	cmp	r2, #1
 800422e:	dc02      	bgt.n	8004236 <_printf_float+0x16a>
 8004230:	682a      	ldr	r2, [r5, #0]
 8004232:	07d2      	lsls	r2, r2, #31
 8004234:	d501      	bpl.n	800423a <_printf_float+0x16e>
 8004236:	3301      	adds	r3, #1
 8004238:	612b      	str	r3, [r5, #16]
 800423a:	2323      	movs	r3, #35	@ 0x23
 800423c:	aa0a      	add	r2, sp, #40	@ 0x28
 800423e:	189b      	adds	r3, r3, r2
 8004240:	781b      	ldrb	r3, [r3, #0]
 8004242:	2b00      	cmp	r3, #0
 8004244:	d100      	bne.n	8004248 <_printf_float+0x17c>
 8004246:	e792      	b.n	800416e <_printf_float+0xa2>
 8004248:	002b      	movs	r3, r5
 800424a:	222d      	movs	r2, #45	@ 0x2d
 800424c:	3343      	adds	r3, #67	@ 0x43
 800424e:	701a      	strb	r2, [r3, #0]
 8004250:	e78d      	b.n	800416e <_printf_float+0xa2>
 8004252:	2c47      	cmp	r4, #71	@ 0x47
 8004254:	d1b8      	bne.n	80041c8 <_printf_float+0xfc>
 8004256:	2b00      	cmp	r3, #0
 8004258:	d1b6      	bne.n	80041c8 <_printf_float+0xfc>
 800425a:	3301      	adds	r3, #1
 800425c:	e7b3      	b.n	80041c6 <_printf_float+0xfa>
 800425e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004260:	0011      	movs	r1, r2
 8004262:	2b65      	cmp	r3, #101	@ 0x65
 8004264:	d9d7      	bls.n	8004216 <_printf_float+0x14a>
 8004266:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004268:	2b66      	cmp	r3, #102	@ 0x66
 800426a:	d11a      	bne.n	80042a2 <_printf_float+0x1d6>
 800426c:	686b      	ldr	r3, [r5, #4]
 800426e:	2a00      	cmp	r2, #0
 8004270:	dd09      	ble.n	8004286 <_printf_float+0x1ba>
 8004272:	612a      	str	r2, [r5, #16]
 8004274:	2b00      	cmp	r3, #0
 8004276:	d102      	bne.n	800427e <_printf_float+0x1b2>
 8004278:	6829      	ldr	r1, [r5, #0]
 800427a:	07c9      	lsls	r1, r1, #31
 800427c:	d50b      	bpl.n	8004296 <_printf_float+0x1ca>
 800427e:	3301      	adds	r3, #1
 8004280:	189b      	adds	r3, r3, r2
 8004282:	612b      	str	r3, [r5, #16]
 8004284:	e007      	b.n	8004296 <_printf_float+0x1ca>
 8004286:	2b00      	cmp	r3, #0
 8004288:	d103      	bne.n	8004292 <_printf_float+0x1c6>
 800428a:	2201      	movs	r2, #1
 800428c:	6829      	ldr	r1, [r5, #0]
 800428e:	4211      	tst	r1, r2
 8004290:	d000      	beq.n	8004294 <_printf_float+0x1c8>
 8004292:	1c9a      	adds	r2, r3, #2
 8004294:	612a      	str	r2, [r5, #16]
 8004296:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8004298:	2400      	movs	r4, #0
 800429a:	65ab      	str	r3, [r5, #88]	@ 0x58
 800429c:	e7cd      	b.n	800423a <_printf_float+0x16e>
 800429e:	2367      	movs	r3, #103	@ 0x67
 80042a0:	930c      	str	r3, [sp, #48]	@ 0x30
 80042a2:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80042a4:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80042a6:	4299      	cmp	r1, r3
 80042a8:	db06      	blt.n	80042b8 <_printf_float+0x1ec>
 80042aa:	682b      	ldr	r3, [r5, #0]
 80042ac:	6129      	str	r1, [r5, #16]
 80042ae:	07db      	lsls	r3, r3, #31
 80042b0:	d5f1      	bpl.n	8004296 <_printf_float+0x1ca>
 80042b2:	3101      	adds	r1, #1
 80042b4:	6129      	str	r1, [r5, #16]
 80042b6:	e7ee      	b.n	8004296 <_printf_float+0x1ca>
 80042b8:	2201      	movs	r2, #1
 80042ba:	2900      	cmp	r1, #0
 80042bc:	dce0      	bgt.n	8004280 <_printf_float+0x1b4>
 80042be:	1892      	adds	r2, r2, r2
 80042c0:	1a52      	subs	r2, r2, r1
 80042c2:	e7dd      	b.n	8004280 <_printf_float+0x1b4>
 80042c4:	682a      	ldr	r2, [r5, #0]
 80042c6:	0553      	lsls	r3, r2, #21
 80042c8:	d408      	bmi.n	80042dc <_printf_float+0x210>
 80042ca:	692b      	ldr	r3, [r5, #16]
 80042cc:	003a      	movs	r2, r7
 80042ce:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80042d0:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80042d2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80042d4:	47a0      	blx	r4
 80042d6:	3001      	adds	r0, #1
 80042d8:	d129      	bne.n	800432e <_printf_float+0x262>
 80042da:	e753      	b.n	8004184 <_printf_float+0xb8>
 80042dc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80042de:	2b65      	cmp	r3, #101	@ 0x65
 80042e0:	d800      	bhi.n	80042e4 <_printf_float+0x218>
 80042e2:	e0da      	b.n	800449a <_printf_float+0x3ce>
 80042e4:	6ca8      	ldr	r0, [r5, #72]	@ 0x48
 80042e6:	6ce9      	ldr	r1, [r5, #76]	@ 0x4c
 80042e8:	2200      	movs	r2, #0
 80042ea:	2300      	movs	r3, #0
 80042ec:	f7fc f8ae 	bl	800044c <__aeabi_dcmpeq>
 80042f0:	2800      	cmp	r0, #0
 80042f2:	d033      	beq.n	800435c <_printf_float+0x290>
 80042f4:	2301      	movs	r3, #1
 80042f6:	4a37      	ldr	r2, [pc, #220]	@ (80043d4 <_printf_float+0x308>)
 80042f8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80042fa:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80042fc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80042fe:	47a0      	blx	r4
 8004300:	3001      	adds	r0, #1
 8004302:	d100      	bne.n	8004306 <_printf_float+0x23a>
 8004304:	e73e      	b.n	8004184 <_printf_float+0xb8>
 8004306:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8004308:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800430a:	42b3      	cmp	r3, r6
 800430c:	db02      	blt.n	8004314 <_printf_float+0x248>
 800430e:	682b      	ldr	r3, [r5, #0]
 8004310:	07db      	lsls	r3, r3, #31
 8004312:	d50c      	bpl.n	800432e <_printf_float+0x262>
 8004314:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8004316:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004318:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800431a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800431c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800431e:	47a0      	blx	r4
 8004320:	2400      	movs	r4, #0
 8004322:	3001      	adds	r0, #1
 8004324:	d100      	bne.n	8004328 <_printf_float+0x25c>
 8004326:	e72d      	b.n	8004184 <_printf_float+0xb8>
 8004328:	1e73      	subs	r3, r6, #1
 800432a:	42a3      	cmp	r3, r4
 800432c:	dc0a      	bgt.n	8004344 <_printf_float+0x278>
 800432e:	682b      	ldr	r3, [r5, #0]
 8004330:	079b      	lsls	r3, r3, #30
 8004332:	d500      	bpl.n	8004336 <_printf_float+0x26a>
 8004334:	e105      	b.n	8004542 <_printf_float+0x476>
 8004336:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8004338:	68e8      	ldr	r0, [r5, #12]
 800433a:	4298      	cmp	r0, r3
 800433c:	db00      	blt.n	8004340 <_printf_float+0x274>
 800433e:	e723      	b.n	8004188 <_printf_float+0xbc>
 8004340:	0018      	movs	r0, r3
 8004342:	e721      	b.n	8004188 <_printf_float+0xbc>
 8004344:	002a      	movs	r2, r5
 8004346:	2301      	movs	r3, #1
 8004348:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800434a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800434c:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 800434e:	321a      	adds	r2, #26
 8004350:	47b8      	blx	r7
 8004352:	3001      	adds	r0, #1
 8004354:	d100      	bne.n	8004358 <_printf_float+0x28c>
 8004356:	e715      	b.n	8004184 <_printf_float+0xb8>
 8004358:	3401      	adds	r4, #1
 800435a:	e7e5      	b.n	8004328 <_printf_float+0x25c>
 800435c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800435e:	2b00      	cmp	r3, #0
 8004360:	dc3a      	bgt.n	80043d8 <_printf_float+0x30c>
 8004362:	2301      	movs	r3, #1
 8004364:	4a1b      	ldr	r2, [pc, #108]	@ (80043d4 <_printf_float+0x308>)
 8004366:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004368:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800436a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 800436c:	47a0      	blx	r4
 800436e:	3001      	adds	r0, #1
 8004370:	d100      	bne.n	8004374 <_printf_float+0x2a8>
 8004372:	e707      	b.n	8004184 <_printf_float+0xb8>
 8004374:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8004376:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8004378:	4333      	orrs	r3, r6
 800437a:	d102      	bne.n	8004382 <_printf_float+0x2b6>
 800437c:	682b      	ldr	r3, [r5, #0]
 800437e:	07db      	lsls	r3, r3, #31
 8004380:	d5d5      	bpl.n	800432e <_printf_float+0x262>
 8004382:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004384:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8004386:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004388:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800438a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 800438c:	47a0      	blx	r4
 800438e:	2300      	movs	r3, #0
 8004390:	3001      	adds	r0, #1
 8004392:	d100      	bne.n	8004396 <_printf_float+0x2ca>
 8004394:	e6f6      	b.n	8004184 <_printf_float+0xb8>
 8004396:	930c      	str	r3, [sp, #48]	@ 0x30
 8004398:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800439a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 800439c:	425b      	negs	r3, r3
 800439e:	4293      	cmp	r3, r2
 80043a0:	dc01      	bgt.n	80043a6 <_printf_float+0x2da>
 80043a2:	0033      	movs	r3, r6
 80043a4:	e792      	b.n	80042cc <_printf_float+0x200>
 80043a6:	002a      	movs	r2, r5
 80043a8:	2301      	movs	r3, #1
 80043aa:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80043ac:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80043ae:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80043b0:	321a      	adds	r2, #26
 80043b2:	47a0      	blx	r4
 80043b4:	3001      	adds	r0, #1
 80043b6:	d100      	bne.n	80043ba <_printf_float+0x2ee>
 80043b8:	e6e4      	b.n	8004184 <_printf_float+0xb8>
 80043ba:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80043bc:	3301      	adds	r3, #1
 80043be:	e7ea      	b.n	8004396 <_printf_float+0x2ca>
 80043c0:	7fefffff 	.word	0x7fefffff
 80043c4:	0800729e 	.word	0x0800729e
 80043c8:	080072a2 	.word	0x080072a2
 80043cc:	080072a6 	.word	0x080072a6
 80043d0:	080072aa 	.word	0x080072aa
 80043d4:	080072ae 	.word	0x080072ae
 80043d8:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80043da:	6dae      	ldr	r6, [r5, #88]	@ 0x58
 80043dc:	930c      	str	r3, [sp, #48]	@ 0x30
 80043de:	429e      	cmp	r6, r3
 80043e0:	dd00      	ble.n	80043e4 <_printf_float+0x318>
 80043e2:	001e      	movs	r6, r3
 80043e4:	2e00      	cmp	r6, #0
 80043e6:	dc31      	bgt.n	800444c <_printf_float+0x380>
 80043e8:	43f3      	mvns	r3, r6
 80043ea:	2400      	movs	r4, #0
 80043ec:	17db      	asrs	r3, r3, #31
 80043ee:	4033      	ands	r3, r6
 80043f0:	930e      	str	r3, [sp, #56]	@ 0x38
 80043f2:	6dae      	ldr	r6, [r5, #88]	@ 0x58
 80043f4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80043f6:	1af3      	subs	r3, r6, r3
 80043f8:	42a3      	cmp	r3, r4
 80043fa:	dc30      	bgt.n	800445e <_printf_float+0x392>
 80043fc:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80043fe:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8004400:	429a      	cmp	r2, r3
 8004402:	dc38      	bgt.n	8004476 <_printf_float+0x3aa>
 8004404:	682b      	ldr	r3, [r5, #0]
 8004406:	07db      	lsls	r3, r3, #31
 8004408:	d435      	bmi.n	8004476 <_printf_float+0x3aa>
 800440a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 800440c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800440e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8004410:	1b9b      	subs	r3, r3, r6
 8004412:	1b14      	subs	r4, r2, r4
 8004414:	429c      	cmp	r4, r3
 8004416:	dd00      	ble.n	800441a <_printf_float+0x34e>
 8004418:	001c      	movs	r4, r3
 800441a:	2c00      	cmp	r4, #0
 800441c:	dc34      	bgt.n	8004488 <_printf_float+0x3bc>
 800441e:	43e3      	mvns	r3, r4
 8004420:	2600      	movs	r6, #0
 8004422:	17db      	asrs	r3, r3, #31
 8004424:	401c      	ands	r4, r3
 8004426:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8004428:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 800442a:	1ad3      	subs	r3, r2, r3
 800442c:	1b1b      	subs	r3, r3, r4
 800442e:	42b3      	cmp	r3, r6
 8004430:	dc00      	bgt.n	8004434 <_printf_float+0x368>
 8004432:	e77c      	b.n	800432e <_printf_float+0x262>
 8004434:	002a      	movs	r2, r5
 8004436:	2301      	movs	r3, #1
 8004438:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800443a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800443c:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 800443e:	321a      	adds	r2, #26
 8004440:	47b8      	blx	r7
 8004442:	3001      	adds	r0, #1
 8004444:	d100      	bne.n	8004448 <_printf_float+0x37c>
 8004446:	e69d      	b.n	8004184 <_printf_float+0xb8>
 8004448:	3601      	adds	r6, #1
 800444a:	e7ec      	b.n	8004426 <_printf_float+0x35a>
 800444c:	0033      	movs	r3, r6
 800444e:	003a      	movs	r2, r7
 8004450:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004452:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004454:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8004456:	47a0      	blx	r4
 8004458:	3001      	adds	r0, #1
 800445a:	d1c5      	bne.n	80043e8 <_printf_float+0x31c>
 800445c:	e692      	b.n	8004184 <_printf_float+0xb8>
 800445e:	002a      	movs	r2, r5
 8004460:	2301      	movs	r3, #1
 8004462:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004464:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004466:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8004468:	321a      	adds	r2, #26
 800446a:	47b0      	blx	r6
 800446c:	3001      	adds	r0, #1
 800446e:	d100      	bne.n	8004472 <_printf_float+0x3a6>
 8004470:	e688      	b.n	8004184 <_printf_float+0xb8>
 8004472:	3401      	adds	r4, #1
 8004474:	e7bd      	b.n	80043f2 <_printf_float+0x326>
 8004476:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004478:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800447a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800447c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800447e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8004480:	47a0      	blx	r4
 8004482:	3001      	adds	r0, #1
 8004484:	d1c1      	bne.n	800440a <_printf_float+0x33e>
 8004486:	e67d      	b.n	8004184 <_printf_float+0xb8>
 8004488:	19ba      	adds	r2, r7, r6
 800448a:	0023      	movs	r3, r4
 800448c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800448e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004490:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8004492:	47b0      	blx	r6
 8004494:	3001      	adds	r0, #1
 8004496:	d1c2      	bne.n	800441e <_printf_float+0x352>
 8004498:	e674      	b.n	8004184 <_printf_float+0xb8>
 800449a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800449c:	930c      	str	r3, [sp, #48]	@ 0x30
 800449e:	2b01      	cmp	r3, #1
 80044a0:	dc02      	bgt.n	80044a8 <_printf_float+0x3dc>
 80044a2:	2301      	movs	r3, #1
 80044a4:	421a      	tst	r2, r3
 80044a6:	d039      	beq.n	800451c <_printf_float+0x450>
 80044a8:	2301      	movs	r3, #1
 80044aa:	003a      	movs	r2, r7
 80044ac:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80044ae:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80044b0:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 80044b2:	47b0      	blx	r6
 80044b4:	3001      	adds	r0, #1
 80044b6:	d100      	bne.n	80044ba <_printf_float+0x3ee>
 80044b8:	e664      	b.n	8004184 <_printf_float+0xb8>
 80044ba:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80044bc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80044be:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80044c0:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80044c2:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 80044c4:	47b0      	blx	r6
 80044c6:	3001      	adds	r0, #1
 80044c8:	d100      	bne.n	80044cc <_printf_float+0x400>
 80044ca:	e65b      	b.n	8004184 <_printf_float+0xb8>
 80044cc:	6ca8      	ldr	r0, [r5, #72]	@ 0x48
 80044ce:	6ce9      	ldr	r1, [r5, #76]	@ 0x4c
 80044d0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80044d2:	2200      	movs	r2, #0
 80044d4:	3b01      	subs	r3, #1
 80044d6:	930c      	str	r3, [sp, #48]	@ 0x30
 80044d8:	2300      	movs	r3, #0
 80044da:	f7fb ffb7 	bl	800044c <__aeabi_dcmpeq>
 80044de:	2800      	cmp	r0, #0
 80044e0:	d11a      	bne.n	8004518 <_printf_float+0x44c>
 80044e2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80044e4:	1c7a      	adds	r2, r7, #1
 80044e6:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80044e8:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80044ea:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 80044ec:	47b0      	blx	r6
 80044ee:	3001      	adds	r0, #1
 80044f0:	d10e      	bne.n	8004510 <_printf_float+0x444>
 80044f2:	e647      	b.n	8004184 <_printf_float+0xb8>
 80044f4:	002a      	movs	r2, r5
 80044f6:	2301      	movs	r3, #1
 80044f8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80044fa:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80044fc:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80044fe:	321a      	adds	r2, #26
 8004500:	47b8      	blx	r7
 8004502:	3001      	adds	r0, #1
 8004504:	d100      	bne.n	8004508 <_printf_float+0x43c>
 8004506:	e63d      	b.n	8004184 <_printf_float+0xb8>
 8004508:	3601      	adds	r6, #1
 800450a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800450c:	429e      	cmp	r6, r3
 800450e:	dbf1      	blt.n	80044f4 <_printf_float+0x428>
 8004510:	002a      	movs	r2, r5
 8004512:	0023      	movs	r3, r4
 8004514:	3250      	adds	r2, #80	@ 0x50
 8004516:	e6da      	b.n	80042ce <_printf_float+0x202>
 8004518:	2600      	movs	r6, #0
 800451a:	e7f6      	b.n	800450a <_printf_float+0x43e>
 800451c:	003a      	movs	r2, r7
 800451e:	e7e2      	b.n	80044e6 <_printf_float+0x41a>
 8004520:	002a      	movs	r2, r5
 8004522:	2301      	movs	r3, #1
 8004524:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004526:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004528:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 800452a:	3219      	adds	r2, #25
 800452c:	47b0      	blx	r6
 800452e:	3001      	adds	r0, #1
 8004530:	d100      	bne.n	8004534 <_printf_float+0x468>
 8004532:	e627      	b.n	8004184 <_printf_float+0xb8>
 8004534:	3401      	adds	r4, #1
 8004536:	68eb      	ldr	r3, [r5, #12]
 8004538:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 800453a:	1a9b      	subs	r3, r3, r2
 800453c:	42a3      	cmp	r3, r4
 800453e:	dcef      	bgt.n	8004520 <_printf_float+0x454>
 8004540:	e6f9      	b.n	8004336 <_printf_float+0x26a>
 8004542:	2400      	movs	r4, #0
 8004544:	e7f7      	b.n	8004536 <_printf_float+0x46a>
 8004546:	46c0      	nop			@ (mov r8, r8)

08004548 <_printf_common>:
 8004548:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800454a:	0016      	movs	r6, r2
 800454c:	9301      	str	r3, [sp, #4]
 800454e:	688a      	ldr	r2, [r1, #8]
 8004550:	690b      	ldr	r3, [r1, #16]
 8004552:	000c      	movs	r4, r1
 8004554:	9000      	str	r0, [sp, #0]
 8004556:	4293      	cmp	r3, r2
 8004558:	da00      	bge.n	800455c <_printf_common+0x14>
 800455a:	0013      	movs	r3, r2
 800455c:	0022      	movs	r2, r4
 800455e:	6033      	str	r3, [r6, #0]
 8004560:	3243      	adds	r2, #67	@ 0x43
 8004562:	7812      	ldrb	r2, [r2, #0]
 8004564:	2a00      	cmp	r2, #0
 8004566:	d001      	beq.n	800456c <_printf_common+0x24>
 8004568:	3301      	adds	r3, #1
 800456a:	6033      	str	r3, [r6, #0]
 800456c:	6823      	ldr	r3, [r4, #0]
 800456e:	069b      	lsls	r3, r3, #26
 8004570:	d502      	bpl.n	8004578 <_printf_common+0x30>
 8004572:	6833      	ldr	r3, [r6, #0]
 8004574:	3302      	adds	r3, #2
 8004576:	6033      	str	r3, [r6, #0]
 8004578:	6822      	ldr	r2, [r4, #0]
 800457a:	2306      	movs	r3, #6
 800457c:	0015      	movs	r5, r2
 800457e:	401d      	ands	r5, r3
 8004580:	421a      	tst	r2, r3
 8004582:	d027      	beq.n	80045d4 <_printf_common+0x8c>
 8004584:	0023      	movs	r3, r4
 8004586:	3343      	adds	r3, #67	@ 0x43
 8004588:	781b      	ldrb	r3, [r3, #0]
 800458a:	1e5a      	subs	r2, r3, #1
 800458c:	4193      	sbcs	r3, r2
 800458e:	6822      	ldr	r2, [r4, #0]
 8004590:	0692      	lsls	r2, r2, #26
 8004592:	d430      	bmi.n	80045f6 <_printf_common+0xae>
 8004594:	0022      	movs	r2, r4
 8004596:	9901      	ldr	r1, [sp, #4]
 8004598:	9800      	ldr	r0, [sp, #0]
 800459a:	9d08      	ldr	r5, [sp, #32]
 800459c:	3243      	adds	r2, #67	@ 0x43
 800459e:	47a8      	blx	r5
 80045a0:	3001      	adds	r0, #1
 80045a2:	d025      	beq.n	80045f0 <_printf_common+0xa8>
 80045a4:	2206      	movs	r2, #6
 80045a6:	6823      	ldr	r3, [r4, #0]
 80045a8:	2500      	movs	r5, #0
 80045aa:	4013      	ands	r3, r2
 80045ac:	2b04      	cmp	r3, #4
 80045ae:	d105      	bne.n	80045bc <_printf_common+0x74>
 80045b0:	6833      	ldr	r3, [r6, #0]
 80045b2:	68e5      	ldr	r5, [r4, #12]
 80045b4:	1aed      	subs	r5, r5, r3
 80045b6:	43eb      	mvns	r3, r5
 80045b8:	17db      	asrs	r3, r3, #31
 80045ba:	401d      	ands	r5, r3
 80045bc:	68a3      	ldr	r3, [r4, #8]
 80045be:	6922      	ldr	r2, [r4, #16]
 80045c0:	4293      	cmp	r3, r2
 80045c2:	dd01      	ble.n	80045c8 <_printf_common+0x80>
 80045c4:	1a9b      	subs	r3, r3, r2
 80045c6:	18ed      	adds	r5, r5, r3
 80045c8:	2600      	movs	r6, #0
 80045ca:	42b5      	cmp	r5, r6
 80045cc:	d120      	bne.n	8004610 <_printf_common+0xc8>
 80045ce:	2000      	movs	r0, #0
 80045d0:	e010      	b.n	80045f4 <_printf_common+0xac>
 80045d2:	3501      	adds	r5, #1
 80045d4:	68e3      	ldr	r3, [r4, #12]
 80045d6:	6832      	ldr	r2, [r6, #0]
 80045d8:	1a9b      	subs	r3, r3, r2
 80045da:	42ab      	cmp	r3, r5
 80045dc:	ddd2      	ble.n	8004584 <_printf_common+0x3c>
 80045de:	0022      	movs	r2, r4
 80045e0:	2301      	movs	r3, #1
 80045e2:	9901      	ldr	r1, [sp, #4]
 80045e4:	9800      	ldr	r0, [sp, #0]
 80045e6:	9f08      	ldr	r7, [sp, #32]
 80045e8:	3219      	adds	r2, #25
 80045ea:	47b8      	blx	r7
 80045ec:	3001      	adds	r0, #1
 80045ee:	d1f0      	bne.n	80045d2 <_printf_common+0x8a>
 80045f0:	2001      	movs	r0, #1
 80045f2:	4240      	negs	r0, r0
 80045f4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80045f6:	2030      	movs	r0, #48	@ 0x30
 80045f8:	18e1      	adds	r1, r4, r3
 80045fa:	3143      	adds	r1, #67	@ 0x43
 80045fc:	7008      	strb	r0, [r1, #0]
 80045fe:	0021      	movs	r1, r4
 8004600:	1c5a      	adds	r2, r3, #1
 8004602:	3145      	adds	r1, #69	@ 0x45
 8004604:	7809      	ldrb	r1, [r1, #0]
 8004606:	18a2      	adds	r2, r4, r2
 8004608:	3243      	adds	r2, #67	@ 0x43
 800460a:	3302      	adds	r3, #2
 800460c:	7011      	strb	r1, [r2, #0]
 800460e:	e7c1      	b.n	8004594 <_printf_common+0x4c>
 8004610:	0022      	movs	r2, r4
 8004612:	2301      	movs	r3, #1
 8004614:	9901      	ldr	r1, [sp, #4]
 8004616:	9800      	ldr	r0, [sp, #0]
 8004618:	9f08      	ldr	r7, [sp, #32]
 800461a:	321a      	adds	r2, #26
 800461c:	47b8      	blx	r7
 800461e:	3001      	adds	r0, #1
 8004620:	d0e6      	beq.n	80045f0 <_printf_common+0xa8>
 8004622:	3601      	adds	r6, #1
 8004624:	e7d1      	b.n	80045ca <_printf_common+0x82>
	...

08004628 <_printf_i>:
 8004628:	b5f0      	push	{r4, r5, r6, r7, lr}
 800462a:	b08b      	sub	sp, #44	@ 0x2c
 800462c:	9206      	str	r2, [sp, #24]
 800462e:	000a      	movs	r2, r1
 8004630:	3243      	adds	r2, #67	@ 0x43
 8004632:	9307      	str	r3, [sp, #28]
 8004634:	9005      	str	r0, [sp, #20]
 8004636:	9203      	str	r2, [sp, #12]
 8004638:	7e0a      	ldrb	r2, [r1, #24]
 800463a:	000c      	movs	r4, r1
 800463c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800463e:	2a78      	cmp	r2, #120	@ 0x78
 8004640:	d809      	bhi.n	8004656 <_printf_i+0x2e>
 8004642:	2a62      	cmp	r2, #98	@ 0x62
 8004644:	d80b      	bhi.n	800465e <_printf_i+0x36>
 8004646:	2a00      	cmp	r2, #0
 8004648:	d100      	bne.n	800464c <_printf_i+0x24>
 800464a:	e0bc      	b.n	80047c6 <_printf_i+0x19e>
 800464c:	497b      	ldr	r1, [pc, #492]	@ (800483c <_printf_i+0x214>)
 800464e:	9104      	str	r1, [sp, #16]
 8004650:	2a58      	cmp	r2, #88	@ 0x58
 8004652:	d100      	bne.n	8004656 <_printf_i+0x2e>
 8004654:	e090      	b.n	8004778 <_printf_i+0x150>
 8004656:	0025      	movs	r5, r4
 8004658:	3542      	adds	r5, #66	@ 0x42
 800465a:	702a      	strb	r2, [r5, #0]
 800465c:	e022      	b.n	80046a4 <_printf_i+0x7c>
 800465e:	0010      	movs	r0, r2
 8004660:	3863      	subs	r0, #99	@ 0x63
 8004662:	2815      	cmp	r0, #21
 8004664:	d8f7      	bhi.n	8004656 <_printf_i+0x2e>
 8004666:	f7fb fd61 	bl	800012c <__gnu_thumb1_case_shi>
 800466a:	0016      	.short	0x0016
 800466c:	fff6001f 	.word	0xfff6001f
 8004670:	fff6fff6 	.word	0xfff6fff6
 8004674:	001ffff6 	.word	0x001ffff6
 8004678:	fff6fff6 	.word	0xfff6fff6
 800467c:	fff6fff6 	.word	0xfff6fff6
 8004680:	003600a1 	.word	0x003600a1
 8004684:	fff60080 	.word	0xfff60080
 8004688:	00b2fff6 	.word	0x00b2fff6
 800468c:	0036fff6 	.word	0x0036fff6
 8004690:	fff6fff6 	.word	0xfff6fff6
 8004694:	0084      	.short	0x0084
 8004696:	0025      	movs	r5, r4
 8004698:	681a      	ldr	r2, [r3, #0]
 800469a:	3542      	adds	r5, #66	@ 0x42
 800469c:	1d11      	adds	r1, r2, #4
 800469e:	6019      	str	r1, [r3, #0]
 80046a0:	6813      	ldr	r3, [r2, #0]
 80046a2:	702b      	strb	r3, [r5, #0]
 80046a4:	2301      	movs	r3, #1
 80046a6:	e0a0      	b.n	80047ea <_printf_i+0x1c2>
 80046a8:	6818      	ldr	r0, [r3, #0]
 80046aa:	6809      	ldr	r1, [r1, #0]
 80046ac:	1d02      	adds	r2, r0, #4
 80046ae:	060d      	lsls	r5, r1, #24
 80046b0:	d50b      	bpl.n	80046ca <_printf_i+0xa2>
 80046b2:	6806      	ldr	r6, [r0, #0]
 80046b4:	601a      	str	r2, [r3, #0]
 80046b6:	2e00      	cmp	r6, #0
 80046b8:	da03      	bge.n	80046c2 <_printf_i+0x9a>
 80046ba:	232d      	movs	r3, #45	@ 0x2d
 80046bc:	9a03      	ldr	r2, [sp, #12]
 80046be:	4276      	negs	r6, r6
 80046c0:	7013      	strb	r3, [r2, #0]
 80046c2:	4b5e      	ldr	r3, [pc, #376]	@ (800483c <_printf_i+0x214>)
 80046c4:	270a      	movs	r7, #10
 80046c6:	9304      	str	r3, [sp, #16]
 80046c8:	e018      	b.n	80046fc <_printf_i+0xd4>
 80046ca:	6806      	ldr	r6, [r0, #0]
 80046cc:	601a      	str	r2, [r3, #0]
 80046ce:	0649      	lsls	r1, r1, #25
 80046d0:	d5f1      	bpl.n	80046b6 <_printf_i+0x8e>
 80046d2:	b236      	sxth	r6, r6
 80046d4:	e7ef      	b.n	80046b6 <_printf_i+0x8e>
 80046d6:	6808      	ldr	r0, [r1, #0]
 80046d8:	6819      	ldr	r1, [r3, #0]
 80046da:	c940      	ldmia	r1!, {r6}
 80046dc:	0605      	lsls	r5, r0, #24
 80046de:	d402      	bmi.n	80046e6 <_printf_i+0xbe>
 80046e0:	0640      	lsls	r0, r0, #25
 80046e2:	d500      	bpl.n	80046e6 <_printf_i+0xbe>
 80046e4:	b2b6      	uxth	r6, r6
 80046e6:	6019      	str	r1, [r3, #0]
 80046e8:	4b54      	ldr	r3, [pc, #336]	@ (800483c <_printf_i+0x214>)
 80046ea:	270a      	movs	r7, #10
 80046ec:	9304      	str	r3, [sp, #16]
 80046ee:	2a6f      	cmp	r2, #111	@ 0x6f
 80046f0:	d100      	bne.n	80046f4 <_printf_i+0xcc>
 80046f2:	3f02      	subs	r7, #2
 80046f4:	0023      	movs	r3, r4
 80046f6:	2200      	movs	r2, #0
 80046f8:	3343      	adds	r3, #67	@ 0x43
 80046fa:	701a      	strb	r2, [r3, #0]
 80046fc:	6863      	ldr	r3, [r4, #4]
 80046fe:	60a3      	str	r3, [r4, #8]
 8004700:	2b00      	cmp	r3, #0
 8004702:	db03      	blt.n	800470c <_printf_i+0xe4>
 8004704:	2104      	movs	r1, #4
 8004706:	6822      	ldr	r2, [r4, #0]
 8004708:	438a      	bics	r2, r1
 800470a:	6022      	str	r2, [r4, #0]
 800470c:	2e00      	cmp	r6, #0
 800470e:	d102      	bne.n	8004716 <_printf_i+0xee>
 8004710:	9d03      	ldr	r5, [sp, #12]
 8004712:	2b00      	cmp	r3, #0
 8004714:	d00c      	beq.n	8004730 <_printf_i+0x108>
 8004716:	9d03      	ldr	r5, [sp, #12]
 8004718:	0030      	movs	r0, r6
 800471a:	0039      	movs	r1, r7
 800471c:	f7fb fd96 	bl	800024c <__aeabi_uidivmod>
 8004720:	9b04      	ldr	r3, [sp, #16]
 8004722:	3d01      	subs	r5, #1
 8004724:	5c5b      	ldrb	r3, [r3, r1]
 8004726:	702b      	strb	r3, [r5, #0]
 8004728:	0033      	movs	r3, r6
 800472a:	0006      	movs	r6, r0
 800472c:	429f      	cmp	r7, r3
 800472e:	d9f3      	bls.n	8004718 <_printf_i+0xf0>
 8004730:	2f08      	cmp	r7, #8
 8004732:	d109      	bne.n	8004748 <_printf_i+0x120>
 8004734:	6823      	ldr	r3, [r4, #0]
 8004736:	07db      	lsls	r3, r3, #31
 8004738:	d506      	bpl.n	8004748 <_printf_i+0x120>
 800473a:	6862      	ldr	r2, [r4, #4]
 800473c:	6923      	ldr	r3, [r4, #16]
 800473e:	429a      	cmp	r2, r3
 8004740:	dc02      	bgt.n	8004748 <_printf_i+0x120>
 8004742:	2330      	movs	r3, #48	@ 0x30
 8004744:	3d01      	subs	r5, #1
 8004746:	702b      	strb	r3, [r5, #0]
 8004748:	9b03      	ldr	r3, [sp, #12]
 800474a:	1b5b      	subs	r3, r3, r5
 800474c:	6123      	str	r3, [r4, #16]
 800474e:	9b07      	ldr	r3, [sp, #28]
 8004750:	0021      	movs	r1, r4
 8004752:	9300      	str	r3, [sp, #0]
 8004754:	9805      	ldr	r0, [sp, #20]
 8004756:	9b06      	ldr	r3, [sp, #24]
 8004758:	aa09      	add	r2, sp, #36	@ 0x24
 800475a:	f7ff fef5 	bl	8004548 <_printf_common>
 800475e:	3001      	adds	r0, #1
 8004760:	d148      	bne.n	80047f4 <_printf_i+0x1cc>
 8004762:	2001      	movs	r0, #1
 8004764:	4240      	negs	r0, r0
 8004766:	b00b      	add	sp, #44	@ 0x2c
 8004768:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800476a:	2220      	movs	r2, #32
 800476c:	6809      	ldr	r1, [r1, #0]
 800476e:	430a      	orrs	r2, r1
 8004770:	6022      	str	r2, [r4, #0]
 8004772:	2278      	movs	r2, #120	@ 0x78
 8004774:	4932      	ldr	r1, [pc, #200]	@ (8004840 <_printf_i+0x218>)
 8004776:	9104      	str	r1, [sp, #16]
 8004778:	0021      	movs	r1, r4
 800477a:	3145      	adds	r1, #69	@ 0x45
 800477c:	700a      	strb	r2, [r1, #0]
 800477e:	6819      	ldr	r1, [r3, #0]
 8004780:	6822      	ldr	r2, [r4, #0]
 8004782:	c940      	ldmia	r1!, {r6}
 8004784:	0610      	lsls	r0, r2, #24
 8004786:	d402      	bmi.n	800478e <_printf_i+0x166>
 8004788:	0650      	lsls	r0, r2, #25
 800478a:	d500      	bpl.n	800478e <_printf_i+0x166>
 800478c:	b2b6      	uxth	r6, r6
 800478e:	6019      	str	r1, [r3, #0]
 8004790:	07d3      	lsls	r3, r2, #31
 8004792:	d502      	bpl.n	800479a <_printf_i+0x172>
 8004794:	2320      	movs	r3, #32
 8004796:	4313      	orrs	r3, r2
 8004798:	6023      	str	r3, [r4, #0]
 800479a:	2e00      	cmp	r6, #0
 800479c:	d001      	beq.n	80047a2 <_printf_i+0x17a>
 800479e:	2710      	movs	r7, #16
 80047a0:	e7a8      	b.n	80046f4 <_printf_i+0xcc>
 80047a2:	2220      	movs	r2, #32
 80047a4:	6823      	ldr	r3, [r4, #0]
 80047a6:	4393      	bics	r3, r2
 80047a8:	6023      	str	r3, [r4, #0]
 80047aa:	e7f8      	b.n	800479e <_printf_i+0x176>
 80047ac:	681a      	ldr	r2, [r3, #0]
 80047ae:	680d      	ldr	r5, [r1, #0]
 80047b0:	1d10      	adds	r0, r2, #4
 80047b2:	6949      	ldr	r1, [r1, #20]
 80047b4:	6018      	str	r0, [r3, #0]
 80047b6:	6813      	ldr	r3, [r2, #0]
 80047b8:	062e      	lsls	r6, r5, #24
 80047ba:	d501      	bpl.n	80047c0 <_printf_i+0x198>
 80047bc:	6019      	str	r1, [r3, #0]
 80047be:	e002      	b.n	80047c6 <_printf_i+0x19e>
 80047c0:	066d      	lsls	r5, r5, #25
 80047c2:	d5fb      	bpl.n	80047bc <_printf_i+0x194>
 80047c4:	8019      	strh	r1, [r3, #0]
 80047c6:	2300      	movs	r3, #0
 80047c8:	9d03      	ldr	r5, [sp, #12]
 80047ca:	6123      	str	r3, [r4, #16]
 80047cc:	e7bf      	b.n	800474e <_printf_i+0x126>
 80047ce:	681a      	ldr	r2, [r3, #0]
 80047d0:	1d11      	adds	r1, r2, #4
 80047d2:	6019      	str	r1, [r3, #0]
 80047d4:	6815      	ldr	r5, [r2, #0]
 80047d6:	2100      	movs	r1, #0
 80047d8:	0028      	movs	r0, r5
 80047da:	6862      	ldr	r2, [r4, #4]
 80047dc:	f000 f94f 	bl	8004a7e <memchr>
 80047e0:	2800      	cmp	r0, #0
 80047e2:	d001      	beq.n	80047e8 <_printf_i+0x1c0>
 80047e4:	1b40      	subs	r0, r0, r5
 80047e6:	6060      	str	r0, [r4, #4]
 80047e8:	6863      	ldr	r3, [r4, #4]
 80047ea:	6123      	str	r3, [r4, #16]
 80047ec:	2300      	movs	r3, #0
 80047ee:	9a03      	ldr	r2, [sp, #12]
 80047f0:	7013      	strb	r3, [r2, #0]
 80047f2:	e7ac      	b.n	800474e <_printf_i+0x126>
 80047f4:	002a      	movs	r2, r5
 80047f6:	6923      	ldr	r3, [r4, #16]
 80047f8:	9906      	ldr	r1, [sp, #24]
 80047fa:	9805      	ldr	r0, [sp, #20]
 80047fc:	9d07      	ldr	r5, [sp, #28]
 80047fe:	47a8      	blx	r5
 8004800:	3001      	adds	r0, #1
 8004802:	d0ae      	beq.n	8004762 <_printf_i+0x13a>
 8004804:	6823      	ldr	r3, [r4, #0]
 8004806:	079b      	lsls	r3, r3, #30
 8004808:	d415      	bmi.n	8004836 <_printf_i+0x20e>
 800480a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800480c:	68e0      	ldr	r0, [r4, #12]
 800480e:	4298      	cmp	r0, r3
 8004810:	daa9      	bge.n	8004766 <_printf_i+0x13e>
 8004812:	0018      	movs	r0, r3
 8004814:	e7a7      	b.n	8004766 <_printf_i+0x13e>
 8004816:	0022      	movs	r2, r4
 8004818:	2301      	movs	r3, #1
 800481a:	9906      	ldr	r1, [sp, #24]
 800481c:	9805      	ldr	r0, [sp, #20]
 800481e:	9e07      	ldr	r6, [sp, #28]
 8004820:	3219      	adds	r2, #25
 8004822:	47b0      	blx	r6
 8004824:	3001      	adds	r0, #1
 8004826:	d09c      	beq.n	8004762 <_printf_i+0x13a>
 8004828:	3501      	adds	r5, #1
 800482a:	68e3      	ldr	r3, [r4, #12]
 800482c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800482e:	1a9b      	subs	r3, r3, r2
 8004830:	42ab      	cmp	r3, r5
 8004832:	dcf0      	bgt.n	8004816 <_printf_i+0x1ee>
 8004834:	e7e9      	b.n	800480a <_printf_i+0x1e2>
 8004836:	2500      	movs	r5, #0
 8004838:	e7f7      	b.n	800482a <_printf_i+0x202>
 800483a:	46c0      	nop			@ (mov r8, r8)
 800483c:	080072b0 	.word	0x080072b0
 8004840:	080072c1 	.word	0x080072c1

08004844 <siprintf>:
 8004844:	b40e      	push	{r1, r2, r3}
 8004846:	b500      	push	{lr}
 8004848:	490b      	ldr	r1, [pc, #44]	@ (8004878 <siprintf+0x34>)
 800484a:	b09c      	sub	sp, #112	@ 0x70
 800484c:	ab1d      	add	r3, sp, #116	@ 0x74
 800484e:	9002      	str	r0, [sp, #8]
 8004850:	9006      	str	r0, [sp, #24]
 8004852:	9107      	str	r1, [sp, #28]
 8004854:	9104      	str	r1, [sp, #16]
 8004856:	4809      	ldr	r0, [pc, #36]	@ (800487c <siprintf+0x38>)
 8004858:	4909      	ldr	r1, [pc, #36]	@ (8004880 <siprintf+0x3c>)
 800485a:	cb04      	ldmia	r3!, {r2}
 800485c:	9105      	str	r1, [sp, #20]
 800485e:	6800      	ldr	r0, [r0, #0]
 8004860:	a902      	add	r1, sp, #8
 8004862:	9301      	str	r3, [sp, #4]
 8004864:	f000 fff8 	bl	8005858 <_svfiprintf_r>
 8004868:	2200      	movs	r2, #0
 800486a:	9b02      	ldr	r3, [sp, #8]
 800486c:	701a      	strb	r2, [r3, #0]
 800486e:	b01c      	add	sp, #112	@ 0x70
 8004870:	bc08      	pop	{r3}
 8004872:	b003      	add	sp, #12
 8004874:	4718      	bx	r3
 8004876:	46c0      	nop			@ (mov r8, r8)
 8004878:	7fffffff 	.word	0x7fffffff
 800487c:	20000018 	.word	0x20000018
 8004880:	ffff0208 	.word	0xffff0208

08004884 <std>:
 8004884:	2300      	movs	r3, #0
 8004886:	b510      	push	{r4, lr}
 8004888:	0004      	movs	r4, r0
 800488a:	6003      	str	r3, [r0, #0]
 800488c:	6043      	str	r3, [r0, #4]
 800488e:	6083      	str	r3, [r0, #8]
 8004890:	8181      	strh	r1, [r0, #12]
 8004892:	6643      	str	r3, [r0, #100]	@ 0x64
 8004894:	81c2      	strh	r2, [r0, #14]
 8004896:	6103      	str	r3, [r0, #16]
 8004898:	6143      	str	r3, [r0, #20]
 800489a:	6183      	str	r3, [r0, #24]
 800489c:	0019      	movs	r1, r3
 800489e:	2208      	movs	r2, #8
 80048a0:	305c      	adds	r0, #92	@ 0x5c
 80048a2:	f000 f8b3 	bl	8004a0c <memset>
 80048a6:	4b0b      	ldr	r3, [pc, #44]	@ (80048d4 <std+0x50>)
 80048a8:	6224      	str	r4, [r4, #32]
 80048aa:	6263      	str	r3, [r4, #36]	@ 0x24
 80048ac:	4b0a      	ldr	r3, [pc, #40]	@ (80048d8 <std+0x54>)
 80048ae:	62a3      	str	r3, [r4, #40]	@ 0x28
 80048b0:	4b0a      	ldr	r3, [pc, #40]	@ (80048dc <std+0x58>)
 80048b2:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80048b4:	4b0a      	ldr	r3, [pc, #40]	@ (80048e0 <std+0x5c>)
 80048b6:	6323      	str	r3, [r4, #48]	@ 0x30
 80048b8:	4b0a      	ldr	r3, [pc, #40]	@ (80048e4 <std+0x60>)
 80048ba:	429c      	cmp	r4, r3
 80048bc:	d005      	beq.n	80048ca <std+0x46>
 80048be:	4b0a      	ldr	r3, [pc, #40]	@ (80048e8 <std+0x64>)
 80048c0:	429c      	cmp	r4, r3
 80048c2:	d002      	beq.n	80048ca <std+0x46>
 80048c4:	4b09      	ldr	r3, [pc, #36]	@ (80048ec <std+0x68>)
 80048c6:	429c      	cmp	r4, r3
 80048c8:	d103      	bne.n	80048d2 <std+0x4e>
 80048ca:	0020      	movs	r0, r4
 80048cc:	3058      	adds	r0, #88	@ 0x58
 80048ce:	f000 f8d3 	bl	8004a78 <__retarget_lock_init_recursive>
 80048d2:	bd10      	pop	{r4, pc}
 80048d4:	08006479 	.word	0x08006479
 80048d8:	080064a1 	.word	0x080064a1
 80048dc:	080064d9 	.word	0x080064d9
 80048e0:	08006505 	.word	0x08006505
 80048e4:	200003d4 	.word	0x200003d4
 80048e8:	2000043c 	.word	0x2000043c
 80048ec:	200004a4 	.word	0x200004a4

080048f0 <stdio_exit_handler>:
 80048f0:	b510      	push	{r4, lr}
 80048f2:	4a03      	ldr	r2, [pc, #12]	@ (8004900 <stdio_exit_handler+0x10>)
 80048f4:	4903      	ldr	r1, [pc, #12]	@ (8004904 <stdio_exit_handler+0x14>)
 80048f6:	4804      	ldr	r0, [pc, #16]	@ (8004908 <stdio_exit_handler+0x18>)
 80048f8:	f000 f86c 	bl	80049d4 <_fwalk_sglue>
 80048fc:	bd10      	pop	{r4, pc}
 80048fe:	46c0      	nop			@ (mov r8, r8)
 8004900:	2000000c 	.word	0x2000000c
 8004904:	08005cb9 	.word	0x08005cb9
 8004908:	2000001c 	.word	0x2000001c

0800490c <cleanup_stdio>:
 800490c:	6841      	ldr	r1, [r0, #4]
 800490e:	4b0b      	ldr	r3, [pc, #44]	@ (800493c <cleanup_stdio+0x30>)
 8004910:	b510      	push	{r4, lr}
 8004912:	0004      	movs	r4, r0
 8004914:	4299      	cmp	r1, r3
 8004916:	d001      	beq.n	800491c <cleanup_stdio+0x10>
 8004918:	f001 f9ce 	bl	8005cb8 <_fflush_r>
 800491c:	68a1      	ldr	r1, [r4, #8]
 800491e:	4b08      	ldr	r3, [pc, #32]	@ (8004940 <cleanup_stdio+0x34>)
 8004920:	4299      	cmp	r1, r3
 8004922:	d002      	beq.n	800492a <cleanup_stdio+0x1e>
 8004924:	0020      	movs	r0, r4
 8004926:	f001 f9c7 	bl	8005cb8 <_fflush_r>
 800492a:	68e1      	ldr	r1, [r4, #12]
 800492c:	4b05      	ldr	r3, [pc, #20]	@ (8004944 <cleanup_stdio+0x38>)
 800492e:	4299      	cmp	r1, r3
 8004930:	d002      	beq.n	8004938 <cleanup_stdio+0x2c>
 8004932:	0020      	movs	r0, r4
 8004934:	f001 f9c0 	bl	8005cb8 <_fflush_r>
 8004938:	bd10      	pop	{r4, pc}
 800493a:	46c0      	nop			@ (mov r8, r8)
 800493c:	200003d4 	.word	0x200003d4
 8004940:	2000043c 	.word	0x2000043c
 8004944:	200004a4 	.word	0x200004a4

08004948 <global_stdio_init.part.0>:
 8004948:	b510      	push	{r4, lr}
 800494a:	4b09      	ldr	r3, [pc, #36]	@ (8004970 <global_stdio_init.part.0+0x28>)
 800494c:	4a09      	ldr	r2, [pc, #36]	@ (8004974 <global_stdio_init.part.0+0x2c>)
 800494e:	2104      	movs	r1, #4
 8004950:	601a      	str	r2, [r3, #0]
 8004952:	4809      	ldr	r0, [pc, #36]	@ (8004978 <global_stdio_init.part.0+0x30>)
 8004954:	2200      	movs	r2, #0
 8004956:	f7ff ff95 	bl	8004884 <std>
 800495a:	2201      	movs	r2, #1
 800495c:	2109      	movs	r1, #9
 800495e:	4807      	ldr	r0, [pc, #28]	@ (800497c <global_stdio_init.part.0+0x34>)
 8004960:	f7ff ff90 	bl	8004884 <std>
 8004964:	2202      	movs	r2, #2
 8004966:	2112      	movs	r1, #18
 8004968:	4805      	ldr	r0, [pc, #20]	@ (8004980 <global_stdio_init.part.0+0x38>)
 800496a:	f7ff ff8b 	bl	8004884 <std>
 800496e:	bd10      	pop	{r4, pc}
 8004970:	2000050c 	.word	0x2000050c
 8004974:	080048f1 	.word	0x080048f1
 8004978:	200003d4 	.word	0x200003d4
 800497c:	2000043c 	.word	0x2000043c
 8004980:	200004a4 	.word	0x200004a4

08004984 <__sfp_lock_acquire>:
 8004984:	b510      	push	{r4, lr}
 8004986:	4802      	ldr	r0, [pc, #8]	@ (8004990 <__sfp_lock_acquire+0xc>)
 8004988:	f000 f877 	bl	8004a7a <__retarget_lock_acquire_recursive>
 800498c:	bd10      	pop	{r4, pc}
 800498e:	46c0      	nop			@ (mov r8, r8)
 8004990:	20000511 	.word	0x20000511

08004994 <__sfp_lock_release>:
 8004994:	b510      	push	{r4, lr}
 8004996:	4802      	ldr	r0, [pc, #8]	@ (80049a0 <__sfp_lock_release+0xc>)
 8004998:	f000 f870 	bl	8004a7c <__retarget_lock_release_recursive>
 800499c:	bd10      	pop	{r4, pc}
 800499e:	46c0      	nop			@ (mov r8, r8)
 80049a0:	20000511 	.word	0x20000511

080049a4 <__sinit>:
 80049a4:	b510      	push	{r4, lr}
 80049a6:	0004      	movs	r4, r0
 80049a8:	f7ff ffec 	bl	8004984 <__sfp_lock_acquire>
 80049ac:	6a23      	ldr	r3, [r4, #32]
 80049ae:	2b00      	cmp	r3, #0
 80049b0:	d002      	beq.n	80049b8 <__sinit+0x14>
 80049b2:	f7ff ffef 	bl	8004994 <__sfp_lock_release>
 80049b6:	bd10      	pop	{r4, pc}
 80049b8:	4b04      	ldr	r3, [pc, #16]	@ (80049cc <__sinit+0x28>)
 80049ba:	6223      	str	r3, [r4, #32]
 80049bc:	4b04      	ldr	r3, [pc, #16]	@ (80049d0 <__sinit+0x2c>)
 80049be:	681b      	ldr	r3, [r3, #0]
 80049c0:	2b00      	cmp	r3, #0
 80049c2:	d1f6      	bne.n	80049b2 <__sinit+0xe>
 80049c4:	f7ff ffc0 	bl	8004948 <global_stdio_init.part.0>
 80049c8:	e7f3      	b.n	80049b2 <__sinit+0xe>
 80049ca:	46c0      	nop			@ (mov r8, r8)
 80049cc:	0800490d 	.word	0x0800490d
 80049d0:	2000050c 	.word	0x2000050c

080049d4 <_fwalk_sglue>:
 80049d4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80049d6:	0014      	movs	r4, r2
 80049d8:	2600      	movs	r6, #0
 80049da:	9000      	str	r0, [sp, #0]
 80049dc:	9101      	str	r1, [sp, #4]
 80049de:	68a5      	ldr	r5, [r4, #8]
 80049e0:	6867      	ldr	r7, [r4, #4]
 80049e2:	3f01      	subs	r7, #1
 80049e4:	d504      	bpl.n	80049f0 <_fwalk_sglue+0x1c>
 80049e6:	6824      	ldr	r4, [r4, #0]
 80049e8:	2c00      	cmp	r4, #0
 80049ea:	d1f8      	bne.n	80049de <_fwalk_sglue+0xa>
 80049ec:	0030      	movs	r0, r6
 80049ee:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80049f0:	89ab      	ldrh	r3, [r5, #12]
 80049f2:	2b01      	cmp	r3, #1
 80049f4:	d908      	bls.n	8004a08 <_fwalk_sglue+0x34>
 80049f6:	220e      	movs	r2, #14
 80049f8:	5eab      	ldrsh	r3, [r5, r2]
 80049fa:	3301      	adds	r3, #1
 80049fc:	d004      	beq.n	8004a08 <_fwalk_sglue+0x34>
 80049fe:	0029      	movs	r1, r5
 8004a00:	9800      	ldr	r0, [sp, #0]
 8004a02:	9b01      	ldr	r3, [sp, #4]
 8004a04:	4798      	blx	r3
 8004a06:	4306      	orrs	r6, r0
 8004a08:	3568      	adds	r5, #104	@ 0x68
 8004a0a:	e7ea      	b.n	80049e2 <_fwalk_sglue+0xe>

08004a0c <memset>:
 8004a0c:	0003      	movs	r3, r0
 8004a0e:	1882      	adds	r2, r0, r2
 8004a10:	4293      	cmp	r3, r2
 8004a12:	d100      	bne.n	8004a16 <memset+0xa>
 8004a14:	4770      	bx	lr
 8004a16:	7019      	strb	r1, [r3, #0]
 8004a18:	3301      	adds	r3, #1
 8004a1a:	e7f9      	b.n	8004a10 <memset+0x4>

08004a1c <_localeconv_r>:
 8004a1c:	4800      	ldr	r0, [pc, #0]	@ (8004a20 <_localeconv_r+0x4>)
 8004a1e:	4770      	bx	lr
 8004a20:	20000158 	.word	0x20000158

08004a24 <__errno>:
 8004a24:	4b01      	ldr	r3, [pc, #4]	@ (8004a2c <__errno+0x8>)
 8004a26:	6818      	ldr	r0, [r3, #0]
 8004a28:	4770      	bx	lr
 8004a2a:	46c0      	nop			@ (mov r8, r8)
 8004a2c:	20000018 	.word	0x20000018

08004a30 <__libc_init_array>:
 8004a30:	b570      	push	{r4, r5, r6, lr}
 8004a32:	2600      	movs	r6, #0
 8004a34:	4c0c      	ldr	r4, [pc, #48]	@ (8004a68 <__libc_init_array+0x38>)
 8004a36:	4d0d      	ldr	r5, [pc, #52]	@ (8004a6c <__libc_init_array+0x3c>)
 8004a38:	1b64      	subs	r4, r4, r5
 8004a3a:	10a4      	asrs	r4, r4, #2
 8004a3c:	42a6      	cmp	r6, r4
 8004a3e:	d109      	bne.n	8004a54 <__libc_init_array+0x24>
 8004a40:	2600      	movs	r6, #0
 8004a42:	f002 fb91 	bl	8007168 <_init>
 8004a46:	4c0a      	ldr	r4, [pc, #40]	@ (8004a70 <__libc_init_array+0x40>)
 8004a48:	4d0a      	ldr	r5, [pc, #40]	@ (8004a74 <__libc_init_array+0x44>)
 8004a4a:	1b64      	subs	r4, r4, r5
 8004a4c:	10a4      	asrs	r4, r4, #2
 8004a4e:	42a6      	cmp	r6, r4
 8004a50:	d105      	bne.n	8004a5e <__libc_init_array+0x2e>
 8004a52:	bd70      	pop	{r4, r5, r6, pc}
 8004a54:	00b3      	lsls	r3, r6, #2
 8004a56:	58eb      	ldr	r3, [r5, r3]
 8004a58:	4798      	blx	r3
 8004a5a:	3601      	adds	r6, #1
 8004a5c:	e7ee      	b.n	8004a3c <__libc_init_array+0xc>
 8004a5e:	00b3      	lsls	r3, r6, #2
 8004a60:	58eb      	ldr	r3, [r5, r3]
 8004a62:	4798      	blx	r3
 8004a64:	3601      	adds	r6, #1
 8004a66:	e7f2      	b.n	8004a4e <__libc_init_array+0x1e>
 8004a68:	08007610 	.word	0x08007610
 8004a6c:	08007610 	.word	0x08007610
 8004a70:	08007614 	.word	0x08007614
 8004a74:	08007610 	.word	0x08007610

08004a78 <__retarget_lock_init_recursive>:
 8004a78:	4770      	bx	lr

08004a7a <__retarget_lock_acquire_recursive>:
 8004a7a:	4770      	bx	lr

08004a7c <__retarget_lock_release_recursive>:
 8004a7c:	4770      	bx	lr

08004a7e <memchr>:
 8004a7e:	b2c9      	uxtb	r1, r1
 8004a80:	1882      	adds	r2, r0, r2
 8004a82:	4290      	cmp	r0, r2
 8004a84:	d101      	bne.n	8004a8a <memchr+0xc>
 8004a86:	2000      	movs	r0, #0
 8004a88:	4770      	bx	lr
 8004a8a:	7803      	ldrb	r3, [r0, #0]
 8004a8c:	428b      	cmp	r3, r1
 8004a8e:	d0fb      	beq.n	8004a88 <memchr+0xa>
 8004a90:	3001      	adds	r0, #1
 8004a92:	e7f6      	b.n	8004a82 <memchr+0x4>

08004a94 <quorem>:
 8004a94:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004a96:	6902      	ldr	r2, [r0, #16]
 8004a98:	690f      	ldr	r7, [r1, #16]
 8004a9a:	b087      	sub	sp, #28
 8004a9c:	0006      	movs	r6, r0
 8004a9e:	000b      	movs	r3, r1
 8004aa0:	2000      	movs	r0, #0
 8004aa2:	9102      	str	r1, [sp, #8]
 8004aa4:	42ba      	cmp	r2, r7
 8004aa6:	db6d      	blt.n	8004b84 <quorem+0xf0>
 8004aa8:	3f01      	subs	r7, #1
 8004aaa:	00bc      	lsls	r4, r7, #2
 8004aac:	3314      	adds	r3, #20
 8004aae:	9305      	str	r3, [sp, #20]
 8004ab0:	191b      	adds	r3, r3, r4
 8004ab2:	9303      	str	r3, [sp, #12]
 8004ab4:	0033      	movs	r3, r6
 8004ab6:	3314      	adds	r3, #20
 8004ab8:	191c      	adds	r4, r3, r4
 8004aba:	9301      	str	r3, [sp, #4]
 8004abc:	6823      	ldr	r3, [r4, #0]
 8004abe:	9304      	str	r3, [sp, #16]
 8004ac0:	9b03      	ldr	r3, [sp, #12]
 8004ac2:	9804      	ldr	r0, [sp, #16]
 8004ac4:	681d      	ldr	r5, [r3, #0]
 8004ac6:	3501      	adds	r5, #1
 8004ac8:	0029      	movs	r1, r5
 8004aca:	f7fb fb39 	bl	8000140 <__udivsi3>
 8004ace:	9b04      	ldr	r3, [sp, #16]
 8004ad0:	9000      	str	r0, [sp, #0]
 8004ad2:	42ab      	cmp	r3, r5
 8004ad4:	d32b      	bcc.n	8004b2e <quorem+0x9a>
 8004ad6:	9b05      	ldr	r3, [sp, #20]
 8004ad8:	9d01      	ldr	r5, [sp, #4]
 8004ada:	469c      	mov	ip, r3
 8004adc:	2300      	movs	r3, #0
 8004ade:	9305      	str	r3, [sp, #20]
 8004ae0:	9304      	str	r3, [sp, #16]
 8004ae2:	4662      	mov	r2, ip
 8004ae4:	ca08      	ldmia	r2!, {r3}
 8004ae6:	6828      	ldr	r0, [r5, #0]
 8004ae8:	4694      	mov	ip, r2
 8004aea:	9a00      	ldr	r2, [sp, #0]
 8004aec:	b299      	uxth	r1, r3
 8004aee:	4351      	muls	r1, r2
 8004af0:	9a05      	ldr	r2, [sp, #20]
 8004af2:	0c1b      	lsrs	r3, r3, #16
 8004af4:	1889      	adds	r1, r1, r2
 8004af6:	9a00      	ldr	r2, [sp, #0]
 8004af8:	4353      	muls	r3, r2
 8004afa:	0c0a      	lsrs	r2, r1, #16
 8004afc:	189b      	adds	r3, r3, r2
 8004afe:	0c1a      	lsrs	r2, r3, #16
 8004b00:	b289      	uxth	r1, r1
 8004b02:	9205      	str	r2, [sp, #20]
 8004b04:	b282      	uxth	r2, r0
 8004b06:	1a52      	subs	r2, r2, r1
 8004b08:	9904      	ldr	r1, [sp, #16]
 8004b0a:	0c00      	lsrs	r0, r0, #16
 8004b0c:	1852      	adds	r2, r2, r1
 8004b0e:	b29b      	uxth	r3, r3
 8004b10:	1411      	asrs	r1, r2, #16
 8004b12:	1ac3      	subs	r3, r0, r3
 8004b14:	185b      	adds	r3, r3, r1
 8004b16:	1419      	asrs	r1, r3, #16
 8004b18:	b292      	uxth	r2, r2
 8004b1a:	041b      	lsls	r3, r3, #16
 8004b1c:	431a      	orrs	r2, r3
 8004b1e:	9b03      	ldr	r3, [sp, #12]
 8004b20:	9104      	str	r1, [sp, #16]
 8004b22:	c504      	stmia	r5!, {r2}
 8004b24:	4563      	cmp	r3, ip
 8004b26:	d2dc      	bcs.n	8004ae2 <quorem+0x4e>
 8004b28:	6823      	ldr	r3, [r4, #0]
 8004b2a:	2b00      	cmp	r3, #0
 8004b2c:	d030      	beq.n	8004b90 <quorem+0xfc>
 8004b2e:	0030      	movs	r0, r6
 8004b30:	9902      	ldr	r1, [sp, #8]
 8004b32:	f001 fb8b 	bl	800624c <__mcmp>
 8004b36:	2800      	cmp	r0, #0
 8004b38:	db23      	blt.n	8004b82 <quorem+0xee>
 8004b3a:	0034      	movs	r4, r6
 8004b3c:	2500      	movs	r5, #0
 8004b3e:	9902      	ldr	r1, [sp, #8]
 8004b40:	3414      	adds	r4, #20
 8004b42:	3114      	adds	r1, #20
 8004b44:	6823      	ldr	r3, [r4, #0]
 8004b46:	c901      	ldmia	r1!, {r0}
 8004b48:	9302      	str	r3, [sp, #8]
 8004b4a:	466b      	mov	r3, sp
 8004b4c:	891b      	ldrh	r3, [r3, #8]
 8004b4e:	b282      	uxth	r2, r0
 8004b50:	1a9a      	subs	r2, r3, r2
 8004b52:	9b02      	ldr	r3, [sp, #8]
 8004b54:	1952      	adds	r2, r2, r5
 8004b56:	0c00      	lsrs	r0, r0, #16
 8004b58:	0c1b      	lsrs	r3, r3, #16
 8004b5a:	1a1b      	subs	r3, r3, r0
 8004b5c:	1410      	asrs	r0, r2, #16
 8004b5e:	181b      	adds	r3, r3, r0
 8004b60:	141d      	asrs	r5, r3, #16
 8004b62:	b292      	uxth	r2, r2
 8004b64:	041b      	lsls	r3, r3, #16
 8004b66:	431a      	orrs	r2, r3
 8004b68:	9b03      	ldr	r3, [sp, #12]
 8004b6a:	c404      	stmia	r4!, {r2}
 8004b6c:	428b      	cmp	r3, r1
 8004b6e:	d2e9      	bcs.n	8004b44 <quorem+0xb0>
 8004b70:	9a01      	ldr	r2, [sp, #4]
 8004b72:	00bb      	lsls	r3, r7, #2
 8004b74:	18d3      	adds	r3, r2, r3
 8004b76:	681a      	ldr	r2, [r3, #0]
 8004b78:	2a00      	cmp	r2, #0
 8004b7a:	d013      	beq.n	8004ba4 <quorem+0x110>
 8004b7c:	9b00      	ldr	r3, [sp, #0]
 8004b7e:	3301      	adds	r3, #1
 8004b80:	9300      	str	r3, [sp, #0]
 8004b82:	9800      	ldr	r0, [sp, #0]
 8004b84:	b007      	add	sp, #28
 8004b86:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004b88:	6823      	ldr	r3, [r4, #0]
 8004b8a:	2b00      	cmp	r3, #0
 8004b8c:	d104      	bne.n	8004b98 <quorem+0x104>
 8004b8e:	3f01      	subs	r7, #1
 8004b90:	9b01      	ldr	r3, [sp, #4]
 8004b92:	3c04      	subs	r4, #4
 8004b94:	42a3      	cmp	r3, r4
 8004b96:	d3f7      	bcc.n	8004b88 <quorem+0xf4>
 8004b98:	6137      	str	r7, [r6, #16]
 8004b9a:	e7c8      	b.n	8004b2e <quorem+0x9a>
 8004b9c:	681a      	ldr	r2, [r3, #0]
 8004b9e:	2a00      	cmp	r2, #0
 8004ba0:	d104      	bne.n	8004bac <quorem+0x118>
 8004ba2:	3f01      	subs	r7, #1
 8004ba4:	9a01      	ldr	r2, [sp, #4]
 8004ba6:	3b04      	subs	r3, #4
 8004ba8:	429a      	cmp	r2, r3
 8004baa:	d3f7      	bcc.n	8004b9c <quorem+0x108>
 8004bac:	6137      	str	r7, [r6, #16]
 8004bae:	e7e5      	b.n	8004b7c <quorem+0xe8>

08004bb0 <_dtoa_r>:
 8004bb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004bb2:	0014      	movs	r4, r2
 8004bb4:	001d      	movs	r5, r3
 8004bb6:	69c6      	ldr	r6, [r0, #28]
 8004bb8:	b09d      	sub	sp, #116	@ 0x74
 8004bba:	940a      	str	r4, [sp, #40]	@ 0x28
 8004bbc:	950b      	str	r5, [sp, #44]	@ 0x2c
 8004bbe:	9f25      	ldr	r7, [sp, #148]	@ 0x94
 8004bc0:	9003      	str	r0, [sp, #12]
 8004bc2:	2e00      	cmp	r6, #0
 8004bc4:	d10f      	bne.n	8004be6 <_dtoa_r+0x36>
 8004bc6:	2010      	movs	r0, #16
 8004bc8:	f000 ff44 	bl	8005a54 <malloc>
 8004bcc:	9b03      	ldr	r3, [sp, #12]
 8004bce:	1e02      	subs	r2, r0, #0
 8004bd0:	61d8      	str	r0, [r3, #28]
 8004bd2:	d104      	bne.n	8004bde <_dtoa_r+0x2e>
 8004bd4:	21ef      	movs	r1, #239	@ 0xef
 8004bd6:	4bc7      	ldr	r3, [pc, #796]	@ (8004ef4 <_dtoa_r+0x344>)
 8004bd8:	48c7      	ldr	r0, [pc, #796]	@ (8004ef8 <_dtoa_r+0x348>)
 8004bda:	f001 fd45 	bl	8006668 <__assert_func>
 8004bde:	6046      	str	r6, [r0, #4]
 8004be0:	6086      	str	r6, [r0, #8]
 8004be2:	6006      	str	r6, [r0, #0]
 8004be4:	60c6      	str	r6, [r0, #12]
 8004be6:	9b03      	ldr	r3, [sp, #12]
 8004be8:	69db      	ldr	r3, [r3, #28]
 8004bea:	6819      	ldr	r1, [r3, #0]
 8004bec:	2900      	cmp	r1, #0
 8004bee:	d00b      	beq.n	8004c08 <_dtoa_r+0x58>
 8004bf0:	685a      	ldr	r2, [r3, #4]
 8004bf2:	2301      	movs	r3, #1
 8004bf4:	4093      	lsls	r3, r2
 8004bf6:	604a      	str	r2, [r1, #4]
 8004bf8:	608b      	str	r3, [r1, #8]
 8004bfa:	9803      	ldr	r0, [sp, #12]
 8004bfc:	f001 f8dc 	bl	8005db8 <_Bfree>
 8004c00:	2200      	movs	r2, #0
 8004c02:	9b03      	ldr	r3, [sp, #12]
 8004c04:	69db      	ldr	r3, [r3, #28]
 8004c06:	601a      	str	r2, [r3, #0]
 8004c08:	2d00      	cmp	r5, #0
 8004c0a:	da1e      	bge.n	8004c4a <_dtoa_r+0x9a>
 8004c0c:	2301      	movs	r3, #1
 8004c0e:	603b      	str	r3, [r7, #0]
 8004c10:	006b      	lsls	r3, r5, #1
 8004c12:	085b      	lsrs	r3, r3, #1
 8004c14:	930b      	str	r3, [sp, #44]	@ 0x2c
 8004c16:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8004c18:	4bb8      	ldr	r3, [pc, #736]	@ (8004efc <_dtoa_r+0x34c>)
 8004c1a:	4ab8      	ldr	r2, [pc, #736]	@ (8004efc <_dtoa_r+0x34c>)
 8004c1c:	403b      	ands	r3, r7
 8004c1e:	4293      	cmp	r3, r2
 8004c20:	d116      	bne.n	8004c50 <_dtoa_r+0xa0>
 8004c22:	4bb7      	ldr	r3, [pc, #732]	@ (8004f00 <_dtoa_r+0x350>)
 8004c24:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8004c26:	6013      	str	r3, [r2, #0]
 8004c28:	033b      	lsls	r3, r7, #12
 8004c2a:	0b1b      	lsrs	r3, r3, #12
 8004c2c:	4323      	orrs	r3, r4
 8004c2e:	d101      	bne.n	8004c34 <_dtoa_r+0x84>
 8004c30:	f000 fd83 	bl	800573a <_dtoa_r+0xb8a>
 8004c34:	4bb3      	ldr	r3, [pc, #716]	@ (8004f04 <_dtoa_r+0x354>)
 8004c36:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8004c38:	9308      	str	r3, [sp, #32]
 8004c3a:	2a00      	cmp	r2, #0
 8004c3c:	d002      	beq.n	8004c44 <_dtoa_r+0x94>
 8004c3e:	4bb2      	ldr	r3, [pc, #712]	@ (8004f08 <_dtoa_r+0x358>)
 8004c40:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8004c42:	6013      	str	r3, [r2, #0]
 8004c44:	9808      	ldr	r0, [sp, #32]
 8004c46:	b01d      	add	sp, #116	@ 0x74
 8004c48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004c4a:	2300      	movs	r3, #0
 8004c4c:	603b      	str	r3, [r7, #0]
 8004c4e:	e7e2      	b.n	8004c16 <_dtoa_r+0x66>
 8004c50:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8004c52:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004c54:	9212      	str	r2, [sp, #72]	@ 0x48
 8004c56:	9313      	str	r3, [sp, #76]	@ 0x4c
 8004c58:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8004c5a:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8004c5c:	2200      	movs	r2, #0
 8004c5e:	2300      	movs	r3, #0
 8004c60:	f7fb fbf4 	bl	800044c <__aeabi_dcmpeq>
 8004c64:	1e06      	subs	r6, r0, #0
 8004c66:	d00b      	beq.n	8004c80 <_dtoa_r+0xd0>
 8004c68:	2301      	movs	r3, #1
 8004c6a:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8004c6c:	6013      	str	r3, [r2, #0]
 8004c6e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8004c70:	2b00      	cmp	r3, #0
 8004c72:	d002      	beq.n	8004c7a <_dtoa_r+0xca>
 8004c74:	4ba5      	ldr	r3, [pc, #660]	@ (8004f0c <_dtoa_r+0x35c>)
 8004c76:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8004c78:	6013      	str	r3, [r2, #0]
 8004c7a:	4ba5      	ldr	r3, [pc, #660]	@ (8004f10 <_dtoa_r+0x360>)
 8004c7c:	9308      	str	r3, [sp, #32]
 8004c7e:	e7e1      	b.n	8004c44 <_dtoa_r+0x94>
 8004c80:	ab1a      	add	r3, sp, #104	@ 0x68
 8004c82:	9301      	str	r3, [sp, #4]
 8004c84:	ab1b      	add	r3, sp, #108	@ 0x6c
 8004c86:	9300      	str	r3, [sp, #0]
 8004c88:	9803      	ldr	r0, [sp, #12]
 8004c8a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8004c8c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8004c8e:	f001 fb93 	bl	80063b8 <__d2b>
 8004c92:	007a      	lsls	r2, r7, #1
 8004c94:	9005      	str	r0, [sp, #20]
 8004c96:	0d52      	lsrs	r2, r2, #21
 8004c98:	d100      	bne.n	8004c9c <_dtoa_r+0xec>
 8004c9a:	e07b      	b.n	8004d94 <_dtoa_r+0x1e4>
 8004c9c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8004c9e:	9618      	str	r6, [sp, #96]	@ 0x60
 8004ca0:	0319      	lsls	r1, r3, #12
 8004ca2:	4b9c      	ldr	r3, [pc, #624]	@ (8004f14 <_dtoa_r+0x364>)
 8004ca4:	0b09      	lsrs	r1, r1, #12
 8004ca6:	430b      	orrs	r3, r1
 8004ca8:	499b      	ldr	r1, [pc, #620]	@ (8004f18 <_dtoa_r+0x368>)
 8004caa:	1857      	adds	r7, r2, r1
 8004cac:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8004cae:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8004cb0:	0019      	movs	r1, r3
 8004cb2:	2200      	movs	r2, #0
 8004cb4:	4b99      	ldr	r3, [pc, #612]	@ (8004f1c <_dtoa_r+0x36c>)
 8004cb6:	f7fc ffc9 	bl	8001c4c <__aeabi_dsub>
 8004cba:	4a99      	ldr	r2, [pc, #612]	@ (8004f20 <_dtoa_r+0x370>)
 8004cbc:	4b99      	ldr	r3, [pc, #612]	@ (8004f24 <_dtoa_r+0x374>)
 8004cbe:	f7fc fcfd 	bl	80016bc <__aeabi_dmul>
 8004cc2:	4a99      	ldr	r2, [pc, #612]	@ (8004f28 <_dtoa_r+0x378>)
 8004cc4:	4b99      	ldr	r3, [pc, #612]	@ (8004f2c <_dtoa_r+0x37c>)
 8004cc6:	f7fb fd51 	bl	800076c <__aeabi_dadd>
 8004cca:	0004      	movs	r4, r0
 8004ccc:	0038      	movs	r0, r7
 8004cce:	000d      	movs	r5, r1
 8004cd0:	f7fd fbb6 	bl	8002440 <__aeabi_i2d>
 8004cd4:	4a96      	ldr	r2, [pc, #600]	@ (8004f30 <_dtoa_r+0x380>)
 8004cd6:	4b97      	ldr	r3, [pc, #604]	@ (8004f34 <_dtoa_r+0x384>)
 8004cd8:	f7fc fcf0 	bl	80016bc <__aeabi_dmul>
 8004cdc:	0002      	movs	r2, r0
 8004cde:	000b      	movs	r3, r1
 8004ce0:	0020      	movs	r0, r4
 8004ce2:	0029      	movs	r1, r5
 8004ce4:	f7fb fd42 	bl	800076c <__aeabi_dadd>
 8004ce8:	0004      	movs	r4, r0
 8004cea:	000d      	movs	r5, r1
 8004cec:	f7fd fb6c 	bl	80023c8 <__aeabi_d2iz>
 8004cf0:	2200      	movs	r2, #0
 8004cf2:	9004      	str	r0, [sp, #16]
 8004cf4:	2300      	movs	r3, #0
 8004cf6:	0020      	movs	r0, r4
 8004cf8:	0029      	movs	r1, r5
 8004cfa:	f7fb fbad 	bl	8000458 <__aeabi_dcmplt>
 8004cfe:	2800      	cmp	r0, #0
 8004d00:	d00b      	beq.n	8004d1a <_dtoa_r+0x16a>
 8004d02:	9804      	ldr	r0, [sp, #16]
 8004d04:	f7fd fb9c 	bl	8002440 <__aeabi_i2d>
 8004d08:	002b      	movs	r3, r5
 8004d0a:	0022      	movs	r2, r4
 8004d0c:	f7fb fb9e 	bl	800044c <__aeabi_dcmpeq>
 8004d10:	4243      	negs	r3, r0
 8004d12:	4158      	adcs	r0, r3
 8004d14:	9b04      	ldr	r3, [sp, #16]
 8004d16:	1a1b      	subs	r3, r3, r0
 8004d18:	9304      	str	r3, [sp, #16]
 8004d1a:	2301      	movs	r3, #1
 8004d1c:	9315      	str	r3, [sp, #84]	@ 0x54
 8004d1e:	9b04      	ldr	r3, [sp, #16]
 8004d20:	2b16      	cmp	r3, #22
 8004d22:	d810      	bhi.n	8004d46 <_dtoa_r+0x196>
 8004d24:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8004d26:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8004d28:	9a04      	ldr	r2, [sp, #16]
 8004d2a:	4b83      	ldr	r3, [pc, #524]	@ (8004f38 <_dtoa_r+0x388>)
 8004d2c:	00d2      	lsls	r2, r2, #3
 8004d2e:	189b      	adds	r3, r3, r2
 8004d30:	681a      	ldr	r2, [r3, #0]
 8004d32:	685b      	ldr	r3, [r3, #4]
 8004d34:	f7fb fb90 	bl	8000458 <__aeabi_dcmplt>
 8004d38:	2800      	cmp	r0, #0
 8004d3a:	d047      	beq.n	8004dcc <_dtoa_r+0x21c>
 8004d3c:	9b04      	ldr	r3, [sp, #16]
 8004d3e:	3b01      	subs	r3, #1
 8004d40:	9304      	str	r3, [sp, #16]
 8004d42:	2300      	movs	r3, #0
 8004d44:	9315      	str	r3, [sp, #84]	@ 0x54
 8004d46:	2200      	movs	r2, #0
 8004d48:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8004d4a:	9206      	str	r2, [sp, #24]
 8004d4c:	1bdb      	subs	r3, r3, r7
 8004d4e:	1e5a      	subs	r2, r3, #1
 8004d50:	d53e      	bpl.n	8004dd0 <_dtoa_r+0x220>
 8004d52:	2201      	movs	r2, #1
 8004d54:	1ad3      	subs	r3, r2, r3
 8004d56:	9306      	str	r3, [sp, #24]
 8004d58:	2300      	movs	r3, #0
 8004d5a:	930d      	str	r3, [sp, #52]	@ 0x34
 8004d5c:	9b04      	ldr	r3, [sp, #16]
 8004d5e:	2b00      	cmp	r3, #0
 8004d60:	db38      	blt.n	8004dd4 <_dtoa_r+0x224>
 8004d62:	9a04      	ldr	r2, [sp, #16]
 8004d64:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8004d66:	4694      	mov	ip, r2
 8004d68:	4463      	add	r3, ip
 8004d6a:	930d      	str	r3, [sp, #52]	@ 0x34
 8004d6c:	2300      	movs	r3, #0
 8004d6e:	9214      	str	r2, [sp, #80]	@ 0x50
 8004d70:	930f      	str	r3, [sp, #60]	@ 0x3c
 8004d72:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8004d74:	2401      	movs	r4, #1
 8004d76:	2b09      	cmp	r3, #9
 8004d78:	d867      	bhi.n	8004e4a <_dtoa_r+0x29a>
 8004d7a:	2b05      	cmp	r3, #5
 8004d7c:	dd02      	ble.n	8004d84 <_dtoa_r+0x1d4>
 8004d7e:	2400      	movs	r4, #0
 8004d80:	3b04      	subs	r3, #4
 8004d82:	9322      	str	r3, [sp, #136]	@ 0x88
 8004d84:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8004d86:	1e98      	subs	r0, r3, #2
 8004d88:	2803      	cmp	r0, #3
 8004d8a:	d867      	bhi.n	8004e5c <_dtoa_r+0x2ac>
 8004d8c:	f7fb f9c4 	bl	8000118 <__gnu_thumb1_case_uqi>
 8004d90:	5b383a2b 	.word	0x5b383a2b
 8004d94:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8004d96:	9e1a      	ldr	r6, [sp, #104]	@ 0x68
 8004d98:	18f6      	adds	r6, r6, r3
 8004d9a:	4b68      	ldr	r3, [pc, #416]	@ (8004f3c <_dtoa_r+0x38c>)
 8004d9c:	18f2      	adds	r2, r6, r3
 8004d9e:	2a20      	cmp	r2, #32
 8004da0:	dd0f      	ble.n	8004dc2 <_dtoa_r+0x212>
 8004da2:	2340      	movs	r3, #64	@ 0x40
 8004da4:	1a9b      	subs	r3, r3, r2
 8004da6:	409f      	lsls	r7, r3
 8004da8:	4b65      	ldr	r3, [pc, #404]	@ (8004f40 <_dtoa_r+0x390>)
 8004daa:	0038      	movs	r0, r7
 8004dac:	18f3      	adds	r3, r6, r3
 8004dae:	40dc      	lsrs	r4, r3
 8004db0:	4320      	orrs	r0, r4
 8004db2:	f7fd fb73 	bl	800249c <__aeabi_ui2d>
 8004db6:	2201      	movs	r2, #1
 8004db8:	4b62      	ldr	r3, [pc, #392]	@ (8004f44 <_dtoa_r+0x394>)
 8004dba:	1e77      	subs	r7, r6, #1
 8004dbc:	18cb      	adds	r3, r1, r3
 8004dbe:	9218      	str	r2, [sp, #96]	@ 0x60
 8004dc0:	e776      	b.n	8004cb0 <_dtoa_r+0x100>
 8004dc2:	2320      	movs	r3, #32
 8004dc4:	0020      	movs	r0, r4
 8004dc6:	1a9b      	subs	r3, r3, r2
 8004dc8:	4098      	lsls	r0, r3
 8004dca:	e7f2      	b.n	8004db2 <_dtoa_r+0x202>
 8004dcc:	9015      	str	r0, [sp, #84]	@ 0x54
 8004dce:	e7ba      	b.n	8004d46 <_dtoa_r+0x196>
 8004dd0:	920d      	str	r2, [sp, #52]	@ 0x34
 8004dd2:	e7c3      	b.n	8004d5c <_dtoa_r+0x1ac>
 8004dd4:	9b06      	ldr	r3, [sp, #24]
 8004dd6:	9a04      	ldr	r2, [sp, #16]
 8004dd8:	1a9b      	subs	r3, r3, r2
 8004dda:	9306      	str	r3, [sp, #24]
 8004ddc:	4253      	negs	r3, r2
 8004dde:	930f      	str	r3, [sp, #60]	@ 0x3c
 8004de0:	2300      	movs	r3, #0
 8004de2:	9314      	str	r3, [sp, #80]	@ 0x50
 8004de4:	e7c5      	b.n	8004d72 <_dtoa_r+0x1c2>
 8004de6:	2300      	movs	r3, #0
 8004de8:	9310      	str	r3, [sp, #64]	@ 0x40
 8004dea:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8004dec:	930e      	str	r3, [sp, #56]	@ 0x38
 8004dee:	9309      	str	r3, [sp, #36]	@ 0x24
 8004df0:	2b00      	cmp	r3, #0
 8004df2:	dc13      	bgt.n	8004e1c <_dtoa_r+0x26c>
 8004df4:	2301      	movs	r3, #1
 8004df6:	001a      	movs	r2, r3
 8004df8:	930e      	str	r3, [sp, #56]	@ 0x38
 8004dfa:	9309      	str	r3, [sp, #36]	@ 0x24
 8004dfc:	9223      	str	r2, [sp, #140]	@ 0x8c
 8004dfe:	e00d      	b.n	8004e1c <_dtoa_r+0x26c>
 8004e00:	2301      	movs	r3, #1
 8004e02:	e7f1      	b.n	8004de8 <_dtoa_r+0x238>
 8004e04:	2300      	movs	r3, #0
 8004e06:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8004e08:	9310      	str	r3, [sp, #64]	@ 0x40
 8004e0a:	4694      	mov	ip, r2
 8004e0c:	9b04      	ldr	r3, [sp, #16]
 8004e0e:	4463      	add	r3, ip
 8004e10:	930e      	str	r3, [sp, #56]	@ 0x38
 8004e12:	3301      	adds	r3, #1
 8004e14:	9309      	str	r3, [sp, #36]	@ 0x24
 8004e16:	2b00      	cmp	r3, #0
 8004e18:	dc00      	bgt.n	8004e1c <_dtoa_r+0x26c>
 8004e1a:	2301      	movs	r3, #1
 8004e1c:	9a03      	ldr	r2, [sp, #12]
 8004e1e:	2100      	movs	r1, #0
 8004e20:	69d0      	ldr	r0, [r2, #28]
 8004e22:	2204      	movs	r2, #4
 8004e24:	0015      	movs	r5, r2
 8004e26:	3514      	adds	r5, #20
 8004e28:	429d      	cmp	r5, r3
 8004e2a:	d91b      	bls.n	8004e64 <_dtoa_r+0x2b4>
 8004e2c:	6041      	str	r1, [r0, #4]
 8004e2e:	9803      	ldr	r0, [sp, #12]
 8004e30:	f000 ff7e 	bl	8005d30 <_Balloc>
 8004e34:	9008      	str	r0, [sp, #32]
 8004e36:	2800      	cmp	r0, #0
 8004e38:	d117      	bne.n	8004e6a <_dtoa_r+0x2ba>
 8004e3a:	21b0      	movs	r1, #176	@ 0xb0
 8004e3c:	4b42      	ldr	r3, [pc, #264]	@ (8004f48 <_dtoa_r+0x398>)
 8004e3e:	482e      	ldr	r0, [pc, #184]	@ (8004ef8 <_dtoa_r+0x348>)
 8004e40:	9a08      	ldr	r2, [sp, #32]
 8004e42:	31ff      	adds	r1, #255	@ 0xff
 8004e44:	e6c9      	b.n	8004bda <_dtoa_r+0x2a>
 8004e46:	2301      	movs	r3, #1
 8004e48:	e7dd      	b.n	8004e06 <_dtoa_r+0x256>
 8004e4a:	2300      	movs	r3, #0
 8004e4c:	9410      	str	r4, [sp, #64]	@ 0x40
 8004e4e:	9322      	str	r3, [sp, #136]	@ 0x88
 8004e50:	3b01      	subs	r3, #1
 8004e52:	930e      	str	r3, [sp, #56]	@ 0x38
 8004e54:	9309      	str	r3, [sp, #36]	@ 0x24
 8004e56:	2200      	movs	r2, #0
 8004e58:	3313      	adds	r3, #19
 8004e5a:	e7cf      	b.n	8004dfc <_dtoa_r+0x24c>
 8004e5c:	2301      	movs	r3, #1
 8004e5e:	9310      	str	r3, [sp, #64]	@ 0x40
 8004e60:	3b02      	subs	r3, #2
 8004e62:	e7f6      	b.n	8004e52 <_dtoa_r+0x2a2>
 8004e64:	3101      	adds	r1, #1
 8004e66:	0052      	lsls	r2, r2, #1
 8004e68:	e7dc      	b.n	8004e24 <_dtoa_r+0x274>
 8004e6a:	9b03      	ldr	r3, [sp, #12]
 8004e6c:	9a08      	ldr	r2, [sp, #32]
 8004e6e:	69db      	ldr	r3, [r3, #28]
 8004e70:	601a      	str	r2, [r3, #0]
 8004e72:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004e74:	2b0e      	cmp	r3, #14
 8004e76:	d900      	bls.n	8004e7a <_dtoa_r+0x2ca>
 8004e78:	e0d9      	b.n	800502e <_dtoa_r+0x47e>
 8004e7a:	2c00      	cmp	r4, #0
 8004e7c:	d100      	bne.n	8004e80 <_dtoa_r+0x2d0>
 8004e7e:	e0d6      	b.n	800502e <_dtoa_r+0x47e>
 8004e80:	9b04      	ldr	r3, [sp, #16]
 8004e82:	2b00      	cmp	r3, #0
 8004e84:	dd64      	ble.n	8004f50 <_dtoa_r+0x3a0>
 8004e86:	210f      	movs	r1, #15
 8004e88:	9a04      	ldr	r2, [sp, #16]
 8004e8a:	4b2b      	ldr	r3, [pc, #172]	@ (8004f38 <_dtoa_r+0x388>)
 8004e8c:	400a      	ands	r2, r1
 8004e8e:	00d2      	lsls	r2, r2, #3
 8004e90:	189b      	adds	r3, r3, r2
 8004e92:	681e      	ldr	r6, [r3, #0]
 8004e94:	685f      	ldr	r7, [r3, #4]
 8004e96:	9b04      	ldr	r3, [sp, #16]
 8004e98:	2402      	movs	r4, #2
 8004e9a:	111d      	asrs	r5, r3, #4
 8004e9c:	05db      	lsls	r3, r3, #23
 8004e9e:	d50a      	bpl.n	8004eb6 <_dtoa_r+0x306>
 8004ea0:	4b2a      	ldr	r3, [pc, #168]	@ (8004f4c <_dtoa_r+0x39c>)
 8004ea2:	400d      	ands	r5, r1
 8004ea4:	6a1a      	ldr	r2, [r3, #32]
 8004ea6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004ea8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8004eaa:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8004eac:	f7fb ffc2 	bl	8000e34 <__aeabi_ddiv>
 8004eb0:	900a      	str	r0, [sp, #40]	@ 0x28
 8004eb2:	910b      	str	r1, [sp, #44]	@ 0x2c
 8004eb4:	3401      	adds	r4, #1
 8004eb6:	4b25      	ldr	r3, [pc, #148]	@ (8004f4c <_dtoa_r+0x39c>)
 8004eb8:	930c      	str	r3, [sp, #48]	@ 0x30
 8004eba:	2d00      	cmp	r5, #0
 8004ebc:	d108      	bne.n	8004ed0 <_dtoa_r+0x320>
 8004ebe:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8004ec0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8004ec2:	0032      	movs	r2, r6
 8004ec4:	003b      	movs	r3, r7
 8004ec6:	f7fb ffb5 	bl	8000e34 <__aeabi_ddiv>
 8004eca:	900a      	str	r0, [sp, #40]	@ 0x28
 8004ecc:	910b      	str	r1, [sp, #44]	@ 0x2c
 8004ece:	e05a      	b.n	8004f86 <_dtoa_r+0x3d6>
 8004ed0:	2301      	movs	r3, #1
 8004ed2:	421d      	tst	r5, r3
 8004ed4:	d009      	beq.n	8004eea <_dtoa_r+0x33a>
 8004ed6:	18e4      	adds	r4, r4, r3
 8004ed8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004eda:	0030      	movs	r0, r6
 8004edc:	681a      	ldr	r2, [r3, #0]
 8004ede:	685b      	ldr	r3, [r3, #4]
 8004ee0:	0039      	movs	r1, r7
 8004ee2:	f7fc fbeb 	bl	80016bc <__aeabi_dmul>
 8004ee6:	0006      	movs	r6, r0
 8004ee8:	000f      	movs	r7, r1
 8004eea:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004eec:	106d      	asrs	r5, r5, #1
 8004eee:	3308      	adds	r3, #8
 8004ef0:	e7e2      	b.n	8004eb8 <_dtoa_r+0x308>
 8004ef2:	46c0      	nop			@ (mov r8, r8)
 8004ef4:	080072df 	.word	0x080072df
 8004ef8:	080072f6 	.word	0x080072f6
 8004efc:	7ff00000 	.word	0x7ff00000
 8004f00:	0000270f 	.word	0x0000270f
 8004f04:	080072db 	.word	0x080072db
 8004f08:	080072de 	.word	0x080072de
 8004f0c:	080072af 	.word	0x080072af
 8004f10:	080072ae 	.word	0x080072ae
 8004f14:	3ff00000 	.word	0x3ff00000
 8004f18:	fffffc01 	.word	0xfffffc01
 8004f1c:	3ff80000 	.word	0x3ff80000
 8004f20:	636f4361 	.word	0x636f4361
 8004f24:	3fd287a7 	.word	0x3fd287a7
 8004f28:	8b60c8b3 	.word	0x8b60c8b3
 8004f2c:	3fc68a28 	.word	0x3fc68a28
 8004f30:	509f79fb 	.word	0x509f79fb
 8004f34:	3fd34413 	.word	0x3fd34413
 8004f38:	08007400 	.word	0x08007400
 8004f3c:	00000432 	.word	0x00000432
 8004f40:	00000412 	.word	0x00000412
 8004f44:	fe100000 	.word	0xfe100000
 8004f48:	0800734e 	.word	0x0800734e
 8004f4c:	080073d8 	.word	0x080073d8
 8004f50:	9b04      	ldr	r3, [sp, #16]
 8004f52:	2402      	movs	r4, #2
 8004f54:	2b00      	cmp	r3, #0
 8004f56:	d016      	beq.n	8004f86 <_dtoa_r+0x3d6>
 8004f58:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8004f5a:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8004f5c:	220f      	movs	r2, #15
 8004f5e:	425d      	negs	r5, r3
 8004f60:	402a      	ands	r2, r5
 8004f62:	4bd7      	ldr	r3, [pc, #860]	@ (80052c0 <_dtoa_r+0x710>)
 8004f64:	00d2      	lsls	r2, r2, #3
 8004f66:	189b      	adds	r3, r3, r2
 8004f68:	681a      	ldr	r2, [r3, #0]
 8004f6a:	685b      	ldr	r3, [r3, #4]
 8004f6c:	f7fc fba6 	bl	80016bc <__aeabi_dmul>
 8004f70:	2701      	movs	r7, #1
 8004f72:	2300      	movs	r3, #0
 8004f74:	900a      	str	r0, [sp, #40]	@ 0x28
 8004f76:	910b      	str	r1, [sp, #44]	@ 0x2c
 8004f78:	4ed2      	ldr	r6, [pc, #840]	@ (80052c4 <_dtoa_r+0x714>)
 8004f7a:	112d      	asrs	r5, r5, #4
 8004f7c:	2d00      	cmp	r5, #0
 8004f7e:	d000      	beq.n	8004f82 <_dtoa_r+0x3d2>
 8004f80:	e0ba      	b.n	80050f8 <_dtoa_r+0x548>
 8004f82:	2b00      	cmp	r3, #0
 8004f84:	d1a1      	bne.n	8004eca <_dtoa_r+0x31a>
 8004f86:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8004f88:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8004f8a:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8004f8c:	2b00      	cmp	r3, #0
 8004f8e:	d100      	bne.n	8004f92 <_dtoa_r+0x3e2>
 8004f90:	e0bd      	b.n	800510e <_dtoa_r+0x55e>
 8004f92:	2200      	movs	r2, #0
 8004f94:	0030      	movs	r0, r6
 8004f96:	0039      	movs	r1, r7
 8004f98:	4bcb      	ldr	r3, [pc, #812]	@ (80052c8 <_dtoa_r+0x718>)
 8004f9a:	f7fb fa5d 	bl	8000458 <__aeabi_dcmplt>
 8004f9e:	2800      	cmp	r0, #0
 8004fa0:	d100      	bne.n	8004fa4 <_dtoa_r+0x3f4>
 8004fa2:	e0b4      	b.n	800510e <_dtoa_r+0x55e>
 8004fa4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004fa6:	2b00      	cmp	r3, #0
 8004fa8:	d100      	bne.n	8004fac <_dtoa_r+0x3fc>
 8004faa:	e0b0      	b.n	800510e <_dtoa_r+0x55e>
 8004fac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004fae:	2b00      	cmp	r3, #0
 8004fb0:	dd39      	ble.n	8005026 <_dtoa_r+0x476>
 8004fb2:	9b04      	ldr	r3, [sp, #16]
 8004fb4:	2200      	movs	r2, #0
 8004fb6:	3b01      	subs	r3, #1
 8004fb8:	930c      	str	r3, [sp, #48]	@ 0x30
 8004fba:	0030      	movs	r0, r6
 8004fbc:	4bc3      	ldr	r3, [pc, #780]	@ (80052cc <_dtoa_r+0x71c>)
 8004fbe:	0039      	movs	r1, r7
 8004fc0:	f7fc fb7c 	bl	80016bc <__aeabi_dmul>
 8004fc4:	900a      	str	r0, [sp, #40]	@ 0x28
 8004fc6:	910b      	str	r1, [sp, #44]	@ 0x2c
 8004fc8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004fca:	3401      	adds	r4, #1
 8004fcc:	0020      	movs	r0, r4
 8004fce:	9311      	str	r3, [sp, #68]	@ 0x44
 8004fd0:	f7fd fa36 	bl	8002440 <__aeabi_i2d>
 8004fd4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8004fd6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004fd8:	f7fc fb70 	bl	80016bc <__aeabi_dmul>
 8004fdc:	4bbc      	ldr	r3, [pc, #752]	@ (80052d0 <_dtoa_r+0x720>)
 8004fde:	2200      	movs	r2, #0
 8004fe0:	f7fb fbc4 	bl	800076c <__aeabi_dadd>
 8004fe4:	4bbb      	ldr	r3, [pc, #748]	@ (80052d4 <_dtoa_r+0x724>)
 8004fe6:	0006      	movs	r6, r0
 8004fe8:	18cf      	adds	r7, r1, r3
 8004fea:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8004fec:	2b00      	cmp	r3, #0
 8004fee:	d000      	beq.n	8004ff2 <_dtoa_r+0x442>
 8004ff0:	e091      	b.n	8005116 <_dtoa_r+0x566>
 8004ff2:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8004ff4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8004ff6:	2200      	movs	r2, #0
 8004ff8:	4bb7      	ldr	r3, [pc, #732]	@ (80052d8 <_dtoa_r+0x728>)
 8004ffa:	f7fc fe27 	bl	8001c4c <__aeabi_dsub>
 8004ffe:	0032      	movs	r2, r6
 8005000:	003b      	movs	r3, r7
 8005002:	0004      	movs	r4, r0
 8005004:	000d      	movs	r5, r1
 8005006:	f7fb fa3b 	bl	8000480 <__aeabi_dcmpgt>
 800500a:	2800      	cmp	r0, #0
 800500c:	d000      	beq.n	8005010 <_dtoa_r+0x460>
 800500e:	e29d      	b.n	800554c <_dtoa_r+0x99c>
 8005010:	2180      	movs	r1, #128	@ 0x80
 8005012:	0609      	lsls	r1, r1, #24
 8005014:	187b      	adds	r3, r7, r1
 8005016:	0032      	movs	r2, r6
 8005018:	0020      	movs	r0, r4
 800501a:	0029      	movs	r1, r5
 800501c:	f7fb fa1c 	bl	8000458 <__aeabi_dcmplt>
 8005020:	2800      	cmp	r0, #0
 8005022:	d000      	beq.n	8005026 <_dtoa_r+0x476>
 8005024:	e130      	b.n	8005288 <_dtoa_r+0x6d8>
 8005026:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8005028:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 800502a:	930a      	str	r3, [sp, #40]	@ 0x28
 800502c:	940b      	str	r4, [sp, #44]	@ 0x2c
 800502e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8005030:	2b00      	cmp	r3, #0
 8005032:	da00      	bge.n	8005036 <_dtoa_r+0x486>
 8005034:	e177      	b.n	8005326 <_dtoa_r+0x776>
 8005036:	9a04      	ldr	r2, [sp, #16]
 8005038:	2a0e      	cmp	r2, #14
 800503a:	dd00      	ble.n	800503e <_dtoa_r+0x48e>
 800503c:	e173      	b.n	8005326 <_dtoa_r+0x776>
 800503e:	4ba0      	ldr	r3, [pc, #640]	@ (80052c0 <_dtoa_r+0x710>)
 8005040:	00d2      	lsls	r2, r2, #3
 8005042:	189b      	adds	r3, r3, r2
 8005044:	685c      	ldr	r4, [r3, #4]
 8005046:	681b      	ldr	r3, [r3, #0]
 8005048:	9306      	str	r3, [sp, #24]
 800504a:	9407      	str	r4, [sp, #28]
 800504c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800504e:	2b00      	cmp	r3, #0
 8005050:	da03      	bge.n	800505a <_dtoa_r+0x4aa>
 8005052:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005054:	2b00      	cmp	r3, #0
 8005056:	dc00      	bgt.n	800505a <_dtoa_r+0x4aa>
 8005058:	e106      	b.n	8005268 <_dtoa_r+0x6b8>
 800505a:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 800505c:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 800505e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005060:	9d08      	ldr	r5, [sp, #32]
 8005062:	3b01      	subs	r3, #1
 8005064:	195b      	adds	r3, r3, r5
 8005066:	930a      	str	r3, [sp, #40]	@ 0x28
 8005068:	9a06      	ldr	r2, [sp, #24]
 800506a:	9b07      	ldr	r3, [sp, #28]
 800506c:	0030      	movs	r0, r6
 800506e:	0039      	movs	r1, r7
 8005070:	f7fb fee0 	bl	8000e34 <__aeabi_ddiv>
 8005074:	f7fd f9a8 	bl	80023c8 <__aeabi_d2iz>
 8005078:	9009      	str	r0, [sp, #36]	@ 0x24
 800507a:	f7fd f9e1 	bl	8002440 <__aeabi_i2d>
 800507e:	9a06      	ldr	r2, [sp, #24]
 8005080:	9b07      	ldr	r3, [sp, #28]
 8005082:	f7fc fb1b 	bl	80016bc <__aeabi_dmul>
 8005086:	0002      	movs	r2, r0
 8005088:	000b      	movs	r3, r1
 800508a:	0030      	movs	r0, r6
 800508c:	0039      	movs	r1, r7
 800508e:	f7fc fddd 	bl	8001c4c <__aeabi_dsub>
 8005092:	002b      	movs	r3, r5
 8005094:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005096:	3501      	adds	r5, #1
 8005098:	3230      	adds	r2, #48	@ 0x30
 800509a:	701a      	strb	r2, [r3, #0]
 800509c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800509e:	002c      	movs	r4, r5
 80050a0:	429a      	cmp	r2, r3
 80050a2:	d000      	beq.n	80050a6 <_dtoa_r+0x4f6>
 80050a4:	e131      	b.n	800530a <_dtoa_r+0x75a>
 80050a6:	0002      	movs	r2, r0
 80050a8:	000b      	movs	r3, r1
 80050aa:	f7fb fb5f 	bl	800076c <__aeabi_dadd>
 80050ae:	9a06      	ldr	r2, [sp, #24]
 80050b0:	9b07      	ldr	r3, [sp, #28]
 80050b2:	0006      	movs	r6, r0
 80050b4:	000f      	movs	r7, r1
 80050b6:	f7fb f9e3 	bl	8000480 <__aeabi_dcmpgt>
 80050ba:	2800      	cmp	r0, #0
 80050bc:	d000      	beq.n	80050c0 <_dtoa_r+0x510>
 80050be:	e10f      	b.n	80052e0 <_dtoa_r+0x730>
 80050c0:	9a06      	ldr	r2, [sp, #24]
 80050c2:	9b07      	ldr	r3, [sp, #28]
 80050c4:	0030      	movs	r0, r6
 80050c6:	0039      	movs	r1, r7
 80050c8:	f7fb f9c0 	bl	800044c <__aeabi_dcmpeq>
 80050cc:	2800      	cmp	r0, #0
 80050ce:	d003      	beq.n	80050d8 <_dtoa_r+0x528>
 80050d0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80050d2:	07dd      	lsls	r5, r3, #31
 80050d4:	d500      	bpl.n	80050d8 <_dtoa_r+0x528>
 80050d6:	e103      	b.n	80052e0 <_dtoa_r+0x730>
 80050d8:	9905      	ldr	r1, [sp, #20]
 80050da:	9803      	ldr	r0, [sp, #12]
 80050dc:	f000 fe6c 	bl	8005db8 <_Bfree>
 80050e0:	2300      	movs	r3, #0
 80050e2:	7023      	strb	r3, [r4, #0]
 80050e4:	9b04      	ldr	r3, [sp, #16]
 80050e6:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80050e8:	3301      	adds	r3, #1
 80050ea:	6013      	str	r3, [r2, #0]
 80050ec:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80050ee:	2b00      	cmp	r3, #0
 80050f0:	d100      	bne.n	80050f4 <_dtoa_r+0x544>
 80050f2:	e5a7      	b.n	8004c44 <_dtoa_r+0x94>
 80050f4:	601c      	str	r4, [r3, #0]
 80050f6:	e5a5      	b.n	8004c44 <_dtoa_r+0x94>
 80050f8:	423d      	tst	r5, r7
 80050fa:	d005      	beq.n	8005108 <_dtoa_r+0x558>
 80050fc:	6832      	ldr	r2, [r6, #0]
 80050fe:	6873      	ldr	r3, [r6, #4]
 8005100:	f7fc fadc 	bl	80016bc <__aeabi_dmul>
 8005104:	003b      	movs	r3, r7
 8005106:	3401      	adds	r4, #1
 8005108:	106d      	asrs	r5, r5, #1
 800510a:	3608      	adds	r6, #8
 800510c:	e736      	b.n	8004f7c <_dtoa_r+0x3cc>
 800510e:	9b04      	ldr	r3, [sp, #16]
 8005110:	930c      	str	r3, [sp, #48]	@ 0x30
 8005112:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005114:	e75a      	b.n	8004fcc <_dtoa_r+0x41c>
 8005116:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8005118:	4b69      	ldr	r3, [pc, #420]	@ (80052c0 <_dtoa_r+0x710>)
 800511a:	3a01      	subs	r2, #1
 800511c:	00d2      	lsls	r2, r2, #3
 800511e:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8005120:	189b      	adds	r3, r3, r2
 8005122:	681a      	ldr	r2, [r3, #0]
 8005124:	685b      	ldr	r3, [r3, #4]
 8005126:	2900      	cmp	r1, #0
 8005128:	d04c      	beq.n	80051c4 <_dtoa_r+0x614>
 800512a:	2000      	movs	r0, #0
 800512c:	496b      	ldr	r1, [pc, #428]	@ (80052dc <_dtoa_r+0x72c>)
 800512e:	f7fb fe81 	bl	8000e34 <__aeabi_ddiv>
 8005132:	0032      	movs	r2, r6
 8005134:	003b      	movs	r3, r7
 8005136:	f7fc fd89 	bl	8001c4c <__aeabi_dsub>
 800513a:	9a08      	ldr	r2, [sp, #32]
 800513c:	0006      	movs	r6, r0
 800513e:	4694      	mov	ip, r2
 8005140:	000f      	movs	r7, r1
 8005142:	9b08      	ldr	r3, [sp, #32]
 8005144:	9316      	str	r3, [sp, #88]	@ 0x58
 8005146:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8005148:	4463      	add	r3, ip
 800514a:	9311      	str	r3, [sp, #68]	@ 0x44
 800514c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800514e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8005150:	f7fd f93a 	bl	80023c8 <__aeabi_d2iz>
 8005154:	0005      	movs	r5, r0
 8005156:	f7fd f973 	bl	8002440 <__aeabi_i2d>
 800515a:	0002      	movs	r2, r0
 800515c:	000b      	movs	r3, r1
 800515e:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8005160:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8005162:	f7fc fd73 	bl	8001c4c <__aeabi_dsub>
 8005166:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8005168:	3530      	adds	r5, #48	@ 0x30
 800516a:	1c5c      	adds	r4, r3, #1
 800516c:	701d      	strb	r5, [r3, #0]
 800516e:	0032      	movs	r2, r6
 8005170:	003b      	movs	r3, r7
 8005172:	900a      	str	r0, [sp, #40]	@ 0x28
 8005174:	910b      	str	r1, [sp, #44]	@ 0x2c
 8005176:	f7fb f96f 	bl	8000458 <__aeabi_dcmplt>
 800517a:	2800      	cmp	r0, #0
 800517c:	d16a      	bne.n	8005254 <_dtoa_r+0x6a4>
 800517e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8005180:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8005182:	2000      	movs	r0, #0
 8005184:	4950      	ldr	r1, [pc, #320]	@ (80052c8 <_dtoa_r+0x718>)
 8005186:	f7fc fd61 	bl	8001c4c <__aeabi_dsub>
 800518a:	0032      	movs	r2, r6
 800518c:	003b      	movs	r3, r7
 800518e:	f7fb f963 	bl	8000458 <__aeabi_dcmplt>
 8005192:	2800      	cmp	r0, #0
 8005194:	d000      	beq.n	8005198 <_dtoa_r+0x5e8>
 8005196:	e0a5      	b.n	80052e4 <_dtoa_r+0x734>
 8005198:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800519a:	42a3      	cmp	r3, r4
 800519c:	d100      	bne.n	80051a0 <_dtoa_r+0x5f0>
 800519e:	e742      	b.n	8005026 <_dtoa_r+0x476>
 80051a0:	2200      	movs	r2, #0
 80051a2:	0030      	movs	r0, r6
 80051a4:	0039      	movs	r1, r7
 80051a6:	4b49      	ldr	r3, [pc, #292]	@ (80052cc <_dtoa_r+0x71c>)
 80051a8:	f7fc fa88 	bl	80016bc <__aeabi_dmul>
 80051ac:	2200      	movs	r2, #0
 80051ae:	0006      	movs	r6, r0
 80051b0:	000f      	movs	r7, r1
 80051b2:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80051b4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80051b6:	4b45      	ldr	r3, [pc, #276]	@ (80052cc <_dtoa_r+0x71c>)
 80051b8:	f7fc fa80 	bl	80016bc <__aeabi_dmul>
 80051bc:	9416      	str	r4, [sp, #88]	@ 0x58
 80051be:	900a      	str	r0, [sp, #40]	@ 0x28
 80051c0:	910b      	str	r1, [sp, #44]	@ 0x2c
 80051c2:	e7c3      	b.n	800514c <_dtoa_r+0x59c>
 80051c4:	0030      	movs	r0, r6
 80051c6:	0039      	movs	r1, r7
 80051c8:	f7fc fa78 	bl	80016bc <__aeabi_dmul>
 80051cc:	9d08      	ldr	r5, [sp, #32]
 80051ce:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80051d0:	002b      	movs	r3, r5
 80051d2:	4694      	mov	ip, r2
 80051d4:	9016      	str	r0, [sp, #88]	@ 0x58
 80051d6:	9117      	str	r1, [sp, #92]	@ 0x5c
 80051d8:	4463      	add	r3, ip
 80051da:	9319      	str	r3, [sp, #100]	@ 0x64
 80051dc:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80051de:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80051e0:	f7fd f8f2 	bl	80023c8 <__aeabi_d2iz>
 80051e4:	0004      	movs	r4, r0
 80051e6:	f7fd f92b 	bl	8002440 <__aeabi_i2d>
 80051ea:	000b      	movs	r3, r1
 80051ec:	0002      	movs	r2, r0
 80051ee:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80051f0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80051f2:	f7fc fd2b 	bl	8001c4c <__aeabi_dsub>
 80051f6:	3430      	adds	r4, #48	@ 0x30
 80051f8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80051fa:	702c      	strb	r4, [r5, #0]
 80051fc:	3501      	adds	r5, #1
 80051fe:	0006      	movs	r6, r0
 8005200:	000f      	movs	r7, r1
 8005202:	42ab      	cmp	r3, r5
 8005204:	d129      	bne.n	800525a <_dtoa_r+0x6aa>
 8005206:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8005208:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 800520a:	9b08      	ldr	r3, [sp, #32]
 800520c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 800520e:	469c      	mov	ip, r3
 8005210:	2200      	movs	r2, #0
 8005212:	4b32      	ldr	r3, [pc, #200]	@ (80052dc <_dtoa_r+0x72c>)
 8005214:	4464      	add	r4, ip
 8005216:	f7fb faa9 	bl	800076c <__aeabi_dadd>
 800521a:	0002      	movs	r2, r0
 800521c:	000b      	movs	r3, r1
 800521e:	0030      	movs	r0, r6
 8005220:	0039      	movs	r1, r7
 8005222:	f7fb f92d 	bl	8000480 <__aeabi_dcmpgt>
 8005226:	2800      	cmp	r0, #0
 8005228:	d15c      	bne.n	80052e4 <_dtoa_r+0x734>
 800522a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 800522c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800522e:	2000      	movs	r0, #0
 8005230:	492a      	ldr	r1, [pc, #168]	@ (80052dc <_dtoa_r+0x72c>)
 8005232:	f7fc fd0b 	bl	8001c4c <__aeabi_dsub>
 8005236:	0002      	movs	r2, r0
 8005238:	000b      	movs	r3, r1
 800523a:	0030      	movs	r0, r6
 800523c:	0039      	movs	r1, r7
 800523e:	f7fb f90b 	bl	8000458 <__aeabi_dcmplt>
 8005242:	2800      	cmp	r0, #0
 8005244:	d100      	bne.n	8005248 <_dtoa_r+0x698>
 8005246:	e6ee      	b.n	8005026 <_dtoa_r+0x476>
 8005248:	0023      	movs	r3, r4
 800524a:	3c01      	subs	r4, #1
 800524c:	7822      	ldrb	r2, [r4, #0]
 800524e:	2a30      	cmp	r2, #48	@ 0x30
 8005250:	d0fa      	beq.n	8005248 <_dtoa_r+0x698>
 8005252:	001c      	movs	r4, r3
 8005254:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005256:	9304      	str	r3, [sp, #16]
 8005258:	e73e      	b.n	80050d8 <_dtoa_r+0x528>
 800525a:	2200      	movs	r2, #0
 800525c:	4b1b      	ldr	r3, [pc, #108]	@ (80052cc <_dtoa_r+0x71c>)
 800525e:	f7fc fa2d 	bl	80016bc <__aeabi_dmul>
 8005262:	900a      	str	r0, [sp, #40]	@ 0x28
 8005264:	910b      	str	r1, [sp, #44]	@ 0x2c
 8005266:	e7b9      	b.n	80051dc <_dtoa_r+0x62c>
 8005268:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800526a:	2b00      	cmp	r3, #0
 800526c:	d10c      	bne.n	8005288 <_dtoa_r+0x6d8>
 800526e:	9806      	ldr	r0, [sp, #24]
 8005270:	9907      	ldr	r1, [sp, #28]
 8005272:	2200      	movs	r2, #0
 8005274:	4b18      	ldr	r3, [pc, #96]	@ (80052d8 <_dtoa_r+0x728>)
 8005276:	f7fc fa21 	bl	80016bc <__aeabi_dmul>
 800527a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800527c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800527e:	f7fb f909 	bl	8000494 <__aeabi_dcmpge>
 8005282:	2800      	cmp	r0, #0
 8005284:	d100      	bne.n	8005288 <_dtoa_r+0x6d8>
 8005286:	e164      	b.n	8005552 <_dtoa_r+0x9a2>
 8005288:	2600      	movs	r6, #0
 800528a:	0037      	movs	r7, r6
 800528c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800528e:	9c08      	ldr	r4, [sp, #32]
 8005290:	43db      	mvns	r3, r3
 8005292:	930c      	str	r3, [sp, #48]	@ 0x30
 8005294:	2300      	movs	r3, #0
 8005296:	9304      	str	r3, [sp, #16]
 8005298:	0031      	movs	r1, r6
 800529a:	9803      	ldr	r0, [sp, #12]
 800529c:	f000 fd8c 	bl	8005db8 <_Bfree>
 80052a0:	2f00      	cmp	r7, #0
 80052a2:	d0d7      	beq.n	8005254 <_dtoa_r+0x6a4>
 80052a4:	9b04      	ldr	r3, [sp, #16]
 80052a6:	2b00      	cmp	r3, #0
 80052a8:	d005      	beq.n	80052b6 <_dtoa_r+0x706>
 80052aa:	42bb      	cmp	r3, r7
 80052ac:	d003      	beq.n	80052b6 <_dtoa_r+0x706>
 80052ae:	0019      	movs	r1, r3
 80052b0:	9803      	ldr	r0, [sp, #12]
 80052b2:	f000 fd81 	bl	8005db8 <_Bfree>
 80052b6:	0039      	movs	r1, r7
 80052b8:	9803      	ldr	r0, [sp, #12]
 80052ba:	f000 fd7d 	bl	8005db8 <_Bfree>
 80052be:	e7c9      	b.n	8005254 <_dtoa_r+0x6a4>
 80052c0:	08007400 	.word	0x08007400
 80052c4:	080073d8 	.word	0x080073d8
 80052c8:	3ff00000 	.word	0x3ff00000
 80052cc:	40240000 	.word	0x40240000
 80052d0:	401c0000 	.word	0x401c0000
 80052d4:	fcc00000 	.word	0xfcc00000
 80052d8:	40140000 	.word	0x40140000
 80052dc:	3fe00000 	.word	0x3fe00000
 80052e0:	9b04      	ldr	r3, [sp, #16]
 80052e2:	930c      	str	r3, [sp, #48]	@ 0x30
 80052e4:	0023      	movs	r3, r4
 80052e6:	001c      	movs	r4, r3
 80052e8:	3b01      	subs	r3, #1
 80052ea:	781a      	ldrb	r2, [r3, #0]
 80052ec:	2a39      	cmp	r2, #57	@ 0x39
 80052ee:	d108      	bne.n	8005302 <_dtoa_r+0x752>
 80052f0:	9a08      	ldr	r2, [sp, #32]
 80052f2:	429a      	cmp	r2, r3
 80052f4:	d1f7      	bne.n	80052e6 <_dtoa_r+0x736>
 80052f6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80052f8:	9908      	ldr	r1, [sp, #32]
 80052fa:	3201      	adds	r2, #1
 80052fc:	920c      	str	r2, [sp, #48]	@ 0x30
 80052fe:	2230      	movs	r2, #48	@ 0x30
 8005300:	700a      	strb	r2, [r1, #0]
 8005302:	781a      	ldrb	r2, [r3, #0]
 8005304:	3201      	adds	r2, #1
 8005306:	701a      	strb	r2, [r3, #0]
 8005308:	e7a4      	b.n	8005254 <_dtoa_r+0x6a4>
 800530a:	2200      	movs	r2, #0
 800530c:	4bc6      	ldr	r3, [pc, #792]	@ (8005628 <_dtoa_r+0xa78>)
 800530e:	f7fc f9d5 	bl	80016bc <__aeabi_dmul>
 8005312:	2200      	movs	r2, #0
 8005314:	2300      	movs	r3, #0
 8005316:	0006      	movs	r6, r0
 8005318:	000f      	movs	r7, r1
 800531a:	f7fb f897 	bl	800044c <__aeabi_dcmpeq>
 800531e:	2800      	cmp	r0, #0
 8005320:	d100      	bne.n	8005324 <_dtoa_r+0x774>
 8005322:	e6a1      	b.n	8005068 <_dtoa_r+0x4b8>
 8005324:	e6d8      	b.n	80050d8 <_dtoa_r+0x528>
 8005326:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 8005328:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 800532a:	9c06      	ldr	r4, [sp, #24]
 800532c:	2f00      	cmp	r7, #0
 800532e:	d014      	beq.n	800535a <_dtoa_r+0x7aa>
 8005330:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8005332:	2a01      	cmp	r2, #1
 8005334:	dd00      	ble.n	8005338 <_dtoa_r+0x788>
 8005336:	e0c8      	b.n	80054ca <_dtoa_r+0x91a>
 8005338:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 800533a:	2a00      	cmp	r2, #0
 800533c:	d100      	bne.n	8005340 <_dtoa_r+0x790>
 800533e:	e0be      	b.n	80054be <_dtoa_r+0x90e>
 8005340:	4aba      	ldr	r2, [pc, #744]	@ (800562c <_dtoa_r+0xa7c>)
 8005342:	189b      	adds	r3, r3, r2
 8005344:	9a06      	ldr	r2, [sp, #24]
 8005346:	2101      	movs	r1, #1
 8005348:	18d2      	adds	r2, r2, r3
 800534a:	9206      	str	r2, [sp, #24]
 800534c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800534e:	9803      	ldr	r0, [sp, #12]
 8005350:	18d3      	adds	r3, r2, r3
 8005352:	930d      	str	r3, [sp, #52]	@ 0x34
 8005354:	f000 fde8 	bl	8005f28 <__i2b>
 8005358:	0007      	movs	r7, r0
 800535a:	2c00      	cmp	r4, #0
 800535c:	d00e      	beq.n	800537c <_dtoa_r+0x7cc>
 800535e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8005360:	2b00      	cmp	r3, #0
 8005362:	dd0b      	ble.n	800537c <_dtoa_r+0x7cc>
 8005364:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8005366:	0023      	movs	r3, r4
 8005368:	4294      	cmp	r4, r2
 800536a:	dd00      	ble.n	800536e <_dtoa_r+0x7be>
 800536c:	0013      	movs	r3, r2
 800536e:	9a06      	ldr	r2, [sp, #24]
 8005370:	1ae4      	subs	r4, r4, r3
 8005372:	1ad2      	subs	r2, r2, r3
 8005374:	9206      	str	r2, [sp, #24]
 8005376:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8005378:	1ad3      	subs	r3, r2, r3
 800537a:	930d      	str	r3, [sp, #52]	@ 0x34
 800537c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800537e:	2b00      	cmp	r3, #0
 8005380:	d01f      	beq.n	80053c2 <_dtoa_r+0x812>
 8005382:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8005384:	2b00      	cmp	r3, #0
 8005386:	d100      	bne.n	800538a <_dtoa_r+0x7da>
 8005388:	e0b5      	b.n	80054f6 <_dtoa_r+0x946>
 800538a:	2d00      	cmp	r5, #0
 800538c:	d010      	beq.n	80053b0 <_dtoa_r+0x800>
 800538e:	0039      	movs	r1, r7
 8005390:	002a      	movs	r2, r5
 8005392:	9803      	ldr	r0, [sp, #12]
 8005394:	f000 fe92 	bl	80060bc <__pow5mult>
 8005398:	9a05      	ldr	r2, [sp, #20]
 800539a:	0001      	movs	r1, r0
 800539c:	0007      	movs	r7, r0
 800539e:	9803      	ldr	r0, [sp, #12]
 80053a0:	f000 fdda 	bl	8005f58 <__multiply>
 80053a4:	0006      	movs	r6, r0
 80053a6:	9905      	ldr	r1, [sp, #20]
 80053a8:	9803      	ldr	r0, [sp, #12]
 80053aa:	f000 fd05 	bl	8005db8 <_Bfree>
 80053ae:	9605      	str	r6, [sp, #20]
 80053b0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80053b2:	1b5a      	subs	r2, r3, r5
 80053b4:	42ab      	cmp	r3, r5
 80053b6:	d004      	beq.n	80053c2 <_dtoa_r+0x812>
 80053b8:	9905      	ldr	r1, [sp, #20]
 80053ba:	9803      	ldr	r0, [sp, #12]
 80053bc:	f000 fe7e 	bl	80060bc <__pow5mult>
 80053c0:	9005      	str	r0, [sp, #20]
 80053c2:	2101      	movs	r1, #1
 80053c4:	9803      	ldr	r0, [sp, #12]
 80053c6:	f000 fdaf 	bl	8005f28 <__i2b>
 80053ca:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80053cc:	0006      	movs	r6, r0
 80053ce:	2b00      	cmp	r3, #0
 80053d0:	d100      	bne.n	80053d4 <_dtoa_r+0x824>
 80053d2:	e1bc      	b.n	800574e <_dtoa_r+0xb9e>
 80053d4:	001a      	movs	r2, r3
 80053d6:	0001      	movs	r1, r0
 80053d8:	9803      	ldr	r0, [sp, #12]
 80053da:	f000 fe6f 	bl	80060bc <__pow5mult>
 80053de:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80053e0:	0006      	movs	r6, r0
 80053e2:	2500      	movs	r5, #0
 80053e4:	2b01      	cmp	r3, #1
 80053e6:	dc16      	bgt.n	8005416 <_dtoa_r+0x866>
 80053e8:	2500      	movs	r5, #0
 80053ea:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80053ec:	42ab      	cmp	r3, r5
 80053ee:	d10e      	bne.n	800540e <_dtoa_r+0x85e>
 80053f0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80053f2:	031b      	lsls	r3, r3, #12
 80053f4:	42ab      	cmp	r3, r5
 80053f6:	d10a      	bne.n	800540e <_dtoa_r+0x85e>
 80053f8:	4b8d      	ldr	r3, [pc, #564]	@ (8005630 <_dtoa_r+0xa80>)
 80053fa:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80053fc:	4213      	tst	r3, r2
 80053fe:	d006      	beq.n	800540e <_dtoa_r+0x85e>
 8005400:	9b06      	ldr	r3, [sp, #24]
 8005402:	3501      	adds	r5, #1
 8005404:	3301      	adds	r3, #1
 8005406:	9306      	str	r3, [sp, #24]
 8005408:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800540a:	3301      	adds	r3, #1
 800540c:	930d      	str	r3, [sp, #52]	@ 0x34
 800540e:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8005410:	2001      	movs	r0, #1
 8005412:	2b00      	cmp	r3, #0
 8005414:	d008      	beq.n	8005428 <_dtoa_r+0x878>
 8005416:	6933      	ldr	r3, [r6, #16]
 8005418:	3303      	adds	r3, #3
 800541a:	009b      	lsls	r3, r3, #2
 800541c:	18f3      	adds	r3, r6, r3
 800541e:	6858      	ldr	r0, [r3, #4]
 8005420:	f000 fd32 	bl	8005e88 <__hi0bits>
 8005424:	2320      	movs	r3, #32
 8005426:	1a18      	subs	r0, r3, r0
 8005428:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800542a:	1818      	adds	r0, r3, r0
 800542c:	0002      	movs	r2, r0
 800542e:	231f      	movs	r3, #31
 8005430:	401a      	ands	r2, r3
 8005432:	4218      	tst	r0, r3
 8005434:	d065      	beq.n	8005502 <_dtoa_r+0x952>
 8005436:	3301      	adds	r3, #1
 8005438:	1a9b      	subs	r3, r3, r2
 800543a:	2b04      	cmp	r3, #4
 800543c:	dd5d      	ble.n	80054fa <_dtoa_r+0x94a>
 800543e:	231c      	movs	r3, #28
 8005440:	1a9b      	subs	r3, r3, r2
 8005442:	9a06      	ldr	r2, [sp, #24]
 8005444:	18e4      	adds	r4, r4, r3
 8005446:	18d2      	adds	r2, r2, r3
 8005448:	9206      	str	r2, [sp, #24]
 800544a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800544c:	18d3      	adds	r3, r2, r3
 800544e:	930d      	str	r3, [sp, #52]	@ 0x34
 8005450:	9b06      	ldr	r3, [sp, #24]
 8005452:	2b00      	cmp	r3, #0
 8005454:	dd05      	ble.n	8005462 <_dtoa_r+0x8b2>
 8005456:	001a      	movs	r2, r3
 8005458:	9905      	ldr	r1, [sp, #20]
 800545a:	9803      	ldr	r0, [sp, #12]
 800545c:	f000 fe8a 	bl	8006174 <__lshift>
 8005460:	9005      	str	r0, [sp, #20]
 8005462:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8005464:	2b00      	cmp	r3, #0
 8005466:	dd05      	ble.n	8005474 <_dtoa_r+0x8c4>
 8005468:	0031      	movs	r1, r6
 800546a:	001a      	movs	r2, r3
 800546c:	9803      	ldr	r0, [sp, #12]
 800546e:	f000 fe81 	bl	8006174 <__lshift>
 8005472:	0006      	movs	r6, r0
 8005474:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8005476:	2b00      	cmp	r3, #0
 8005478:	d045      	beq.n	8005506 <_dtoa_r+0x956>
 800547a:	0031      	movs	r1, r6
 800547c:	9805      	ldr	r0, [sp, #20]
 800547e:	f000 fee5 	bl	800624c <__mcmp>
 8005482:	2800      	cmp	r0, #0
 8005484:	da3f      	bge.n	8005506 <_dtoa_r+0x956>
 8005486:	9b04      	ldr	r3, [sp, #16]
 8005488:	220a      	movs	r2, #10
 800548a:	3b01      	subs	r3, #1
 800548c:	930c      	str	r3, [sp, #48]	@ 0x30
 800548e:	9905      	ldr	r1, [sp, #20]
 8005490:	2300      	movs	r3, #0
 8005492:	9803      	ldr	r0, [sp, #12]
 8005494:	f000 fcb4 	bl	8005e00 <__multadd>
 8005498:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800549a:	9005      	str	r0, [sp, #20]
 800549c:	2b00      	cmp	r3, #0
 800549e:	d100      	bne.n	80054a2 <_dtoa_r+0x8f2>
 80054a0:	e15c      	b.n	800575c <_dtoa_r+0xbac>
 80054a2:	2300      	movs	r3, #0
 80054a4:	0039      	movs	r1, r7
 80054a6:	220a      	movs	r2, #10
 80054a8:	9803      	ldr	r0, [sp, #12]
 80054aa:	f000 fca9 	bl	8005e00 <__multadd>
 80054ae:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80054b0:	0007      	movs	r7, r0
 80054b2:	2b00      	cmp	r3, #0
 80054b4:	dc55      	bgt.n	8005562 <_dtoa_r+0x9b2>
 80054b6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80054b8:	2b02      	cmp	r3, #2
 80054ba:	dc2d      	bgt.n	8005518 <_dtoa_r+0x968>
 80054bc:	e051      	b.n	8005562 <_dtoa_r+0x9b2>
 80054be:	2336      	movs	r3, #54	@ 0x36
 80054c0:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 80054c2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80054c4:	9c06      	ldr	r4, [sp, #24]
 80054c6:	1a9b      	subs	r3, r3, r2
 80054c8:	e73c      	b.n	8005344 <_dtoa_r+0x794>
 80054ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80054cc:	1e5d      	subs	r5, r3, #1
 80054ce:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80054d0:	42ab      	cmp	r3, r5
 80054d2:	db08      	blt.n	80054e6 <_dtoa_r+0x936>
 80054d4:	1b5d      	subs	r5, r3, r5
 80054d6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80054d8:	9c06      	ldr	r4, [sp, #24]
 80054da:	2b00      	cmp	r3, #0
 80054dc:	db00      	blt.n	80054e0 <_dtoa_r+0x930>
 80054de:	e731      	b.n	8005344 <_dtoa_r+0x794>
 80054e0:	1ae4      	subs	r4, r4, r3
 80054e2:	2300      	movs	r3, #0
 80054e4:	e72e      	b.n	8005344 <_dtoa_r+0x794>
 80054e6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80054e8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80054ea:	1aeb      	subs	r3, r5, r3
 80054ec:	18d3      	adds	r3, r2, r3
 80054ee:	950f      	str	r5, [sp, #60]	@ 0x3c
 80054f0:	9314      	str	r3, [sp, #80]	@ 0x50
 80054f2:	2500      	movs	r5, #0
 80054f4:	e7ef      	b.n	80054d6 <_dtoa_r+0x926>
 80054f6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80054f8:	e75e      	b.n	80053b8 <_dtoa_r+0x808>
 80054fa:	2b04      	cmp	r3, #4
 80054fc:	d0a8      	beq.n	8005450 <_dtoa_r+0x8a0>
 80054fe:	331c      	adds	r3, #28
 8005500:	e79f      	b.n	8005442 <_dtoa_r+0x892>
 8005502:	0013      	movs	r3, r2
 8005504:	e7fb      	b.n	80054fe <_dtoa_r+0x94e>
 8005506:	9b04      	ldr	r3, [sp, #16]
 8005508:	930c      	str	r3, [sp, #48]	@ 0x30
 800550a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800550c:	930e      	str	r3, [sp, #56]	@ 0x38
 800550e:	2b00      	cmp	r3, #0
 8005510:	dc23      	bgt.n	800555a <_dtoa_r+0x9aa>
 8005512:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8005514:	2b02      	cmp	r3, #2
 8005516:	dd20      	ble.n	800555a <_dtoa_r+0x9aa>
 8005518:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800551a:	2b00      	cmp	r3, #0
 800551c:	d000      	beq.n	8005520 <_dtoa_r+0x970>
 800551e:	e6b5      	b.n	800528c <_dtoa_r+0x6dc>
 8005520:	0031      	movs	r1, r6
 8005522:	2205      	movs	r2, #5
 8005524:	9803      	ldr	r0, [sp, #12]
 8005526:	f000 fc6b 	bl	8005e00 <__multadd>
 800552a:	0006      	movs	r6, r0
 800552c:	0001      	movs	r1, r0
 800552e:	9805      	ldr	r0, [sp, #20]
 8005530:	f000 fe8c 	bl	800624c <__mcmp>
 8005534:	2800      	cmp	r0, #0
 8005536:	dc00      	bgt.n	800553a <_dtoa_r+0x98a>
 8005538:	e6a8      	b.n	800528c <_dtoa_r+0x6dc>
 800553a:	9b08      	ldr	r3, [sp, #32]
 800553c:	9a08      	ldr	r2, [sp, #32]
 800553e:	1c5c      	adds	r4, r3, #1
 8005540:	2331      	movs	r3, #49	@ 0x31
 8005542:	7013      	strb	r3, [r2, #0]
 8005544:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005546:	3301      	adds	r3, #1
 8005548:	930c      	str	r3, [sp, #48]	@ 0x30
 800554a:	e6a3      	b.n	8005294 <_dtoa_r+0x6e4>
 800554c:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800554e:	0037      	movs	r7, r6
 8005550:	e7f3      	b.n	800553a <_dtoa_r+0x98a>
 8005552:	9b04      	ldr	r3, [sp, #16]
 8005554:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 8005556:	930c      	str	r3, [sp, #48]	@ 0x30
 8005558:	e7f9      	b.n	800554e <_dtoa_r+0x99e>
 800555a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800555c:	2b00      	cmp	r3, #0
 800555e:	d100      	bne.n	8005562 <_dtoa_r+0x9b2>
 8005560:	e100      	b.n	8005764 <_dtoa_r+0xbb4>
 8005562:	2c00      	cmp	r4, #0
 8005564:	dd05      	ble.n	8005572 <_dtoa_r+0x9c2>
 8005566:	0039      	movs	r1, r7
 8005568:	0022      	movs	r2, r4
 800556a:	9803      	ldr	r0, [sp, #12]
 800556c:	f000 fe02 	bl	8006174 <__lshift>
 8005570:	0007      	movs	r7, r0
 8005572:	0038      	movs	r0, r7
 8005574:	2d00      	cmp	r5, #0
 8005576:	d018      	beq.n	80055aa <_dtoa_r+0x9fa>
 8005578:	6879      	ldr	r1, [r7, #4]
 800557a:	9803      	ldr	r0, [sp, #12]
 800557c:	f000 fbd8 	bl	8005d30 <_Balloc>
 8005580:	1e04      	subs	r4, r0, #0
 8005582:	d105      	bne.n	8005590 <_dtoa_r+0x9e0>
 8005584:	0022      	movs	r2, r4
 8005586:	4b2b      	ldr	r3, [pc, #172]	@ (8005634 <_dtoa_r+0xa84>)
 8005588:	482b      	ldr	r0, [pc, #172]	@ (8005638 <_dtoa_r+0xa88>)
 800558a:	492c      	ldr	r1, [pc, #176]	@ (800563c <_dtoa_r+0xa8c>)
 800558c:	f7ff fb25 	bl	8004bda <_dtoa_r+0x2a>
 8005590:	0039      	movs	r1, r7
 8005592:	693a      	ldr	r2, [r7, #16]
 8005594:	310c      	adds	r1, #12
 8005596:	3202      	adds	r2, #2
 8005598:	0092      	lsls	r2, r2, #2
 800559a:	300c      	adds	r0, #12
 800559c:	f001 f85a 	bl	8006654 <memcpy>
 80055a0:	2201      	movs	r2, #1
 80055a2:	0021      	movs	r1, r4
 80055a4:	9803      	ldr	r0, [sp, #12]
 80055a6:	f000 fde5 	bl	8006174 <__lshift>
 80055aa:	9b08      	ldr	r3, [sp, #32]
 80055ac:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80055ae:	9306      	str	r3, [sp, #24]
 80055b0:	3b01      	subs	r3, #1
 80055b2:	189b      	adds	r3, r3, r2
 80055b4:	2201      	movs	r2, #1
 80055b6:	9704      	str	r7, [sp, #16]
 80055b8:	0007      	movs	r7, r0
 80055ba:	930f      	str	r3, [sp, #60]	@ 0x3c
 80055bc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80055be:	4013      	ands	r3, r2
 80055c0:	930e      	str	r3, [sp, #56]	@ 0x38
 80055c2:	0031      	movs	r1, r6
 80055c4:	9805      	ldr	r0, [sp, #20]
 80055c6:	f7ff fa65 	bl	8004a94 <quorem>
 80055ca:	9904      	ldr	r1, [sp, #16]
 80055cc:	0005      	movs	r5, r0
 80055ce:	900a      	str	r0, [sp, #40]	@ 0x28
 80055d0:	9805      	ldr	r0, [sp, #20]
 80055d2:	f000 fe3b 	bl	800624c <__mcmp>
 80055d6:	003a      	movs	r2, r7
 80055d8:	900d      	str	r0, [sp, #52]	@ 0x34
 80055da:	0031      	movs	r1, r6
 80055dc:	9803      	ldr	r0, [sp, #12]
 80055de:	f000 fe51 	bl	8006284 <__mdiff>
 80055e2:	2201      	movs	r2, #1
 80055e4:	68c3      	ldr	r3, [r0, #12]
 80055e6:	0004      	movs	r4, r0
 80055e8:	3530      	adds	r5, #48	@ 0x30
 80055ea:	9209      	str	r2, [sp, #36]	@ 0x24
 80055ec:	2b00      	cmp	r3, #0
 80055ee:	d104      	bne.n	80055fa <_dtoa_r+0xa4a>
 80055f0:	0001      	movs	r1, r0
 80055f2:	9805      	ldr	r0, [sp, #20]
 80055f4:	f000 fe2a 	bl	800624c <__mcmp>
 80055f8:	9009      	str	r0, [sp, #36]	@ 0x24
 80055fa:	0021      	movs	r1, r4
 80055fc:	9803      	ldr	r0, [sp, #12]
 80055fe:	f000 fbdb 	bl	8005db8 <_Bfree>
 8005602:	9b06      	ldr	r3, [sp, #24]
 8005604:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005606:	1c5c      	adds	r4, r3, #1
 8005608:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 800560a:	4313      	orrs	r3, r2
 800560c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800560e:	4313      	orrs	r3, r2
 8005610:	d116      	bne.n	8005640 <_dtoa_r+0xa90>
 8005612:	2d39      	cmp	r5, #57	@ 0x39
 8005614:	d02f      	beq.n	8005676 <_dtoa_r+0xac6>
 8005616:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8005618:	2b00      	cmp	r3, #0
 800561a:	dd01      	ble.n	8005620 <_dtoa_r+0xa70>
 800561c:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 800561e:	3531      	adds	r5, #49	@ 0x31
 8005620:	9b06      	ldr	r3, [sp, #24]
 8005622:	701d      	strb	r5, [r3, #0]
 8005624:	e638      	b.n	8005298 <_dtoa_r+0x6e8>
 8005626:	46c0      	nop			@ (mov r8, r8)
 8005628:	40240000 	.word	0x40240000
 800562c:	00000433 	.word	0x00000433
 8005630:	7ff00000 	.word	0x7ff00000
 8005634:	0800734e 	.word	0x0800734e
 8005638:	080072f6 	.word	0x080072f6
 800563c:	000002ef 	.word	0x000002ef
 8005640:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8005642:	2b00      	cmp	r3, #0
 8005644:	db04      	blt.n	8005650 <_dtoa_r+0xaa0>
 8005646:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8005648:	4313      	orrs	r3, r2
 800564a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800564c:	4313      	orrs	r3, r2
 800564e:	d11e      	bne.n	800568e <_dtoa_r+0xade>
 8005650:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005652:	2b00      	cmp	r3, #0
 8005654:	dde4      	ble.n	8005620 <_dtoa_r+0xa70>
 8005656:	9905      	ldr	r1, [sp, #20]
 8005658:	2201      	movs	r2, #1
 800565a:	9803      	ldr	r0, [sp, #12]
 800565c:	f000 fd8a 	bl	8006174 <__lshift>
 8005660:	0031      	movs	r1, r6
 8005662:	9005      	str	r0, [sp, #20]
 8005664:	f000 fdf2 	bl	800624c <__mcmp>
 8005668:	2800      	cmp	r0, #0
 800566a:	dc02      	bgt.n	8005672 <_dtoa_r+0xac2>
 800566c:	d1d8      	bne.n	8005620 <_dtoa_r+0xa70>
 800566e:	07eb      	lsls	r3, r5, #31
 8005670:	d5d6      	bpl.n	8005620 <_dtoa_r+0xa70>
 8005672:	2d39      	cmp	r5, #57	@ 0x39
 8005674:	d1d2      	bne.n	800561c <_dtoa_r+0xa6c>
 8005676:	2339      	movs	r3, #57	@ 0x39
 8005678:	9a06      	ldr	r2, [sp, #24]
 800567a:	7013      	strb	r3, [r2, #0]
 800567c:	0023      	movs	r3, r4
 800567e:	001c      	movs	r4, r3
 8005680:	3b01      	subs	r3, #1
 8005682:	781a      	ldrb	r2, [r3, #0]
 8005684:	2a39      	cmp	r2, #57	@ 0x39
 8005686:	d04f      	beq.n	8005728 <_dtoa_r+0xb78>
 8005688:	3201      	adds	r2, #1
 800568a:	701a      	strb	r2, [r3, #0]
 800568c:	e604      	b.n	8005298 <_dtoa_r+0x6e8>
 800568e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005690:	2b00      	cmp	r3, #0
 8005692:	dd03      	ble.n	800569c <_dtoa_r+0xaec>
 8005694:	2d39      	cmp	r5, #57	@ 0x39
 8005696:	d0ee      	beq.n	8005676 <_dtoa_r+0xac6>
 8005698:	3501      	adds	r5, #1
 800569a:	e7c1      	b.n	8005620 <_dtoa_r+0xa70>
 800569c:	9b06      	ldr	r3, [sp, #24]
 800569e:	9a06      	ldr	r2, [sp, #24]
 80056a0:	701d      	strb	r5, [r3, #0]
 80056a2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80056a4:	4293      	cmp	r3, r2
 80056a6:	d02a      	beq.n	80056fe <_dtoa_r+0xb4e>
 80056a8:	2300      	movs	r3, #0
 80056aa:	220a      	movs	r2, #10
 80056ac:	9905      	ldr	r1, [sp, #20]
 80056ae:	9803      	ldr	r0, [sp, #12]
 80056b0:	f000 fba6 	bl	8005e00 <__multadd>
 80056b4:	9b04      	ldr	r3, [sp, #16]
 80056b6:	9005      	str	r0, [sp, #20]
 80056b8:	42bb      	cmp	r3, r7
 80056ba:	d109      	bne.n	80056d0 <_dtoa_r+0xb20>
 80056bc:	2300      	movs	r3, #0
 80056be:	220a      	movs	r2, #10
 80056c0:	9904      	ldr	r1, [sp, #16]
 80056c2:	9803      	ldr	r0, [sp, #12]
 80056c4:	f000 fb9c 	bl	8005e00 <__multadd>
 80056c8:	9004      	str	r0, [sp, #16]
 80056ca:	0007      	movs	r7, r0
 80056cc:	9406      	str	r4, [sp, #24]
 80056ce:	e778      	b.n	80055c2 <_dtoa_r+0xa12>
 80056d0:	9904      	ldr	r1, [sp, #16]
 80056d2:	2300      	movs	r3, #0
 80056d4:	220a      	movs	r2, #10
 80056d6:	9803      	ldr	r0, [sp, #12]
 80056d8:	f000 fb92 	bl	8005e00 <__multadd>
 80056dc:	2300      	movs	r3, #0
 80056de:	9004      	str	r0, [sp, #16]
 80056e0:	220a      	movs	r2, #10
 80056e2:	0039      	movs	r1, r7
 80056e4:	9803      	ldr	r0, [sp, #12]
 80056e6:	f000 fb8b 	bl	8005e00 <__multadd>
 80056ea:	e7ee      	b.n	80056ca <_dtoa_r+0xb1a>
 80056ec:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80056ee:	2401      	movs	r4, #1
 80056f0:	2b00      	cmp	r3, #0
 80056f2:	dd00      	ble.n	80056f6 <_dtoa_r+0xb46>
 80056f4:	001c      	movs	r4, r3
 80056f6:	9b08      	ldr	r3, [sp, #32]
 80056f8:	191c      	adds	r4, r3, r4
 80056fa:	2300      	movs	r3, #0
 80056fc:	9304      	str	r3, [sp, #16]
 80056fe:	9905      	ldr	r1, [sp, #20]
 8005700:	2201      	movs	r2, #1
 8005702:	9803      	ldr	r0, [sp, #12]
 8005704:	f000 fd36 	bl	8006174 <__lshift>
 8005708:	0031      	movs	r1, r6
 800570a:	9005      	str	r0, [sp, #20]
 800570c:	f000 fd9e 	bl	800624c <__mcmp>
 8005710:	2800      	cmp	r0, #0
 8005712:	dcb3      	bgt.n	800567c <_dtoa_r+0xacc>
 8005714:	d101      	bne.n	800571a <_dtoa_r+0xb6a>
 8005716:	07ed      	lsls	r5, r5, #31
 8005718:	d4b0      	bmi.n	800567c <_dtoa_r+0xacc>
 800571a:	0023      	movs	r3, r4
 800571c:	001c      	movs	r4, r3
 800571e:	3b01      	subs	r3, #1
 8005720:	781a      	ldrb	r2, [r3, #0]
 8005722:	2a30      	cmp	r2, #48	@ 0x30
 8005724:	d0fa      	beq.n	800571c <_dtoa_r+0xb6c>
 8005726:	e5b7      	b.n	8005298 <_dtoa_r+0x6e8>
 8005728:	9a08      	ldr	r2, [sp, #32]
 800572a:	429a      	cmp	r2, r3
 800572c:	d1a7      	bne.n	800567e <_dtoa_r+0xace>
 800572e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005730:	3301      	adds	r3, #1
 8005732:	930c      	str	r3, [sp, #48]	@ 0x30
 8005734:	2331      	movs	r3, #49	@ 0x31
 8005736:	7013      	strb	r3, [r2, #0]
 8005738:	e5ae      	b.n	8005298 <_dtoa_r+0x6e8>
 800573a:	4b15      	ldr	r3, [pc, #84]	@ (8005790 <_dtoa_r+0xbe0>)
 800573c:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 800573e:	9308      	str	r3, [sp, #32]
 8005740:	4b14      	ldr	r3, [pc, #80]	@ (8005794 <_dtoa_r+0xbe4>)
 8005742:	2a00      	cmp	r2, #0
 8005744:	d001      	beq.n	800574a <_dtoa_r+0xb9a>
 8005746:	f7ff fa7b 	bl	8004c40 <_dtoa_r+0x90>
 800574a:	f7ff fa7b 	bl	8004c44 <_dtoa_r+0x94>
 800574e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8005750:	2b01      	cmp	r3, #1
 8005752:	dc00      	bgt.n	8005756 <_dtoa_r+0xba6>
 8005754:	e648      	b.n	80053e8 <_dtoa_r+0x838>
 8005756:	2001      	movs	r0, #1
 8005758:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 800575a:	e665      	b.n	8005428 <_dtoa_r+0x878>
 800575c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800575e:	2b00      	cmp	r3, #0
 8005760:	dc00      	bgt.n	8005764 <_dtoa_r+0xbb4>
 8005762:	e6d6      	b.n	8005512 <_dtoa_r+0x962>
 8005764:	2400      	movs	r4, #0
 8005766:	0031      	movs	r1, r6
 8005768:	9805      	ldr	r0, [sp, #20]
 800576a:	f7ff f993 	bl	8004a94 <quorem>
 800576e:	9b08      	ldr	r3, [sp, #32]
 8005770:	3030      	adds	r0, #48	@ 0x30
 8005772:	5518      	strb	r0, [r3, r4]
 8005774:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005776:	3401      	adds	r4, #1
 8005778:	0005      	movs	r5, r0
 800577a:	429c      	cmp	r4, r3
 800577c:	dab6      	bge.n	80056ec <_dtoa_r+0xb3c>
 800577e:	2300      	movs	r3, #0
 8005780:	220a      	movs	r2, #10
 8005782:	9905      	ldr	r1, [sp, #20]
 8005784:	9803      	ldr	r0, [sp, #12]
 8005786:	f000 fb3b 	bl	8005e00 <__multadd>
 800578a:	9005      	str	r0, [sp, #20]
 800578c:	e7eb      	b.n	8005766 <_dtoa_r+0xbb6>
 800578e:	46c0      	nop			@ (mov r8, r8)
 8005790:	080072d2 	.word	0x080072d2
 8005794:	080072da 	.word	0x080072da

08005798 <__ssputs_r>:
 8005798:	b5f0      	push	{r4, r5, r6, r7, lr}
 800579a:	688e      	ldr	r6, [r1, #8]
 800579c:	b085      	sub	sp, #20
 800579e:	001f      	movs	r7, r3
 80057a0:	000c      	movs	r4, r1
 80057a2:	680b      	ldr	r3, [r1, #0]
 80057a4:	9002      	str	r0, [sp, #8]
 80057a6:	9203      	str	r2, [sp, #12]
 80057a8:	42be      	cmp	r6, r7
 80057aa:	d830      	bhi.n	800580e <__ssputs_r+0x76>
 80057ac:	210c      	movs	r1, #12
 80057ae:	5e62      	ldrsh	r2, [r4, r1]
 80057b0:	2190      	movs	r1, #144	@ 0x90
 80057b2:	00c9      	lsls	r1, r1, #3
 80057b4:	420a      	tst	r2, r1
 80057b6:	d028      	beq.n	800580a <__ssputs_r+0x72>
 80057b8:	2003      	movs	r0, #3
 80057ba:	6921      	ldr	r1, [r4, #16]
 80057bc:	1a5b      	subs	r3, r3, r1
 80057be:	9301      	str	r3, [sp, #4]
 80057c0:	6963      	ldr	r3, [r4, #20]
 80057c2:	4343      	muls	r3, r0
 80057c4:	9801      	ldr	r0, [sp, #4]
 80057c6:	0fdd      	lsrs	r5, r3, #31
 80057c8:	18ed      	adds	r5, r5, r3
 80057ca:	1c7b      	adds	r3, r7, #1
 80057cc:	181b      	adds	r3, r3, r0
 80057ce:	106d      	asrs	r5, r5, #1
 80057d0:	42ab      	cmp	r3, r5
 80057d2:	d900      	bls.n	80057d6 <__ssputs_r+0x3e>
 80057d4:	001d      	movs	r5, r3
 80057d6:	0552      	lsls	r2, r2, #21
 80057d8:	d528      	bpl.n	800582c <__ssputs_r+0x94>
 80057da:	0029      	movs	r1, r5
 80057dc:	9802      	ldr	r0, [sp, #8]
 80057de:	f000 f965 	bl	8005aac <_malloc_r>
 80057e2:	1e06      	subs	r6, r0, #0
 80057e4:	d02c      	beq.n	8005840 <__ssputs_r+0xa8>
 80057e6:	9a01      	ldr	r2, [sp, #4]
 80057e8:	6921      	ldr	r1, [r4, #16]
 80057ea:	f000 ff33 	bl	8006654 <memcpy>
 80057ee:	89a2      	ldrh	r2, [r4, #12]
 80057f0:	4b18      	ldr	r3, [pc, #96]	@ (8005854 <__ssputs_r+0xbc>)
 80057f2:	401a      	ands	r2, r3
 80057f4:	2380      	movs	r3, #128	@ 0x80
 80057f6:	4313      	orrs	r3, r2
 80057f8:	81a3      	strh	r3, [r4, #12]
 80057fa:	9b01      	ldr	r3, [sp, #4]
 80057fc:	6126      	str	r6, [r4, #16]
 80057fe:	18f6      	adds	r6, r6, r3
 8005800:	6026      	str	r6, [r4, #0]
 8005802:	003e      	movs	r6, r7
 8005804:	6165      	str	r5, [r4, #20]
 8005806:	1aed      	subs	r5, r5, r3
 8005808:	60a5      	str	r5, [r4, #8]
 800580a:	42be      	cmp	r6, r7
 800580c:	d900      	bls.n	8005810 <__ssputs_r+0x78>
 800580e:	003e      	movs	r6, r7
 8005810:	0032      	movs	r2, r6
 8005812:	9903      	ldr	r1, [sp, #12]
 8005814:	6820      	ldr	r0, [r4, #0]
 8005816:	f000 feaa 	bl	800656e <memmove>
 800581a:	2000      	movs	r0, #0
 800581c:	68a3      	ldr	r3, [r4, #8]
 800581e:	1b9b      	subs	r3, r3, r6
 8005820:	60a3      	str	r3, [r4, #8]
 8005822:	6823      	ldr	r3, [r4, #0]
 8005824:	199b      	adds	r3, r3, r6
 8005826:	6023      	str	r3, [r4, #0]
 8005828:	b005      	add	sp, #20
 800582a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800582c:	002a      	movs	r2, r5
 800582e:	9802      	ldr	r0, [sp, #8]
 8005830:	f000 fe6e 	bl	8006510 <_realloc_r>
 8005834:	1e06      	subs	r6, r0, #0
 8005836:	d1e0      	bne.n	80057fa <__ssputs_r+0x62>
 8005838:	6921      	ldr	r1, [r4, #16]
 800583a:	9802      	ldr	r0, [sp, #8]
 800583c:	f000 ff60 	bl	8006700 <_free_r>
 8005840:	230c      	movs	r3, #12
 8005842:	2001      	movs	r0, #1
 8005844:	9a02      	ldr	r2, [sp, #8]
 8005846:	4240      	negs	r0, r0
 8005848:	6013      	str	r3, [r2, #0]
 800584a:	89a2      	ldrh	r2, [r4, #12]
 800584c:	3334      	adds	r3, #52	@ 0x34
 800584e:	4313      	orrs	r3, r2
 8005850:	81a3      	strh	r3, [r4, #12]
 8005852:	e7e9      	b.n	8005828 <__ssputs_r+0x90>
 8005854:	fffffb7f 	.word	0xfffffb7f

08005858 <_svfiprintf_r>:
 8005858:	b5f0      	push	{r4, r5, r6, r7, lr}
 800585a:	b0a1      	sub	sp, #132	@ 0x84
 800585c:	9003      	str	r0, [sp, #12]
 800585e:	001d      	movs	r5, r3
 8005860:	898b      	ldrh	r3, [r1, #12]
 8005862:	000f      	movs	r7, r1
 8005864:	0016      	movs	r6, r2
 8005866:	061b      	lsls	r3, r3, #24
 8005868:	d511      	bpl.n	800588e <_svfiprintf_r+0x36>
 800586a:	690b      	ldr	r3, [r1, #16]
 800586c:	2b00      	cmp	r3, #0
 800586e:	d10e      	bne.n	800588e <_svfiprintf_r+0x36>
 8005870:	2140      	movs	r1, #64	@ 0x40
 8005872:	f000 f91b 	bl	8005aac <_malloc_r>
 8005876:	6038      	str	r0, [r7, #0]
 8005878:	6138      	str	r0, [r7, #16]
 800587a:	2800      	cmp	r0, #0
 800587c:	d105      	bne.n	800588a <_svfiprintf_r+0x32>
 800587e:	230c      	movs	r3, #12
 8005880:	9a03      	ldr	r2, [sp, #12]
 8005882:	6013      	str	r3, [r2, #0]
 8005884:	2001      	movs	r0, #1
 8005886:	4240      	negs	r0, r0
 8005888:	e0cf      	b.n	8005a2a <_svfiprintf_r+0x1d2>
 800588a:	2340      	movs	r3, #64	@ 0x40
 800588c:	617b      	str	r3, [r7, #20]
 800588e:	2300      	movs	r3, #0
 8005890:	ac08      	add	r4, sp, #32
 8005892:	6163      	str	r3, [r4, #20]
 8005894:	3320      	adds	r3, #32
 8005896:	7663      	strb	r3, [r4, #25]
 8005898:	3310      	adds	r3, #16
 800589a:	76a3      	strb	r3, [r4, #26]
 800589c:	9507      	str	r5, [sp, #28]
 800589e:	0035      	movs	r5, r6
 80058a0:	782b      	ldrb	r3, [r5, #0]
 80058a2:	2b00      	cmp	r3, #0
 80058a4:	d001      	beq.n	80058aa <_svfiprintf_r+0x52>
 80058a6:	2b25      	cmp	r3, #37	@ 0x25
 80058a8:	d148      	bne.n	800593c <_svfiprintf_r+0xe4>
 80058aa:	1bab      	subs	r3, r5, r6
 80058ac:	9305      	str	r3, [sp, #20]
 80058ae:	42b5      	cmp	r5, r6
 80058b0:	d00b      	beq.n	80058ca <_svfiprintf_r+0x72>
 80058b2:	0032      	movs	r2, r6
 80058b4:	0039      	movs	r1, r7
 80058b6:	9803      	ldr	r0, [sp, #12]
 80058b8:	f7ff ff6e 	bl	8005798 <__ssputs_r>
 80058bc:	3001      	adds	r0, #1
 80058be:	d100      	bne.n	80058c2 <_svfiprintf_r+0x6a>
 80058c0:	e0ae      	b.n	8005a20 <_svfiprintf_r+0x1c8>
 80058c2:	6963      	ldr	r3, [r4, #20]
 80058c4:	9a05      	ldr	r2, [sp, #20]
 80058c6:	189b      	adds	r3, r3, r2
 80058c8:	6163      	str	r3, [r4, #20]
 80058ca:	782b      	ldrb	r3, [r5, #0]
 80058cc:	2b00      	cmp	r3, #0
 80058ce:	d100      	bne.n	80058d2 <_svfiprintf_r+0x7a>
 80058d0:	e0a6      	b.n	8005a20 <_svfiprintf_r+0x1c8>
 80058d2:	2201      	movs	r2, #1
 80058d4:	2300      	movs	r3, #0
 80058d6:	4252      	negs	r2, r2
 80058d8:	6062      	str	r2, [r4, #4]
 80058da:	a904      	add	r1, sp, #16
 80058dc:	3254      	adds	r2, #84	@ 0x54
 80058de:	1852      	adds	r2, r2, r1
 80058e0:	1c6e      	adds	r6, r5, #1
 80058e2:	6023      	str	r3, [r4, #0]
 80058e4:	60e3      	str	r3, [r4, #12]
 80058e6:	60a3      	str	r3, [r4, #8]
 80058e8:	7013      	strb	r3, [r2, #0]
 80058ea:	65a3      	str	r3, [r4, #88]	@ 0x58
 80058ec:	4b54      	ldr	r3, [pc, #336]	@ (8005a40 <_svfiprintf_r+0x1e8>)
 80058ee:	2205      	movs	r2, #5
 80058f0:	0018      	movs	r0, r3
 80058f2:	7831      	ldrb	r1, [r6, #0]
 80058f4:	9305      	str	r3, [sp, #20]
 80058f6:	f7ff f8c2 	bl	8004a7e <memchr>
 80058fa:	1c75      	adds	r5, r6, #1
 80058fc:	2800      	cmp	r0, #0
 80058fe:	d11f      	bne.n	8005940 <_svfiprintf_r+0xe8>
 8005900:	6822      	ldr	r2, [r4, #0]
 8005902:	06d3      	lsls	r3, r2, #27
 8005904:	d504      	bpl.n	8005910 <_svfiprintf_r+0xb8>
 8005906:	2353      	movs	r3, #83	@ 0x53
 8005908:	a904      	add	r1, sp, #16
 800590a:	185b      	adds	r3, r3, r1
 800590c:	2120      	movs	r1, #32
 800590e:	7019      	strb	r1, [r3, #0]
 8005910:	0713      	lsls	r3, r2, #28
 8005912:	d504      	bpl.n	800591e <_svfiprintf_r+0xc6>
 8005914:	2353      	movs	r3, #83	@ 0x53
 8005916:	a904      	add	r1, sp, #16
 8005918:	185b      	adds	r3, r3, r1
 800591a:	212b      	movs	r1, #43	@ 0x2b
 800591c:	7019      	strb	r1, [r3, #0]
 800591e:	7833      	ldrb	r3, [r6, #0]
 8005920:	2b2a      	cmp	r3, #42	@ 0x2a
 8005922:	d016      	beq.n	8005952 <_svfiprintf_r+0xfa>
 8005924:	0035      	movs	r5, r6
 8005926:	2100      	movs	r1, #0
 8005928:	200a      	movs	r0, #10
 800592a:	68e3      	ldr	r3, [r4, #12]
 800592c:	782a      	ldrb	r2, [r5, #0]
 800592e:	1c6e      	adds	r6, r5, #1
 8005930:	3a30      	subs	r2, #48	@ 0x30
 8005932:	2a09      	cmp	r2, #9
 8005934:	d950      	bls.n	80059d8 <_svfiprintf_r+0x180>
 8005936:	2900      	cmp	r1, #0
 8005938:	d111      	bne.n	800595e <_svfiprintf_r+0x106>
 800593a:	e017      	b.n	800596c <_svfiprintf_r+0x114>
 800593c:	3501      	adds	r5, #1
 800593e:	e7af      	b.n	80058a0 <_svfiprintf_r+0x48>
 8005940:	9b05      	ldr	r3, [sp, #20]
 8005942:	6822      	ldr	r2, [r4, #0]
 8005944:	1ac0      	subs	r0, r0, r3
 8005946:	2301      	movs	r3, #1
 8005948:	4083      	lsls	r3, r0
 800594a:	4313      	orrs	r3, r2
 800594c:	002e      	movs	r6, r5
 800594e:	6023      	str	r3, [r4, #0]
 8005950:	e7cc      	b.n	80058ec <_svfiprintf_r+0x94>
 8005952:	9b07      	ldr	r3, [sp, #28]
 8005954:	1d19      	adds	r1, r3, #4
 8005956:	681b      	ldr	r3, [r3, #0]
 8005958:	9107      	str	r1, [sp, #28]
 800595a:	2b00      	cmp	r3, #0
 800595c:	db01      	blt.n	8005962 <_svfiprintf_r+0x10a>
 800595e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8005960:	e004      	b.n	800596c <_svfiprintf_r+0x114>
 8005962:	425b      	negs	r3, r3
 8005964:	60e3      	str	r3, [r4, #12]
 8005966:	2302      	movs	r3, #2
 8005968:	4313      	orrs	r3, r2
 800596a:	6023      	str	r3, [r4, #0]
 800596c:	782b      	ldrb	r3, [r5, #0]
 800596e:	2b2e      	cmp	r3, #46	@ 0x2e
 8005970:	d10c      	bne.n	800598c <_svfiprintf_r+0x134>
 8005972:	786b      	ldrb	r3, [r5, #1]
 8005974:	2b2a      	cmp	r3, #42	@ 0x2a
 8005976:	d134      	bne.n	80059e2 <_svfiprintf_r+0x18a>
 8005978:	9b07      	ldr	r3, [sp, #28]
 800597a:	3502      	adds	r5, #2
 800597c:	1d1a      	adds	r2, r3, #4
 800597e:	681b      	ldr	r3, [r3, #0]
 8005980:	9207      	str	r2, [sp, #28]
 8005982:	2b00      	cmp	r3, #0
 8005984:	da01      	bge.n	800598a <_svfiprintf_r+0x132>
 8005986:	2301      	movs	r3, #1
 8005988:	425b      	negs	r3, r3
 800598a:	9309      	str	r3, [sp, #36]	@ 0x24
 800598c:	4e2d      	ldr	r6, [pc, #180]	@ (8005a44 <_svfiprintf_r+0x1ec>)
 800598e:	2203      	movs	r2, #3
 8005990:	0030      	movs	r0, r6
 8005992:	7829      	ldrb	r1, [r5, #0]
 8005994:	f7ff f873 	bl	8004a7e <memchr>
 8005998:	2800      	cmp	r0, #0
 800599a:	d006      	beq.n	80059aa <_svfiprintf_r+0x152>
 800599c:	2340      	movs	r3, #64	@ 0x40
 800599e:	1b80      	subs	r0, r0, r6
 80059a0:	4083      	lsls	r3, r0
 80059a2:	6822      	ldr	r2, [r4, #0]
 80059a4:	3501      	adds	r5, #1
 80059a6:	4313      	orrs	r3, r2
 80059a8:	6023      	str	r3, [r4, #0]
 80059aa:	7829      	ldrb	r1, [r5, #0]
 80059ac:	2206      	movs	r2, #6
 80059ae:	4826      	ldr	r0, [pc, #152]	@ (8005a48 <_svfiprintf_r+0x1f0>)
 80059b0:	1c6e      	adds	r6, r5, #1
 80059b2:	7621      	strb	r1, [r4, #24]
 80059b4:	f7ff f863 	bl	8004a7e <memchr>
 80059b8:	2800      	cmp	r0, #0
 80059ba:	d038      	beq.n	8005a2e <_svfiprintf_r+0x1d6>
 80059bc:	4b23      	ldr	r3, [pc, #140]	@ (8005a4c <_svfiprintf_r+0x1f4>)
 80059be:	2b00      	cmp	r3, #0
 80059c0:	d122      	bne.n	8005a08 <_svfiprintf_r+0x1b0>
 80059c2:	2207      	movs	r2, #7
 80059c4:	9b07      	ldr	r3, [sp, #28]
 80059c6:	3307      	adds	r3, #7
 80059c8:	4393      	bics	r3, r2
 80059ca:	3308      	adds	r3, #8
 80059cc:	9307      	str	r3, [sp, #28]
 80059ce:	6963      	ldr	r3, [r4, #20]
 80059d0:	9a04      	ldr	r2, [sp, #16]
 80059d2:	189b      	adds	r3, r3, r2
 80059d4:	6163      	str	r3, [r4, #20]
 80059d6:	e762      	b.n	800589e <_svfiprintf_r+0x46>
 80059d8:	4343      	muls	r3, r0
 80059da:	0035      	movs	r5, r6
 80059dc:	2101      	movs	r1, #1
 80059de:	189b      	adds	r3, r3, r2
 80059e0:	e7a4      	b.n	800592c <_svfiprintf_r+0xd4>
 80059e2:	2300      	movs	r3, #0
 80059e4:	200a      	movs	r0, #10
 80059e6:	0019      	movs	r1, r3
 80059e8:	3501      	adds	r5, #1
 80059ea:	6063      	str	r3, [r4, #4]
 80059ec:	782a      	ldrb	r2, [r5, #0]
 80059ee:	1c6e      	adds	r6, r5, #1
 80059f0:	3a30      	subs	r2, #48	@ 0x30
 80059f2:	2a09      	cmp	r2, #9
 80059f4:	d903      	bls.n	80059fe <_svfiprintf_r+0x1a6>
 80059f6:	2b00      	cmp	r3, #0
 80059f8:	d0c8      	beq.n	800598c <_svfiprintf_r+0x134>
 80059fa:	9109      	str	r1, [sp, #36]	@ 0x24
 80059fc:	e7c6      	b.n	800598c <_svfiprintf_r+0x134>
 80059fe:	4341      	muls	r1, r0
 8005a00:	0035      	movs	r5, r6
 8005a02:	2301      	movs	r3, #1
 8005a04:	1889      	adds	r1, r1, r2
 8005a06:	e7f1      	b.n	80059ec <_svfiprintf_r+0x194>
 8005a08:	aa07      	add	r2, sp, #28
 8005a0a:	9200      	str	r2, [sp, #0]
 8005a0c:	0021      	movs	r1, r4
 8005a0e:	003a      	movs	r2, r7
 8005a10:	4b0f      	ldr	r3, [pc, #60]	@ (8005a50 <_svfiprintf_r+0x1f8>)
 8005a12:	9803      	ldr	r0, [sp, #12]
 8005a14:	f7fe fb5a 	bl	80040cc <_printf_float>
 8005a18:	9004      	str	r0, [sp, #16]
 8005a1a:	9b04      	ldr	r3, [sp, #16]
 8005a1c:	3301      	adds	r3, #1
 8005a1e:	d1d6      	bne.n	80059ce <_svfiprintf_r+0x176>
 8005a20:	89bb      	ldrh	r3, [r7, #12]
 8005a22:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8005a24:	065b      	lsls	r3, r3, #25
 8005a26:	d500      	bpl.n	8005a2a <_svfiprintf_r+0x1d2>
 8005a28:	e72c      	b.n	8005884 <_svfiprintf_r+0x2c>
 8005a2a:	b021      	add	sp, #132	@ 0x84
 8005a2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005a2e:	aa07      	add	r2, sp, #28
 8005a30:	9200      	str	r2, [sp, #0]
 8005a32:	0021      	movs	r1, r4
 8005a34:	003a      	movs	r2, r7
 8005a36:	4b06      	ldr	r3, [pc, #24]	@ (8005a50 <_svfiprintf_r+0x1f8>)
 8005a38:	9803      	ldr	r0, [sp, #12]
 8005a3a:	f7fe fdf5 	bl	8004628 <_printf_i>
 8005a3e:	e7eb      	b.n	8005a18 <_svfiprintf_r+0x1c0>
 8005a40:	0800735f 	.word	0x0800735f
 8005a44:	08007365 	.word	0x08007365
 8005a48:	08007369 	.word	0x08007369
 8005a4c:	080040cd 	.word	0x080040cd
 8005a50:	08005799 	.word	0x08005799

08005a54 <malloc>:
 8005a54:	b510      	push	{r4, lr}
 8005a56:	4b03      	ldr	r3, [pc, #12]	@ (8005a64 <malloc+0x10>)
 8005a58:	0001      	movs	r1, r0
 8005a5a:	6818      	ldr	r0, [r3, #0]
 8005a5c:	f000 f826 	bl	8005aac <_malloc_r>
 8005a60:	bd10      	pop	{r4, pc}
 8005a62:	46c0      	nop			@ (mov r8, r8)
 8005a64:	20000018 	.word	0x20000018

08005a68 <sbrk_aligned>:
 8005a68:	b570      	push	{r4, r5, r6, lr}
 8005a6a:	4e0f      	ldr	r6, [pc, #60]	@ (8005aa8 <sbrk_aligned+0x40>)
 8005a6c:	000d      	movs	r5, r1
 8005a6e:	6831      	ldr	r1, [r6, #0]
 8005a70:	0004      	movs	r4, r0
 8005a72:	2900      	cmp	r1, #0
 8005a74:	d102      	bne.n	8005a7c <sbrk_aligned+0x14>
 8005a76:	f000 fdc7 	bl	8006608 <_sbrk_r>
 8005a7a:	6030      	str	r0, [r6, #0]
 8005a7c:	0029      	movs	r1, r5
 8005a7e:	0020      	movs	r0, r4
 8005a80:	f000 fdc2 	bl	8006608 <_sbrk_r>
 8005a84:	1c43      	adds	r3, r0, #1
 8005a86:	d103      	bne.n	8005a90 <sbrk_aligned+0x28>
 8005a88:	2501      	movs	r5, #1
 8005a8a:	426d      	negs	r5, r5
 8005a8c:	0028      	movs	r0, r5
 8005a8e:	bd70      	pop	{r4, r5, r6, pc}
 8005a90:	2303      	movs	r3, #3
 8005a92:	1cc5      	adds	r5, r0, #3
 8005a94:	439d      	bics	r5, r3
 8005a96:	42a8      	cmp	r0, r5
 8005a98:	d0f8      	beq.n	8005a8c <sbrk_aligned+0x24>
 8005a9a:	1a29      	subs	r1, r5, r0
 8005a9c:	0020      	movs	r0, r4
 8005a9e:	f000 fdb3 	bl	8006608 <_sbrk_r>
 8005aa2:	3001      	adds	r0, #1
 8005aa4:	d1f2      	bne.n	8005a8c <sbrk_aligned+0x24>
 8005aa6:	e7ef      	b.n	8005a88 <sbrk_aligned+0x20>
 8005aa8:	20000514 	.word	0x20000514

08005aac <_malloc_r>:
 8005aac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005aae:	2203      	movs	r2, #3
 8005ab0:	1ccb      	adds	r3, r1, #3
 8005ab2:	4393      	bics	r3, r2
 8005ab4:	3308      	adds	r3, #8
 8005ab6:	0005      	movs	r5, r0
 8005ab8:	001f      	movs	r7, r3
 8005aba:	2b0c      	cmp	r3, #12
 8005abc:	d234      	bcs.n	8005b28 <_malloc_r+0x7c>
 8005abe:	270c      	movs	r7, #12
 8005ac0:	42b9      	cmp	r1, r7
 8005ac2:	d833      	bhi.n	8005b2c <_malloc_r+0x80>
 8005ac4:	0028      	movs	r0, r5
 8005ac6:	f000 f923 	bl	8005d10 <__malloc_lock>
 8005aca:	4e37      	ldr	r6, [pc, #220]	@ (8005ba8 <_malloc_r+0xfc>)
 8005acc:	6833      	ldr	r3, [r6, #0]
 8005ace:	001c      	movs	r4, r3
 8005ad0:	2c00      	cmp	r4, #0
 8005ad2:	d12f      	bne.n	8005b34 <_malloc_r+0x88>
 8005ad4:	0039      	movs	r1, r7
 8005ad6:	0028      	movs	r0, r5
 8005ad8:	f7ff ffc6 	bl	8005a68 <sbrk_aligned>
 8005adc:	0004      	movs	r4, r0
 8005ade:	1c43      	adds	r3, r0, #1
 8005ae0:	d15f      	bne.n	8005ba2 <_malloc_r+0xf6>
 8005ae2:	6834      	ldr	r4, [r6, #0]
 8005ae4:	9400      	str	r4, [sp, #0]
 8005ae6:	9b00      	ldr	r3, [sp, #0]
 8005ae8:	2b00      	cmp	r3, #0
 8005aea:	d14a      	bne.n	8005b82 <_malloc_r+0xd6>
 8005aec:	2c00      	cmp	r4, #0
 8005aee:	d052      	beq.n	8005b96 <_malloc_r+0xea>
 8005af0:	6823      	ldr	r3, [r4, #0]
 8005af2:	0028      	movs	r0, r5
 8005af4:	18e3      	adds	r3, r4, r3
 8005af6:	9900      	ldr	r1, [sp, #0]
 8005af8:	9301      	str	r3, [sp, #4]
 8005afa:	f000 fd85 	bl	8006608 <_sbrk_r>
 8005afe:	9b01      	ldr	r3, [sp, #4]
 8005b00:	4283      	cmp	r3, r0
 8005b02:	d148      	bne.n	8005b96 <_malloc_r+0xea>
 8005b04:	6823      	ldr	r3, [r4, #0]
 8005b06:	0028      	movs	r0, r5
 8005b08:	1aff      	subs	r7, r7, r3
 8005b0a:	0039      	movs	r1, r7
 8005b0c:	f7ff ffac 	bl	8005a68 <sbrk_aligned>
 8005b10:	3001      	adds	r0, #1
 8005b12:	d040      	beq.n	8005b96 <_malloc_r+0xea>
 8005b14:	6823      	ldr	r3, [r4, #0]
 8005b16:	19db      	adds	r3, r3, r7
 8005b18:	6023      	str	r3, [r4, #0]
 8005b1a:	6833      	ldr	r3, [r6, #0]
 8005b1c:	685a      	ldr	r2, [r3, #4]
 8005b1e:	2a00      	cmp	r2, #0
 8005b20:	d133      	bne.n	8005b8a <_malloc_r+0xde>
 8005b22:	9b00      	ldr	r3, [sp, #0]
 8005b24:	6033      	str	r3, [r6, #0]
 8005b26:	e019      	b.n	8005b5c <_malloc_r+0xb0>
 8005b28:	2b00      	cmp	r3, #0
 8005b2a:	dac9      	bge.n	8005ac0 <_malloc_r+0x14>
 8005b2c:	230c      	movs	r3, #12
 8005b2e:	602b      	str	r3, [r5, #0]
 8005b30:	2000      	movs	r0, #0
 8005b32:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005b34:	6821      	ldr	r1, [r4, #0]
 8005b36:	1bc9      	subs	r1, r1, r7
 8005b38:	d420      	bmi.n	8005b7c <_malloc_r+0xd0>
 8005b3a:	290b      	cmp	r1, #11
 8005b3c:	d90a      	bls.n	8005b54 <_malloc_r+0xa8>
 8005b3e:	19e2      	adds	r2, r4, r7
 8005b40:	6027      	str	r7, [r4, #0]
 8005b42:	42a3      	cmp	r3, r4
 8005b44:	d104      	bne.n	8005b50 <_malloc_r+0xa4>
 8005b46:	6032      	str	r2, [r6, #0]
 8005b48:	6863      	ldr	r3, [r4, #4]
 8005b4a:	6011      	str	r1, [r2, #0]
 8005b4c:	6053      	str	r3, [r2, #4]
 8005b4e:	e005      	b.n	8005b5c <_malloc_r+0xb0>
 8005b50:	605a      	str	r2, [r3, #4]
 8005b52:	e7f9      	b.n	8005b48 <_malloc_r+0x9c>
 8005b54:	6862      	ldr	r2, [r4, #4]
 8005b56:	42a3      	cmp	r3, r4
 8005b58:	d10e      	bne.n	8005b78 <_malloc_r+0xcc>
 8005b5a:	6032      	str	r2, [r6, #0]
 8005b5c:	0028      	movs	r0, r5
 8005b5e:	f000 f8df 	bl	8005d20 <__malloc_unlock>
 8005b62:	0020      	movs	r0, r4
 8005b64:	2207      	movs	r2, #7
 8005b66:	300b      	adds	r0, #11
 8005b68:	1d23      	adds	r3, r4, #4
 8005b6a:	4390      	bics	r0, r2
 8005b6c:	1ac2      	subs	r2, r0, r3
 8005b6e:	4298      	cmp	r0, r3
 8005b70:	d0df      	beq.n	8005b32 <_malloc_r+0x86>
 8005b72:	1a1b      	subs	r3, r3, r0
 8005b74:	50a3      	str	r3, [r4, r2]
 8005b76:	e7dc      	b.n	8005b32 <_malloc_r+0x86>
 8005b78:	605a      	str	r2, [r3, #4]
 8005b7a:	e7ef      	b.n	8005b5c <_malloc_r+0xb0>
 8005b7c:	0023      	movs	r3, r4
 8005b7e:	6864      	ldr	r4, [r4, #4]
 8005b80:	e7a6      	b.n	8005ad0 <_malloc_r+0x24>
 8005b82:	9c00      	ldr	r4, [sp, #0]
 8005b84:	6863      	ldr	r3, [r4, #4]
 8005b86:	9300      	str	r3, [sp, #0]
 8005b88:	e7ad      	b.n	8005ae6 <_malloc_r+0x3a>
 8005b8a:	001a      	movs	r2, r3
 8005b8c:	685b      	ldr	r3, [r3, #4]
 8005b8e:	42a3      	cmp	r3, r4
 8005b90:	d1fb      	bne.n	8005b8a <_malloc_r+0xde>
 8005b92:	2300      	movs	r3, #0
 8005b94:	e7da      	b.n	8005b4c <_malloc_r+0xa0>
 8005b96:	230c      	movs	r3, #12
 8005b98:	0028      	movs	r0, r5
 8005b9a:	602b      	str	r3, [r5, #0]
 8005b9c:	f000 f8c0 	bl	8005d20 <__malloc_unlock>
 8005ba0:	e7c6      	b.n	8005b30 <_malloc_r+0x84>
 8005ba2:	6007      	str	r7, [r0, #0]
 8005ba4:	e7da      	b.n	8005b5c <_malloc_r+0xb0>
 8005ba6:	46c0      	nop			@ (mov r8, r8)
 8005ba8:	20000518 	.word	0x20000518

08005bac <__sflush_r>:
 8005bac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005bae:	220c      	movs	r2, #12
 8005bb0:	5e8b      	ldrsh	r3, [r1, r2]
 8005bb2:	0005      	movs	r5, r0
 8005bb4:	000c      	movs	r4, r1
 8005bb6:	071a      	lsls	r2, r3, #28
 8005bb8:	d456      	bmi.n	8005c68 <__sflush_r+0xbc>
 8005bba:	684a      	ldr	r2, [r1, #4]
 8005bbc:	2a00      	cmp	r2, #0
 8005bbe:	dc02      	bgt.n	8005bc6 <__sflush_r+0x1a>
 8005bc0:	6c0a      	ldr	r2, [r1, #64]	@ 0x40
 8005bc2:	2a00      	cmp	r2, #0
 8005bc4:	dd4e      	ble.n	8005c64 <__sflush_r+0xb8>
 8005bc6:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8005bc8:	2f00      	cmp	r7, #0
 8005bca:	d04b      	beq.n	8005c64 <__sflush_r+0xb8>
 8005bcc:	2200      	movs	r2, #0
 8005bce:	2080      	movs	r0, #128	@ 0x80
 8005bd0:	682e      	ldr	r6, [r5, #0]
 8005bd2:	602a      	str	r2, [r5, #0]
 8005bd4:	001a      	movs	r2, r3
 8005bd6:	0140      	lsls	r0, r0, #5
 8005bd8:	6a21      	ldr	r1, [r4, #32]
 8005bda:	4002      	ands	r2, r0
 8005bdc:	4203      	tst	r3, r0
 8005bde:	d033      	beq.n	8005c48 <__sflush_r+0x9c>
 8005be0:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8005be2:	89a3      	ldrh	r3, [r4, #12]
 8005be4:	075b      	lsls	r3, r3, #29
 8005be6:	d506      	bpl.n	8005bf6 <__sflush_r+0x4a>
 8005be8:	6863      	ldr	r3, [r4, #4]
 8005bea:	1ad2      	subs	r2, r2, r3
 8005bec:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8005bee:	2b00      	cmp	r3, #0
 8005bf0:	d001      	beq.n	8005bf6 <__sflush_r+0x4a>
 8005bf2:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8005bf4:	1ad2      	subs	r2, r2, r3
 8005bf6:	2300      	movs	r3, #0
 8005bf8:	0028      	movs	r0, r5
 8005bfa:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8005bfc:	6a21      	ldr	r1, [r4, #32]
 8005bfe:	47b8      	blx	r7
 8005c00:	89a2      	ldrh	r2, [r4, #12]
 8005c02:	1c43      	adds	r3, r0, #1
 8005c04:	d106      	bne.n	8005c14 <__sflush_r+0x68>
 8005c06:	6829      	ldr	r1, [r5, #0]
 8005c08:	291d      	cmp	r1, #29
 8005c0a:	d846      	bhi.n	8005c9a <__sflush_r+0xee>
 8005c0c:	4b29      	ldr	r3, [pc, #164]	@ (8005cb4 <__sflush_r+0x108>)
 8005c0e:	410b      	asrs	r3, r1
 8005c10:	07db      	lsls	r3, r3, #31
 8005c12:	d442      	bmi.n	8005c9a <__sflush_r+0xee>
 8005c14:	2300      	movs	r3, #0
 8005c16:	6063      	str	r3, [r4, #4]
 8005c18:	6923      	ldr	r3, [r4, #16]
 8005c1a:	6023      	str	r3, [r4, #0]
 8005c1c:	04d2      	lsls	r2, r2, #19
 8005c1e:	d505      	bpl.n	8005c2c <__sflush_r+0x80>
 8005c20:	1c43      	adds	r3, r0, #1
 8005c22:	d102      	bne.n	8005c2a <__sflush_r+0x7e>
 8005c24:	682b      	ldr	r3, [r5, #0]
 8005c26:	2b00      	cmp	r3, #0
 8005c28:	d100      	bne.n	8005c2c <__sflush_r+0x80>
 8005c2a:	6560      	str	r0, [r4, #84]	@ 0x54
 8005c2c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8005c2e:	602e      	str	r6, [r5, #0]
 8005c30:	2900      	cmp	r1, #0
 8005c32:	d017      	beq.n	8005c64 <__sflush_r+0xb8>
 8005c34:	0023      	movs	r3, r4
 8005c36:	3344      	adds	r3, #68	@ 0x44
 8005c38:	4299      	cmp	r1, r3
 8005c3a:	d002      	beq.n	8005c42 <__sflush_r+0x96>
 8005c3c:	0028      	movs	r0, r5
 8005c3e:	f000 fd5f 	bl	8006700 <_free_r>
 8005c42:	2300      	movs	r3, #0
 8005c44:	6363      	str	r3, [r4, #52]	@ 0x34
 8005c46:	e00d      	b.n	8005c64 <__sflush_r+0xb8>
 8005c48:	2301      	movs	r3, #1
 8005c4a:	0028      	movs	r0, r5
 8005c4c:	47b8      	blx	r7
 8005c4e:	0002      	movs	r2, r0
 8005c50:	1c43      	adds	r3, r0, #1
 8005c52:	d1c6      	bne.n	8005be2 <__sflush_r+0x36>
 8005c54:	682b      	ldr	r3, [r5, #0]
 8005c56:	2b00      	cmp	r3, #0
 8005c58:	d0c3      	beq.n	8005be2 <__sflush_r+0x36>
 8005c5a:	2b1d      	cmp	r3, #29
 8005c5c:	d001      	beq.n	8005c62 <__sflush_r+0xb6>
 8005c5e:	2b16      	cmp	r3, #22
 8005c60:	d11a      	bne.n	8005c98 <__sflush_r+0xec>
 8005c62:	602e      	str	r6, [r5, #0]
 8005c64:	2000      	movs	r0, #0
 8005c66:	e01e      	b.n	8005ca6 <__sflush_r+0xfa>
 8005c68:	690e      	ldr	r6, [r1, #16]
 8005c6a:	2e00      	cmp	r6, #0
 8005c6c:	d0fa      	beq.n	8005c64 <__sflush_r+0xb8>
 8005c6e:	680f      	ldr	r7, [r1, #0]
 8005c70:	600e      	str	r6, [r1, #0]
 8005c72:	1bba      	subs	r2, r7, r6
 8005c74:	9201      	str	r2, [sp, #4]
 8005c76:	2200      	movs	r2, #0
 8005c78:	079b      	lsls	r3, r3, #30
 8005c7a:	d100      	bne.n	8005c7e <__sflush_r+0xd2>
 8005c7c:	694a      	ldr	r2, [r1, #20]
 8005c7e:	60a2      	str	r2, [r4, #8]
 8005c80:	9b01      	ldr	r3, [sp, #4]
 8005c82:	2b00      	cmp	r3, #0
 8005c84:	ddee      	ble.n	8005c64 <__sflush_r+0xb8>
 8005c86:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8005c88:	0032      	movs	r2, r6
 8005c8a:	001f      	movs	r7, r3
 8005c8c:	0028      	movs	r0, r5
 8005c8e:	9b01      	ldr	r3, [sp, #4]
 8005c90:	6a21      	ldr	r1, [r4, #32]
 8005c92:	47b8      	blx	r7
 8005c94:	2800      	cmp	r0, #0
 8005c96:	dc07      	bgt.n	8005ca8 <__sflush_r+0xfc>
 8005c98:	89a2      	ldrh	r2, [r4, #12]
 8005c9a:	2340      	movs	r3, #64	@ 0x40
 8005c9c:	2001      	movs	r0, #1
 8005c9e:	4313      	orrs	r3, r2
 8005ca0:	b21b      	sxth	r3, r3
 8005ca2:	81a3      	strh	r3, [r4, #12]
 8005ca4:	4240      	negs	r0, r0
 8005ca6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005ca8:	9b01      	ldr	r3, [sp, #4]
 8005caa:	1836      	adds	r6, r6, r0
 8005cac:	1a1b      	subs	r3, r3, r0
 8005cae:	9301      	str	r3, [sp, #4]
 8005cb0:	e7e6      	b.n	8005c80 <__sflush_r+0xd4>
 8005cb2:	46c0      	nop			@ (mov r8, r8)
 8005cb4:	dfbffffe 	.word	0xdfbffffe

08005cb8 <_fflush_r>:
 8005cb8:	690b      	ldr	r3, [r1, #16]
 8005cba:	b570      	push	{r4, r5, r6, lr}
 8005cbc:	0005      	movs	r5, r0
 8005cbe:	000c      	movs	r4, r1
 8005cc0:	2b00      	cmp	r3, #0
 8005cc2:	d102      	bne.n	8005cca <_fflush_r+0x12>
 8005cc4:	2500      	movs	r5, #0
 8005cc6:	0028      	movs	r0, r5
 8005cc8:	bd70      	pop	{r4, r5, r6, pc}
 8005cca:	2800      	cmp	r0, #0
 8005ccc:	d004      	beq.n	8005cd8 <_fflush_r+0x20>
 8005cce:	6a03      	ldr	r3, [r0, #32]
 8005cd0:	2b00      	cmp	r3, #0
 8005cd2:	d101      	bne.n	8005cd8 <_fflush_r+0x20>
 8005cd4:	f7fe fe66 	bl	80049a4 <__sinit>
 8005cd8:	220c      	movs	r2, #12
 8005cda:	5ea3      	ldrsh	r3, [r4, r2]
 8005cdc:	2b00      	cmp	r3, #0
 8005cde:	d0f1      	beq.n	8005cc4 <_fflush_r+0xc>
 8005ce0:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8005ce2:	07d2      	lsls	r2, r2, #31
 8005ce4:	d404      	bmi.n	8005cf0 <_fflush_r+0x38>
 8005ce6:	059b      	lsls	r3, r3, #22
 8005ce8:	d402      	bmi.n	8005cf0 <_fflush_r+0x38>
 8005cea:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005cec:	f7fe fec5 	bl	8004a7a <__retarget_lock_acquire_recursive>
 8005cf0:	0028      	movs	r0, r5
 8005cf2:	0021      	movs	r1, r4
 8005cf4:	f7ff ff5a 	bl	8005bac <__sflush_r>
 8005cf8:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8005cfa:	0005      	movs	r5, r0
 8005cfc:	07db      	lsls	r3, r3, #31
 8005cfe:	d4e2      	bmi.n	8005cc6 <_fflush_r+0xe>
 8005d00:	89a3      	ldrh	r3, [r4, #12]
 8005d02:	059b      	lsls	r3, r3, #22
 8005d04:	d4df      	bmi.n	8005cc6 <_fflush_r+0xe>
 8005d06:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005d08:	f7fe feb8 	bl	8004a7c <__retarget_lock_release_recursive>
 8005d0c:	e7db      	b.n	8005cc6 <_fflush_r+0xe>
	...

08005d10 <__malloc_lock>:
 8005d10:	b510      	push	{r4, lr}
 8005d12:	4802      	ldr	r0, [pc, #8]	@ (8005d1c <__malloc_lock+0xc>)
 8005d14:	f7fe feb1 	bl	8004a7a <__retarget_lock_acquire_recursive>
 8005d18:	bd10      	pop	{r4, pc}
 8005d1a:	46c0      	nop			@ (mov r8, r8)
 8005d1c:	20000510 	.word	0x20000510

08005d20 <__malloc_unlock>:
 8005d20:	b510      	push	{r4, lr}
 8005d22:	4802      	ldr	r0, [pc, #8]	@ (8005d2c <__malloc_unlock+0xc>)
 8005d24:	f7fe feaa 	bl	8004a7c <__retarget_lock_release_recursive>
 8005d28:	bd10      	pop	{r4, pc}
 8005d2a:	46c0      	nop			@ (mov r8, r8)
 8005d2c:	20000510 	.word	0x20000510

08005d30 <_Balloc>:
 8005d30:	b570      	push	{r4, r5, r6, lr}
 8005d32:	69c5      	ldr	r5, [r0, #28]
 8005d34:	0006      	movs	r6, r0
 8005d36:	000c      	movs	r4, r1
 8005d38:	2d00      	cmp	r5, #0
 8005d3a:	d10e      	bne.n	8005d5a <_Balloc+0x2a>
 8005d3c:	2010      	movs	r0, #16
 8005d3e:	f7ff fe89 	bl	8005a54 <malloc>
 8005d42:	1e02      	subs	r2, r0, #0
 8005d44:	61f0      	str	r0, [r6, #28]
 8005d46:	d104      	bne.n	8005d52 <_Balloc+0x22>
 8005d48:	216b      	movs	r1, #107	@ 0x6b
 8005d4a:	4b19      	ldr	r3, [pc, #100]	@ (8005db0 <_Balloc+0x80>)
 8005d4c:	4819      	ldr	r0, [pc, #100]	@ (8005db4 <_Balloc+0x84>)
 8005d4e:	f000 fc8b 	bl	8006668 <__assert_func>
 8005d52:	6045      	str	r5, [r0, #4]
 8005d54:	6085      	str	r5, [r0, #8]
 8005d56:	6005      	str	r5, [r0, #0]
 8005d58:	60c5      	str	r5, [r0, #12]
 8005d5a:	69f5      	ldr	r5, [r6, #28]
 8005d5c:	68eb      	ldr	r3, [r5, #12]
 8005d5e:	2b00      	cmp	r3, #0
 8005d60:	d013      	beq.n	8005d8a <_Balloc+0x5a>
 8005d62:	69f3      	ldr	r3, [r6, #28]
 8005d64:	00a2      	lsls	r2, r4, #2
 8005d66:	68db      	ldr	r3, [r3, #12]
 8005d68:	189b      	adds	r3, r3, r2
 8005d6a:	6818      	ldr	r0, [r3, #0]
 8005d6c:	2800      	cmp	r0, #0
 8005d6e:	d118      	bne.n	8005da2 <_Balloc+0x72>
 8005d70:	2101      	movs	r1, #1
 8005d72:	000d      	movs	r5, r1
 8005d74:	40a5      	lsls	r5, r4
 8005d76:	1d6a      	adds	r2, r5, #5
 8005d78:	0030      	movs	r0, r6
 8005d7a:	0092      	lsls	r2, r2, #2
 8005d7c:	f000 fc92 	bl	80066a4 <_calloc_r>
 8005d80:	2800      	cmp	r0, #0
 8005d82:	d00c      	beq.n	8005d9e <_Balloc+0x6e>
 8005d84:	6044      	str	r4, [r0, #4]
 8005d86:	6085      	str	r5, [r0, #8]
 8005d88:	e00d      	b.n	8005da6 <_Balloc+0x76>
 8005d8a:	2221      	movs	r2, #33	@ 0x21
 8005d8c:	2104      	movs	r1, #4
 8005d8e:	0030      	movs	r0, r6
 8005d90:	f000 fc88 	bl	80066a4 <_calloc_r>
 8005d94:	69f3      	ldr	r3, [r6, #28]
 8005d96:	60e8      	str	r0, [r5, #12]
 8005d98:	68db      	ldr	r3, [r3, #12]
 8005d9a:	2b00      	cmp	r3, #0
 8005d9c:	d1e1      	bne.n	8005d62 <_Balloc+0x32>
 8005d9e:	2000      	movs	r0, #0
 8005da0:	bd70      	pop	{r4, r5, r6, pc}
 8005da2:	6802      	ldr	r2, [r0, #0]
 8005da4:	601a      	str	r2, [r3, #0]
 8005da6:	2300      	movs	r3, #0
 8005da8:	6103      	str	r3, [r0, #16]
 8005daa:	60c3      	str	r3, [r0, #12]
 8005dac:	e7f8      	b.n	8005da0 <_Balloc+0x70>
 8005dae:	46c0      	nop			@ (mov r8, r8)
 8005db0:	080072df 	.word	0x080072df
 8005db4:	08007370 	.word	0x08007370

08005db8 <_Bfree>:
 8005db8:	b570      	push	{r4, r5, r6, lr}
 8005dba:	69c6      	ldr	r6, [r0, #28]
 8005dbc:	0005      	movs	r5, r0
 8005dbe:	000c      	movs	r4, r1
 8005dc0:	2e00      	cmp	r6, #0
 8005dc2:	d10e      	bne.n	8005de2 <_Bfree+0x2a>
 8005dc4:	2010      	movs	r0, #16
 8005dc6:	f7ff fe45 	bl	8005a54 <malloc>
 8005dca:	1e02      	subs	r2, r0, #0
 8005dcc:	61e8      	str	r0, [r5, #28]
 8005dce:	d104      	bne.n	8005dda <_Bfree+0x22>
 8005dd0:	218f      	movs	r1, #143	@ 0x8f
 8005dd2:	4b09      	ldr	r3, [pc, #36]	@ (8005df8 <_Bfree+0x40>)
 8005dd4:	4809      	ldr	r0, [pc, #36]	@ (8005dfc <_Bfree+0x44>)
 8005dd6:	f000 fc47 	bl	8006668 <__assert_func>
 8005dda:	6046      	str	r6, [r0, #4]
 8005ddc:	6086      	str	r6, [r0, #8]
 8005dde:	6006      	str	r6, [r0, #0]
 8005de0:	60c6      	str	r6, [r0, #12]
 8005de2:	2c00      	cmp	r4, #0
 8005de4:	d007      	beq.n	8005df6 <_Bfree+0x3e>
 8005de6:	69eb      	ldr	r3, [r5, #28]
 8005de8:	6862      	ldr	r2, [r4, #4]
 8005dea:	68db      	ldr	r3, [r3, #12]
 8005dec:	0092      	lsls	r2, r2, #2
 8005dee:	189b      	adds	r3, r3, r2
 8005df0:	681a      	ldr	r2, [r3, #0]
 8005df2:	6022      	str	r2, [r4, #0]
 8005df4:	601c      	str	r4, [r3, #0]
 8005df6:	bd70      	pop	{r4, r5, r6, pc}
 8005df8:	080072df 	.word	0x080072df
 8005dfc:	08007370 	.word	0x08007370

08005e00 <__multadd>:
 8005e00:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005e02:	000f      	movs	r7, r1
 8005e04:	9001      	str	r0, [sp, #4]
 8005e06:	000c      	movs	r4, r1
 8005e08:	001e      	movs	r6, r3
 8005e0a:	2000      	movs	r0, #0
 8005e0c:	690d      	ldr	r5, [r1, #16]
 8005e0e:	3714      	adds	r7, #20
 8005e10:	683b      	ldr	r3, [r7, #0]
 8005e12:	3001      	adds	r0, #1
 8005e14:	b299      	uxth	r1, r3
 8005e16:	4351      	muls	r1, r2
 8005e18:	0c1b      	lsrs	r3, r3, #16
 8005e1a:	4353      	muls	r3, r2
 8005e1c:	1989      	adds	r1, r1, r6
 8005e1e:	0c0e      	lsrs	r6, r1, #16
 8005e20:	199b      	adds	r3, r3, r6
 8005e22:	0c1e      	lsrs	r6, r3, #16
 8005e24:	b289      	uxth	r1, r1
 8005e26:	041b      	lsls	r3, r3, #16
 8005e28:	185b      	adds	r3, r3, r1
 8005e2a:	c708      	stmia	r7!, {r3}
 8005e2c:	4285      	cmp	r5, r0
 8005e2e:	dcef      	bgt.n	8005e10 <__multadd+0x10>
 8005e30:	2e00      	cmp	r6, #0
 8005e32:	d022      	beq.n	8005e7a <__multadd+0x7a>
 8005e34:	68a3      	ldr	r3, [r4, #8]
 8005e36:	42ab      	cmp	r3, r5
 8005e38:	dc19      	bgt.n	8005e6e <__multadd+0x6e>
 8005e3a:	6861      	ldr	r1, [r4, #4]
 8005e3c:	9801      	ldr	r0, [sp, #4]
 8005e3e:	3101      	adds	r1, #1
 8005e40:	f7ff ff76 	bl	8005d30 <_Balloc>
 8005e44:	1e07      	subs	r7, r0, #0
 8005e46:	d105      	bne.n	8005e54 <__multadd+0x54>
 8005e48:	003a      	movs	r2, r7
 8005e4a:	21ba      	movs	r1, #186	@ 0xba
 8005e4c:	4b0c      	ldr	r3, [pc, #48]	@ (8005e80 <__multadd+0x80>)
 8005e4e:	480d      	ldr	r0, [pc, #52]	@ (8005e84 <__multadd+0x84>)
 8005e50:	f000 fc0a 	bl	8006668 <__assert_func>
 8005e54:	0021      	movs	r1, r4
 8005e56:	6922      	ldr	r2, [r4, #16]
 8005e58:	310c      	adds	r1, #12
 8005e5a:	3202      	adds	r2, #2
 8005e5c:	0092      	lsls	r2, r2, #2
 8005e5e:	300c      	adds	r0, #12
 8005e60:	f000 fbf8 	bl	8006654 <memcpy>
 8005e64:	0021      	movs	r1, r4
 8005e66:	9801      	ldr	r0, [sp, #4]
 8005e68:	f7ff ffa6 	bl	8005db8 <_Bfree>
 8005e6c:	003c      	movs	r4, r7
 8005e6e:	1d2b      	adds	r3, r5, #4
 8005e70:	009b      	lsls	r3, r3, #2
 8005e72:	18e3      	adds	r3, r4, r3
 8005e74:	3501      	adds	r5, #1
 8005e76:	605e      	str	r6, [r3, #4]
 8005e78:	6125      	str	r5, [r4, #16]
 8005e7a:	0020      	movs	r0, r4
 8005e7c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005e7e:	46c0      	nop			@ (mov r8, r8)
 8005e80:	0800734e 	.word	0x0800734e
 8005e84:	08007370 	.word	0x08007370

08005e88 <__hi0bits>:
 8005e88:	2280      	movs	r2, #128	@ 0x80
 8005e8a:	0003      	movs	r3, r0
 8005e8c:	0252      	lsls	r2, r2, #9
 8005e8e:	2000      	movs	r0, #0
 8005e90:	4293      	cmp	r3, r2
 8005e92:	d201      	bcs.n	8005e98 <__hi0bits+0x10>
 8005e94:	041b      	lsls	r3, r3, #16
 8005e96:	3010      	adds	r0, #16
 8005e98:	2280      	movs	r2, #128	@ 0x80
 8005e9a:	0452      	lsls	r2, r2, #17
 8005e9c:	4293      	cmp	r3, r2
 8005e9e:	d201      	bcs.n	8005ea4 <__hi0bits+0x1c>
 8005ea0:	3008      	adds	r0, #8
 8005ea2:	021b      	lsls	r3, r3, #8
 8005ea4:	2280      	movs	r2, #128	@ 0x80
 8005ea6:	0552      	lsls	r2, r2, #21
 8005ea8:	4293      	cmp	r3, r2
 8005eaa:	d201      	bcs.n	8005eb0 <__hi0bits+0x28>
 8005eac:	3004      	adds	r0, #4
 8005eae:	011b      	lsls	r3, r3, #4
 8005eb0:	2280      	movs	r2, #128	@ 0x80
 8005eb2:	05d2      	lsls	r2, r2, #23
 8005eb4:	4293      	cmp	r3, r2
 8005eb6:	d201      	bcs.n	8005ebc <__hi0bits+0x34>
 8005eb8:	3002      	adds	r0, #2
 8005eba:	009b      	lsls	r3, r3, #2
 8005ebc:	2b00      	cmp	r3, #0
 8005ebe:	db03      	blt.n	8005ec8 <__hi0bits+0x40>
 8005ec0:	3001      	adds	r0, #1
 8005ec2:	4213      	tst	r3, r2
 8005ec4:	d100      	bne.n	8005ec8 <__hi0bits+0x40>
 8005ec6:	2020      	movs	r0, #32
 8005ec8:	4770      	bx	lr

08005eca <__lo0bits>:
 8005eca:	6803      	ldr	r3, [r0, #0]
 8005ecc:	0001      	movs	r1, r0
 8005ece:	2207      	movs	r2, #7
 8005ed0:	0018      	movs	r0, r3
 8005ed2:	4010      	ands	r0, r2
 8005ed4:	4213      	tst	r3, r2
 8005ed6:	d00d      	beq.n	8005ef4 <__lo0bits+0x2a>
 8005ed8:	3a06      	subs	r2, #6
 8005eda:	2000      	movs	r0, #0
 8005edc:	4213      	tst	r3, r2
 8005ede:	d105      	bne.n	8005eec <__lo0bits+0x22>
 8005ee0:	3002      	adds	r0, #2
 8005ee2:	4203      	tst	r3, r0
 8005ee4:	d003      	beq.n	8005eee <__lo0bits+0x24>
 8005ee6:	40d3      	lsrs	r3, r2
 8005ee8:	0010      	movs	r0, r2
 8005eea:	600b      	str	r3, [r1, #0]
 8005eec:	4770      	bx	lr
 8005eee:	089b      	lsrs	r3, r3, #2
 8005ef0:	600b      	str	r3, [r1, #0]
 8005ef2:	e7fb      	b.n	8005eec <__lo0bits+0x22>
 8005ef4:	b29a      	uxth	r2, r3
 8005ef6:	2a00      	cmp	r2, #0
 8005ef8:	d101      	bne.n	8005efe <__lo0bits+0x34>
 8005efa:	2010      	movs	r0, #16
 8005efc:	0c1b      	lsrs	r3, r3, #16
 8005efe:	b2da      	uxtb	r2, r3
 8005f00:	2a00      	cmp	r2, #0
 8005f02:	d101      	bne.n	8005f08 <__lo0bits+0x3e>
 8005f04:	3008      	adds	r0, #8
 8005f06:	0a1b      	lsrs	r3, r3, #8
 8005f08:	071a      	lsls	r2, r3, #28
 8005f0a:	d101      	bne.n	8005f10 <__lo0bits+0x46>
 8005f0c:	3004      	adds	r0, #4
 8005f0e:	091b      	lsrs	r3, r3, #4
 8005f10:	079a      	lsls	r2, r3, #30
 8005f12:	d101      	bne.n	8005f18 <__lo0bits+0x4e>
 8005f14:	3002      	adds	r0, #2
 8005f16:	089b      	lsrs	r3, r3, #2
 8005f18:	07da      	lsls	r2, r3, #31
 8005f1a:	d4e9      	bmi.n	8005ef0 <__lo0bits+0x26>
 8005f1c:	3001      	adds	r0, #1
 8005f1e:	085b      	lsrs	r3, r3, #1
 8005f20:	d1e6      	bne.n	8005ef0 <__lo0bits+0x26>
 8005f22:	2020      	movs	r0, #32
 8005f24:	e7e2      	b.n	8005eec <__lo0bits+0x22>
	...

08005f28 <__i2b>:
 8005f28:	b510      	push	{r4, lr}
 8005f2a:	000c      	movs	r4, r1
 8005f2c:	2101      	movs	r1, #1
 8005f2e:	f7ff feff 	bl	8005d30 <_Balloc>
 8005f32:	2800      	cmp	r0, #0
 8005f34:	d107      	bne.n	8005f46 <__i2b+0x1e>
 8005f36:	2146      	movs	r1, #70	@ 0x46
 8005f38:	4c05      	ldr	r4, [pc, #20]	@ (8005f50 <__i2b+0x28>)
 8005f3a:	0002      	movs	r2, r0
 8005f3c:	4b05      	ldr	r3, [pc, #20]	@ (8005f54 <__i2b+0x2c>)
 8005f3e:	0020      	movs	r0, r4
 8005f40:	31ff      	adds	r1, #255	@ 0xff
 8005f42:	f000 fb91 	bl	8006668 <__assert_func>
 8005f46:	2301      	movs	r3, #1
 8005f48:	6144      	str	r4, [r0, #20]
 8005f4a:	6103      	str	r3, [r0, #16]
 8005f4c:	bd10      	pop	{r4, pc}
 8005f4e:	46c0      	nop			@ (mov r8, r8)
 8005f50:	08007370 	.word	0x08007370
 8005f54:	0800734e 	.word	0x0800734e

08005f58 <__multiply>:
 8005f58:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005f5a:	0014      	movs	r4, r2
 8005f5c:	690a      	ldr	r2, [r1, #16]
 8005f5e:	6923      	ldr	r3, [r4, #16]
 8005f60:	000d      	movs	r5, r1
 8005f62:	b08b      	sub	sp, #44	@ 0x2c
 8005f64:	429a      	cmp	r2, r3
 8005f66:	db02      	blt.n	8005f6e <__multiply+0x16>
 8005f68:	0023      	movs	r3, r4
 8005f6a:	000c      	movs	r4, r1
 8005f6c:	001d      	movs	r5, r3
 8005f6e:	6927      	ldr	r7, [r4, #16]
 8005f70:	692e      	ldr	r6, [r5, #16]
 8005f72:	6861      	ldr	r1, [r4, #4]
 8005f74:	19bb      	adds	r3, r7, r6
 8005f76:	9303      	str	r3, [sp, #12]
 8005f78:	68a3      	ldr	r3, [r4, #8]
 8005f7a:	19ba      	adds	r2, r7, r6
 8005f7c:	4293      	cmp	r3, r2
 8005f7e:	da00      	bge.n	8005f82 <__multiply+0x2a>
 8005f80:	3101      	adds	r1, #1
 8005f82:	f7ff fed5 	bl	8005d30 <_Balloc>
 8005f86:	9002      	str	r0, [sp, #8]
 8005f88:	2800      	cmp	r0, #0
 8005f8a:	d106      	bne.n	8005f9a <__multiply+0x42>
 8005f8c:	21b1      	movs	r1, #177	@ 0xb1
 8005f8e:	4b49      	ldr	r3, [pc, #292]	@ (80060b4 <__multiply+0x15c>)
 8005f90:	4849      	ldr	r0, [pc, #292]	@ (80060b8 <__multiply+0x160>)
 8005f92:	9a02      	ldr	r2, [sp, #8]
 8005f94:	0049      	lsls	r1, r1, #1
 8005f96:	f000 fb67 	bl	8006668 <__assert_func>
 8005f9a:	9b02      	ldr	r3, [sp, #8]
 8005f9c:	2200      	movs	r2, #0
 8005f9e:	3314      	adds	r3, #20
 8005fa0:	469c      	mov	ip, r3
 8005fa2:	19bb      	adds	r3, r7, r6
 8005fa4:	009b      	lsls	r3, r3, #2
 8005fa6:	4463      	add	r3, ip
 8005fa8:	9304      	str	r3, [sp, #16]
 8005faa:	4663      	mov	r3, ip
 8005fac:	9904      	ldr	r1, [sp, #16]
 8005fae:	428b      	cmp	r3, r1
 8005fb0:	d32a      	bcc.n	8006008 <__multiply+0xb0>
 8005fb2:	0023      	movs	r3, r4
 8005fb4:	00bf      	lsls	r7, r7, #2
 8005fb6:	3314      	adds	r3, #20
 8005fb8:	3514      	adds	r5, #20
 8005fba:	9308      	str	r3, [sp, #32]
 8005fbc:	00b6      	lsls	r6, r6, #2
 8005fbe:	19db      	adds	r3, r3, r7
 8005fc0:	9305      	str	r3, [sp, #20]
 8005fc2:	19ab      	adds	r3, r5, r6
 8005fc4:	9309      	str	r3, [sp, #36]	@ 0x24
 8005fc6:	2304      	movs	r3, #4
 8005fc8:	9306      	str	r3, [sp, #24]
 8005fca:	0023      	movs	r3, r4
 8005fcc:	9a05      	ldr	r2, [sp, #20]
 8005fce:	3315      	adds	r3, #21
 8005fd0:	9501      	str	r5, [sp, #4]
 8005fd2:	429a      	cmp	r2, r3
 8005fd4:	d305      	bcc.n	8005fe2 <__multiply+0x8a>
 8005fd6:	1b13      	subs	r3, r2, r4
 8005fd8:	3b15      	subs	r3, #21
 8005fda:	089b      	lsrs	r3, r3, #2
 8005fdc:	3301      	adds	r3, #1
 8005fde:	009b      	lsls	r3, r3, #2
 8005fe0:	9306      	str	r3, [sp, #24]
 8005fe2:	9b01      	ldr	r3, [sp, #4]
 8005fe4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005fe6:	4293      	cmp	r3, r2
 8005fe8:	d310      	bcc.n	800600c <__multiply+0xb4>
 8005fea:	9b03      	ldr	r3, [sp, #12]
 8005fec:	2b00      	cmp	r3, #0
 8005fee:	dd05      	ble.n	8005ffc <__multiply+0xa4>
 8005ff0:	9b04      	ldr	r3, [sp, #16]
 8005ff2:	3b04      	subs	r3, #4
 8005ff4:	9304      	str	r3, [sp, #16]
 8005ff6:	681b      	ldr	r3, [r3, #0]
 8005ff8:	2b00      	cmp	r3, #0
 8005ffa:	d056      	beq.n	80060aa <__multiply+0x152>
 8005ffc:	9b02      	ldr	r3, [sp, #8]
 8005ffe:	9a03      	ldr	r2, [sp, #12]
 8006000:	0018      	movs	r0, r3
 8006002:	611a      	str	r2, [r3, #16]
 8006004:	b00b      	add	sp, #44	@ 0x2c
 8006006:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006008:	c304      	stmia	r3!, {r2}
 800600a:	e7cf      	b.n	8005fac <__multiply+0x54>
 800600c:	9b01      	ldr	r3, [sp, #4]
 800600e:	6818      	ldr	r0, [r3, #0]
 8006010:	b280      	uxth	r0, r0
 8006012:	2800      	cmp	r0, #0
 8006014:	d01e      	beq.n	8006054 <__multiply+0xfc>
 8006016:	4667      	mov	r7, ip
 8006018:	2500      	movs	r5, #0
 800601a:	9e08      	ldr	r6, [sp, #32]
 800601c:	ce02      	ldmia	r6!, {r1}
 800601e:	683b      	ldr	r3, [r7, #0]
 8006020:	9307      	str	r3, [sp, #28]
 8006022:	b28b      	uxth	r3, r1
 8006024:	4343      	muls	r3, r0
 8006026:	001a      	movs	r2, r3
 8006028:	466b      	mov	r3, sp
 800602a:	0c09      	lsrs	r1, r1, #16
 800602c:	8b9b      	ldrh	r3, [r3, #28]
 800602e:	4341      	muls	r1, r0
 8006030:	18d3      	adds	r3, r2, r3
 8006032:	9a07      	ldr	r2, [sp, #28]
 8006034:	195b      	adds	r3, r3, r5
 8006036:	0c12      	lsrs	r2, r2, #16
 8006038:	1889      	adds	r1, r1, r2
 800603a:	0c1a      	lsrs	r2, r3, #16
 800603c:	188a      	adds	r2, r1, r2
 800603e:	b29b      	uxth	r3, r3
 8006040:	0c15      	lsrs	r5, r2, #16
 8006042:	0412      	lsls	r2, r2, #16
 8006044:	431a      	orrs	r2, r3
 8006046:	9b05      	ldr	r3, [sp, #20]
 8006048:	c704      	stmia	r7!, {r2}
 800604a:	42b3      	cmp	r3, r6
 800604c:	d8e6      	bhi.n	800601c <__multiply+0xc4>
 800604e:	4663      	mov	r3, ip
 8006050:	9a06      	ldr	r2, [sp, #24]
 8006052:	509d      	str	r5, [r3, r2]
 8006054:	9b01      	ldr	r3, [sp, #4]
 8006056:	6818      	ldr	r0, [r3, #0]
 8006058:	0c00      	lsrs	r0, r0, #16
 800605a:	d020      	beq.n	800609e <__multiply+0x146>
 800605c:	4663      	mov	r3, ip
 800605e:	0025      	movs	r5, r4
 8006060:	4661      	mov	r1, ip
 8006062:	2700      	movs	r7, #0
 8006064:	681b      	ldr	r3, [r3, #0]
 8006066:	3514      	adds	r5, #20
 8006068:	682a      	ldr	r2, [r5, #0]
 800606a:	680e      	ldr	r6, [r1, #0]
 800606c:	b292      	uxth	r2, r2
 800606e:	4342      	muls	r2, r0
 8006070:	0c36      	lsrs	r6, r6, #16
 8006072:	1992      	adds	r2, r2, r6
 8006074:	19d2      	adds	r2, r2, r7
 8006076:	0416      	lsls	r6, r2, #16
 8006078:	b29b      	uxth	r3, r3
 800607a:	431e      	orrs	r6, r3
 800607c:	600e      	str	r6, [r1, #0]
 800607e:	cd40      	ldmia	r5!, {r6}
 8006080:	684b      	ldr	r3, [r1, #4]
 8006082:	0c36      	lsrs	r6, r6, #16
 8006084:	4346      	muls	r6, r0
 8006086:	b29b      	uxth	r3, r3
 8006088:	0c12      	lsrs	r2, r2, #16
 800608a:	18f3      	adds	r3, r6, r3
 800608c:	189b      	adds	r3, r3, r2
 800608e:	9a05      	ldr	r2, [sp, #20]
 8006090:	0c1f      	lsrs	r7, r3, #16
 8006092:	3104      	adds	r1, #4
 8006094:	42aa      	cmp	r2, r5
 8006096:	d8e7      	bhi.n	8006068 <__multiply+0x110>
 8006098:	4662      	mov	r2, ip
 800609a:	9906      	ldr	r1, [sp, #24]
 800609c:	5053      	str	r3, [r2, r1]
 800609e:	9b01      	ldr	r3, [sp, #4]
 80060a0:	3304      	adds	r3, #4
 80060a2:	9301      	str	r3, [sp, #4]
 80060a4:	2304      	movs	r3, #4
 80060a6:	449c      	add	ip, r3
 80060a8:	e79b      	b.n	8005fe2 <__multiply+0x8a>
 80060aa:	9b03      	ldr	r3, [sp, #12]
 80060ac:	3b01      	subs	r3, #1
 80060ae:	9303      	str	r3, [sp, #12]
 80060b0:	e79b      	b.n	8005fea <__multiply+0x92>
 80060b2:	46c0      	nop			@ (mov r8, r8)
 80060b4:	0800734e 	.word	0x0800734e
 80060b8:	08007370 	.word	0x08007370

080060bc <__pow5mult>:
 80060bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80060be:	2303      	movs	r3, #3
 80060c0:	0015      	movs	r5, r2
 80060c2:	0007      	movs	r7, r0
 80060c4:	000e      	movs	r6, r1
 80060c6:	401a      	ands	r2, r3
 80060c8:	421d      	tst	r5, r3
 80060ca:	d008      	beq.n	80060de <__pow5mult+0x22>
 80060cc:	4925      	ldr	r1, [pc, #148]	@ (8006164 <__pow5mult+0xa8>)
 80060ce:	3a01      	subs	r2, #1
 80060d0:	0092      	lsls	r2, r2, #2
 80060d2:	5852      	ldr	r2, [r2, r1]
 80060d4:	2300      	movs	r3, #0
 80060d6:	0031      	movs	r1, r6
 80060d8:	f7ff fe92 	bl	8005e00 <__multadd>
 80060dc:	0006      	movs	r6, r0
 80060de:	10ad      	asrs	r5, r5, #2
 80060e0:	d03d      	beq.n	800615e <__pow5mult+0xa2>
 80060e2:	69fc      	ldr	r4, [r7, #28]
 80060e4:	2c00      	cmp	r4, #0
 80060e6:	d10f      	bne.n	8006108 <__pow5mult+0x4c>
 80060e8:	2010      	movs	r0, #16
 80060ea:	f7ff fcb3 	bl	8005a54 <malloc>
 80060ee:	1e02      	subs	r2, r0, #0
 80060f0:	61f8      	str	r0, [r7, #28]
 80060f2:	d105      	bne.n	8006100 <__pow5mult+0x44>
 80060f4:	21b4      	movs	r1, #180	@ 0xb4
 80060f6:	4b1c      	ldr	r3, [pc, #112]	@ (8006168 <__pow5mult+0xac>)
 80060f8:	481c      	ldr	r0, [pc, #112]	@ (800616c <__pow5mult+0xb0>)
 80060fa:	31ff      	adds	r1, #255	@ 0xff
 80060fc:	f000 fab4 	bl	8006668 <__assert_func>
 8006100:	6044      	str	r4, [r0, #4]
 8006102:	6084      	str	r4, [r0, #8]
 8006104:	6004      	str	r4, [r0, #0]
 8006106:	60c4      	str	r4, [r0, #12]
 8006108:	69fb      	ldr	r3, [r7, #28]
 800610a:	689c      	ldr	r4, [r3, #8]
 800610c:	9301      	str	r3, [sp, #4]
 800610e:	2c00      	cmp	r4, #0
 8006110:	d108      	bne.n	8006124 <__pow5mult+0x68>
 8006112:	0038      	movs	r0, r7
 8006114:	4916      	ldr	r1, [pc, #88]	@ (8006170 <__pow5mult+0xb4>)
 8006116:	f7ff ff07 	bl	8005f28 <__i2b>
 800611a:	9b01      	ldr	r3, [sp, #4]
 800611c:	0004      	movs	r4, r0
 800611e:	6098      	str	r0, [r3, #8]
 8006120:	2300      	movs	r3, #0
 8006122:	6003      	str	r3, [r0, #0]
 8006124:	2301      	movs	r3, #1
 8006126:	421d      	tst	r5, r3
 8006128:	d00a      	beq.n	8006140 <__pow5mult+0x84>
 800612a:	0031      	movs	r1, r6
 800612c:	0022      	movs	r2, r4
 800612e:	0038      	movs	r0, r7
 8006130:	f7ff ff12 	bl	8005f58 <__multiply>
 8006134:	0031      	movs	r1, r6
 8006136:	9001      	str	r0, [sp, #4]
 8006138:	0038      	movs	r0, r7
 800613a:	f7ff fe3d 	bl	8005db8 <_Bfree>
 800613e:	9e01      	ldr	r6, [sp, #4]
 8006140:	106d      	asrs	r5, r5, #1
 8006142:	d00c      	beq.n	800615e <__pow5mult+0xa2>
 8006144:	6820      	ldr	r0, [r4, #0]
 8006146:	2800      	cmp	r0, #0
 8006148:	d107      	bne.n	800615a <__pow5mult+0x9e>
 800614a:	0022      	movs	r2, r4
 800614c:	0021      	movs	r1, r4
 800614e:	0038      	movs	r0, r7
 8006150:	f7ff ff02 	bl	8005f58 <__multiply>
 8006154:	2300      	movs	r3, #0
 8006156:	6020      	str	r0, [r4, #0]
 8006158:	6003      	str	r3, [r0, #0]
 800615a:	0004      	movs	r4, r0
 800615c:	e7e2      	b.n	8006124 <__pow5mult+0x68>
 800615e:	0030      	movs	r0, r6
 8006160:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006162:	46c0      	nop			@ (mov r8, r8)
 8006164:	080073cc 	.word	0x080073cc
 8006168:	080072df 	.word	0x080072df
 800616c:	08007370 	.word	0x08007370
 8006170:	00000271 	.word	0x00000271

08006174 <__lshift>:
 8006174:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006176:	000c      	movs	r4, r1
 8006178:	0016      	movs	r6, r2
 800617a:	6923      	ldr	r3, [r4, #16]
 800617c:	1157      	asrs	r7, r2, #5
 800617e:	b085      	sub	sp, #20
 8006180:	18fb      	adds	r3, r7, r3
 8006182:	9301      	str	r3, [sp, #4]
 8006184:	3301      	adds	r3, #1
 8006186:	9300      	str	r3, [sp, #0]
 8006188:	6849      	ldr	r1, [r1, #4]
 800618a:	68a3      	ldr	r3, [r4, #8]
 800618c:	9002      	str	r0, [sp, #8]
 800618e:	9a00      	ldr	r2, [sp, #0]
 8006190:	4293      	cmp	r3, r2
 8006192:	db10      	blt.n	80061b6 <__lshift+0x42>
 8006194:	9802      	ldr	r0, [sp, #8]
 8006196:	f7ff fdcb 	bl	8005d30 <_Balloc>
 800619a:	2300      	movs	r3, #0
 800619c:	0001      	movs	r1, r0
 800619e:	0005      	movs	r5, r0
 80061a0:	001a      	movs	r2, r3
 80061a2:	3114      	adds	r1, #20
 80061a4:	4298      	cmp	r0, r3
 80061a6:	d10c      	bne.n	80061c2 <__lshift+0x4e>
 80061a8:	21ef      	movs	r1, #239	@ 0xef
 80061aa:	002a      	movs	r2, r5
 80061ac:	4b25      	ldr	r3, [pc, #148]	@ (8006244 <__lshift+0xd0>)
 80061ae:	4826      	ldr	r0, [pc, #152]	@ (8006248 <__lshift+0xd4>)
 80061b0:	0049      	lsls	r1, r1, #1
 80061b2:	f000 fa59 	bl	8006668 <__assert_func>
 80061b6:	3101      	adds	r1, #1
 80061b8:	005b      	lsls	r3, r3, #1
 80061ba:	e7e8      	b.n	800618e <__lshift+0x1a>
 80061bc:	0098      	lsls	r0, r3, #2
 80061be:	500a      	str	r2, [r1, r0]
 80061c0:	3301      	adds	r3, #1
 80061c2:	42bb      	cmp	r3, r7
 80061c4:	dbfa      	blt.n	80061bc <__lshift+0x48>
 80061c6:	43fb      	mvns	r3, r7
 80061c8:	17db      	asrs	r3, r3, #31
 80061ca:	401f      	ands	r7, r3
 80061cc:	00bf      	lsls	r7, r7, #2
 80061ce:	0023      	movs	r3, r4
 80061d0:	201f      	movs	r0, #31
 80061d2:	19c9      	adds	r1, r1, r7
 80061d4:	0037      	movs	r7, r6
 80061d6:	6922      	ldr	r2, [r4, #16]
 80061d8:	3314      	adds	r3, #20
 80061da:	0092      	lsls	r2, r2, #2
 80061dc:	189a      	adds	r2, r3, r2
 80061de:	4007      	ands	r7, r0
 80061e0:	4206      	tst	r6, r0
 80061e2:	d029      	beq.n	8006238 <__lshift+0xc4>
 80061e4:	3001      	adds	r0, #1
 80061e6:	1bc0      	subs	r0, r0, r7
 80061e8:	9003      	str	r0, [sp, #12]
 80061ea:	468c      	mov	ip, r1
 80061ec:	2000      	movs	r0, #0
 80061ee:	681e      	ldr	r6, [r3, #0]
 80061f0:	40be      	lsls	r6, r7
 80061f2:	4306      	orrs	r6, r0
 80061f4:	4660      	mov	r0, ip
 80061f6:	c040      	stmia	r0!, {r6}
 80061f8:	4684      	mov	ip, r0
 80061fa:	9e03      	ldr	r6, [sp, #12]
 80061fc:	cb01      	ldmia	r3!, {r0}
 80061fe:	40f0      	lsrs	r0, r6
 8006200:	429a      	cmp	r2, r3
 8006202:	d8f4      	bhi.n	80061ee <__lshift+0x7a>
 8006204:	0026      	movs	r6, r4
 8006206:	3615      	adds	r6, #21
 8006208:	2304      	movs	r3, #4
 800620a:	42b2      	cmp	r2, r6
 800620c:	d304      	bcc.n	8006218 <__lshift+0xa4>
 800620e:	1b13      	subs	r3, r2, r4
 8006210:	3b15      	subs	r3, #21
 8006212:	089b      	lsrs	r3, r3, #2
 8006214:	3301      	adds	r3, #1
 8006216:	009b      	lsls	r3, r3, #2
 8006218:	50c8      	str	r0, [r1, r3]
 800621a:	2800      	cmp	r0, #0
 800621c:	d002      	beq.n	8006224 <__lshift+0xb0>
 800621e:	9b01      	ldr	r3, [sp, #4]
 8006220:	3302      	adds	r3, #2
 8006222:	9300      	str	r3, [sp, #0]
 8006224:	9b00      	ldr	r3, [sp, #0]
 8006226:	9802      	ldr	r0, [sp, #8]
 8006228:	3b01      	subs	r3, #1
 800622a:	0021      	movs	r1, r4
 800622c:	612b      	str	r3, [r5, #16]
 800622e:	f7ff fdc3 	bl	8005db8 <_Bfree>
 8006232:	0028      	movs	r0, r5
 8006234:	b005      	add	sp, #20
 8006236:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006238:	cb01      	ldmia	r3!, {r0}
 800623a:	c101      	stmia	r1!, {r0}
 800623c:	429a      	cmp	r2, r3
 800623e:	d8fb      	bhi.n	8006238 <__lshift+0xc4>
 8006240:	e7f0      	b.n	8006224 <__lshift+0xb0>
 8006242:	46c0      	nop			@ (mov r8, r8)
 8006244:	0800734e 	.word	0x0800734e
 8006248:	08007370 	.word	0x08007370

0800624c <__mcmp>:
 800624c:	b530      	push	{r4, r5, lr}
 800624e:	690b      	ldr	r3, [r1, #16]
 8006250:	6904      	ldr	r4, [r0, #16]
 8006252:	0002      	movs	r2, r0
 8006254:	1ae0      	subs	r0, r4, r3
 8006256:	429c      	cmp	r4, r3
 8006258:	d10f      	bne.n	800627a <__mcmp+0x2e>
 800625a:	3214      	adds	r2, #20
 800625c:	009b      	lsls	r3, r3, #2
 800625e:	3114      	adds	r1, #20
 8006260:	0014      	movs	r4, r2
 8006262:	18c9      	adds	r1, r1, r3
 8006264:	18d2      	adds	r2, r2, r3
 8006266:	3a04      	subs	r2, #4
 8006268:	3904      	subs	r1, #4
 800626a:	6815      	ldr	r5, [r2, #0]
 800626c:	680b      	ldr	r3, [r1, #0]
 800626e:	429d      	cmp	r5, r3
 8006270:	d004      	beq.n	800627c <__mcmp+0x30>
 8006272:	2001      	movs	r0, #1
 8006274:	429d      	cmp	r5, r3
 8006276:	d200      	bcs.n	800627a <__mcmp+0x2e>
 8006278:	3802      	subs	r0, #2
 800627a:	bd30      	pop	{r4, r5, pc}
 800627c:	4294      	cmp	r4, r2
 800627e:	d3f2      	bcc.n	8006266 <__mcmp+0x1a>
 8006280:	e7fb      	b.n	800627a <__mcmp+0x2e>
	...

08006284 <__mdiff>:
 8006284:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006286:	000c      	movs	r4, r1
 8006288:	b087      	sub	sp, #28
 800628a:	9000      	str	r0, [sp, #0]
 800628c:	0011      	movs	r1, r2
 800628e:	0020      	movs	r0, r4
 8006290:	0017      	movs	r7, r2
 8006292:	f7ff ffdb 	bl	800624c <__mcmp>
 8006296:	1e05      	subs	r5, r0, #0
 8006298:	d110      	bne.n	80062bc <__mdiff+0x38>
 800629a:	0001      	movs	r1, r0
 800629c:	9800      	ldr	r0, [sp, #0]
 800629e:	f7ff fd47 	bl	8005d30 <_Balloc>
 80062a2:	1e02      	subs	r2, r0, #0
 80062a4:	d104      	bne.n	80062b0 <__mdiff+0x2c>
 80062a6:	4b40      	ldr	r3, [pc, #256]	@ (80063a8 <__mdiff+0x124>)
 80062a8:	4840      	ldr	r0, [pc, #256]	@ (80063ac <__mdiff+0x128>)
 80062aa:	4941      	ldr	r1, [pc, #260]	@ (80063b0 <__mdiff+0x12c>)
 80062ac:	f000 f9dc 	bl	8006668 <__assert_func>
 80062b0:	2301      	movs	r3, #1
 80062b2:	6145      	str	r5, [r0, #20]
 80062b4:	6103      	str	r3, [r0, #16]
 80062b6:	0010      	movs	r0, r2
 80062b8:	b007      	add	sp, #28
 80062ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80062bc:	2600      	movs	r6, #0
 80062be:	42b0      	cmp	r0, r6
 80062c0:	da03      	bge.n	80062ca <__mdiff+0x46>
 80062c2:	0023      	movs	r3, r4
 80062c4:	003c      	movs	r4, r7
 80062c6:	001f      	movs	r7, r3
 80062c8:	3601      	adds	r6, #1
 80062ca:	6861      	ldr	r1, [r4, #4]
 80062cc:	9800      	ldr	r0, [sp, #0]
 80062ce:	f7ff fd2f 	bl	8005d30 <_Balloc>
 80062d2:	1e02      	subs	r2, r0, #0
 80062d4:	d103      	bne.n	80062de <__mdiff+0x5a>
 80062d6:	4b34      	ldr	r3, [pc, #208]	@ (80063a8 <__mdiff+0x124>)
 80062d8:	4834      	ldr	r0, [pc, #208]	@ (80063ac <__mdiff+0x128>)
 80062da:	4936      	ldr	r1, [pc, #216]	@ (80063b4 <__mdiff+0x130>)
 80062dc:	e7e6      	b.n	80062ac <__mdiff+0x28>
 80062de:	6923      	ldr	r3, [r4, #16]
 80062e0:	3414      	adds	r4, #20
 80062e2:	9300      	str	r3, [sp, #0]
 80062e4:	009b      	lsls	r3, r3, #2
 80062e6:	18e3      	adds	r3, r4, r3
 80062e8:	0021      	movs	r1, r4
 80062ea:	9401      	str	r4, [sp, #4]
 80062ec:	003c      	movs	r4, r7
 80062ee:	9302      	str	r3, [sp, #8]
 80062f0:	693b      	ldr	r3, [r7, #16]
 80062f2:	3414      	adds	r4, #20
 80062f4:	009b      	lsls	r3, r3, #2
 80062f6:	18e3      	adds	r3, r4, r3
 80062f8:	9303      	str	r3, [sp, #12]
 80062fa:	0003      	movs	r3, r0
 80062fc:	60c6      	str	r6, [r0, #12]
 80062fe:	468c      	mov	ip, r1
 8006300:	2000      	movs	r0, #0
 8006302:	3314      	adds	r3, #20
 8006304:	9304      	str	r3, [sp, #16]
 8006306:	9305      	str	r3, [sp, #20]
 8006308:	4663      	mov	r3, ip
 800630a:	cb20      	ldmia	r3!, {r5}
 800630c:	b2a9      	uxth	r1, r5
 800630e:	000e      	movs	r6, r1
 8006310:	469c      	mov	ip, r3
 8006312:	cc08      	ldmia	r4!, {r3}
 8006314:	0c2d      	lsrs	r5, r5, #16
 8006316:	b299      	uxth	r1, r3
 8006318:	1a71      	subs	r1, r6, r1
 800631a:	1809      	adds	r1, r1, r0
 800631c:	0c1b      	lsrs	r3, r3, #16
 800631e:	1408      	asrs	r0, r1, #16
 8006320:	1aeb      	subs	r3, r5, r3
 8006322:	181b      	adds	r3, r3, r0
 8006324:	1418      	asrs	r0, r3, #16
 8006326:	b289      	uxth	r1, r1
 8006328:	041b      	lsls	r3, r3, #16
 800632a:	4319      	orrs	r1, r3
 800632c:	9b05      	ldr	r3, [sp, #20]
 800632e:	c302      	stmia	r3!, {r1}
 8006330:	9305      	str	r3, [sp, #20]
 8006332:	9b03      	ldr	r3, [sp, #12]
 8006334:	42a3      	cmp	r3, r4
 8006336:	d8e7      	bhi.n	8006308 <__mdiff+0x84>
 8006338:	0039      	movs	r1, r7
 800633a:	9c03      	ldr	r4, [sp, #12]
 800633c:	3115      	adds	r1, #21
 800633e:	2304      	movs	r3, #4
 8006340:	428c      	cmp	r4, r1
 8006342:	d304      	bcc.n	800634e <__mdiff+0xca>
 8006344:	1be3      	subs	r3, r4, r7
 8006346:	3b15      	subs	r3, #21
 8006348:	089b      	lsrs	r3, r3, #2
 800634a:	3301      	adds	r3, #1
 800634c:	009b      	lsls	r3, r3, #2
 800634e:	9901      	ldr	r1, [sp, #4]
 8006350:	18cd      	adds	r5, r1, r3
 8006352:	9904      	ldr	r1, [sp, #16]
 8006354:	002e      	movs	r6, r5
 8006356:	18cb      	adds	r3, r1, r3
 8006358:	001f      	movs	r7, r3
 800635a:	9902      	ldr	r1, [sp, #8]
 800635c:	428e      	cmp	r6, r1
 800635e:	d311      	bcc.n	8006384 <__mdiff+0x100>
 8006360:	9c02      	ldr	r4, [sp, #8]
 8006362:	1ee9      	subs	r1, r5, #3
 8006364:	2000      	movs	r0, #0
 8006366:	428c      	cmp	r4, r1
 8006368:	d304      	bcc.n	8006374 <__mdiff+0xf0>
 800636a:	0021      	movs	r1, r4
 800636c:	3103      	adds	r1, #3
 800636e:	1b49      	subs	r1, r1, r5
 8006370:	0889      	lsrs	r1, r1, #2
 8006372:	0088      	lsls	r0, r1, #2
 8006374:	181b      	adds	r3, r3, r0
 8006376:	3b04      	subs	r3, #4
 8006378:	6819      	ldr	r1, [r3, #0]
 800637a:	2900      	cmp	r1, #0
 800637c:	d010      	beq.n	80063a0 <__mdiff+0x11c>
 800637e:	9b00      	ldr	r3, [sp, #0]
 8006380:	6113      	str	r3, [r2, #16]
 8006382:	e798      	b.n	80062b6 <__mdiff+0x32>
 8006384:	4684      	mov	ip, r0
 8006386:	ce02      	ldmia	r6!, {r1}
 8006388:	b288      	uxth	r0, r1
 800638a:	4460      	add	r0, ip
 800638c:	1400      	asrs	r0, r0, #16
 800638e:	0c0c      	lsrs	r4, r1, #16
 8006390:	1904      	adds	r4, r0, r4
 8006392:	4461      	add	r1, ip
 8006394:	1420      	asrs	r0, r4, #16
 8006396:	b289      	uxth	r1, r1
 8006398:	0424      	lsls	r4, r4, #16
 800639a:	4321      	orrs	r1, r4
 800639c:	c702      	stmia	r7!, {r1}
 800639e:	e7dc      	b.n	800635a <__mdiff+0xd6>
 80063a0:	9900      	ldr	r1, [sp, #0]
 80063a2:	3901      	subs	r1, #1
 80063a4:	9100      	str	r1, [sp, #0]
 80063a6:	e7e6      	b.n	8006376 <__mdiff+0xf2>
 80063a8:	0800734e 	.word	0x0800734e
 80063ac:	08007370 	.word	0x08007370
 80063b0:	00000237 	.word	0x00000237
 80063b4:	00000245 	.word	0x00000245

080063b8 <__d2b>:
 80063b8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80063ba:	2101      	movs	r1, #1
 80063bc:	0016      	movs	r6, r2
 80063be:	001f      	movs	r7, r3
 80063c0:	f7ff fcb6 	bl	8005d30 <_Balloc>
 80063c4:	1e04      	subs	r4, r0, #0
 80063c6:	d105      	bne.n	80063d4 <__d2b+0x1c>
 80063c8:	0022      	movs	r2, r4
 80063ca:	4b25      	ldr	r3, [pc, #148]	@ (8006460 <__d2b+0xa8>)
 80063cc:	4825      	ldr	r0, [pc, #148]	@ (8006464 <__d2b+0xac>)
 80063ce:	4926      	ldr	r1, [pc, #152]	@ (8006468 <__d2b+0xb0>)
 80063d0:	f000 f94a 	bl	8006668 <__assert_func>
 80063d4:	033b      	lsls	r3, r7, #12
 80063d6:	007d      	lsls	r5, r7, #1
 80063d8:	0b1b      	lsrs	r3, r3, #12
 80063da:	0d6d      	lsrs	r5, r5, #21
 80063dc:	d002      	beq.n	80063e4 <__d2b+0x2c>
 80063de:	2280      	movs	r2, #128	@ 0x80
 80063e0:	0352      	lsls	r2, r2, #13
 80063e2:	4313      	orrs	r3, r2
 80063e4:	9301      	str	r3, [sp, #4]
 80063e6:	2e00      	cmp	r6, #0
 80063e8:	d025      	beq.n	8006436 <__d2b+0x7e>
 80063ea:	4668      	mov	r0, sp
 80063ec:	9600      	str	r6, [sp, #0]
 80063ee:	f7ff fd6c 	bl	8005eca <__lo0bits>
 80063f2:	9b01      	ldr	r3, [sp, #4]
 80063f4:	9900      	ldr	r1, [sp, #0]
 80063f6:	2800      	cmp	r0, #0
 80063f8:	d01b      	beq.n	8006432 <__d2b+0x7a>
 80063fa:	2220      	movs	r2, #32
 80063fc:	001e      	movs	r6, r3
 80063fe:	1a12      	subs	r2, r2, r0
 8006400:	4096      	lsls	r6, r2
 8006402:	0032      	movs	r2, r6
 8006404:	40c3      	lsrs	r3, r0
 8006406:	430a      	orrs	r2, r1
 8006408:	6162      	str	r2, [r4, #20]
 800640a:	9301      	str	r3, [sp, #4]
 800640c:	9e01      	ldr	r6, [sp, #4]
 800640e:	61a6      	str	r6, [r4, #24]
 8006410:	1e73      	subs	r3, r6, #1
 8006412:	419e      	sbcs	r6, r3
 8006414:	3601      	adds	r6, #1
 8006416:	6126      	str	r6, [r4, #16]
 8006418:	2d00      	cmp	r5, #0
 800641a:	d014      	beq.n	8006446 <__d2b+0x8e>
 800641c:	2635      	movs	r6, #53	@ 0x35
 800641e:	4b13      	ldr	r3, [pc, #76]	@ (800646c <__d2b+0xb4>)
 8006420:	18ed      	adds	r5, r5, r3
 8006422:	9b08      	ldr	r3, [sp, #32]
 8006424:	182d      	adds	r5, r5, r0
 8006426:	601d      	str	r5, [r3, #0]
 8006428:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800642a:	1a36      	subs	r6, r6, r0
 800642c:	601e      	str	r6, [r3, #0]
 800642e:	0020      	movs	r0, r4
 8006430:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006432:	6161      	str	r1, [r4, #20]
 8006434:	e7ea      	b.n	800640c <__d2b+0x54>
 8006436:	a801      	add	r0, sp, #4
 8006438:	f7ff fd47 	bl	8005eca <__lo0bits>
 800643c:	9b01      	ldr	r3, [sp, #4]
 800643e:	2601      	movs	r6, #1
 8006440:	6163      	str	r3, [r4, #20]
 8006442:	3020      	adds	r0, #32
 8006444:	e7e7      	b.n	8006416 <__d2b+0x5e>
 8006446:	4b0a      	ldr	r3, [pc, #40]	@ (8006470 <__d2b+0xb8>)
 8006448:	18c0      	adds	r0, r0, r3
 800644a:	9b08      	ldr	r3, [sp, #32]
 800644c:	6018      	str	r0, [r3, #0]
 800644e:	4b09      	ldr	r3, [pc, #36]	@ (8006474 <__d2b+0xbc>)
 8006450:	18f3      	adds	r3, r6, r3
 8006452:	009b      	lsls	r3, r3, #2
 8006454:	18e3      	adds	r3, r4, r3
 8006456:	6958      	ldr	r0, [r3, #20]
 8006458:	f7ff fd16 	bl	8005e88 <__hi0bits>
 800645c:	0176      	lsls	r6, r6, #5
 800645e:	e7e3      	b.n	8006428 <__d2b+0x70>
 8006460:	0800734e 	.word	0x0800734e
 8006464:	08007370 	.word	0x08007370
 8006468:	0000030f 	.word	0x0000030f
 800646c:	fffffbcd 	.word	0xfffffbcd
 8006470:	fffffbce 	.word	0xfffffbce
 8006474:	3fffffff 	.word	0x3fffffff

08006478 <__sread>:
 8006478:	b570      	push	{r4, r5, r6, lr}
 800647a:	000c      	movs	r4, r1
 800647c:	250e      	movs	r5, #14
 800647e:	5f49      	ldrsh	r1, [r1, r5]
 8006480:	f000 f8ae 	bl	80065e0 <_read_r>
 8006484:	2800      	cmp	r0, #0
 8006486:	db03      	blt.n	8006490 <__sread+0x18>
 8006488:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800648a:	181b      	adds	r3, r3, r0
 800648c:	6563      	str	r3, [r4, #84]	@ 0x54
 800648e:	bd70      	pop	{r4, r5, r6, pc}
 8006490:	89a3      	ldrh	r3, [r4, #12]
 8006492:	4a02      	ldr	r2, [pc, #8]	@ (800649c <__sread+0x24>)
 8006494:	4013      	ands	r3, r2
 8006496:	81a3      	strh	r3, [r4, #12]
 8006498:	e7f9      	b.n	800648e <__sread+0x16>
 800649a:	46c0      	nop			@ (mov r8, r8)
 800649c:	ffffefff 	.word	0xffffefff

080064a0 <__swrite>:
 80064a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80064a2:	001f      	movs	r7, r3
 80064a4:	898b      	ldrh	r3, [r1, #12]
 80064a6:	0005      	movs	r5, r0
 80064a8:	000c      	movs	r4, r1
 80064aa:	0016      	movs	r6, r2
 80064ac:	05db      	lsls	r3, r3, #23
 80064ae:	d505      	bpl.n	80064bc <__swrite+0x1c>
 80064b0:	230e      	movs	r3, #14
 80064b2:	5ec9      	ldrsh	r1, [r1, r3]
 80064b4:	2200      	movs	r2, #0
 80064b6:	2302      	movs	r3, #2
 80064b8:	f000 f87e 	bl	80065b8 <_lseek_r>
 80064bc:	89a3      	ldrh	r3, [r4, #12]
 80064be:	4a05      	ldr	r2, [pc, #20]	@ (80064d4 <__swrite+0x34>)
 80064c0:	0028      	movs	r0, r5
 80064c2:	4013      	ands	r3, r2
 80064c4:	81a3      	strh	r3, [r4, #12]
 80064c6:	0032      	movs	r2, r6
 80064c8:	230e      	movs	r3, #14
 80064ca:	5ee1      	ldrsh	r1, [r4, r3]
 80064cc:	003b      	movs	r3, r7
 80064ce:	f000 f8ad 	bl	800662c <_write_r>
 80064d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80064d4:	ffffefff 	.word	0xffffefff

080064d8 <__sseek>:
 80064d8:	b570      	push	{r4, r5, r6, lr}
 80064da:	000c      	movs	r4, r1
 80064dc:	250e      	movs	r5, #14
 80064de:	5f49      	ldrsh	r1, [r1, r5]
 80064e0:	f000 f86a 	bl	80065b8 <_lseek_r>
 80064e4:	89a3      	ldrh	r3, [r4, #12]
 80064e6:	1c42      	adds	r2, r0, #1
 80064e8:	d103      	bne.n	80064f2 <__sseek+0x1a>
 80064ea:	4a05      	ldr	r2, [pc, #20]	@ (8006500 <__sseek+0x28>)
 80064ec:	4013      	ands	r3, r2
 80064ee:	81a3      	strh	r3, [r4, #12]
 80064f0:	bd70      	pop	{r4, r5, r6, pc}
 80064f2:	2280      	movs	r2, #128	@ 0x80
 80064f4:	0152      	lsls	r2, r2, #5
 80064f6:	4313      	orrs	r3, r2
 80064f8:	81a3      	strh	r3, [r4, #12]
 80064fa:	6560      	str	r0, [r4, #84]	@ 0x54
 80064fc:	e7f8      	b.n	80064f0 <__sseek+0x18>
 80064fe:	46c0      	nop			@ (mov r8, r8)
 8006500:	ffffefff 	.word	0xffffefff

08006504 <__sclose>:
 8006504:	b510      	push	{r4, lr}
 8006506:	230e      	movs	r3, #14
 8006508:	5ec9      	ldrsh	r1, [r1, r3]
 800650a:	f000 f843 	bl	8006594 <_close_r>
 800650e:	bd10      	pop	{r4, pc}

08006510 <_realloc_r>:
 8006510:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006512:	0006      	movs	r6, r0
 8006514:	000c      	movs	r4, r1
 8006516:	0015      	movs	r5, r2
 8006518:	2900      	cmp	r1, #0
 800651a:	d105      	bne.n	8006528 <_realloc_r+0x18>
 800651c:	0011      	movs	r1, r2
 800651e:	f7ff fac5 	bl	8005aac <_malloc_r>
 8006522:	0004      	movs	r4, r0
 8006524:	0020      	movs	r0, r4
 8006526:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006528:	2a00      	cmp	r2, #0
 800652a:	d103      	bne.n	8006534 <_realloc_r+0x24>
 800652c:	f000 f8e8 	bl	8006700 <_free_r>
 8006530:	2400      	movs	r4, #0
 8006532:	e7f7      	b.n	8006524 <_realloc_r+0x14>
 8006534:	f000 f940 	bl	80067b8 <_malloc_usable_size_r>
 8006538:	0007      	movs	r7, r0
 800653a:	4285      	cmp	r5, r0
 800653c:	d802      	bhi.n	8006544 <_realloc_r+0x34>
 800653e:	0843      	lsrs	r3, r0, #1
 8006540:	42ab      	cmp	r3, r5
 8006542:	d3ef      	bcc.n	8006524 <_realloc_r+0x14>
 8006544:	0029      	movs	r1, r5
 8006546:	0030      	movs	r0, r6
 8006548:	f7ff fab0 	bl	8005aac <_malloc_r>
 800654c:	9001      	str	r0, [sp, #4]
 800654e:	2800      	cmp	r0, #0
 8006550:	d0ee      	beq.n	8006530 <_realloc_r+0x20>
 8006552:	002a      	movs	r2, r5
 8006554:	42bd      	cmp	r5, r7
 8006556:	d900      	bls.n	800655a <_realloc_r+0x4a>
 8006558:	003a      	movs	r2, r7
 800655a:	0021      	movs	r1, r4
 800655c:	9801      	ldr	r0, [sp, #4]
 800655e:	f000 f879 	bl	8006654 <memcpy>
 8006562:	0021      	movs	r1, r4
 8006564:	0030      	movs	r0, r6
 8006566:	f000 f8cb 	bl	8006700 <_free_r>
 800656a:	9c01      	ldr	r4, [sp, #4]
 800656c:	e7da      	b.n	8006524 <_realloc_r+0x14>

0800656e <memmove>:
 800656e:	b510      	push	{r4, lr}
 8006570:	4288      	cmp	r0, r1
 8006572:	d806      	bhi.n	8006582 <memmove+0x14>
 8006574:	2300      	movs	r3, #0
 8006576:	429a      	cmp	r2, r3
 8006578:	d008      	beq.n	800658c <memmove+0x1e>
 800657a:	5ccc      	ldrb	r4, [r1, r3]
 800657c:	54c4      	strb	r4, [r0, r3]
 800657e:	3301      	adds	r3, #1
 8006580:	e7f9      	b.n	8006576 <memmove+0x8>
 8006582:	188b      	adds	r3, r1, r2
 8006584:	4298      	cmp	r0, r3
 8006586:	d2f5      	bcs.n	8006574 <memmove+0x6>
 8006588:	3a01      	subs	r2, #1
 800658a:	d200      	bcs.n	800658e <memmove+0x20>
 800658c:	bd10      	pop	{r4, pc}
 800658e:	5c8b      	ldrb	r3, [r1, r2]
 8006590:	5483      	strb	r3, [r0, r2]
 8006592:	e7f9      	b.n	8006588 <memmove+0x1a>

08006594 <_close_r>:
 8006594:	2300      	movs	r3, #0
 8006596:	b570      	push	{r4, r5, r6, lr}
 8006598:	4d06      	ldr	r5, [pc, #24]	@ (80065b4 <_close_r+0x20>)
 800659a:	0004      	movs	r4, r0
 800659c:	0008      	movs	r0, r1
 800659e:	602b      	str	r3, [r5, #0]
 80065a0:	f7fc facc 	bl	8002b3c <_close>
 80065a4:	1c43      	adds	r3, r0, #1
 80065a6:	d103      	bne.n	80065b0 <_close_r+0x1c>
 80065a8:	682b      	ldr	r3, [r5, #0]
 80065aa:	2b00      	cmp	r3, #0
 80065ac:	d000      	beq.n	80065b0 <_close_r+0x1c>
 80065ae:	6023      	str	r3, [r4, #0]
 80065b0:	bd70      	pop	{r4, r5, r6, pc}
 80065b2:	46c0      	nop			@ (mov r8, r8)
 80065b4:	2000051c 	.word	0x2000051c

080065b8 <_lseek_r>:
 80065b8:	b570      	push	{r4, r5, r6, lr}
 80065ba:	0004      	movs	r4, r0
 80065bc:	0008      	movs	r0, r1
 80065be:	0011      	movs	r1, r2
 80065c0:	001a      	movs	r2, r3
 80065c2:	2300      	movs	r3, #0
 80065c4:	4d05      	ldr	r5, [pc, #20]	@ (80065dc <_lseek_r+0x24>)
 80065c6:	602b      	str	r3, [r5, #0]
 80065c8:	f7fc fac2 	bl	8002b50 <_lseek>
 80065cc:	1c43      	adds	r3, r0, #1
 80065ce:	d103      	bne.n	80065d8 <_lseek_r+0x20>
 80065d0:	682b      	ldr	r3, [r5, #0]
 80065d2:	2b00      	cmp	r3, #0
 80065d4:	d000      	beq.n	80065d8 <_lseek_r+0x20>
 80065d6:	6023      	str	r3, [r4, #0]
 80065d8:	bd70      	pop	{r4, r5, r6, pc}
 80065da:	46c0      	nop			@ (mov r8, r8)
 80065dc:	2000051c 	.word	0x2000051c

080065e0 <_read_r>:
 80065e0:	b570      	push	{r4, r5, r6, lr}
 80065e2:	0004      	movs	r4, r0
 80065e4:	0008      	movs	r0, r1
 80065e6:	0011      	movs	r1, r2
 80065e8:	001a      	movs	r2, r3
 80065ea:	2300      	movs	r3, #0
 80065ec:	4d05      	ldr	r5, [pc, #20]	@ (8006604 <_read_r+0x24>)
 80065ee:	602b      	str	r3, [r5, #0]
 80065f0:	f7fc fa8a 	bl	8002b08 <_read>
 80065f4:	1c43      	adds	r3, r0, #1
 80065f6:	d103      	bne.n	8006600 <_read_r+0x20>
 80065f8:	682b      	ldr	r3, [r5, #0]
 80065fa:	2b00      	cmp	r3, #0
 80065fc:	d000      	beq.n	8006600 <_read_r+0x20>
 80065fe:	6023      	str	r3, [r4, #0]
 8006600:	bd70      	pop	{r4, r5, r6, pc}
 8006602:	46c0      	nop			@ (mov r8, r8)
 8006604:	2000051c 	.word	0x2000051c

08006608 <_sbrk_r>:
 8006608:	2300      	movs	r3, #0
 800660a:	b570      	push	{r4, r5, r6, lr}
 800660c:	4d06      	ldr	r5, [pc, #24]	@ (8006628 <_sbrk_r+0x20>)
 800660e:	0004      	movs	r4, r0
 8006610:	0008      	movs	r0, r1
 8006612:	602b      	str	r3, [r5, #0]
 8006614:	f7fc fa9e 	bl	8002b54 <_sbrk>
 8006618:	1c43      	adds	r3, r0, #1
 800661a:	d103      	bne.n	8006624 <_sbrk_r+0x1c>
 800661c:	682b      	ldr	r3, [r5, #0]
 800661e:	2b00      	cmp	r3, #0
 8006620:	d000      	beq.n	8006624 <_sbrk_r+0x1c>
 8006622:	6023      	str	r3, [r4, #0]
 8006624:	bd70      	pop	{r4, r5, r6, pc}
 8006626:	46c0      	nop			@ (mov r8, r8)
 8006628:	2000051c 	.word	0x2000051c

0800662c <_write_r>:
 800662c:	b570      	push	{r4, r5, r6, lr}
 800662e:	0004      	movs	r4, r0
 8006630:	0008      	movs	r0, r1
 8006632:	0011      	movs	r1, r2
 8006634:	001a      	movs	r2, r3
 8006636:	2300      	movs	r3, #0
 8006638:	4d05      	ldr	r5, [pc, #20]	@ (8006650 <_write_r+0x24>)
 800663a:	602b      	str	r3, [r5, #0]
 800663c:	f7fc fa71 	bl	8002b22 <_write>
 8006640:	1c43      	adds	r3, r0, #1
 8006642:	d103      	bne.n	800664c <_write_r+0x20>
 8006644:	682b      	ldr	r3, [r5, #0]
 8006646:	2b00      	cmp	r3, #0
 8006648:	d000      	beq.n	800664c <_write_r+0x20>
 800664a:	6023      	str	r3, [r4, #0]
 800664c:	bd70      	pop	{r4, r5, r6, pc}
 800664e:	46c0      	nop			@ (mov r8, r8)
 8006650:	2000051c 	.word	0x2000051c

08006654 <memcpy>:
 8006654:	2300      	movs	r3, #0
 8006656:	b510      	push	{r4, lr}
 8006658:	429a      	cmp	r2, r3
 800665a:	d100      	bne.n	800665e <memcpy+0xa>
 800665c:	bd10      	pop	{r4, pc}
 800665e:	5ccc      	ldrb	r4, [r1, r3]
 8006660:	54c4      	strb	r4, [r0, r3]
 8006662:	3301      	adds	r3, #1
 8006664:	e7f8      	b.n	8006658 <memcpy+0x4>
	...

08006668 <__assert_func>:
 8006668:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800666a:	0014      	movs	r4, r2
 800666c:	001a      	movs	r2, r3
 800666e:	4b09      	ldr	r3, [pc, #36]	@ (8006694 <__assert_func+0x2c>)
 8006670:	0005      	movs	r5, r0
 8006672:	681b      	ldr	r3, [r3, #0]
 8006674:	000e      	movs	r6, r1
 8006676:	68d8      	ldr	r0, [r3, #12]
 8006678:	4b07      	ldr	r3, [pc, #28]	@ (8006698 <__assert_func+0x30>)
 800667a:	2c00      	cmp	r4, #0
 800667c:	d101      	bne.n	8006682 <__assert_func+0x1a>
 800667e:	4b07      	ldr	r3, [pc, #28]	@ (800669c <__assert_func+0x34>)
 8006680:	001c      	movs	r4, r3
 8006682:	4907      	ldr	r1, [pc, #28]	@ (80066a0 <__assert_func+0x38>)
 8006684:	9301      	str	r3, [sp, #4]
 8006686:	9402      	str	r4, [sp, #8]
 8006688:	002b      	movs	r3, r5
 800668a:	9600      	str	r6, [sp, #0]
 800668c:	f000 f89c 	bl	80067c8 <fiprintf>
 8006690:	f000 f8b7 	bl	8006802 <abort>
 8006694:	20000018 	.word	0x20000018
 8006698:	080075d3 	.word	0x080075d3
 800669c:	0800760e 	.word	0x0800760e
 80066a0:	080075e0 	.word	0x080075e0

080066a4 <_calloc_r>:
 80066a4:	b570      	push	{r4, r5, r6, lr}
 80066a6:	0c0b      	lsrs	r3, r1, #16
 80066a8:	0c15      	lsrs	r5, r2, #16
 80066aa:	2b00      	cmp	r3, #0
 80066ac:	d11e      	bne.n	80066ec <_calloc_r+0x48>
 80066ae:	2d00      	cmp	r5, #0
 80066b0:	d10c      	bne.n	80066cc <_calloc_r+0x28>
 80066b2:	b289      	uxth	r1, r1
 80066b4:	b294      	uxth	r4, r2
 80066b6:	434c      	muls	r4, r1
 80066b8:	0021      	movs	r1, r4
 80066ba:	f7ff f9f7 	bl	8005aac <_malloc_r>
 80066be:	1e05      	subs	r5, r0, #0
 80066c0:	d01a      	beq.n	80066f8 <_calloc_r+0x54>
 80066c2:	0022      	movs	r2, r4
 80066c4:	2100      	movs	r1, #0
 80066c6:	f7fe f9a1 	bl	8004a0c <memset>
 80066ca:	e016      	b.n	80066fa <_calloc_r+0x56>
 80066cc:	1c2b      	adds	r3, r5, #0
 80066ce:	1c0c      	adds	r4, r1, #0
 80066d0:	b289      	uxth	r1, r1
 80066d2:	b292      	uxth	r2, r2
 80066d4:	434a      	muls	r2, r1
 80066d6:	b29b      	uxth	r3, r3
 80066d8:	b2a1      	uxth	r1, r4
 80066da:	4359      	muls	r1, r3
 80066dc:	0c14      	lsrs	r4, r2, #16
 80066de:	190c      	adds	r4, r1, r4
 80066e0:	0c23      	lsrs	r3, r4, #16
 80066e2:	d107      	bne.n	80066f4 <_calloc_r+0x50>
 80066e4:	0424      	lsls	r4, r4, #16
 80066e6:	b292      	uxth	r2, r2
 80066e8:	4314      	orrs	r4, r2
 80066ea:	e7e5      	b.n	80066b8 <_calloc_r+0x14>
 80066ec:	2d00      	cmp	r5, #0
 80066ee:	d101      	bne.n	80066f4 <_calloc_r+0x50>
 80066f0:	1c14      	adds	r4, r2, #0
 80066f2:	e7ed      	b.n	80066d0 <_calloc_r+0x2c>
 80066f4:	230c      	movs	r3, #12
 80066f6:	6003      	str	r3, [r0, #0]
 80066f8:	2500      	movs	r5, #0
 80066fa:	0028      	movs	r0, r5
 80066fc:	bd70      	pop	{r4, r5, r6, pc}
	...

08006700 <_free_r>:
 8006700:	b570      	push	{r4, r5, r6, lr}
 8006702:	0005      	movs	r5, r0
 8006704:	1e0c      	subs	r4, r1, #0
 8006706:	d010      	beq.n	800672a <_free_r+0x2a>
 8006708:	3c04      	subs	r4, #4
 800670a:	6823      	ldr	r3, [r4, #0]
 800670c:	2b00      	cmp	r3, #0
 800670e:	da00      	bge.n	8006712 <_free_r+0x12>
 8006710:	18e4      	adds	r4, r4, r3
 8006712:	0028      	movs	r0, r5
 8006714:	f7ff fafc 	bl	8005d10 <__malloc_lock>
 8006718:	4a1d      	ldr	r2, [pc, #116]	@ (8006790 <_free_r+0x90>)
 800671a:	6813      	ldr	r3, [r2, #0]
 800671c:	2b00      	cmp	r3, #0
 800671e:	d105      	bne.n	800672c <_free_r+0x2c>
 8006720:	6063      	str	r3, [r4, #4]
 8006722:	6014      	str	r4, [r2, #0]
 8006724:	0028      	movs	r0, r5
 8006726:	f7ff fafb 	bl	8005d20 <__malloc_unlock>
 800672a:	bd70      	pop	{r4, r5, r6, pc}
 800672c:	42a3      	cmp	r3, r4
 800672e:	d908      	bls.n	8006742 <_free_r+0x42>
 8006730:	6820      	ldr	r0, [r4, #0]
 8006732:	1821      	adds	r1, r4, r0
 8006734:	428b      	cmp	r3, r1
 8006736:	d1f3      	bne.n	8006720 <_free_r+0x20>
 8006738:	6819      	ldr	r1, [r3, #0]
 800673a:	685b      	ldr	r3, [r3, #4]
 800673c:	1809      	adds	r1, r1, r0
 800673e:	6021      	str	r1, [r4, #0]
 8006740:	e7ee      	b.n	8006720 <_free_r+0x20>
 8006742:	001a      	movs	r2, r3
 8006744:	685b      	ldr	r3, [r3, #4]
 8006746:	2b00      	cmp	r3, #0
 8006748:	d001      	beq.n	800674e <_free_r+0x4e>
 800674a:	42a3      	cmp	r3, r4
 800674c:	d9f9      	bls.n	8006742 <_free_r+0x42>
 800674e:	6811      	ldr	r1, [r2, #0]
 8006750:	1850      	adds	r0, r2, r1
 8006752:	42a0      	cmp	r0, r4
 8006754:	d10b      	bne.n	800676e <_free_r+0x6e>
 8006756:	6820      	ldr	r0, [r4, #0]
 8006758:	1809      	adds	r1, r1, r0
 800675a:	1850      	adds	r0, r2, r1
 800675c:	6011      	str	r1, [r2, #0]
 800675e:	4283      	cmp	r3, r0
 8006760:	d1e0      	bne.n	8006724 <_free_r+0x24>
 8006762:	6818      	ldr	r0, [r3, #0]
 8006764:	685b      	ldr	r3, [r3, #4]
 8006766:	1841      	adds	r1, r0, r1
 8006768:	6011      	str	r1, [r2, #0]
 800676a:	6053      	str	r3, [r2, #4]
 800676c:	e7da      	b.n	8006724 <_free_r+0x24>
 800676e:	42a0      	cmp	r0, r4
 8006770:	d902      	bls.n	8006778 <_free_r+0x78>
 8006772:	230c      	movs	r3, #12
 8006774:	602b      	str	r3, [r5, #0]
 8006776:	e7d5      	b.n	8006724 <_free_r+0x24>
 8006778:	6820      	ldr	r0, [r4, #0]
 800677a:	1821      	adds	r1, r4, r0
 800677c:	428b      	cmp	r3, r1
 800677e:	d103      	bne.n	8006788 <_free_r+0x88>
 8006780:	6819      	ldr	r1, [r3, #0]
 8006782:	685b      	ldr	r3, [r3, #4]
 8006784:	1809      	adds	r1, r1, r0
 8006786:	6021      	str	r1, [r4, #0]
 8006788:	6063      	str	r3, [r4, #4]
 800678a:	6054      	str	r4, [r2, #4]
 800678c:	e7ca      	b.n	8006724 <_free_r+0x24>
 800678e:	46c0      	nop			@ (mov r8, r8)
 8006790:	20000518 	.word	0x20000518

08006794 <__ascii_mbtowc>:
 8006794:	b082      	sub	sp, #8
 8006796:	2900      	cmp	r1, #0
 8006798:	d100      	bne.n	800679c <__ascii_mbtowc+0x8>
 800679a:	a901      	add	r1, sp, #4
 800679c:	1e10      	subs	r0, r2, #0
 800679e:	d006      	beq.n	80067ae <__ascii_mbtowc+0x1a>
 80067a0:	2b00      	cmp	r3, #0
 80067a2:	d006      	beq.n	80067b2 <__ascii_mbtowc+0x1e>
 80067a4:	7813      	ldrb	r3, [r2, #0]
 80067a6:	600b      	str	r3, [r1, #0]
 80067a8:	7810      	ldrb	r0, [r2, #0]
 80067aa:	1e43      	subs	r3, r0, #1
 80067ac:	4198      	sbcs	r0, r3
 80067ae:	b002      	add	sp, #8
 80067b0:	4770      	bx	lr
 80067b2:	2002      	movs	r0, #2
 80067b4:	4240      	negs	r0, r0
 80067b6:	e7fa      	b.n	80067ae <__ascii_mbtowc+0x1a>

080067b8 <_malloc_usable_size_r>:
 80067b8:	1f0b      	subs	r3, r1, #4
 80067ba:	681b      	ldr	r3, [r3, #0]
 80067bc:	1f18      	subs	r0, r3, #4
 80067be:	2b00      	cmp	r3, #0
 80067c0:	da01      	bge.n	80067c6 <_malloc_usable_size_r+0xe>
 80067c2:	580b      	ldr	r3, [r1, r0]
 80067c4:	18c0      	adds	r0, r0, r3
 80067c6:	4770      	bx	lr

080067c8 <fiprintf>:
 80067c8:	b40e      	push	{r1, r2, r3}
 80067ca:	b517      	push	{r0, r1, r2, r4, lr}
 80067cc:	4c05      	ldr	r4, [pc, #20]	@ (80067e4 <fiprintf+0x1c>)
 80067ce:	ab05      	add	r3, sp, #20
 80067d0:	cb04      	ldmia	r3!, {r2}
 80067d2:	0001      	movs	r1, r0
 80067d4:	6820      	ldr	r0, [r4, #0]
 80067d6:	9301      	str	r3, [sp, #4]
 80067d8:	f000 f842 	bl	8006860 <_vfiprintf_r>
 80067dc:	bc1e      	pop	{r1, r2, r3, r4}
 80067de:	bc08      	pop	{r3}
 80067e0:	b003      	add	sp, #12
 80067e2:	4718      	bx	r3
 80067e4:	20000018 	.word	0x20000018

080067e8 <__ascii_wctomb>:
 80067e8:	0003      	movs	r3, r0
 80067ea:	1e08      	subs	r0, r1, #0
 80067ec:	d005      	beq.n	80067fa <__ascii_wctomb+0x12>
 80067ee:	2aff      	cmp	r2, #255	@ 0xff
 80067f0:	d904      	bls.n	80067fc <__ascii_wctomb+0x14>
 80067f2:	228a      	movs	r2, #138	@ 0x8a
 80067f4:	2001      	movs	r0, #1
 80067f6:	601a      	str	r2, [r3, #0]
 80067f8:	4240      	negs	r0, r0
 80067fa:	4770      	bx	lr
 80067fc:	2001      	movs	r0, #1
 80067fe:	700a      	strb	r2, [r1, #0]
 8006800:	e7fb      	b.n	80067fa <__ascii_wctomb+0x12>

08006802 <abort>:
 8006802:	2006      	movs	r0, #6
 8006804:	b510      	push	{r4, lr}
 8006806:	f000 faa1 	bl	8006d4c <raise>
 800680a:	2001      	movs	r0, #1
 800680c:	f7fc f976 	bl	8002afc <_exit>

08006810 <__sfputc_r>:
 8006810:	6893      	ldr	r3, [r2, #8]
 8006812:	b510      	push	{r4, lr}
 8006814:	3b01      	subs	r3, #1
 8006816:	6093      	str	r3, [r2, #8]
 8006818:	2b00      	cmp	r3, #0
 800681a:	da04      	bge.n	8006826 <__sfputc_r+0x16>
 800681c:	6994      	ldr	r4, [r2, #24]
 800681e:	42a3      	cmp	r3, r4
 8006820:	db07      	blt.n	8006832 <__sfputc_r+0x22>
 8006822:	290a      	cmp	r1, #10
 8006824:	d005      	beq.n	8006832 <__sfputc_r+0x22>
 8006826:	6813      	ldr	r3, [r2, #0]
 8006828:	1c58      	adds	r0, r3, #1
 800682a:	6010      	str	r0, [r2, #0]
 800682c:	7019      	strb	r1, [r3, #0]
 800682e:	0008      	movs	r0, r1
 8006830:	bd10      	pop	{r4, pc}
 8006832:	f000 f931 	bl	8006a98 <__swbuf_r>
 8006836:	0001      	movs	r1, r0
 8006838:	e7f9      	b.n	800682e <__sfputc_r+0x1e>

0800683a <__sfputs_r>:
 800683a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800683c:	0006      	movs	r6, r0
 800683e:	000f      	movs	r7, r1
 8006840:	0014      	movs	r4, r2
 8006842:	18d5      	adds	r5, r2, r3
 8006844:	42ac      	cmp	r4, r5
 8006846:	d101      	bne.n	800684c <__sfputs_r+0x12>
 8006848:	2000      	movs	r0, #0
 800684a:	e007      	b.n	800685c <__sfputs_r+0x22>
 800684c:	7821      	ldrb	r1, [r4, #0]
 800684e:	003a      	movs	r2, r7
 8006850:	0030      	movs	r0, r6
 8006852:	f7ff ffdd 	bl	8006810 <__sfputc_r>
 8006856:	3401      	adds	r4, #1
 8006858:	1c43      	adds	r3, r0, #1
 800685a:	d1f3      	bne.n	8006844 <__sfputs_r+0xa>
 800685c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08006860 <_vfiprintf_r>:
 8006860:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006862:	b0a1      	sub	sp, #132	@ 0x84
 8006864:	000f      	movs	r7, r1
 8006866:	0015      	movs	r5, r2
 8006868:	001e      	movs	r6, r3
 800686a:	9003      	str	r0, [sp, #12]
 800686c:	2800      	cmp	r0, #0
 800686e:	d004      	beq.n	800687a <_vfiprintf_r+0x1a>
 8006870:	6a03      	ldr	r3, [r0, #32]
 8006872:	2b00      	cmp	r3, #0
 8006874:	d101      	bne.n	800687a <_vfiprintf_r+0x1a>
 8006876:	f7fe f895 	bl	80049a4 <__sinit>
 800687a:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800687c:	07db      	lsls	r3, r3, #31
 800687e:	d405      	bmi.n	800688c <_vfiprintf_r+0x2c>
 8006880:	89bb      	ldrh	r3, [r7, #12]
 8006882:	059b      	lsls	r3, r3, #22
 8006884:	d402      	bmi.n	800688c <_vfiprintf_r+0x2c>
 8006886:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8006888:	f7fe f8f7 	bl	8004a7a <__retarget_lock_acquire_recursive>
 800688c:	89bb      	ldrh	r3, [r7, #12]
 800688e:	071b      	lsls	r3, r3, #28
 8006890:	d502      	bpl.n	8006898 <_vfiprintf_r+0x38>
 8006892:	693b      	ldr	r3, [r7, #16]
 8006894:	2b00      	cmp	r3, #0
 8006896:	d113      	bne.n	80068c0 <_vfiprintf_r+0x60>
 8006898:	0039      	movs	r1, r7
 800689a:	9803      	ldr	r0, [sp, #12]
 800689c:	f000 f93e 	bl	8006b1c <__swsetup_r>
 80068a0:	2800      	cmp	r0, #0
 80068a2:	d00d      	beq.n	80068c0 <_vfiprintf_r+0x60>
 80068a4:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80068a6:	07db      	lsls	r3, r3, #31
 80068a8:	d503      	bpl.n	80068b2 <_vfiprintf_r+0x52>
 80068aa:	2001      	movs	r0, #1
 80068ac:	4240      	negs	r0, r0
 80068ae:	b021      	add	sp, #132	@ 0x84
 80068b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80068b2:	89bb      	ldrh	r3, [r7, #12]
 80068b4:	059b      	lsls	r3, r3, #22
 80068b6:	d4f8      	bmi.n	80068aa <_vfiprintf_r+0x4a>
 80068b8:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 80068ba:	f7fe f8df 	bl	8004a7c <__retarget_lock_release_recursive>
 80068be:	e7f4      	b.n	80068aa <_vfiprintf_r+0x4a>
 80068c0:	2300      	movs	r3, #0
 80068c2:	ac08      	add	r4, sp, #32
 80068c4:	6163      	str	r3, [r4, #20]
 80068c6:	3320      	adds	r3, #32
 80068c8:	7663      	strb	r3, [r4, #25]
 80068ca:	3310      	adds	r3, #16
 80068cc:	76a3      	strb	r3, [r4, #26]
 80068ce:	9607      	str	r6, [sp, #28]
 80068d0:	002e      	movs	r6, r5
 80068d2:	7833      	ldrb	r3, [r6, #0]
 80068d4:	2b00      	cmp	r3, #0
 80068d6:	d001      	beq.n	80068dc <_vfiprintf_r+0x7c>
 80068d8:	2b25      	cmp	r3, #37	@ 0x25
 80068da:	d148      	bne.n	800696e <_vfiprintf_r+0x10e>
 80068dc:	1b73      	subs	r3, r6, r5
 80068de:	9305      	str	r3, [sp, #20]
 80068e0:	42ae      	cmp	r6, r5
 80068e2:	d00b      	beq.n	80068fc <_vfiprintf_r+0x9c>
 80068e4:	002a      	movs	r2, r5
 80068e6:	0039      	movs	r1, r7
 80068e8:	9803      	ldr	r0, [sp, #12]
 80068ea:	f7ff ffa6 	bl	800683a <__sfputs_r>
 80068ee:	3001      	adds	r0, #1
 80068f0:	d100      	bne.n	80068f4 <_vfiprintf_r+0x94>
 80068f2:	e0ae      	b.n	8006a52 <_vfiprintf_r+0x1f2>
 80068f4:	6963      	ldr	r3, [r4, #20]
 80068f6:	9a05      	ldr	r2, [sp, #20]
 80068f8:	189b      	adds	r3, r3, r2
 80068fa:	6163      	str	r3, [r4, #20]
 80068fc:	7833      	ldrb	r3, [r6, #0]
 80068fe:	2b00      	cmp	r3, #0
 8006900:	d100      	bne.n	8006904 <_vfiprintf_r+0xa4>
 8006902:	e0a6      	b.n	8006a52 <_vfiprintf_r+0x1f2>
 8006904:	2201      	movs	r2, #1
 8006906:	2300      	movs	r3, #0
 8006908:	4252      	negs	r2, r2
 800690a:	6062      	str	r2, [r4, #4]
 800690c:	a904      	add	r1, sp, #16
 800690e:	3254      	adds	r2, #84	@ 0x54
 8006910:	1852      	adds	r2, r2, r1
 8006912:	1c75      	adds	r5, r6, #1
 8006914:	6023      	str	r3, [r4, #0]
 8006916:	60e3      	str	r3, [r4, #12]
 8006918:	60a3      	str	r3, [r4, #8]
 800691a:	7013      	strb	r3, [r2, #0]
 800691c:	65a3      	str	r3, [r4, #88]	@ 0x58
 800691e:	4b59      	ldr	r3, [pc, #356]	@ (8006a84 <_vfiprintf_r+0x224>)
 8006920:	2205      	movs	r2, #5
 8006922:	0018      	movs	r0, r3
 8006924:	7829      	ldrb	r1, [r5, #0]
 8006926:	9305      	str	r3, [sp, #20]
 8006928:	f7fe f8a9 	bl	8004a7e <memchr>
 800692c:	1c6e      	adds	r6, r5, #1
 800692e:	2800      	cmp	r0, #0
 8006930:	d11f      	bne.n	8006972 <_vfiprintf_r+0x112>
 8006932:	6822      	ldr	r2, [r4, #0]
 8006934:	06d3      	lsls	r3, r2, #27
 8006936:	d504      	bpl.n	8006942 <_vfiprintf_r+0xe2>
 8006938:	2353      	movs	r3, #83	@ 0x53
 800693a:	a904      	add	r1, sp, #16
 800693c:	185b      	adds	r3, r3, r1
 800693e:	2120      	movs	r1, #32
 8006940:	7019      	strb	r1, [r3, #0]
 8006942:	0713      	lsls	r3, r2, #28
 8006944:	d504      	bpl.n	8006950 <_vfiprintf_r+0xf0>
 8006946:	2353      	movs	r3, #83	@ 0x53
 8006948:	a904      	add	r1, sp, #16
 800694a:	185b      	adds	r3, r3, r1
 800694c:	212b      	movs	r1, #43	@ 0x2b
 800694e:	7019      	strb	r1, [r3, #0]
 8006950:	782b      	ldrb	r3, [r5, #0]
 8006952:	2b2a      	cmp	r3, #42	@ 0x2a
 8006954:	d016      	beq.n	8006984 <_vfiprintf_r+0x124>
 8006956:	002e      	movs	r6, r5
 8006958:	2100      	movs	r1, #0
 800695a:	200a      	movs	r0, #10
 800695c:	68e3      	ldr	r3, [r4, #12]
 800695e:	7832      	ldrb	r2, [r6, #0]
 8006960:	1c75      	adds	r5, r6, #1
 8006962:	3a30      	subs	r2, #48	@ 0x30
 8006964:	2a09      	cmp	r2, #9
 8006966:	d950      	bls.n	8006a0a <_vfiprintf_r+0x1aa>
 8006968:	2900      	cmp	r1, #0
 800696a:	d111      	bne.n	8006990 <_vfiprintf_r+0x130>
 800696c:	e017      	b.n	800699e <_vfiprintf_r+0x13e>
 800696e:	3601      	adds	r6, #1
 8006970:	e7af      	b.n	80068d2 <_vfiprintf_r+0x72>
 8006972:	9b05      	ldr	r3, [sp, #20]
 8006974:	6822      	ldr	r2, [r4, #0]
 8006976:	1ac0      	subs	r0, r0, r3
 8006978:	2301      	movs	r3, #1
 800697a:	4083      	lsls	r3, r0
 800697c:	4313      	orrs	r3, r2
 800697e:	0035      	movs	r5, r6
 8006980:	6023      	str	r3, [r4, #0]
 8006982:	e7cc      	b.n	800691e <_vfiprintf_r+0xbe>
 8006984:	9b07      	ldr	r3, [sp, #28]
 8006986:	1d19      	adds	r1, r3, #4
 8006988:	681b      	ldr	r3, [r3, #0]
 800698a:	9107      	str	r1, [sp, #28]
 800698c:	2b00      	cmp	r3, #0
 800698e:	db01      	blt.n	8006994 <_vfiprintf_r+0x134>
 8006990:	930b      	str	r3, [sp, #44]	@ 0x2c
 8006992:	e004      	b.n	800699e <_vfiprintf_r+0x13e>
 8006994:	425b      	negs	r3, r3
 8006996:	60e3      	str	r3, [r4, #12]
 8006998:	2302      	movs	r3, #2
 800699a:	4313      	orrs	r3, r2
 800699c:	6023      	str	r3, [r4, #0]
 800699e:	7833      	ldrb	r3, [r6, #0]
 80069a0:	2b2e      	cmp	r3, #46	@ 0x2e
 80069a2:	d10c      	bne.n	80069be <_vfiprintf_r+0x15e>
 80069a4:	7873      	ldrb	r3, [r6, #1]
 80069a6:	2b2a      	cmp	r3, #42	@ 0x2a
 80069a8:	d134      	bne.n	8006a14 <_vfiprintf_r+0x1b4>
 80069aa:	9b07      	ldr	r3, [sp, #28]
 80069ac:	3602      	adds	r6, #2
 80069ae:	1d1a      	adds	r2, r3, #4
 80069b0:	681b      	ldr	r3, [r3, #0]
 80069b2:	9207      	str	r2, [sp, #28]
 80069b4:	2b00      	cmp	r3, #0
 80069b6:	da01      	bge.n	80069bc <_vfiprintf_r+0x15c>
 80069b8:	2301      	movs	r3, #1
 80069ba:	425b      	negs	r3, r3
 80069bc:	9309      	str	r3, [sp, #36]	@ 0x24
 80069be:	4d32      	ldr	r5, [pc, #200]	@ (8006a88 <_vfiprintf_r+0x228>)
 80069c0:	2203      	movs	r2, #3
 80069c2:	0028      	movs	r0, r5
 80069c4:	7831      	ldrb	r1, [r6, #0]
 80069c6:	f7fe f85a 	bl	8004a7e <memchr>
 80069ca:	2800      	cmp	r0, #0
 80069cc:	d006      	beq.n	80069dc <_vfiprintf_r+0x17c>
 80069ce:	2340      	movs	r3, #64	@ 0x40
 80069d0:	1b40      	subs	r0, r0, r5
 80069d2:	4083      	lsls	r3, r0
 80069d4:	6822      	ldr	r2, [r4, #0]
 80069d6:	3601      	adds	r6, #1
 80069d8:	4313      	orrs	r3, r2
 80069da:	6023      	str	r3, [r4, #0]
 80069dc:	7831      	ldrb	r1, [r6, #0]
 80069de:	2206      	movs	r2, #6
 80069e0:	482a      	ldr	r0, [pc, #168]	@ (8006a8c <_vfiprintf_r+0x22c>)
 80069e2:	1c75      	adds	r5, r6, #1
 80069e4:	7621      	strb	r1, [r4, #24]
 80069e6:	f7fe f84a 	bl	8004a7e <memchr>
 80069ea:	2800      	cmp	r0, #0
 80069ec:	d040      	beq.n	8006a70 <_vfiprintf_r+0x210>
 80069ee:	4b28      	ldr	r3, [pc, #160]	@ (8006a90 <_vfiprintf_r+0x230>)
 80069f0:	2b00      	cmp	r3, #0
 80069f2:	d122      	bne.n	8006a3a <_vfiprintf_r+0x1da>
 80069f4:	2207      	movs	r2, #7
 80069f6:	9b07      	ldr	r3, [sp, #28]
 80069f8:	3307      	adds	r3, #7
 80069fa:	4393      	bics	r3, r2
 80069fc:	3308      	adds	r3, #8
 80069fe:	9307      	str	r3, [sp, #28]
 8006a00:	6963      	ldr	r3, [r4, #20]
 8006a02:	9a04      	ldr	r2, [sp, #16]
 8006a04:	189b      	adds	r3, r3, r2
 8006a06:	6163      	str	r3, [r4, #20]
 8006a08:	e762      	b.n	80068d0 <_vfiprintf_r+0x70>
 8006a0a:	4343      	muls	r3, r0
 8006a0c:	002e      	movs	r6, r5
 8006a0e:	2101      	movs	r1, #1
 8006a10:	189b      	adds	r3, r3, r2
 8006a12:	e7a4      	b.n	800695e <_vfiprintf_r+0xfe>
 8006a14:	2300      	movs	r3, #0
 8006a16:	200a      	movs	r0, #10
 8006a18:	0019      	movs	r1, r3
 8006a1a:	3601      	adds	r6, #1
 8006a1c:	6063      	str	r3, [r4, #4]
 8006a1e:	7832      	ldrb	r2, [r6, #0]
 8006a20:	1c75      	adds	r5, r6, #1
 8006a22:	3a30      	subs	r2, #48	@ 0x30
 8006a24:	2a09      	cmp	r2, #9
 8006a26:	d903      	bls.n	8006a30 <_vfiprintf_r+0x1d0>
 8006a28:	2b00      	cmp	r3, #0
 8006a2a:	d0c8      	beq.n	80069be <_vfiprintf_r+0x15e>
 8006a2c:	9109      	str	r1, [sp, #36]	@ 0x24
 8006a2e:	e7c6      	b.n	80069be <_vfiprintf_r+0x15e>
 8006a30:	4341      	muls	r1, r0
 8006a32:	002e      	movs	r6, r5
 8006a34:	2301      	movs	r3, #1
 8006a36:	1889      	adds	r1, r1, r2
 8006a38:	e7f1      	b.n	8006a1e <_vfiprintf_r+0x1be>
 8006a3a:	aa07      	add	r2, sp, #28
 8006a3c:	9200      	str	r2, [sp, #0]
 8006a3e:	0021      	movs	r1, r4
 8006a40:	003a      	movs	r2, r7
 8006a42:	4b14      	ldr	r3, [pc, #80]	@ (8006a94 <_vfiprintf_r+0x234>)
 8006a44:	9803      	ldr	r0, [sp, #12]
 8006a46:	f7fd fb41 	bl	80040cc <_printf_float>
 8006a4a:	9004      	str	r0, [sp, #16]
 8006a4c:	9b04      	ldr	r3, [sp, #16]
 8006a4e:	3301      	adds	r3, #1
 8006a50:	d1d6      	bne.n	8006a00 <_vfiprintf_r+0x1a0>
 8006a52:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8006a54:	07db      	lsls	r3, r3, #31
 8006a56:	d405      	bmi.n	8006a64 <_vfiprintf_r+0x204>
 8006a58:	89bb      	ldrh	r3, [r7, #12]
 8006a5a:	059b      	lsls	r3, r3, #22
 8006a5c:	d402      	bmi.n	8006a64 <_vfiprintf_r+0x204>
 8006a5e:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8006a60:	f7fe f80c 	bl	8004a7c <__retarget_lock_release_recursive>
 8006a64:	89bb      	ldrh	r3, [r7, #12]
 8006a66:	065b      	lsls	r3, r3, #25
 8006a68:	d500      	bpl.n	8006a6c <_vfiprintf_r+0x20c>
 8006a6a:	e71e      	b.n	80068aa <_vfiprintf_r+0x4a>
 8006a6c:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8006a6e:	e71e      	b.n	80068ae <_vfiprintf_r+0x4e>
 8006a70:	aa07      	add	r2, sp, #28
 8006a72:	9200      	str	r2, [sp, #0]
 8006a74:	0021      	movs	r1, r4
 8006a76:	003a      	movs	r2, r7
 8006a78:	4b06      	ldr	r3, [pc, #24]	@ (8006a94 <_vfiprintf_r+0x234>)
 8006a7a:	9803      	ldr	r0, [sp, #12]
 8006a7c:	f7fd fdd4 	bl	8004628 <_printf_i>
 8006a80:	e7e3      	b.n	8006a4a <_vfiprintf_r+0x1ea>
 8006a82:	46c0      	nop			@ (mov r8, r8)
 8006a84:	0800735f 	.word	0x0800735f
 8006a88:	08007365 	.word	0x08007365
 8006a8c:	08007369 	.word	0x08007369
 8006a90:	080040cd 	.word	0x080040cd
 8006a94:	0800683b 	.word	0x0800683b

08006a98 <__swbuf_r>:
 8006a98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006a9a:	0006      	movs	r6, r0
 8006a9c:	000d      	movs	r5, r1
 8006a9e:	0014      	movs	r4, r2
 8006aa0:	2800      	cmp	r0, #0
 8006aa2:	d004      	beq.n	8006aae <__swbuf_r+0x16>
 8006aa4:	6a03      	ldr	r3, [r0, #32]
 8006aa6:	2b00      	cmp	r3, #0
 8006aa8:	d101      	bne.n	8006aae <__swbuf_r+0x16>
 8006aaa:	f7fd ff7b 	bl	80049a4 <__sinit>
 8006aae:	69a3      	ldr	r3, [r4, #24]
 8006ab0:	60a3      	str	r3, [r4, #8]
 8006ab2:	89a3      	ldrh	r3, [r4, #12]
 8006ab4:	071b      	lsls	r3, r3, #28
 8006ab6:	d502      	bpl.n	8006abe <__swbuf_r+0x26>
 8006ab8:	6923      	ldr	r3, [r4, #16]
 8006aba:	2b00      	cmp	r3, #0
 8006abc:	d109      	bne.n	8006ad2 <__swbuf_r+0x3a>
 8006abe:	0021      	movs	r1, r4
 8006ac0:	0030      	movs	r0, r6
 8006ac2:	f000 f82b 	bl	8006b1c <__swsetup_r>
 8006ac6:	2800      	cmp	r0, #0
 8006ac8:	d003      	beq.n	8006ad2 <__swbuf_r+0x3a>
 8006aca:	2501      	movs	r5, #1
 8006acc:	426d      	negs	r5, r5
 8006ace:	0028      	movs	r0, r5
 8006ad0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006ad2:	6923      	ldr	r3, [r4, #16]
 8006ad4:	6820      	ldr	r0, [r4, #0]
 8006ad6:	b2ef      	uxtb	r7, r5
 8006ad8:	1ac0      	subs	r0, r0, r3
 8006ada:	6963      	ldr	r3, [r4, #20]
 8006adc:	b2ed      	uxtb	r5, r5
 8006ade:	4283      	cmp	r3, r0
 8006ae0:	dc05      	bgt.n	8006aee <__swbuf_r+0x56>
 8006ae2:	0021      	movs	r1, r4
 8006ae4:	0030      	movs	r0, r6
 8006ae6:	f7ff f8e7 	bl	8005cb8 <_fflush_r>
 8006aea:	2800      	cmp	r0, #0
 8006aec:	d1ed      	bne.n	8006aca <__swbuf_r+0x32>
 8006aee:	68a3      	ldr	r3, [r4, #8]
 8006af0:	3001      	adds	r0, #1
 8006af2:	3b01      	subs	r3, #1
 8006af4:	60a3      	str	r3, [r4, #8]
 8006af6:	6823      	ldr	r3, [r4, #0]
 8006af8:	1c5a      	adds	r2, r3, #1
 8006afa:	6022      	str	r2, [r4, #0]
 8006afc:	701f      	strb	r7, [r3, #0]
 8006afe:	6963      	ldr	r3, [r4, #20]
 8006b00:	4283      	cmp	r3, r0
 8006b02:	d004      	beq.n	8006b0e <__swbuf_r+0x76>
 8006b04:	89a3      	ldrh	r3, [r4, #12]
 8006b06:	07db      	lsls	r3, r3, #31
 8006b08:	d5e1      	bpl.n	8006ace <__swbuf_r+0x36>
 8006b0a:	2d0a      	cmp	r5, #10
 8006b0c:	d1df      	bne.n	8006ace <__swbuf_r+0x36>
 8006b0e:	0021      	movs	r1, r4
 8006b10:	0030      	movs	r0, r6
 8006b12:	f7ff f8d1 	bl	8005cb8 <_fflush_r>
 8006b16:	2800      	cmp	r0, #0
 8006b18:	d0d9      	beq.n	8006ace <__swbuf_r+0x36>
 8006b1a:	e7d6      	b.n	8006aca <__swbuf_r+0x32>

08006b1c <__swsetup_r>:
 8006b1c:	4b2d      	ldr	r3, [pc, #180]	@ (8006bd4 <__swsetup_r+0xb8>)
 8006b1e:	b570      	push	{r4, r5, r6, lr}
 8006b20:	0005      	movs	r5, r0
 8006b22:	6818      	ldr	r0, [r3, #0]
 8006b24:	000c      	movs	r4, r1
 8006b26:	2800      	cmp	r0, #0
 8006b28:	d004      	beq.n	8006b34 <__swsetup_r+0x18>
 8006b2a:	6a03      	ldr	r3, [r0, #32]
 8006b2c:	2b00      	cmp	r3, #0
 8006b2e:	d101      	bne.n	8006b34 <__swsetup_r+0x18>
 8006b30:	f7fd ff38 	bl	80049a4 <__sinit>
 8006b34:	230c      	movs	r3, #12
 8006b36:	5ee2      	ldrsh	r2, [r4, r3]
 8006b38:	0713      	lsls	r3, r2, #28
 8006b3a:	d423      	bmi.n	8006b84 <__swsetup_r+0x68>
 8006b3c:	06d3      	lsls	r3, r2, #27
 8006b3e:	d407      	bmi.n	8006b50 <__swsetup_r+0x34>
 8006b40:	2309      	movs	r3, #9
 8006b42:	602b      	str	r3, [r5, #0]
 8006b44:	2340      	movs	r3, #64	@ 0x40
 8006b46:	2001      	movs	r0, #1
 8006b48:	4313      	orrs	r3, r2
 8006b4a:	81a3      	strh	r3, [r4, #12]
 8006b4c:	4240      	negs	r0, r0
 8006b4e:	e03a      	b.n	8006bc6 <__swsetup_r+0xaa>
 8006b50:	0752      	lsls	r2, r2, #29
 8006b52:	d513      	bpl.n	8006b7c <__swsetup_r+0x60>
 8006b54:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8006b56:	2900      	cmp	r1, #0
 8006b58:	d008      	beq.n	8006b6c <__swsetup_r+0x50>
 8006b5a:	0023      	movs	r3, r4
 8006b5c:	3344      	adds	r3, #68	@ 0x44
 8006b5e:	4299      	cmp	r1, r3
 8006b60:	d002      	beq.n	8006b68 <__swsetup_r+0x4c>
 8006b62:	0028      	movs	r0, r5
 8006b64:	f7ff fdcc 	bl	8006700 <_free_r>
 8006b68:	2300      	movs	r3, #0
 8006b6a:	6363      	str	r3, [r4, #52]	@ 0x34
 8006b6c:	2224      	movs	r2, #36	@ 0x24
 8006b6e:	89a3      	ldrh	r3, [r4, #12]
 8006b70:	4393      	bics	r3, r2
 8006b72:	81a3      	strh	r3, [r4, #12]
 8006b74:	2300      	movs	r3, #0
 8006b76:	6063      	str	r3, [r4, #4]
 8006b78:	6923      	ldr	r3, [r4, #16]
 8006b7a:	6023      	str	r3, [r4, #0]
 8006b7c:	2308      	movs	r3, #8
 8006b7e:	89a2      	ldrh	r2, [r4, #12]
 8006b80:	4313      	orrs	r3, r2
 8006b82:	81a3      	strh	r3, [r4, #12]
 8006b84:	6923      	ldr	r3, [r4, #16]
 8006b86:	2b00      	cmp	r3, #0
 8006b88:	d10b      	bne.n	8006ba2 <__swsetup_r+0x86>
 8006b8a:	21a0      	movs	r1, #160	@ 0xa0
 8006b8c:	2280      	movs	r2, #128	@ 0x80
 8006b8e:	89a3      	ldrh	r3, [r4, #12]
 8006b90:	0089      	lsls	r1, r1, #2
 8006b92:	0092      	lsls	r2, r2, #2
 8006b94:	400b      	ands	r3, r1
 8006b96:	4293      	cmp	r3, r2
 8006b98:	d003      	beq.n	8006ba2 <__swsetup_r+0x86>
 8006b9a:	0021      	movs	r1, r4
 8006b9c:	0028      	movs	r0, r5
 8006b9e:	f000 f845 	bl	8006c2c <__smakebuf_r>
 8006ba2:	230c      	movs	r3, #12
 8006ba4:	5ee2      	ldrsh	r2, [r4, r3]
 8006ba6:	2101      	movs	r1, #1
 8006ba8:	0013      	movs	r3, r2
 8006baa:	400b      	ands	r3, r1
 8006bac:	420a      	tst	r2, r1
 8006bae:	d00b      	beq.n	8006bc8 <__swsetup_r+0xac>
 8006bb0:	2300      	movs	r3, #0
 8006bb2:	60a3      	str	r3, [r4, #8]
 8006bb4:	6963      	ldr	r3, [r4, #20]
 8006bb6:	425b      	negs	r3, r3
 8006bb8:	61a3      	str	r3, [r4, #24]
 8006bba:	2000      	movs	r0, #0
 8006bbc:	6923      	ldr	r3, [r4, #16]
 8006bbe:	4283      	cmp	r3, r0
 8006bc0:	d101      	bne.n	8006bc6 <__swsetup_r+0xaa>
 8006bc2:	0613      	lsls	r3, r2, #24
 8006bc4:	d4be      	bmi.n	8006b44 <__swsetup_r+0x28>
 8006bc6:	bd70      	pop	{r4, r5, r6, pc}
 8006bc8:	0791      	lsls	r1, r2, #30
 8006bca:	d400      	bmi.n	8006bce <__swsetup_r+0xb2>
 8006bcc:	6963      	ldr	r3, [r4, #20]
 8006bce:	60a3      	str	r3, [r4, #8]
 8006bd0:	e7f3      	b.n	8006bba <__swsetup_r+0x9e>
 8006bd2:	46c0      	nop			@ (mov r8, r8)
 8006bd4:	20000018 	.word	0x20000018

08006bd8 <__swhatbuf_r>:
 8006bd8:	b570      	push	{r4, r5, r6, lr}
 8006bda:	000e      	movs	r6, r1
 8006bdc:	001d      	movs	r5, r3
 8006bde:	230e      	movs	r3, #14
 8006be0:	5ec9      	ldrsh	r1, [r1, r3]
 8006be2:	0014      	movs	r4, r2
 8006be4:	b096      	sub	sp, #88	@ 0x58
 8006be6:	2900      	cmp	r1, #0
 8006be8:	da0c      	bge.n	8006c04 <__swhatbuf_r+0x2c>
 8006bea:	89b2      	ldrh	r2, [r6, #12]
 8006bec:	2380      	movs	r3, #128	@ 0x80
 8006bee:	0011      	movs	r1, r2
 8006bf0:	4019      	ands	r1, r3
 8006bf2:	421a      	tst	r2, r3
 8006bf4:	d114      	bne.n	8006c20 <__swhatbuf_r+0x48>
 8006bf6:	2380      	movs	r3, #128	@ 0x80
 8006bf8:	00db      	lsls	r3, r3, #3
 8006bfa:	2000      	movs	r0, #0
 8006bfc:	6029      	str	r1, [r5, #0]
 8006bfe:	6023      	str	r3, [r4, #0]
 8006c00:	b016      	add	sp, #88	@ 0x58
 8006c02:	bd70      	pop	{r4, r5, r6, pc}
 8006c04:	466a      	mov	r2, sp
 8006c06:	f000 f853 	bl	8006cb0 <_fstat_r>
 8006c0a:	2800      	cmp	r0, #0
 8006c0c:	dbed      	blt.n	8006bea <__swhatbuf_r+0x12>
 8006c0e:	23f0      	movs	r3, #240	@ 0xf0
 8006c10:	9901      	ldr	r1, [sp, #4]
 8006c12:	021b      	lsls	r3, r3, #8
 8006c14:	4019      	ands	r1, r3
 8006c16:	4b04      	ldr	r3, [pc, #16]	@ (8006c28 <__swhatbuf_r+0x50>)
 8006c18:	18c9      	adds	r1, r1, r3
 8006c1a:	424b      	negs	r3, r1
 8006c1c:	4159      	adcs	r1, r3
 8006c1e:	e7ea      	b.n	8006bf6 <__swhatbuf_r+0x1e>
 8006c20:	2100      	movs	r1, #0
 8006c22:	2340      	movs	r3, #64	@ 0x40
 8006c24:	e7e9      	b.n	8006bfa <__swhatbuf_r+0x22>
 8006c26:	46c0      	nop			@ (mov r8, r8)
 8006c28:	ffffe000 	.word	0xffffe000

08006c2c <__smakebuf_r>:
 8006c2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006c2e:	2602      	movs	r6, #2
 8006c30:	898b      	ldrh	r3, [r1, #12]
 8006c32:	0005      	movs	r5, r0
 8006c34:	000c      	movs	r4, r1
 8006c36:	b085      	sub	sp, #20
 8006c38:	4233      	tst	r3, r6
 8006c3a:	d007      	beq.n	8006c4c <__smakebuf_r+0x20>
 8006c3c:	0023      	movs	r3, r4
 8006c3e:	3347      	adds	r3, #71	@ 0x47
 8006c40:	6023      	str	r3, [r4, #0]
 8006c42:	6123      	str	r3, [r4, #16]
 8006c44:	2301      	movs	r3, #1
 8006c46:	6163      	str	r3, [r4, #20]
 8006c48:	b005      	add	sp, #20
 8006c4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006c4c:	ab03      	add	r3, sp, #12
 8006c4e:	aa02      	add	r2, sp, #8
 8006c50:	f7ff ffc2 	bl	8006bd8 <__swhatbuf_r>
 8006c54:	9f02      	ldr	r7, [sp, #8]
 8006c56:	9001      	str	r0, [sp, #4]
 8006c58:	0039      	movs	r1, r7
 8006c5a:	0028      	movs	r0, r5
 8006c5c:	f7fe ff26 	bl	8005aac <_malloc_r>
 8006c60:	2800      	cmp	r0, #0
 8006c62:	d108      	bne.n	8006c76 <__smakebuf_r+0x4a>
 8006c64:	220c      	movs	r2, #12
 8006c66:	5ea3      	ldrsh	r3, [r4, r2]
 8006c68:	059a      	lsls	r2, r3, #22
 8006c6a:	d4ed      	bmi.n	8006c48 <__smakebuf_r+0x1c>
 8006c6c:	2203      	movs	r2, #3
 8006c6e:	4393      	bics	r3, r2
 8006c70:	431e      	orrs	r6, r3
 8006c72:	81a6      	strh	r6, [r4, #12]
 8006c74:	e7e2      	b.n	8006c3c <__smakebuf_r+0x10>
 8006c76:	2380      	movs	r3, #128	@ 0x80
 8006c78:	89a2      	ldrh	r2, [r4, #12]
 8006c7a:	6020      	str	r0, [r4, #0]
 8006c7c:	4313      	orrs	r3, r2
 8006c7e:	81a3      	strh	r3, [r4, #12]
 8006c80:	9b03      	ldr	r3, [sp, #12]
 8006c82:	6120      	str	r0, [r4, #16]
 8006c84:	6167      	str	r7, [r4, #20]
 8006c86:	2b00      	cmp	r3, #0
 8006c88:	d00c      	beq.n	8006ca4 <__smakebuf_r+0x78>
 8006c8a:	0028      	movs	r0, r5
 8006c8c:	230e      	movs	r3, #14
 8006c8e:	5ee1      	ldrsh	r1, [r4, r3]
 8006c90:	f000 f820 	bl	8006cd4 <_isatty_r>
 8006c94:	2800      	cmp	r0, #0
 8006c96:	d005      	beq.n	8006ca4 <__smakebuf_r+0x78>
 8006c98:	2303      	movs	r3, #3
 8006c9a:	89a2      	ldrh	r2, [r4, #12]
 8006c9c:	439a      	bics	r2, r3
 8006c9e:	3b02      	subs	r3, #2
 8006ca0:	4313      	orrs	r3, r2
 8006ca2:	81a3      	strh	r3, [r4, #12]
 8006ca4:	89a3      	ldrh	r3, [r4, #12]
 8006ca6:	9a01      	ldr	r2, [sp, #4]
 8006ca8:	4313      	orrs	r3, r2
 8006caa:	81a3      	strh	r3, [r4, #12]
 8006cac:	e7cc      	b.n	8006c48 <__smakebuf_r+0x1c>
	...

08006cb0 <_fstat_r>:
 8006cb0:	2300      	movs	r3, #0
 8006cb2:	b570      	push	{r4, r5, r6, lr}
 8006cb4:	4d06      	ldr	r5, [pc, #24]	@ (8006cd0 <_fstat_r+0x20>)
 8006cb6:	0004      	movs	r4, r0
 8006cb8:	0008      	movs	r0, r1
 8006cba:	0011      	movs	r1, r2
 8006cbc:	602b      	str	r3, [r5, #0]
 8006cbe:	f7fb ff40 	bl	8002b42 <_fstat>
 8006cc2:	1c43      	adds	r3, r0, #1
 8006cc4:	d103      	bne.n	8006cce <_fstat_r+0x1e>
 8006cc6:	682b      	ldr	r3, [r5, #0]
 8006cc8:	2b00      	cmp	r3, #0
 8006cca:	d000      	beq.n	8006cce <_fstat_r+0x1e>
 8006ccc:	6023      	str	r3, [r4, #0]
 8006cce:	bd70      	pop	{r4, r5, r6, pc}
 8006cd0:	2000051c 	.word	0x2000051c

08006cd4 <_isatty_r>:
 8006cd4:	2300      	movs	r3, #0
 8006cd6:	b570      	push	{r4, r5, r6, lr}
 8006cd8:	4d06      	ldr	r5, [pc, #24]	@ (8006cf4 <_isatty_r+0x20>)
 8006cda:	0004      	movs	r4, r0
 8006cdc:	0008      	movs	r0, r1
 8006cde:	602b      	str	r3, [r5, #0]
 8006ce0:	f7fb ff34 	bl	8002b4c <_isatty>
 8006ce4:	1c43      	adds	r3, r0, #1
 8006ce6:	d103      	bne.n	8006cf0 <_isatty_r+0x1c>
 8006ce8:	682b      	ldr	r3, [r5, #0]
 8006cea:	2b00      	cmp	r3, #0
 8006cec:	d000      	beq.n	8006cf0 <_isatty_r+0x1c>
 8006cee:	6023      	str	r3, [r4, #0]
 8006cf0:	bd70      	pop	{r4, r5, r6, pc}
 8006cf2:	46c0      	nop			@ (mov r8, r8)
 8006cf4:	2000051c 	.word	0x2000051c

08006cf8 <_raise_r>:
 8006cf8:	b570      	push	{r4, r5, r6, lr}
 8006cfa:	0004      	movs	r4, r0
 8006cfc:	000d      	movs	r5, r1
 8006cfe:	291f      	cmp	r1, #31
 8006d00:	d904      	bls.n	8006d0c <_raise_r+0x14>
 8006d02:	2316      	movs	r3, #22
 8006d04:	6003      	str	r3, [r0, #0]
 8006d06:	2001      	movs	r0, #1
 8006d08:	4240      	negs	r0, r0
 8006d0a:	bd70      	pop	{r4, r5, r6, pc}
 8006d0c:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8006d0e:	2b00      	cmp	r3, #0
 8006d10:	d004      	beq.n	8006d1c <_raise_r+0x24>
 8006d12:	008a      	lsls	r2, r1, #2
 8006d14:	189b      	adds	r3, r3, r2
 8006d16:	681a      	ldr	r2, [r3, #0]
 8006d18:	2a00      	cmp	r2, #0
 8006d1a:	d108      	bne.n	8006d2e <_raise_r+0x36>
 8006d1c:	0020      	movs	r0, r4
 8006d1e:	f000 f831 	bl	8006d84 <_getpid_r>
 8006d22:	002a      	movs	r2, r5
 8006d24:	0001      	movs	r1, r0
 8006d26:	0020      	movs	r0, r4
 8006d28:	f000 f81a 	bl	8006d60 <_kill_r>
 8006d2c:	e7ed      	b.n	8006d0a <_raise_r+0x12>
 8006d2e:	2a01      	cmp	r2, #1
 8006d30:	d009      	beq.n	8006d46 <_raise_r+0x4e>
 8006d32:	1c51      	adds	r1, r2, #1
 8006d34:	d103      	bne.n	8006d3e <_raise_r+0x46>
 8006d36:	2316      	movs	r3, #22
 8006d38:	6003      	str	r3, [r0, #0]
 8006d3a:	2001      	movs	r0, #1
 8006d3c:	e7e5      	b.n	8006d0a <_raise_r+0x12>
 8006d3e:	2100      	movs	r1, #0
 8006d40:	0028      	movs	r0, r5
 8006d42:	6019      	str	r1, [r3, #0]
 8006d44:	4790      	blx	r2
 8006d46:	2000      	movs	r0, #0
 8006d48:	e7df      	b.n	8006d0a <_raise_r+0x12>
	...

08006d4c <raise>:
 8006d4c:	b510      	push	{r4, lr}
 8006d4e:	4b03      	ldr	r3, [pc, #12]	@ (8006d5c <raise+0x10>)
 8006d50:	0001      	movs	r1, r0
 8006d52:	6818      	ldr	r0, [r3, #0]
 8006d54:	f7ff ffd0 	bl	8006cf8 <_raise_r>
 8006d58:	bd10      	pop	{r4, pc}
 8006d5a:	46c0      	nop			@ (mov r8, r8)
 8006d5c:	20000018 	.word	0x20000018

08006d60 <_kill_r>:
 8006d60:	2300      	movs	r3, #0
 8006d62:	b570      	push	{r4, r5, r6, lr}
 8006d64:	4d06      	ldr	r5, [pc, #24]	@ (8006d80 <_kill_r+0x20>)
 8006d66:	0004      	movs	r4, r0
 8006d68:	0008      	movs	r0, r1
 8006d6a:	0011      	movs	r1, r2
 8006d6c:	602b      	str	r3, [r5, #0]
 8006d6e:	f7fb febd 	bl	8002aec <_kill>
 8006d72:	1c43      	adds	r3, r0, #1
 8006d74:	d103      	bne.n	8006d7e <_kill_r+0x1e>
 8006d76:	682b      	ldr	r3, [r5, #0]
 8006d78:	2b00      	cmp	r3, #0
 8006d7a:	d000      	beq.n	8006d7e <_kill_r+0x1e>
 8006d7c:	6023      	str	r3, [r4, #0]
 8006d7e:	bd70      	pop	{r4, r5, r6, pc}
 8006d80:	2000051c 	.word	0x2000051c

08006d84 <_getpid_r>:
 8006d84:	b510      	push	{r4, lr}
 8006d86:	f7fb feaf 	bl	8002ae8 <_getpid>
 8006d8a:	bd10      	pop	{r4, pc}

08006d8c <log>:
 8006d8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006d8e:	0004      	movs	r4, r0
 8006d90:	000d      	movs	r5, r1
 8006d92:	f000 f837 	bl	8006e04 <__ieee754_log>
 8006d96:	0022      	movs	r2, r4
 8006d98:	0006      	movs	r6, r0
 8006d9a:	000f      	movs	r7, r1
 8006d9c:	002b      	movs	r3, r5
 8006d9e:	0020      	movs	r0, r4
 8006da0:	0029      	movs	r1, r5
 8006da2:	f7fb faef 	bl	8002384 <__aeabi_dcmpun>
 8006da6:	2800      	cmp	r0, #0
 8006da8:	d115      	bne.n	8006dd6 <log+0x4a>
 8006daa:	2200      	movs	r2, #0
 8006dac:	2300      	movs	r3, #0
 8006dae:	0020      	movs	r0, r4
 8006db0:	0029      	movs	r1, r5
 8006db2:	f7f9 fb65 	bl	8000480 <__aeabi_dcmpgt>
 8006db6:	2800      	cmp	r0, #0
 8006db8:	d10d      	bne.n	8006dd6 <log+0x4a>
 8006dba:	2200      	movs	r2, #0
 8006dbc:	2300      	movs	r3, #0
 8006dbe:	0020      	movs	r0, r4
 8006dc0:	0029      	movs	r1, r5
 8006dc2:	f7f9 fb43 	bl	800044c <__aeabi_dcmpeq>
 8006dc6:	2800      	cmp	r0, #0
 8006dc8:	d008      	beq.n	8006ddc <log+0x50>
 8006dca:	f7fd fe2b 	bl	8004a24 <__errno>
 8006dce:	2322      	movs	r3, #34	@ 0x22
 8006dd0:	2600      	movs	r6, #0
 8006dd2:	4f07      	ldr	r7, [pc, #28]	@ (8006df0 <log+0x64>)
 8006dd4:	6003      	str	r3, [r0, #0]
 8006dd6:	0030      	movs	r0, r6
 8006dd8:	0039      	movs	r1, r7
 8006dda:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006ddc:	f7fd fe22 	bl	8004a24 <__errno>
 8006de0:	2321      	movs	r3, #33	@ 0x21
 8006de2:	6003      	str	r3, [r0, #0]
 8006de4:	4803      	ldr	r0, [pc, #12]	@ (8006df4 <log+0x68>)
 8006de6:	f000 f807 	bl	8006df8 <nan>
 8006dea:	0006      	movs	r6, r0
 8006dec:	000f      	movs	r7, r1
 8006dee:	e7f2      	b.n	8006dd6 <log+0x4a>
 8006df0:	fff00000 	.word	0xfff00000
 8006df4:	0800760e 	.word	0x0800760e

08006df8 <nan>:
 8006df8:	2000      	movs	r0, #0
 8006dfa:	4901      	ldr	r1, [pc, #4]	@ (8006e00 <nan+0x8>)
 8006dfc:	4770      	bx	lr
 8006dfe:	46c0      	nop			@ (mov r8, r8)
 8006e00:	7ff80000 	.word	0x7ff80000

08006e04 <__ieee754_log>:
 8006e04:	2380      	movs	r3, #128	@ 0x80
 8006e06:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006e08:	035b      	lsls	r3, r3, #13
 8006e0a:	000e      	movs	r6, r1
 8006e0c:	b08d      	sub	sp, #52	@ 0x34
 8006e0e:	4299      	cmp	r1, r3
 8006e10:	da23      	bge.n	8006e5a <__ieee754_log+0x56>
 8006e12:	004b      	lsls	r3, r1, #1
 8006e14:	085b      	lsrs	r3, r3, #1
 8006e16:	4303      	orrs	r3, r0
 8006e18:	d107      	bne.n	8006e2a <__ieee754_log+0x26>
 8006e1a:	2200      	movs	r2, #0
 8006e1c:	2300      	movs	r3, #0
 8006e1e:	2000      	movs	r0, #0
 8006e20:	49b4      	ldr	r1, [pc, #720]	@ (80070f4 <__ieee754_log+0x2f0>)
 8006e22:	f7fa f807 	bl	8000e34 <__aeabi_ddiv>
 8006e26:	b00d      	add	sp, #52	@ 0x34
 8006e28:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006e2a:	2900      	cmp	r1, #0
 8006e2c:	da06      	bge.n	8006e3c <__ieee754_log+0x38>
 8006e2e:	0002      	movs	r2, r0
 8006e30:	000b      	movs	r3, r1
 8006e32:	f7fa ff0b 	bl	8001c4c <__aeabi_dsub>
 8006e36:	2200      	movs	r2, #0
 8006e38:	2300      	movs	r3, #0
 8006e3a:	e7f2      	b.n	8006e22 <__ieee754_log+0x1e>
 8006e3c:	4bae      	ldr	r3, [pc, #696]	@ (80070f8 <__ieee754_log+0x2f4>)
 8006e3e:	2200      	movs	r2, #0
 8006e40:	f7fa fc3c 	bl	80016bc <__aeabi_dmul>
 8006e44:	2336      	movs	r3, #54	@ 0x36
 8006e46:	000e      	movs	r6, r1
 8006e48:	425b      	negs	r3, r3
 8006e4a:	4aac      	ldr	r2, [pc, #688]	@ (80070fc <__ieee754_log+0x2f8>)
 8006e4c:	4296      	cmp	r6, r2
 8006e4e:	dd06      	ble.n	8006e5e <__ieee754_log+0x5a>
 8006e50:	0002      	movs	r2, r0
 8006e52:	000b      	movs	r3, r1
 8006e54:	f7f9 fc8a 	bl	800076c <__aeabi_dadd>
 8006e58:	e7e5      	b.n	8006e26 <__ieee754_log+0x22>
 8006e5a:	2300      	movs	r3, #0
 8006e5c:	e7f5      	b.n	8006e4a <__ieee754_log+0x46>
 8006e5e:	4ca8      	ldr	r4, [pc, #672]	@ (8007100 <__ieee754_log+0x2fc>)
 8006e60:	1532      	asrs	r2, r6, #20
 8006e62:	1912      	adds	r2, r2, r4
 8006e64:	0336      	lsls	r6, r6, #12
 8006e66:	4ca7      	ldr	r4, [pc, #668]	@ (8007104 <__ieee754_log+0x300>)
 8006e68:	18d2      	adds	r2, r2, r3
 8006e6a:	0b33      	lsrs	r3, r6, #12
 8006e6c:	9302      	str	r3, [sp, #8]
 8006e6e:	191b      	adds	r3, r3, r4
 8006e70:	2480      	movs	r4, #128	@ 0x80
 8006e72:	0364      	lsls	r4, r4, #13
 8006e74:	4023      	ands	r3, r4
 8006e76:	4ca4      	ldr	r4, [pc, #656]	@ (8007108 <__ieee754_log+0x304>)
 8006e78:	9d02      	ldr	r5, [sp, #8]
 8006e7a:	405c      	eors	r4, r3
 8006e7c:	151b      	asrs	r3, r3, #20
 8006e7e:	189b      	adds	r3, r3, r2
 8006e80:	4325      	orrs	r5, r4
 8006e82:	2200      	movs	r2, #0
 8006e84:	9300      	str	r3, [sp, #0]
 8006e86:	0029      	movs	r1, r5
 8006e88:	4b9f      	ldr	r3, [pc, #636]	@ (8007108 <__ieee754_log+0x304>)
 8006e8a:	f7fa fedf 	bl	8001c4c <__aeabi_dsub>
 8006e8e:	9b02      	ldr	r3, [sp, #8]
 8006e90:	0006      	movs	r6, r0
 8006e92:	3302      	adds	r3, #2
 8006e94:	031b      	lsls	r3, r3, #12
 8006e96:	000f      	movs	r7, r1
 8006e98:	2200      	movs	r2, #0
 8006e9a:	0b1b      	lsrs	r3, r3, #12
 8006e9c:	2b02      	cmp	r3, #2
 8006e9e:	dc64      	bgt.n	8006f6a <__ieee754_log+0x166>
 8006ea0:	2300      	movs	r3, #0
 8006ea2:	f7f9 fad3 	bl	800044c <__aeabi_dcmpeq>
 8006ea6:	2800      	cmp	r0, #0
 8006ea8:	d019      	beq.n	8006ede <__ieee754_log+0xda>
 8006eaa:	9b00      	ldr	r3, [sp, #0]
 8006eac:	2b00      	cmp	r3, #0
 8006eae:	d100      	bne.n	8006eb2 <__ieee754_log+0xae>
 8006eb0:	e11c      	b.n	80070ec <__ieee754_log+0x2e8>
 8006eb2:	0018      	movs	r0, r3
 8006eb4:	f7fb fac4 	bl	8002440 <__aeabi_i2d>
 8006eb8:	4a94      	ldr	r2, [pc, #592]	@ (800710c <__ieee754_log+0x308>)
 8006eba:	4b95      	ldr	r3, [pc, #596]	@ (8007110 <__ieee754_log+0x30c>)
 8006ebc:	0004      	movs	r4, r0
 8006ebe:	000d      	movs	r5, r1
 8006ec0:	f7fa fbfc 	bl	80016bc <__aeabi_dmul>
 8006ec4:	4a93      	ldr	r2, [pc, #588]	@ (8007114 <__ieee754_log+0x310>)
 8006ec6:	0006      	movs	r6, r0
 8006ec8:	000f      	movs	r7, r1
 8006eca:	4b93      	ldr	r3, [pc, #588]	@ (8007118 <__ieee754_log+0x314>)
 8006ecc:	0020      	movs	r0, r4
 8006ece:	0029      	movs	r1, r5
 8006ed0:	f7fa fbf4 	bl	80016bc <__aeabi_dmul>
 8006ed4:	0002      	movs	r2, r0
 8006ed6:	000b      	movs	r3, r1
 8006ed8:	0030      	movs	r0, r6
 8006eda:	0039      	movs	r1, r7
 8006edc:	e7ba      	b.n	8006e54 <__ieee754_log+0x50>
 8006ede:	4a8f      	ldr	r2, [pc, #572]	@ (800711c <__ieee754_log+0x318>)
 8006ee0:	4b8f      	ldr	r3, [pc, #572]	@ (8007120 <__ieee754_log+0x31c>)
 8006ee2:	0030      	movs	r0, r6
 8006ee4:	0039      	movs	r1, r7
 8006ee6:	f7fa fbe9 	bl	80016bc <__aeabi_dmul>
 8006eea:	0002      	movs	r2, r0
 8006eec:	000b      	movs	r3, r1
 8006eee:	2000      	movs	r0, #0
 8006ef0:	498c      	ldr	r1, [pc, #560]	@ (8007124 <__ieee754_log+0x320>)
 8006ef2:	f7fa feab 	bl	8001c4c <__aeabi_dsub>
 8006ef6:	0032      	movs	r2, r6
 8006ef8:	0004      	movs	r4, r0
 8006efa:	000d      	movs	r5, r1
 8006efc:	003b      	movs	r3, r7
 8006efe:	0030      	movs	r0, r6
 8006f00:	0039      	movs	r1, r7
 8006f02:	f7fa fbdb 	bl	80016bc <__aeabi_dmul>
 8006f06:	000b      	movs	r3, r1
 8006f08:	0002      	movs	r2, r0
 8006f0a:	0029      	movs	r1, r5
 8006f0c:	0020      	movs	r0, r4
 8006f0e:	f7fa fbd5 	bl	80016bc <__aeabi_dmul>
 8006f12:	9b00      	ldr	r3, [sp, #0]
 8006f14:	9002      	str	r0, [sp, #8]
 8006f16:	9103      	str	r1, [sp, #12]
 8006f18:	2b00      	cmp	r3, #0
 8006f1a:	d106      	bne.n	8006f2a <__ieee754_log+0x126>
 8006f1c:	0002      	movs	r2, r0
 8006f1e:	000b      	movs	r3, r1
 8006f20:	0030      	movs	r0, r6
 8006f22:	0039      	movs	r1, r7
 8006f24:	f7fa fe92 	bl	8001c4c <__aeabi_dsub>
 8006f28:	e77d      	b.n	8006e26 <__ieee754_log+0x22>
 8006f2a:	9800      	ldr	r0, [sp, #0]
 8006f2c:	f7fb fa88 	bl	8002440 <__aeabi_i2d>
 8006f30:	4a76      	ldr	r2, [pc, #472]	@ (800710c <__ieee754_log+0x308>)
 8006f32:	4b77      	ldr	r3, [pc, #476]	@ (8007110 <__ieee754_log+0x30c>)
 8006f34:	0004      	movs	r4, r0
 8006f36:	000d      	movs	r5, r1
 8006f38:	f7fa fbc0 	bl	80016bc <__aeabi_dmul>
 8006f3c:	4a75      	ldr	r2, [pc, #468]	@ (8007114 <__ieee754_log+0x310>)
 8006f3e:	9000      	str	r0, [sp, #0]
 8006f40:	9101      	str	r1, [sp, #4]
 8006f42:	4b75      	ldr	r3, [pc, #468]	@ (8007118 <__ieee754_log+0x314>)
 8006f44:	0020      	movs	r0, r4
 8006f46:	0029      	movs	r1, r5
 8006f48:	f7fa fbb8 	bl	80016bc <__aeabi_dmul>
 8006f4c:	0002      	movs	r2, r0
 8006f4e:	000b      	movs	r3, r1
 8006f50:	9802      	ldr	r0, [sp, #8]
 8006f52:	9903      	ldr	r1, [sp, #12]
 8006f54:	f7fa fe7a 	bl	8001c4c <__aeabi_dsub>
 8006f58:	0032      	movs	r2, r6
 8006f5a:	003b      	movs	r3, r7
 8006f5c:	f7fa fe76 	bl	8001c4c <__aeabi_dsub>
 8006f60:	0002      	movs	r2, r0
 8006f62:	000b      	movs	r3, r1
 8006f64:	9800      	ldr	r0, [sp, #0]
 8006f66:	9901      	ldr	r1, [sp, #4]
 8006f68:	e7dc      	b.n	8006f24 <__ieee754_log+0x120>
 8006f6a:	2380      	movs	r3, #128	@ 0x80
 8006f6c:	05db      	lsls	r3, r3, #23
 8006f6e:	f7f9 fbfd 	bl	800076c <__aeabi_dadd>
 8006f72:	0002      	movs	r2, r0
 8006f74:	000b      	movs	r3, r1
 8006f76:	0030      	movs	r0, r6
 8006f78:	0039      	movs	r1, r7
 8006f7a:	f7f9 ff5b 	bl	8000e34 <__aeabi_ddiv>
 8006f7e:	9004      	str	r0, [sp, #16]
 8006f80:	9105      	str	r1, [sp, #20]
 8006f82:	9800      	ldr	r0, [sp, #0]
 8006f84:	f7fb fa5c 	bl	8002440 <__aeabi_i2d>
 8006f88:	9a04      	ldr	r2, [sp, #16]
 8006f8a:	9b05      	ldr	r3, [sp, #20]
 8006f8c:	9006      	str	r0, [sp, #24]
 8006f8e:	9107      	str	r1, [sp, #28]
 8006f90:	0010      	movs	r0, r2
 8006f92:	0019      	movs	r1, r3
 8006f94:	f7fa fb92 	bl	80016bc <__aeabi_dmul>
 8006f98:	4a63      	ldr	r2, [pc, #396]	@ (8007128 <__ieee754_log+0x324>)
 8006f9a:	9b02      	ldr	r3, [sp, #8]
 8006f9c:	4694      	mov	ip, r2
 8006f9e:	4463      	add	r3, ip
 8006fa0:	0002      	movs	r2, r0
 8006fa2:	930b      	str	r3, [sp, #44]	@ 0x2c
 8006fa4:	000b      	movs	r3, r1
 8006fa6:	9008      	str	r0, [sp, #32]
 8006fa8:	9109      	str	r1, [sp, #36]	@ 0x24
 8006faa:	f7fa fb87 	bl	80016bc <__aeabi_dmul>
 8006fae:	0004      	movs	r4, r0
 8006fb0:	000d      	movs	r5, r1
 8006fb2:	4a5e      	ldr	r2, [pc, #376]	@ (800712c <__ieee754_log+0x328>)
 8006fb4:	4b5e      	ldr	r3, [pc, #376]	@ (8007130 <__ieee754_log+0x32c>)
 8006fb6:	f7fa fb81 	bl	80016bc <__aeabi_dmul>
 8006fba:	4a5e      	ldr	r2, [pc, #376]	@ (8007134 <__ieee754_log+0x330>)
 8006fbc:	4b5e      	ldr	r3, [pc, #376]	@ (8007138 <__ieee754_log+0x334>)
 8006fbe:	f7f9 fbd5 	bl	800076c <__aeabi_dadd>
 8006fc2:	0022      	movs	r2, r4
 8006fc4:	002b      	movs	r3, r5
 8006fc6:	f7fa fb79 	bl	80016bc <__aeabi_dmul>
 8006fca:	4a5c      	ldr	r2, [pc, #368]	@ (800713c <__ieee754_log+0x338>)
 8006fcc:	4b5c      	ldr	r3, [pc, #368]	@ (8007140 <__ieee754_log+0x33c>)
 8006fce:	f7f9 fbcd 	bl	800076c <__aeabi_dadd>
 8006fd2:	0022      	movs	r2, r4
 8006fd4:	002b      	movs	r3, r5
 8006fd6:	f7fa fb71 	bl	80016bc <__aeabi_dmul>
 8006fda:	4a5a      	ldr	r2, [pc, #360]	@ (8007144 <__ieee754_log+0x340>)
 8006fdc:	4b5a      	ldr	r3, [pc, #360]	@ (8007148 <__ieee754_log+0x344>)
 8006fde:	f7f9 fbc5 	bl	800076c <__aeabi_dadd>
 8006fe2:	9a08      	ldr	r2, [sp, #32]
 8006fe4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006fe6:	f7fa fb69 	bl	80016bc <__aeabi_dmul>
 8006fea:	4a58      	ldr	r2, [pc, #352]	@ (800714c <__ieee754_log+0x348>)
 8006fec:	9008      	str	r0, [sp, #32]
 8006fee:	9109      	str	r1, [sp, #36]	@ 0x24
 8006ff0:	4b57      	ldr	r3, [pc, #348]	@ (8007150 <__ieee754_log+0x34c>)
 8006ff2:	0020      	movs	r0, r4
 8006ff4:	0029      	movs	r1, r5
 8006ff6:	f7fa fb61 	bl	80016bc <__aeabi_dmul>
 8006ffa:	4a56      	ldr	r2, [pc, #344]	@ (8007154 <__ieee754_log+0x350>)
 8006ffc:	4b56      	ldr	r3, [pc, #344]	@ (8007158 <__ieee754_log+0x354>)
 8006ffe:	f7f9 fbb5 	bl	800076c <__aeabi_dadd>
 8007002:	0022      	movs	r2, r4
 8007004:	002b      	movs	r3, r5
 8007006:	f7fa fb59 	bl	80016bc <__aeabi_dmul>
 800700a:	4a54      	ldr	r2, [pc, #336]	@ (800715c <__ieee754_log+0x358>)
 800700c:	4b54      	ldr	r3, [pc, #336]	@ (8007160 <__ieee754_log+0x35c>)
 800700e:	f7f9 fbad 	bl	800076c <__aeabi_dadd>
 8007012:	0022      	movs	r2, r4
 8007014:	002b      	movs	r3, r5
 8007016:	f7fa fb51 	bl	80016bc <__aeabi_dmul>
 800701a:	0002      	movs	r2, r0
 800701c:	000b      	movs	r3, r1
 800701e:	9808      	ldr	r0, [sp, #32]
 8007020:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8007022:	f7f9 fba3 	bl	800076c <__aeabi_dadd>
 8007026:	9a02      	ldr	r2, [sp, #8]
 8007028:	4b4e      	ldr	r3, [pc, #312]	@ (8007164 <__ieee754_log+0x360>)
 800702a:	0004      	movs	r4, r0
 800702c:	1a9b      	subs	r3, r3, r2
 800702e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8007030:	000d      	movs	r5, r1
 8007032:	4313      	orrs	r3, r2
 8007034:	2b00      	cmp	r3, #0
 8007036:	dd34      	ble.n	80070a2 <__ieee754_log+0x29e>
 8007038:	2200      	movs	r2, #0
 800703a:	4b3a      	ldr	r3, [pc, #232]	@ (8007124 <__ieee754_log+0x320>)
 800703c:	0030      	movs	r0, r6
 800703e:	0039      	movs	r1, r7
 8007040:	f7fa fb3c 	bl	80016bc <__aeabi_dmul>
 8007044:	0032      	movs	r2, r6
 8007046:	003b      	movs	r3, r7
 8007048:	f7fa fb38 	bl	80016bc <__aeabi_dmul>
 800704c:	0002      	movs	r2, r0
 800704e:	000b      	movs	r3, r1
 8007050:	9002      	str	r0, [sp, #8]
 8007052:	9103      	str	r1, [sp, #12]
 8007054:	0020      	movs	r0, r4
 8007056:	0029      	movs	r1, r5
 8007058:	f7f9 fb88 	bl	800076c <__aeabi_dadd>
 800705c:	9a04      	ldr	r2, [sp, #16]
 800705e:	9b05      	ldr	r3, [sp, #20]
 8007060:	f7fa fb2c 	bl	80016bc <__aeabi_dmul>
 8007064:	9b00      	ldr	r3, [sp, #0]
 8007066:	0004      	movs	r4, r0
 8007068:	000d      	movs	r5, r1
 800706a:	2b00      	cmp	r3, #0
 800706c:	d106      	bne.n	800707c <__ieee754_log+0x278>
 800706e:	0002      	movs	r2, r0
 8007070:	000b      	movs	r3, r1
 8007072:	9802      	ldr	r0, [sp, #8]
 8007074:	9903      	ldr	r1, [sp, #12]
 8007076:	f7fa fde9 	bl	8001c4c <__aeabi_dsub>
 800707a:	e74f      	b.n	8006f1c <__ieee754_log+0x118>
 800707c:	4a23      	ldr	r2, [pc, #140]	@ (800710c <__ieee754_log+0x308>)
 800707e:	4b24      	ldr	r3, [pc, #144]	@ (8007110 <__ieee754_log+0x30c>)
 8007080:	9806      	ldr	r0, [sp, #24]
 8007082:	9907      	ldr	r1, [sp, #28]
 8007084:	f7fa fb1a 	bl	80016bc <__aeabi_dmul>
 8007088:	4a22      	ldr	r2, [pc, #136]	@ (8007114 <__ieee754_log+0x310>)
 800708a:	9000      	str	r0, [sp, #0]
 800708c:	9101      	str	r1, [sp, #4]
 800708e:	9806      	ldr	r0, [sp, #24]
 8007090:	9907      	ldr	r1, [sp, #28]
 8007092:	4b21      	ldr	r3, [pc, #132]	@ (8007118 <__ieee754_log+0x314>)
 8007094:	f7fa fb12 	bl	80016bc <__aeabi_dmul>
 8007098:	0022      	movs	r2, r4
 800709a:	002b      	movs	r3, r5
 800709c:	f7f9 fb66 	bl	800076c <__aeabi_dadd>
 80070a0:	e754      	b.n	8006f4c <__ieee754_log+0x148>
 80070a2:	0002      	movs	r2, r0
 80070a4:	000b      	movs	r3, r1
 80070a6:	0030      	movs	r0, r6
 80070a8:	0039      	movs	r1, r7
 80070aa:	f7fa fdcf 	bl	8001c4c <__aeabi_dsub>
 80070ae:	9a04      	ldr	r2, [sp, #16]
 80070b0:	9b05      	ldr	r3, [sp, #20]
 80070b2:	f7fa fb03 	bl	80016bc <__aeabi_dmul>
 80070b6:	9b00      	ldr	r3, [sp, #0]
 80070b8:	0004      	movs	r4, r0
 80070ba:	000d      	movs	r5, r1
 80070bc:	2b00      	cmp	r3, #0
 80070be:	d102      	bne.n	80070c6 <__ieee754_log+0x2c2>
 80070c0:	0002      	movs	r2, r0
 80070c2:	000b      	movs	r3, r1
 80070c4:	e72c      	b.n	8006f20 <__ieee754_log+0x11c>
 80070c6:	4a11      	ldr	r2, [pc, #68]	@ (800710c <__ieee754_log+0x308>)
 80070c8:	4b11      	ldr	r3, [pc, #68]	@ (8007110 <__ieee754_log+0x30c>)
 80070ca:	9806      	ldr	r0, [sp, #24]
 80070cc:	9907      	ldr	r1, [sp, #28]
 80070ce:	f7fa faf5 	bl	80016bc <__aeabi_dmul>
 80070d2:	4a10      	ldr	r2, [pc, #64]	@ (8007114 <__ieee754_log+0x310>)
 80070d4:	9000      	str	r0, [sp, #0]
 80070d6:	9101      	str	r1, [sp, #4]
 80070d8:	9806      	ldr	r0, [sp, #24]
 80070da:	9907      	ldr	r1, [sp, #28]
 80070dc:	4b0e      	ldr	r3, [pc, #56]	@ (8007118 <__ieee754_log+0x314>)
 80070de:	f7fa faed 	bl	80016bc <__aeabi_dmul>
 80070e2:	0002      	movs	r2, r0
 80070e4:	000b      	movs	r3, r1
 80070e6:	0020      	movs	r0, r4
 80070e8:	0029      	movs	r1, r5
 80070ea:	e733      	b.n	8006f54 <__ieee754_log+0x150>
 80070ec:	2000      	movs	r0, #0
 80070ee:	2100      	movs	r1, #0
 80070f0:	e699      	b.n	8006e26 <__ieee754_log+0x22>
 80070f2:	46c0      	nop			@ (mov r8, r8)
 80070f4:	c3500000 	.word	0xc3500000
 80070f8:	43500000 	.word	0x43500000
 80070fc:	7fefffff 	.word	0x7fefffff
 8007100:	fffffc01 	.word	0xfffffc01
 8007104:	00095f64 	.word	0x00095f64
 8007108:	3ff00000 	.word	0x3ff00000
 800710c:	fee00000 	.word	0xfee00000
 8007110:	3fe62e42 	.word	0x3fe62e42
 8007114:	35793c76 	.word	0x35793c76
 8007118:	3dea39ef 	.word	0x3dea39ef
 800711c:	55555555 	.word	0x55555555
 8007120:	3fd55555 	.word	0x3fd55555
 8007124:	3fe00000 	.word	0x3fe00000
 8007128:	fff9eb86 	.word	0xfff9eb86
 800712c:	df3e5244 	.word	0xdf3e5244
 8007130:	3fc2f112 	.word	0x3fc2f112
 8007134:	96cb03de 	.word	0x96cb03de
 8007138:	3fc74664 	.word	0x3fc74664
 800713c:	94229359 	.word	0x94229359
 8007140:	3fd24924 	.word	0x3fd24924
 8007144:	55555593 	.word	0x55555593
 8007148:	3fe55555 	.word	0x3fe55555
 800714c:	d078c69f 	.word	0xd078c69f
 8007150:	3fc39a09 	.word	0x3fc39a09
 8007154:	1d8e78af 	.word	0x1d8e78af
 8007158:	3fcc71c5 	.word	0x3fcc71c5
 800715c:	9997fa04 	.word	0x9997fa04
 8007160:	3fd99999 	.word	0x3fd99999
 8007164:	0006b851 	.word	0x0006b851

08007168 <_init>:
 8007168:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800716a:	46c0      	nop			@ (mov r8, r8)
 800716c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800716e:	bc08      	pop	{r3}
 8007170:	469e      	mov	lr, r3
 8007172:	4770      	bx	lr

08007174 <_fini>:
 8007174:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007176:	46c0      	nop			@ (mov r8, r8)
 8007178:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800717a:	bc08      	pop	{r3}
 800717c:	469e      	mov	lr, r3
 800717e:	4770      	bx	lr
