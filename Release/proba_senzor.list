
proba_senzor.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000071ac  080000c0  080000c0  000010c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000490  08007270  08007270  00008270  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007700  08007700  000091d4  2**0
                  CONTENTS
  4 .ARM          00000000  08007700  08007700  000091d4  2**0
                  CONTENTS
  5 .preinit_array 00000000  08007700  08007700  000091d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08007700  08007700  00008700  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08007704  08007704  00008704  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001d4  20000000  08007708  00009000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000003a0  200001d4  080078dc  000091d4  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000574  080078dc  00009574  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000091d4  2**0
                  CONTENTS, READONLY
 12 .debug_info   00011889  00000000  00000000  000091fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000288d  00000000  00000000  0001aa85  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loclists 000070dc  00000000  00000000  0001d312  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000b10  00000000  00000000  000243ee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000b38  00000000  00000000  00024efe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00019828  00000000  00000000  00025a36  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00014554  00000000  00000000  0003f25e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008f280  00000000  00000000  000537b2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000e2a32  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000302c  00000000  00000000  000e2a78  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	@ (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	@ (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	@ (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	200001d4 	.word	0x200001d4
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08007254 	.word	0x08007254

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	@ (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	@ (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	@ (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			@ (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	200001d8 	.word	0x200001d8
 8000104:	08007254 	.word	0x08007254

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			@ (mov r8, r8)

0800012c <__gnu_thumb1_case_shi>:
 800012c:	b403      	push	{r0, r1}
 800012e:	4671      	mov	r1, lr
 8000130:	0849      	lsrs	r1, r1, #1
 8000132:	0040      	lsls	r0, r0, #1
 8000134:	0049      	lsls	r1, r1, #1
 8000136:	5e09      	ldrsh	r1, [r1, r0]
 8000138:	0049      	lsls	r1, r1, #1
 800013a:	448e      	add	lr, r1
 800013c:	bc03      	pop	{r0, r1}
 800013e:	4770      	bx	lr

08000140 <__udivsi3>:
 8000140:	2200      	movs	r2, #0
 8000142:	0843      	lsrs	r3, r0, #1
 8000144:	428b      	cmp	r3, r1
 8000146:	d374      	bcc.n	8000232 <__udivsi3+0xf2>
 8000148:	0903      	lsrs	r3, r0, #4
 800014a:	428b      	cmp	r3, r1
 800014c:	d35f      	bcc.n	800020e <__udivsi3+0xce>
 800014e:	0a03      	lsrs	r3, r0, #8
 8000150:	428b      	cmp	r3, r1
 8000152:	d344      	bcc.n	80001de <__udivsi3+0x9e>
 8000154:	0b03      	lsrs	r3, r0, #12
 8000156:	428b      	cmp	r3, r1
 8000158:	d328      	bcc.n	80001ac <__udivsi3+0x6c>
 800015a:	0c03      	lsrs	r3, r0, #16
 800015c:	428b      	cmp	r3, r1
 800015e:	d30d      	bcc.n	800017c <__udivsi3+0x3c>
 8000160:	22ff      	movs	r2, #255	@ 0xff
 8000162:	0209      	lsls	r1, r1, #8
 8000164:	ba12      	rev	r2, r2
 8000166:	0c03      	lsrs	r3, r0, #16
 8000168:	428b      	cmp	r3, r1
 800016a:	d302      	bcc.n	8000172 <__udivsi3+0x32>
 800016c:	1212      	asrs	r2, r2, #8
 800016e:	0209      	lsls	r1, r1, #8
 8000170:	d065      	beq.n	800023e <__udivsi3+0xfe>
 8000172:	0b03      	lsrs	r3, r0, #12
 8000174:	428b      	cmp	r3, r1
 8000176:	d319      	bcc.n	80001ac <__udivsi3+0x6c>
 8000178:	e000      	b.n	800017c <__udivsi3+0x3c>
 800017a:	0a09      	lsrs	r1, r1, #8
 800017c:	0bc3      	lsrs	r3, r0, #15
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x46>
 8000182:	03cb      	lsls	r3, r1, #15
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0b83      	lsrs	r3, r0, #14
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x52>
 800018e:	038b      	lsls	r3, r1, #14
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0b43      	lsrs	r3, r0, #13
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x5e>
 800019a:	034b      	lsls	r3, r1, #13
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0b03      	lsrs	r3, r0, #12
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x6a>
 80001a6:	030b      	lsls	r3, r1, #12
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0ac3      	lsrs	r3, r0, #11
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x76>
 80001b2:	02cb      	lsls	r3, r1, #11
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	0a83      	lsrs	r3, r0, #10
 80001ba:	428b      	cmp	r3, r1
 80001bc:	d301      	bcc.n	80001c2 <__udivsi3+0x82>
 80001be:	028b      	lsls	r3, r1, #10
 80001c0:	1ac0      	subs	r0, r0, r3
 80001c2:	4152      	adcs	r2, r2
 80001c4:	0a43      	lsrs	r3, r0, #9
 80001c6:	428b      	cmp	r3, r1
 80001c8:	d301      	bcc.n	80001ce <__udivsi3+0x8e>
 80001ca:	024b      	lsls	r3, r1, #9
 80001cc:	1ac0      	subs	r0, r0, r3
 80001ce:	4152      	adcs	r2, r2
 80001d0:	0a03      	lsrs	r3, r0, #8
 80001d2:	428b      	cmp	r3, r1
 80001d4:	d301      	bcc.n	80001da <__udivsi3+0x9a>
 80001d6:	020b      	lsls	r3, r1, #8
 80001d8:	1ac0      	subs	r0, r0, r3
 80001da:	4152      	adcs	r2, r2
 80001dc:	d2cd      	bcs.n	800017a <__udivsi3+0x3a>
 80001de:	09c3      	lsrs	r3, r0, #7
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xa8>
 80001e4:	01cb      	lsls	r3, r1, #7
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0983      	lsrs	r3, r0, #6
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xb4>
 80001f0:	018b      	lsls	r3, r1, #6
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0943      	lsrs	r3, r0, #5
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xc0>
 80001fc:	014b      	lsls	r3, r1, #5
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0903      	lsrs	r3, r0, #4
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xcc>
 8000208:	010b      	lsls	r3, r1, #4
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	08c3      	lsrs	r3, r0, #3
 8000210:	428b      	cmp	r3, r1
 8000212:	d301      	bcc.n	8000218 <__udivsi3+0xd8>
 8000214:	00cb      	lsls	r3, r1, #3
 8000216:	1ac0      	subs	r0, r0, r3
 8000218:	4152      	adcs	r2, r2
 800021a:	0883      	lsrs	r3, r0, #2
 800021c:	428b      	cmp	r3, r1
 800021e:	d301      	bcc.n	8000224 <__udivsi3+0xe4>
 8000220:	008b      	lsls	r3, r1, #2
 8000222:	1ac0      	subs	r0, r0, r3
 8000224:	4152      	adcs	r2, r2
 8000226:	0843      	lsrs	r3, r0, #1
 8000228:	428b      	cmp	r3, r1
 800022a:	d301      	bcc.n	8000230 <__udivsi3+0xf0>
 800022c:	004b      	lsls	r3, r1, #1
 800022e:	1ac0      	subs	r0, r0, r3
 8000230:	4152      	adcs	r2, r2
 8000232:	1a41      	subs	r1, r0, r1
 8000234:	d200      	bcs.n	8000238 <__udivsi3+0xf8>
 8000236:	4601      	mov	r1, r0
 8000238:	4152      	adcs	r2, r2
 800023a:	4610      	mov	r0, r2
 800023c:	4770      	bx	lr
 800023e:	e7ff      	b.n	8000240 <__udivsi3+0x100>
 8000240:	b501      	push	{r0, lr}
 8000242:	2000      	movs	r0, #0
 8000244:	f000 f8f0 	bl	8000428 <__aeabi_idiv0>
 8000248:	bd02      	pop	{r1, pc}
 800024a:	46c0      	nop			@ (mov r8, r8)

0800024c <__aeabi_uidivmod>:
 800024c:	2900      	cmp	r1, #0
 800024e:	d0f7      	beq.n	8000240 <__udivsi3+0x100>
 8000250:	e776      	b.n	8000140 <__udivsi3>
 8000252:	4770      	bx	lr

08000254 <__divsi3>:
 8000254:	4603      	mov	r3, r0
 8000256:	430b      	orrs	r3, r1
 8000258:	d47f      	bmi.n	800035a <__divsi3+0x106>
 800025a:	2200      	movs	r2, #0
 800025c:	0843      	lsrs	r3, r0, #1
 800025e:	428b      	cmp	r3, r1
 8000260:	d374      	bcc.n	800034c <__divsi3+0xf8>
 8000262:	0903      	lsrs	r3, r0, #4
 8000264:	428b      	cmp	r3, r1
 8000266:	d35f      	bcc.n	8000328 <__divsi3+0xd4>
 8000268:	0a03      	lsrs	r3, r0, #8
 800026a:	428b      	cmp	r3, r1
 800026c:	d344      	bcc.n	80002f8 <__divsi3+0xa4>
 800026e:	0b03      	lsrs	r3, r0, #12
 8000270:	428b      	cmp	r3, r1
 8000272:	d328      	bcc.n	80002c6 <__divsi3+0x72>
 8000274:	0c03      	lsrs	r3, r0, #16
 8000276:	428b      	cmp	r3, r1
 8000278:	d30d      	bcc.n	8000296 <__divsi3+0x42>
 800027a:	22ff      	movs	r2, #255	@ 0xff
 800027c:	0209      	lsls	r1, r1, #8
 800027e:	ba12      	rev	r2, r2
 8000280:	0c03      	lsrs	r3, r0, #16
 8000282:	428b      	cmp	r3, r1
 8000284:	d302      	bcc.n	800028c <__divsi3+0x38>
 8000286:	1212      	asrs	r2, r2, #8
 8000288:	0209      	lsls	r1, r1, #8
 800028a:	d065      	beq.n	8000358 <__divsi3+0x104>
 800028c:	0b03      	lsrs	r3, r0, #12
 800028e:	428b      	cmp	r3, r1
 8000290:	d319      	bcc.n	80002c6 <__divsi3+0x72>
 8000292:	e000      	b.n	8000296 <__divsi3+0x42>
 8000294:	0a09      	lsrs	r1, r1, #8
 8000296:	0bc3      	lsrs	r3, r0, #15
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x4c>
 800029c:	03cb      	lsls	r3, r1, #15
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0b83      	lsrs	r3, r0, #14
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x58>
 80002a8:	038b      	lsls	r3, r1, #14
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0b43      	lsrs	r3, r0, #13
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x64>
 80002b4:	034b      	lsls	r3, r1, #13
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0b03      	lsrs	r3, r0, #12
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x70>
 80002c0:	030b      	lsls	r3, r1, #12
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0ac3      	lsrs	r3, r0, #11
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0x7c>
 80002cc:	02cb      	lsls	r3, r1, #11
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	0a83      	lsrs	r3, r0, #10
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d301      	bcc.n	80002dc <__divsi3+0x88>
 80002d8:	028b      	lsls	r3, r1, #10
 80002da:	1ac0      	subs	r0, r0, r3
 80002dc:	4152      	adcs	r2, r2
 80002de:	0a43      	lsrs	r3, r0, #9
 80002e0:	428b      	cmp	r3, r1
 80002e2:	d301      	bcc.n	80002e8 <__divsi3+0x94>
 80002e4:	024b      	lsls	r3, r1, #9
 80002e6:	1ac0      	subs	r0, r0, r3
 80002e8:	4152      	adcs	r2, r2
 80002ea:	0a03      	lsrs	r3, r0, #8
 80002ec:	428b      	cmp	r3, r1
 80002ee:	d301      	bcc.n	80002f4 <__divsi3+0xa0>
 80002f0:	020b      	lsls	r3, r1, #8
 80002f2:	1ac0      	subs	r0, r0, r3
 80002f4:	4152      	adcs	r2, r2
 80002f6:	d2cd      	bcs.n	8000294 <__divsi3+0x40>
 80002f8:	09c3      	lsrs	r3, r0, #7
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xae>
 80002fe:	01cb      	lsls	r3, r1, #7
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	0983      	lsrs	r3, r0, #6
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xba>
 800030a:	018b      	lsls	r3, r1, #6
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0943      	lsrs	r3, r0, #5
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xc6>
 8000316:	014b      	lsls	r3, r1, #5
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0903      	lsrs	r3, r0, #4
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xd2>
 8000322:	010b      	lsls	r3, r1, #4
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	08c3      	lsrs	r3, r0, #3
 800032a:	428b      	cmp	r3, r1
 800032c:	d301      	bcc.n	8000332 <__divsi3+0xde>
 800032e:	00cb      	lsls	r3, r1, #3
 8000330:	1ac0      	subs	r0, r0, r3
 8000332:	4152      	adcs	r2, r2
 8000334:	0883      	lsrs	r3, r0, #2
 8000336:	428b      	cmp	r3, r1
 8000338:	d301      	bcc.n	800033e <__divsi3+0xea>
 800033a:	008b      	lsls	r3, r1, #2
 800033c:	1ac0      	subs	r0, r0, r3
 800033e:	4152      	adcs	r2, r2
 8000340:	0843      	lsrs	r3, r0, #1
 8000342:	428b      	cmp	r3, r1
 8000344:	d301      	bcc.n	800034a <__divsi3+0xf6>
 8000346:	004b      	lsls	r3, r1, #1
 8000348:	1ac0      	subs	r0, r0, r3
 800034a:	4152      	adcs	r2, r2
 800034c:	1a41      	subs	r1, r0, r1
 800034e:	d200      	bcs.n	8000352 <__divsi3+0xfe>
 8000350:	4601      	mov	r1, r0
 8000352:	4152      	adcs	r2, r2
 8000354:	4610      	mov	r0, r2
 8000356:	4770      	bx	lr
 8000358:	e05d      	b.n	8000416 <__divsi3+0x1c2>
 800035a:	0fca      	lsrs	r2, r1, #31
 800035c:	d000      	beq.n	8000360 <__divsi3+0x10c>
 800035e:	4249      	negs	r1, r1
 8000360:	1003      	asrs	r3, r0, #32
 8000362:	d300      	bcc.n	8000366 <__divsi3+0x112>
 8000364:	4240      	negs	r0, r0
 8000366:	4053      	eors	r3, r2
 8000368:	2200      	movs	r2, #0
 800036a:	469c      	mov	ip, r3
 800036c:	0903      	lsrs	r3, r0, #4
 800036e:	428b      	cmp	r3, r1
 8000370:	d32d      	bcc.n	80003ce <__divsi3+0x17a>
 8000372:	0a03      	lsrs	r3, r0, #8
 8000374:	428b      	cmp	r3, r1
 8000376:	d312      	bcc.n	800039e <__divsi3+0x14a>
 8000378:	22fc      	movs	r2, #252	@ 0xfc
 800037a:	0189      	lsls	r1, r1, #6
 800037c:	ba12      	rev	r2, r2
 800037e:	0a03      	lsrs	r3, r0, #8
 8000380:	428b      	cmp	r3, r1
 8000382:	d30c      	bcc.n	800039e <__divsi3+0x14a>
 8000384:	0189      	lsls	r1, r1, #6
 8000386:	1192      	asrs	r2, r2, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d308      	bcc.n	800039e <__divsi3+0x14a>
 800038c:	0189      	lsls	r1, r1, #6
 800038e:	1192      	asrs	r2, r2, #6
 8000390:	428b      	cmp	r3, r1
 8000392:	d304      	bcc.n	800039e <__divsi3+0x14a>
 8000394:	0189      	lsls	r1, r1, #6
 8000396:	d03a      	beq.n	800040e <__divsi3+0x1ba>
 8000398:	1192      	asrs	r2, r2, #6
 800039a:	e000      	b.n	800039e <__divsi3+0x14a>
 800039c:	0989      	lsrs	r1, r1, #6
 800039e:	09c3      	lsrs	r3, r0, #7
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x154>
 80003a4:	01cb      	lsls	r3, r1, #7
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	0983      	lsrs	r3, r0, #6
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x160>
 80003b0:	018b      	lsls	r3, r1, #6
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0943      	lsrs	r3, r0, #5
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x16c>
 80003bc:	014b      	lsls	r3, r1, #5
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	0903      	lsrs	r3, r0, #4
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d301      	bcc.n	80003cc <__divsi3+0x178>
 80003c8:	010b      	lsls	r3, r1, #4
 80003ca:	1ac0      	subs	r0, r0, r3
 80003cc:	4152      	adcs	r2, r2
 80003ce:	08c3      	lsrs	r3, r0, #3
 80003d0:	428b      	cmp	r3, r1
 80003d2:	d301      	bcc.n	80003d8 <__divsi3+0x184>
 80003d4:	00cb      	lsls	r3, r1, #3
 80003d6:	1ac0      	subs	r0, r0, r3
 80003d8:	4152      	adcs	r2, r2
 80003da:	0883      	lsrs	r3, r0, #2
 80003dc:	428b      	cmp	r3, r1
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x190>
 80003e0:	008b      	lsls	r3, r1, #2
 80003e2:	1ac0      	subs	r0, r0, r3
 80003e4:	4152      	adcs	r2, r2
 80003e6:	d2d9      	bcs.n	800039c <__divsi3+0x148>
 80003e8:	0843      	lsrs	r3, r0, #1
 80003ea:	428b      	cmp	r3, r1
 80003ec:	d301      	bcc.n	80003f2 <__divsi3+0x19e>
 80003ee:	004b      	lsls	r3, r1, #1
 80003f0:	1ac0      	subs	r0, r0, r3
 80003f2:	4152      	adcs	r2, r2
 80003f4:	1a41      	subs	r1, r0, r1
 80003f6:	d200      	bcs.n	80003fa <__divsi3+0x1a6>
 80003f8:	4601      	mov	r1, r0
 80003fa:	4663      	mov	r3, ip
 80003fc:	4152      	adcs	r2, r2
 80003fe:	105b      	asrs	r3, r3, #1
 8000400:	4610      	mov	r0, r2
 8000402:	d301      	bcc.n	8000408 <__divsi3+0x1b4>
 8000404:	4240      	negs	r0, r0
 8000406:	2b00      	cmp	r3, #0
 8000408:	d500      	bpl.n	800040c <__divsi3+0x1b8>
 800040a:	4249      	negs	r1, r1
 800040c:	4770      	bx	lr
 800040e:	4663      	mov	r3, ip
 8000410:	105b      	asrs	r3, r3, #1
 8000412:	d300      	bcc.n	8000416 <__divsi3+0x1c2>
 8000414:	4240      	negs	r0, r0
 8000416:	b501      	push	{r0, lr}
 8000418:	2000      	movs	r0, #0
 800041a:	f000 f805 	bl	8000428 <__aeabi_idiv0>
 800041e:	bd02      	pop	{r1, pc}

08000420 <__aeabi_idivmod>:
 8000420:	2900      	cmp	r1, #0
 8000422:	d0f8      	beq.n	8000416 <__divsi3+0x1c2>
 8000424:	e716      	b.n	8000254 <__divsi3>
 8000426:	4770      	bx	lr

08000428 <__aeabi_idiv0>:
 8000428:	4770      	bx	lr
 800042a:	46c0      	nop			@ (mov r8, r8)

0800042c <__aeabi_cdrcmple>:
 800042c:	4684      	mov	ip, r0
 800042e:	0010      	movs	r0, r2
 8000430:	4662      	mov	r2, ip
 8000432:	468c      	mov	ip, r1
 8000434:	0019      	movs	r1, r3
 8000436:	4663      	mov	r3, ip
 8000438:	e000      	b.n	800043c <__aeabi_cdcmpeq>
 800043a:	46c0      	nop			@ (mov r8, r8)

0800043c <__aeabi_cdcmpeq>:
 800043c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800043e:	f000 ff69 	bl	8001314 <__ledf2>
 8000442:	2800      	cmp	r0, #0
 8000444:	d401      	bmi.n	800044a <__aeabi_cdcmpeq+0xe>
 8000446:	2100      	movs	r1, #0
 8000448:	42c8      	cmn	r0, r1
 800044a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800044c <__aeabi_dcmpeq>:
 800044c:	b510      	push	{r4, lr}
 800044e:	f000 fea9 	bl	80011a4 <__eqdf2>
 8000452:	4240      	negs	r0, r0
 8000454:	3001      	adds	r0, #1
 8000456:	bd10      	pop	{r4, pc}

08000458 <__aeabi_dcmplt>:
 8000458:	b510      	push	{r4, lr}
 800045a:	f000 ff5b 	bl	8001314 <__ledf2>
 800045e:	2800      	cmp	r0, #0
 8000460:	db01      	blt.n	8000466 <__aeabi_dcmplt+0xe>
 8000462:	2000      	movs	r0, #0
 8000464:	bd10      	pop	{r4, pc}
 8000466:	2001      	movs	r0, #1
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			@ (mov r8, r8)

0800046c <__aeabi_dcmple>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f000 ff51 	bl	8001314 <__ledf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	dd01      	ble.n	800047a <__aeabi_dcmple+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			@ (mov r8, r8)

08000480 <__aeabi_dcmpgt>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f000 fed3 	bl	800122c <__gedf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	dc01      	bgt.n	800048e <__aeabi_dcmpgt+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			@ (mov r8, r8)

08000494 <__aeabi_dcmpge>:
 8000494:	b510      	push	{r4, lr}
 8000496:	f000 fec9 	bl	800122c <__gedf2>
 800049a:	2800      	cmp	r0, #0
 800049c:	da01      	bge.n	80004a2 <__aeabi_dcmpge+0xe>
 800049e:	2000      	movs	r0, #0
 80004a0:	bd10      	pop	{r4, pc}
 80004a2:	2001      	movs	r0, #1
 80004a4:	bd10      	pop	{r4, pc}
 80004a6:	46c0      	nop			@ (mov r8, r8)

080004a8 <__aeabi_dadd>:
 80004a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80004aa:	4657      	mov	r7, sl
 80004ac:	464e      	mov	r6, r9
 80004ae:	4645      	mov	r5, r8
 80004b0:	46de      	mov	lr, fp
 80004b2:	b5e0      	push	{r5, r6, r7, lr}
 80004b4:	b083      	sub	sp, #12
 80004b6:	9000      	str	r0, [sp, #0]
 80004b8:	9101      	str	r1, [sp, #4]
 80004ba:	030c      	lsls	r4, r1, #12
 80004bc:	004f      	lsls	r7, r1, #1
 80004be:	0fce      	lsrs	r6, r1, #31
 80004c0:	0a61      	lsrs	r1, r4, #9
 80004c2:	9c00      	ldr	r4, [sp, #0]
 80004c4:	031d      	lsls	r5, r3, #12
 80004c6:	0f64      	lsrs	r4, r4, #29
 80004c8:	430c      	orrs	r4, r1
 80004ca:	9900      	ldr	r1, [sp, #0]
 80004cc:	9200      	str	r2, [sp, #0]
 80004ce:	9301      	str	r3, [sp, #4]
 80004d0:	00c8      	lsls	r0, r1, #3
 80004d2:	0059      	lsls	r1, r3, #1
 80004d4:	0d4b      	lsrs	r3, r1, #21
 80004d6:	4699      	mov	r9, r3
 80004d8:	9a00      	ldr	r2, [sp, #0]
 80004da:	9b01      	ldr	r3, [sp, #4]
 80004dc:	0a6d      	lsrs	r5, r5, #9
 80004de:	0fd9      	lsrs	r1, r3, #31
 80004e0:	0f53      	lsrs	r3, r2, #29
 80004e2:	432b      	orrs	r3, r5
 80004e4:	469a      	mov	sl, r3
 80004e6:	9b00      	ldr	r3, [sp, #0]
 80004e8:	0d7f      	lsrs	r7, r7, #21
 80004ea:	00da      	lsls	r2, r3, #3
 80004ec:	4694      	mov	ip, r2
 80004ee:	464a      	mov	r2, r9
 80004f0:	46b0      	mov	r8, r6
 80004f2:	1aba      	subs	r2, r7, r2
 80004f4:	428e      	cmp	r6, r1
 80004f6:	d100      	bne.n	80004fa <__aeabi_dadd+0x52>
 80004f8:	e0b0      	b.n	800065c <__aeabi_dadd+0x1b4>
 80004fa:	2a00      	cmp	r2, #0
 80004fc:	dc00      	bgt.n	8000500 <__aeabi_dadd+0x58>
 80004fe:	e078      	b.n	80005f2 <__aeabi_dadd+0x14a>
 8000500:	4649      	mov	r1, r9
 8000502:	2900      	cmp	r1, #0
 8000504:	d100      	bne.n	8000508 <__aeabi_dadd+0x60>
 8000506:	e0e9      	b.n	80006dc <__aeabi_dadd+0x234>
 8000508:	49c9      	ldr	r1, [pc, #804]	@ (8000830 <__aeabi_dadd+0x388>)
 800050a:	428f      	cmp	r7, r1
 800050c:	d100      	bne.n	8000510 <__aeabi_dadd+0x68>
 800050e:	e195      	b.n	800083c <__aeabi_dadd+0x394>
 8000510:	2501      	movs	r5, #1
 8000512:	2a38      	cmp	r2, #56	@ 0x38
 8000514:	dc16      	bgt.n	8000544 <__aeabi_dadd+0x9c>
 8000516:	2180      	movs	r1, #128	@ 0x80
 8000518:	4653      	mov	r3, sl
 800051a:	0409      	lsls	r1, r1, #16
 800051c:	430b      	orrs	r3, r1
 800051e:	469a      	mov	sl, r3
 8000520:	2a1f      	cmp	r2, #31
 8000522:	dd00      	ble.n	8000526 <__aeabi_dadd+0x7e>
 8000524:	e1e7      	b.n	80008f6 <__aeabi_dadd+0x44e>
 8000526:	2120      	movs	r1, #32
 8000528:	4655      	mov	r5, sl
 800052a:	1a8b      	subs	r3, r1, r2
 800052c:	4661      	mov	r1, ip
 800052e:	409d      	lsls	r5, r3
 8000530:	40d1      	lsrs	r1, r2
 8000532:	430d      	orrs	r5, r1
 8000534:	4661      	mov	r1, ip
 8000536:	4099      	lsls	r1, r3
 8000538:	1e4b      	subs	r3, r1, #1
 800053a:	4199      	sbcs	r1, r3
 800053c:	4653      	mov	r3, sl
 800053e:	40d3      	lsrs	r3, r2
 8000540:	430d      	orrs	r5, r1
 8000542:	1ae4      	subs	r4, r4, r3
 8000544:	1b45      	subs	r5, r0, r5
 8000546:	42a8      	cmp	r0, r5
 8000548:	4180      	sbcs	r0, r0
 800054a:	4240      	negs	r0, r0
 800054c:	1a24      	subs	r4, r4, r0
 800054e:	0223      	lsls	r3, r4, #8
 8000550:	d400      	bmi.n	8000554 <__aeabi_dadd+0xac>
 8000552:	e10f      	b.n	8000774 <__aeabi_dadd+0x2cc>
 8000554:	0264      	lsls	r4, r4, #9
 8000556:	0a64      	lsrs	r4, r4, #9
 8000558:	2c00      	cmp	r4, #0
 800055a:	d100      	bne.n	800055e <__aeabi_dadd+0xb6>
 800055c:	e139      	b.n	80007d2 <__aeabi_dadd+0x32a>
 800055e:	0020      	movs	r0, r4
 8000560:	f001 ff2a 	bl	80023b8 <__clzsi2>
 8000564:	0003      	movs	r3, r0
 8000566:	3b08      	subs	r3, #8
 8000568:	2120      	movs	r1, #32
 800056a:	0028      	movs	r0, r5
 800056c:	1aca      	subs	r2, r1, r3
 800056e:	40d0      	lsrs	r0, r2
 8000570:	409c      	lsls	r4, r3
 8000572:	0002      	movs	r2, r0
 8000574:	409d      	lsls	r5, r3
 8000576:	4322      	orrs	r2, r4
 8000578:	429f      	cmp	r7, r3
 800057a:	dd00      	ble.n	800057e <__aeabi_dadd+0xd6>
 800057c:	e173      	b.n	8000866 <__aeabi_dadd+0x3be>
 800057e:	1bd8      	subs	r0, r3, r7
 8000580:	3001      	adds	r0, #1
 8000582:	1a09      	subs	r1, r1, r0
 8000584:	002c      	movs	r4, r5
 8000586:	408d      	lsls	r5, r1
 8000588:	40c4      	lsrs	r4, r0
 800058a:	1e6b      	subs	r3, r5, #1
 800058c:	419d      	sbcs	r5, r3
 800058e:	0013      	movs	r3, r2
 8000590:	40c2      	lsrs	r2, r0
 8000592:	408b      	lsls	r3, r1
 8000594:	4325      	orrs	r5, r4
 8000596:	2700      	movs	r7, #0
 8000598:	0014      	movs	r4, r2
 800059a:	431d      	orrs	r5, r3
 800059c:	076b      	lsls	r3, r5, #29
 800059e:	d009      	beq.n	80005b4 <__aeabi_dadd+0x10c>
 80005a0:	230f      	movs	r3, #15
 80005a2:	402b      	ands	r3, r5
 80005a4:	2b04      	cmp	r3, #4
 80005a6:	d005      	beq.n	80005b4 <__aeabi_dadd+0x10c>
 80005a8:	1d2b      	adds	r3, r5, #4
 80005aa:	42ab      	cmp	r3, r5
 80005ac:	41ad      	sbcs	r5, r5
 80005ae:	426d      	negs	r5, r5
 80005b0:	1964      	adds	r4, r4, r5
 80005b2:	001d      	movs	r5, r3
 80005b4:	0223      	lsls	r3, r4, #8
 80005b6:	d400      	bmi.n	80005ba <__aeabi_dadd+0x112>
 80005b8:	e12d      	b.n	8000816 <__aeabi_dadd+0x36e>
 80005ba:	4a9d      	ldr	r2, [pc, #628]	@ (8000830 <__aeabi_dadd+0x388>)
 80005bc:	3701      	adds	r7, #1
 80005be:	4297      	cmp	r7, r2
 80005c0:	d100      	bne.n	80005c4 <__aeabi_dadd+0x11c>
 80005c2:	e0d3      	b.n	800076c <__aeabi_dadd+0x2c4>
 80005c4:	4646      	mov	r6, r8
 80005c6:	499b      	ldr	r1, [pc, #620]	@ (8000834 <__aeabi_dadd+0x38c>)
 80005c8:	08ed      	lsrs	r5, r5, #3
 80005ca:	4021      	ands	r1, r4
 80005cc:	074a      	lsls	r2, r1, #29
 80005ce:	432a      	orrs	r2, r5
 80005d0:	057c      	lsls	r4, r7, #21
 80005d2:	024d      	lsls	r5, r1, #9
 80005d4:	0b2d      	lsrs	r5, r5, #12
 80005d6:	0d64      	lsrs	r4, r4, #21
 80005d8:	0524      	lsls	r4, r4, #20
 80005da:	432c      	orrs	r4, r5
 80005dc:	07f6      	lsls	r6, r6, #31
 80005de:	4334      	orrs	r4, r6
 80005e0:	0010      	movs	r0, r2
 80005e2:	0021      	movs	r1, r4
 80005e4:	b003      	add	sp, #12
 80005e6:	bcf0      	pop	{r4, r5, r6, r7}
 80005e8:	46bb      	mov	fp, r7
 80005ea:	46b2      	mov	sl, r6
 80005ec:	46a9      	mov	r9, r5
 80005ee:	46a0      	mov	r8, r4
 80005f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80005f2:	2a00      	cmp	r2, #0
 80005f4:	d100      	bne.n	80005f8 <__aeabi_dadd+0x150>
 80005f6:	e084      	b.n	8000702 <__aeabi_dadd+0x25a>
 80005f8:	464a      	mov	r2, r9
 80005fa:	1bd2      	subs	r2, r2, r7
 80005fc:	2f00      	cmp	r7, #0
 80005fe:	d000      	beq.n	8000602 <__aeabi_dadd+0x15a>
 8000600:	e16d      	b.n	80008de <__aeabi_dadd+0x436>
 8000602:	0025      	movs	r5, r4
 8000604:	4305      	orrs	r5, r0
 8000606:	d100      	bne.n	800060a <__aeabi_dadd+0x162>
 8000608:	e127      	b.n	800085a <__aeabi_dadd+0x3b2>
 800060a:	1e56      	subs	r6, r2, #1
 800060c:	2a01      	cmp	r2, #1
 800060e:	d100      	bne.n	8000612 <__aeabi_dadd+0x16a>
 8000610:	e23b      	b.n	8000a8a <__aeabi_dadd+0x5e2>
 8000612:	4d87      	ldr	r5, [pc, #540]	@ (8000830 <__aeabi_dadd+0x388>)
 8000614:	42aa      	cmp	r2, r5
 8000616:	d100      	bne.n	800061a <__aeabi_dadd+0x172>
 8000618:	e26a      	b.n	8000af0 <__aeabi_dadd+0x648>
 800061a:	2501      	movs	r5, #1
 800061c:	2e38      	cmp	r6, #56	@ 0x38
 800061e:	dc12      	bgt.n	8000646 <__aeabi_dadd+0x19e>
 8000620:	0032      	movs	r2, r6
 8000622:	2a1f      	cmp	r2, #31
 8000624:	dd00      	ble.n	8000628 <__aeabi_dadd+0x180>
 8000626:	e1f8      	b.n	8000a1a <__aeabi_dadd+0x572>
 8000628:	2620      	movs	r6, #32
 800062a:	0025      	movs	r5, r4
 800062c:	1ab6      	subs	r6, r6, r2
 800062e:	0007      	movs	r7, r0
 8000630:	4653      	mov	r3, sl
 8000632:	40b0      	lsls	r0, r6
 8000634:	40d4      	lsrs	r4, r2
 8000636:	40b5      	lsls	r5, r6
 8000638:	40d7      	lsrs	r7, r2
 800063a:	1e46      	subs	r6, r0, #1
 800063c:	41b0      	sbcs	r0, r6
 800063e:	1b1b      	subs	r3, r3, r4
 8000640:	469a      	mov	sl, r3
 8000642:	433d      	orrs	r5, r7
 8000644:	4305      	orrs	r5, r0
 8000646:	4662      	mov	r2, ip
 8000648:	1b55      	subs	r5, r2, r5
 800064a:	45ac      	cmp	ip, r5
 800064c:	4192      	sbcs	r2, r2
 800064e:	4653      	mov	r3, sl
 8000650:	4252      	negs	r2, r2
 8000652:	000e      	movs	r6, r1
 8000654:	464f      	mov	r7, r9
 8000656:	4688      	mov	r8, r1
 8000658:	1a9c      	subs	r4, r3, r2
 800065a:	e778      	b.n	800054e <__aeabi_dadd+0xa6>
 800065c:	2a00      	cmp	r2, #0
 800065e:	dc00      	bgt.n	8000662 <__aeabi_dadd+0x1ba>
 8000660:	e08e      	b.n	8000780 <__aeabi_dadd+0x2d8>
 8000662:	4649      	mov	r1, r9
 8000664:	2900      	cmp	r1, #0
 8000666:	d175      	bne.n	8000754 <__aeabi_dadd+0x2ac>
 8000668:	4661      	mov	r1, ip
 800066a:	4653      	mov	r3, sl
 800066c:	4319      	orrs	r1, r3
 800066e:	d100      	bne.n	8000672 <__aeabi_dadd+0x1ca>
 8000670:	e0f6      	b.n	8000860 <__aeabi_dadd+0x3b8>
 8000672:	1e51      	subs	r1, r2, #1
 8000674:	2a01      	cmp	r2, #1
 8000676:	d100      	bne.n	800067a <__aeabi_dadd+0x1d2>
 8000678:	e191      	b.n	800099e <__aeabi_dadd+0x4f6>
 800067a:	4d6d      	ldr	r5, [pc, #436]	@ (8000830 <__aeabi_dadd+0x388>)
 800067c:	42aa      	cmp	r2, r5
 800067e:	d100      	bne.n	8000682 <__aeabi_dadd+0x1da>
 8000680:	e0dc      	b.n	800083c <__aeabi_dadd+0x394>
 8000682:	2501      	movs	r5, #1
 8000684:	2938      	cmp	r1, #56	@ 0x38
 8000686:	dc14      	bgt.n	80006b2 <__aeabi_dadd+0x20a>
 8000688:	000a      	movs	r2, r1
 800068a:	2a1f      	cmp	r2, #31
 800068c:	dd00      	ble.n	8000690 <__aeabi_dadd+0x1e8>
 800068e:	e1a2      	b.n	80009d6 <__aeabi_dadd+0x52e>
 8000690:	2120      	movs	r1, #32
 8000692:	4653      	mov	r3, sl
 8000694:	1a89      	subs	r1, r1, r2
 8000696:	408b      	lsls	r3, r1
 8000698:	001d      	movs	r5, r3
 800069a:	4663      	mov	r3, ip
 800069c:	40d3      	lsrs	r3, r2
 800069e:	431d      	orrs	r5, r3
 80006a0:	4663      	mov	r3, ip
 80006a2:	408b      	lsls	r3, r1
 80006a4:	0019      	movs	r1, r3
 80006a6:	1e4b      	subs	r3, r1, #1
 80006a8:	4199      	sbcs	r1, r3
 80006aa:	4653      	mov	r3, sl
 80006ac:	40d3      	lsrs	r3, r2
 80006ae:	430d      	orrs	r5, r1
 80006b0:	18e4      	adds	r4, r4, r3
 80006b2:	182d      	adds	r5, r5, r0
 80006b4:	4285      	cmp	r5, r0
 80006b6:	4180      	sbcs	r0, r0
 80006b8:	4240      	negs	r0, r0
 80006ba:	1824      	adds	r4, r4, r0
 80006bc:	0223      	lsls	r3, r4, #8
 80006be:	d559      	bpl.n	8000774 <__aeabi_dadd+0x2cc>
 80006c0:	4b5b      	ldr	r3, [pc, #364]	@ (8000830 <__aeabi_dadd+0x388>)
 80006c2:	3701      	adds	r7, #1
 80006c4:	429f      	cmp	r7, r3
 80006c6:	d051      	beq.n	800076c <__aeabi_dadd+0x2c4>
 80006c8:	2101      	movs	r1, #1
 80006ca:	4b5a      	ldr	r3, [pc, #360]	@ (8000834 <__aeabi_dadd+0x38c>)
 80006cc:	086a      	lsrs	r2, r5, #1
 80006ce:	401c      	ands	r4, r3
 80006d0:	4029      	ands	r1, r5
 80006d2:	430a      	orrs	r2, r1
 80006d4:	07e5      	lsls	r5, r4, #31
 80006d6:	4315      	orrs	r5, r2
 80006d8:	0864      	lsrs	r4, r4, #1
 80006da:	e75f      	b.n	800059c <__aeabi_dadd+0xf4>
 80006dc:	4661      	mov	r1, ip
 80006de:	4653      	mov	r3, sl
 80006e0:	4319      	orrs	r1, r3
 80006e2:	d100      	bne.n	80006e6 <__aeabi_dadd+0x23e>
 80006e4:	e0bc      	b.n	8000860 <__aeabi_dadd+0x3b8>
 80006e6:	1e51      	subs	r1, r2, #1
 80006e8:	2a01      	cmp	r2, #1
 80006ea:	d100      	bne.n	80006ee <__aeabi_dadd+0x246>
 80006ec:	e164      	b.n	80009b8 <__aeabi_dadd+0x510>
 80006ee:	4d50      	ldr	r5, [pc, #320]	@ (8000830 <__aeabi_dadd+0x388>)
 80006f0:	42aa      	cmp	r2, r5
 80006f2:	d100      	bne.n	80006f6 <__aeabi_dadd+0x24e>
 80006f4:	e16a      	b.n	80009cc <__aeabi_dadd+0x524>
 80006f6:	2501      	movs	r5, #1
 80006f8:	2938      	cmp	r1, #56	@ 0x38
 80006fa:	dd00      	ble.n	80006fe <__aeabi_dadd+0x256>
 80006fc:	e722      	b.n	8000544 <__aeabi_dadd+0x9c>
 80006fe:	000a      	movs	r2, r1
 8000700:	e70e      	b.n	8000520 <__aeabi_dadd+0x78>
 8000702:	4a4d      	ldr	r2, [pc, #308]	@ (8000838 <__aeabi_dadd+0x390>)
 8000704:	1c7d      	adds	r5, r7, #1
 8000706:	4215      	tst	r5, r2
 8000708:	d000      	beq.n	800070c <__aeabi_dadd+0x264>
 800070a:	e0d0      	b.n	80008ae <__aeabi_dadd+0x406>
 800070c:	0025      	movs	r5, r4
 800070e:	4662      	mov	r2, ip
 8000710:	4653      	mov	r3, sl
 8000712:	4305      	orrs	r5, r0
 8000714:	431a      	orrs	r2, r3
 8000716:	2f00      	cmp	r7, #0
 8000718:	d000      	beq.n	800071c <__aeabi_dadd+0x274>
 800071a:	e137      	b.n	800098c <__aeabi_dadd+0x4e4>
 800071c:	2d00      	cmp	r5, #0
 800071e:	d100      	bne.n	8000722 <__aeabi_dadd+0x27a>
 8000720:	e1a8      	b.n	8000a74 <__aeabi_dadd+0x5cc>
 8000722:	2a00      	cmp	r2, #0
 8000724:	d100      	bne.n	8000728 <__aeabi_dadd+0x280>
 8000726:	e16a      	b.n	80009fe <__aeabi_dadd+0x556>
 8000728:	4663      	mov	r3, ip
 800072a:	1ac5      	subs	r5, r0, r3
 800072c:	4653      	mov	r3, sl
 800072e:	1ae2      	subs	r2, r4, r3
 8000730:	42a8      	cmp	r0, r5
 8000732:	419b      	sbcs	r3, r3
 8000734:	425b      	negs	r3, r3
 8000736:	1ad3      	subs	r3, r2, r3
 8000738:	021a      	lsls	r2, r3, #8
 800073a:	d400      	bmi.n	800073e <__aeabi_dadd+0x296>
 800073c:	e203      	b.n	8000b46 <__aeabi_dadd+0x69e>
 800073e:	4663      	mov	r3, ip
 8000740:	1a1d      	subs	r5, r3, r0
 8000742:	45ac      	cmp	ip, r5
 8000744:	4192      	sbcs	r2, r2
 8000746:	4653      	mov	r3, sl
 8000748:	4252      	negs	r2, r2
 800074a:	1b1c      	subs	r4, r3, r4
 800074c:	000e      	movs	r6, r1
 800074e:	4688      	mov	r8, r1
 8000750:	1aa4      	subs	r4, r4, r2
 8000752:	e723      	b.n	800059c <__aeabi_dadd+0xf4>
 8000754:	4936      	ldr	r1, [pc, #216]	@ (8000830 <__aeabi_dadd+0x388>)
 8000756:	428f      	cmp	r7, r1
 8000758:	d070      	beq.n	800083c <__aeabi_dadd+0x394>
 800075a:	2501      	movs	r5, #1
 800075c:	2a38      	cmp	r2, #56	@ 0x38
 800075e:	dca8      	bgt.n	80006b2 <__aeabi_dadd+0x20a>
 8000760:	2180      	movs	r1, #128	@ 0x80
 8000762:	4653      	mov	r3, sl
 8000764:	0409      	lsls	r1, r1, #16
 8000766:	430b      	orrs	r3, r1
 8000768:	469a      	mov	sl, r3
 800076a:	e78e      	b.n	800068a <__aeabi_dadd+0x1e2>
 800076c:	003c      	movs	r4, r7
 800076e:	2500      	movs	r5, #0
 8000770:	2200      	movs	r2, #0
 8000772:	e731      	b.n	80005d8 <__aeabi_dadd+0x130>
 8000774:	2307      	movs	r3, #7
 8000776:	402b      	ands	r3, r5
 8000778:	2b00      	cmp	r3, #0
 800077a:	d000      	beq.n	800077e <__aeabi_dadd+0x2d6>
 800077c:	e710      	b.n	80005a0 <__aeabi_dadd+0xf8>
 800077e:	e093      	b.n	80008a8 <__aeabi_dadd+0x400>
 8000780:	2a00      	cmp	r2, #0
 8000782:	d074      	beq.n	800086e <__aeabi_dadd+0x3c6>
 8000784:	464a      	mov	r2, r9
 8000786:	1bd2      	subs	r2, r2, r7
 8000788:	2f00      	cmp	r7, #0
 800078a:	d100      	bne.n	800078e <__aeabi_dadd+0x2e6>
 800078c:	e0c7      	b.n	800091e <__aeabi_dadd+0x476>
 800078e:	4928      	ldr	r1, [pc, #160]	@ (8000830 <__aeabi_dadd+0x388>)
 8000790:	4589      	cmp	r9, r1
 8000792:	d100      	bne.n	8000796 <__aeabi_dadd+0x2ee>
 8000794:	e185      	b.n	8000aa2 <__aeabi_dadd+0x5fa>
 8000796:	2501      	movs	r5, #1
 8000798:	2a38      	cmp	r2, #56	@ 0x38
 800079a:	dc12      	bgt.n	80007c2 <__aeabi_dadd+0x31a>
 800079c:	2180      	movs	r1, #128	@ 0x80
 800079e:	0409      	lsls	r1, r1, #16
 80007a0:	430c      	orrs	r4, r1
 80007a2:	2a1f      	cmp	r2, #31
 80007a4:	dd00      	ble.n	80007a8 <__aeabi_dadd+0x300>
 80007a6:	e1ab      	b.n	8000b00 <__aeabi_dadd+0x658>
 80007a8:	2120      	movs	r1, #32
 80007aa:	0025      	movs	r5, r4
 80007ac:	1a89      	subs	r1, r1, r2
 80007ae:	0007      	movs	r7, r0
 80007b0:	4088      	lsls	r0, r1
 80007b2:	408d      	lsls	r5, r1
 80007b4:	40d7      	lsrs	r7, r2
 80007b6:	1e41      	subs	r1, r0, #1
 80007b8:	4188      	sbcs	r0, r1
 80007ba:	40d4      	lsrs	r4, r2
 80007bc:	433d      	orrs	r5, r7
 80007be:	4305      	orrs	r5, r0
 80007c0:	44a2      	add	sl, r4
 80007c2:	4465      	add	r5, ip
 80007c4:	4565      	cmp	r5, ip
 80007c6:	4192      	sbcs	r2, r2
 80007c8:	4252      	negs	r2, r2
 80007ca:	4452      	add	r2, sl
 80007cc:	0014      	movs	r4, r2
 80007ce:	464f      	mov	r7, r9
 80007d0:	e774      	b.n	80006bc <__aeabi_dadd+0x214>
 80007d2:	0028      	movs	r0, r5
 80007d4:	f001 fdf0 	bl	80023b8 <__clzsi2>
 80007d8:	0003      	movs	r3, r0
 80007da:	3318      	adds	r3, #24
 80007dc:	2b1f      	cmp	r3, #31
 80007de:	dc00      	bgt.n	80007e2 <__aeabi_dadd+0x33a>
 80007e0:	e6c2      	b.n	8000568 <__aeabi_dadd+0xc0>
 80007e2:	002a      	movs	r2, r5
 80007e4:	3808      	subs	r0, #8
 80007e6:	4082      	lsls	r2, r0
 80007e8:	429f      	cmp	r7, r3
 80007ea:	dd00      	ble.n	80007ee <__aeabi_dadd+0x346>
 80007ec:	e0a9      	b.n	8000942 <__aeabi_dadd+0x49a>
 80007ee:	1bdb      	subs	r3, r3, r7
 80007f0:	1c58      	adds	r0, r3, #1
 80007f2:	281f      	cmp	r0, #31
 80007f4:	dc00      	bgt.n	80007f8 <__aeabi_dadd+0x350>
 80007f6:	e1ac      	b.n	8000b52 <__aeabi_dadd+0x6aa>
 80007f8:	0015      	movs	r5, r2
 80007fa:	3b1f      	subs	r3, #31
 80007fc:	40dd      	lsrs	r5, r3
 80007fe:	2820      	cmp	r0, #32
 8000800:	d005      	beq.n	800080e <__aeabi_dadd+0x366>
 8000802:	2340      	movs	r3, #64	@ 0x40
 8000804:	1a1b      	subs	r3, r3, r0
 8000806:	409a      	lsls	r2, r3
 8000808:	1e53      	subs	r3, r2, #1
 800080a:	419a      	sbcs	r2, r3
 800080c:	4315      	orrs	r5, r2
 800080e:	2307      	movs	r3, #7
 8000810:	2700      	movs	r7, #0
 8000812:	402b      	ands	r3, r5
 8000814:	e7b0      	b.n	8000778 <__aeabi_dadd+0x2d0>
 8000816:	08ed      	lsrs	r5, r5, #3
 8000818:	4b05      	ldr	r3, [pc, #20]	@ (8000830 <__aeabi_dadd+0x388>)
 800081a:	0762      	lsls	r2, r4, #29
 800081c:	432a      	orrs	r2, r5
 800081e:	08e4      	lsrs	r4, r4, #3
 8000820:	429f      	cmp	r7, r3
 8000822:	d00f      	beq.n	8000844 <__aeabi_dadd+0x39c>
 8000824:	0324      	lsls	r4, r4, #12
 8000826:	0b25      	lsrs	r5, r4, #12
 8000828:	057c      	lsls	r4, r7, #21
 800082a:	0d64      	lsrs	r4, r4, #21
 800082c:	e6d4      	b.n	80005d8 <__aeabi_dadd+0x130>
 800082e:	46c0      	nop			@ (mov r8, r8)
 8000830:	000007ff 	.word	0x000007ff
 8000834:	ff7fffff 	.word	0xff7fffff
 8000838:	000007fe 	.word	0x000007fe
 800083c:	08c0      	lsrs	r0, r0, #3
 800083e:	0762      	lsls	r2, r4, #29
 8000840:	4302      	orrs	r2, r0
 8000842:	08e4      	lsrs	r4, r4, #3
 8000844:	0013      	movs	r3, r2
 8000846:	4323      	orrs	r3, r4
 8000848:	d100      	bne.n	800084c <__aeabi_dadd+0x3a4>
 800084a:	e186      	b.n	8000b5a <__aeabi_dadd+0x6b2>
 800084c:	2580      	movs	r5, #128	@ 0x80
 800084e:	032d      	lsls	r5, r5, #12
 8000850:	4325      	orrs	r5, r4
 8000852:	032d      	lsls	r5, r5, #12
 8000854:	4cc3      	ldr	r4, [pc, #780]	@ (8000b64 <__aeabi_dadd+0x6bc>)
 8000856:	0b2d      	lsrs	r5, r5, #12
 8000858:	e6be      	b.n	80005d8 <__aeabi_dadd+0x130>
 800085a:	4660      	mov	r0, ip
 800085c:	4654      	mov	r4, sl
 800085e:	000e      	movs	r6, r1
 8000860:	0017      	movs	r7, r2
 8000862:	08c5      	lsrs	r5, r0, #3
 8000864:	e7d8      	b.n	8000818 <__aeabi_dadd+0x370>
 8000866:	4cc0      	ldr	r4, [pc, #768]	@ (8000b68 <__aeabi_dadd+0x6c0>)
 8000868:	1aff      	subs	r7, r7, r3
 800086a:	4014      	ands	r4, r2
 800086c:	e696      	b.n	800059c <__aeabi_dadd+0xf4>
 800086e:	4abf      	ldr	r2, [pc, #764]	@ (8000b6c <__aeabi_dadd+0x6c4>)
 8000870:	1c79      	adds	r1, r7, #1
 8000872:	4211      	tst	r1, r2
 8000874:	d16b      	bne.n	800094e <__aeabi_dadd+0x4a6>
 8000876:	0022      	movs	r2, r4
 8000878:	4302      	orrs	r2, r0
 800087a:	2f00      	cmp	r7, #0
 800087c:	d000      	beq.n	8000880 <__aeabi_dadd+0x3d8>
 800087e:	e0db      	b.n	8000a38 <__aeabi_dadd+0x590>
 8000880:	2a00      	cmp	r2, #0
 8000882:	d100      	bne.n	8000886 <__aeabi_dadd+0x3de>
 8000884:	e12d      	b.n	8000ae2 <__aeabi_dadd+0x63a>
 8000886:	4662      	mov	r2, ip
 8000888:	4653      	mov	r3, sl
 800088a:	431a      	orrs	r2, r3
 800088c:	d100      	bne.n	8000890 <__aeabi_dadd+0x3e8>
 800088e:	e0b6      	b.n	80009fe <__aeabi_dadd+0x556>
 8000890:	4663      	mov	r3, ip
 8000892:	18c5      	adds	r5, r0, r3
 8000894:	4285      	cmp	r5, r0
 8000896:	4180      	sbcs	r0, r0
 8000898:	4454      	add	r4, sl
 800089a:	4240      	negs	r0, r0
 800089c:	1824      	adds	r4, r4, r0
 800089e:	0223      	lsls	r3, r4, #8
 80008a0:	d502      	bpl.n	80008a8 <__aeabi_dadd+0x400>
 80008a2:	000f      	movs	r7, r1
 80008a4:	4bb0      	ldr	r3, [pc, #704]	@ (8000b68 <__aeabi_dadd+0x6c0>)
 80008a6:	401c      	ands	r4, r3
 80008a8:	003a      	movs	r2, r7
 80008aa:	0028      	movs	r0, r5
 80008ac:	e7d8      	b.n	8000860 <__aeabi_dadd+0x3b8>
 80008ae:	4662      	mov	r2, ip
 80008b0:	1a85      	subs	r5, r0, r2
 80008b2:	42a8      	cmp	r0, r5
 80008b4:	4192      	sbcs	r2, r2
 80008b6:	4653      	mov	r3, sl
 80008b8:	4252      	negs	r2, r2
 80008ba:	4691      	mov	r9, r2
 80008bc:	1ae3      	subs	r3, r4, r3
 80008be:	001a      	movs	r2, r3
 80008c0:	464b      	mov	r3, r9
 80008c2:	1ad2      	subs	r2, r2, r3
 80008c4:	0013      	movs	r3, r2
 80008c6:	4691      	mov	r9, r2
 80008c8:	021a      	lsls	r2, r3, #8
 80008ca:	d454      	bmi.n	8000976 <__aeabi_dadd+0x4ce>
 80008cc:	464a      	mov	r2, r9
 80008ce:	464c      	mov	r4, r9
 80008d0:	432a      	orrs	r2, r5
 80008d2:	d000      	beq.n	80008d6 <__aeabi_dadd+0x42e>
 80008d4:	e640      	b.n	8000558 <__aeabi_dadd+0xb0>
 80008d6:	2600      	movs	r6, #0
 80008d8:	2400      	movs	r4, #0
 80008da:	2500      	movs	r5, #0
 80008dc:	e67c      	b.n	80005d8 <__aeabi_dadd+0x130>
 80008de:	4da1      	ldr	r5, [pc, #644]	@ (8000b64 <__aeabi_dadd+0x6bc>)
 80008e0:	45a9      	cmp	r9, r5
 80008e2:	d100      	bne.n	80008e6 <__aeabi_dadd+0x43e>
 80008e4:	e090      	b.n	8000a08 <__aeabi_dadd+0x560>
 80008e6:	2501      	movs	r5, #1
 80008e8:	2a38      	cmp	r2, #56	@ 0x38
 80008ea:	dd00      	ble.n	80008ee <__aeabi_dadd+0x446>
 80008ec:	e6ab      	b.n	8000646 <__aeabi_dadd+0x19e>
 80008ee:	2580      	movs	r5, #128	@ 0x80
 80008f0:	042d      	lsls	r5, r5, #16
 80008f2:	432c      	orrs	r4, r5
 80008f4:	e695      	b.n	8000622 <__aeabi_dadd+0x17a>
 80008f6:	0011      	movs	r1, r2
 80008f8:	4655      	mov	r5, sl
 80008fa:	3920      	subs	r1, #32
 80008fc:	40cd      	lsrs	r5, r1
 80008fe:	46a9      	mov	r9, r5
 8000900:	2a20      	cmp	r2, #32
 8000902:	d006      	beq.n	8000912 <__aeabi_dadd+0x46a>
 8000904:	2140      	movs	r1, #64	@ 0x40
 8000906:	4653      	mov	r3, sl
 8000908:	1a8a      	subs	r2, r1, r2
 800090a:	4093      	lsls	r3, r2
 800090c:	4662      	mov	r2, ip
 800090e:	431a      	orrs	r2, r3
 8000910:	4694      	mov	ip, r2
 8000912:	4665      	mov	r5, ip
 8000914:	1e6b      	subs	r3, r5, #1
 8000916:	419d      	sbcs	r5, r3
 8000918:	464b      	mov	r3, r9
 800091a:	431d      	orrs	r5, r3
 800091c:	e612      	b.n	8000544 <__aeabi_dadd+0x9c>
 800091e:	0021      	movs	r1, r4
 8000920:	4301      	orrs	r1, r0
 8000922:	d100      	bne.n	8000926 <__aeabi_dadd+0x47e>
 8000924:	e0c4      	b.n	8000ab0 <__aeabi_dadd+0x608>
 8000926:	1e51      	subs	r1, r2, #1
 8000928:	2a01      	cmp	r2, #1
 800092a:	d100      	bne.n	800092e <__aeabi_dadd+0x486>
 800092c:	e0fb      	b.n	8000b26 <__aeabi_dadd+0x67e>
 800092e:	4d8d      	ldr	r5, [pc, #564]	@ (8000b64 <__aeabi_dadd+0x6bc>)
 8000930:	42aa      	cmp	r2, r5
 8000932:	d100      	bne.n	8000936 <__aeabi_dadd+0x48e>
 8000934:	e0b5      	b.n	8000aa2 <__aeabi_dadd+0x5fa>
 8000936:	2501      	movs	r5, #1
 8000938:	2938      	cmp	r1, #56	@ 0x38
 800093a:	dd00      	ble.n	800093e <__aeabi_dadd+0x496>
 800093c:	e741      	b.n	80007c2 <__aeabi_dadd+0x31a>
 800093e:	000a      	movs	r2, r1
 8000940:	e72f      	b.n	80007a2 <__aeabi_dadd+0x2fa>
 8000942:	4c89      	ldr	r4, [pc, #548]	@ (8000b68 <__aeabi_dadd+0x6c0>)
 8000944:	1aff      	subs	r7, r7, r3
 8000946:	4014      	ands	r4, r2
 8000948:	0762      	lsls	r2, r4, #29
 800094a:	08e4      	lsrs	r4, r4, #3
 800094c:	e76a      	b.n	8000824 <__aeabi_dadd+0x37c>
 800094e:	4a85      	ldr	r2, [pc, #532]	@ (8000b64 <__aeabi_dadd+0x6bc>)
 8000950:	4291      	cmp	r1, r2
 8000952:	d100      	bne.n	8000956 <__aeabi_dadd+0x4ae>
 8000954:	e0e3      	b.n	8000b1e <__aeabi_dadd+0x676>
 8000956:	4663      	mov	r3, ip
 8000958:	18c2      	adds	r2, r0, r3
 800095a:	4282      	cmp	r2, r0
 800095c:	4180      	sbcs	r0, r0
 800095e:	0023      	movs	r3, r4
 8000960:	4240      	negs	r0, r0
 8000962:	4453      	add	r3, sl
 8000964:	181b      	adds	r3, r3, r0
 8000966:	07dd      	lsls	r5, r3, #31
 8000968:	085c      	lsrs	r4, r3, #1
 800096a:	2307      	movs	r3, #7
 800096c:	0852      	lsrs	r2, r2, #1
 800096e:	4315      	orrs	r5, r2
 8000970:	000f      	movs	r7, r1
 8000972:	402b      	ands	r3, r5
 8000974:	e700      	b.n	8000778 <__aeabi_dadd+0x2d0>
 8000976:	4663      	mov	r3, ip
 8000978:	1a1d      	subs	r5, r3, r0
 800097a:	45ac      	cmp	ip, r5
 800097c:	4192      	sbcs	r2, r2
 800097e:	4653      	mov	r3, sl
 8000980:	4252      	negs	r2, r2
 8000982:	1b1c      	subs	r4, r3, r4
 8000984:	000e      	movs	r6, r1
 8000986:	4688      	mov	r8, r1
 8000988:	1aa4      	subs	r4, r4, r2
 800098a:	e5e5      	b.n	8000558 <__aeabi_dadd+0xb0>
 800098c:	2d00      	cmp	r5, #0
 800098e:	d000      	beq.n	8000992 <__aeabi_dadd+0x4ea>
 8000990:	e091      	b.n	8000ab6 <__aeabi_dadd+0x60e>
 8000992:	2a00      	cmp	r2, #0
 8000994:	d138      	bne.n	8000a08 <__aeabi_dadd+0x560>
 8000996:	2480      	movs	r4, #128	@ 0x80
 8000998:	2600      	movs	r6, #0
 800099a:	0324      	lsls	r4, r4, #12
 800099c:	e756      	b.n	800084c <__aeabi_dadd+0x3a4>
 800099e:	4663      	mov	r3, ip
 80009a0:	18c5      	adds	r5, r0, r3
 80009a2:	4285      	cmp	r5, r0
 80009a4:	4180      	sbcs	r0, r0
 80009a6:	4454      	add	r4, sl
 80009a8:	4240      	negs	r0, r0
 80009aa:	1824      	adds	r4, r4, r0
 80009ac:	2701      	movs	r7, #1
 80009ae:	0223      	lsls	r3, r4, #8
 80009b0:	d400      	bmi.n	80009b4 <__aeabi_dadd+0x50c>
 80009b2:	e6df      	b.n	8000774 <__aeabi_dadd+0x2cc>
 80009b4:	2702      	movs	r7, #2
 80009b6:	e687      	b.n	80006c8 <__aeabi_dadd+0x220>
 80009b8:	4663      	mov	r3, ip
 80009ba:	1ac5      	subs	r5, r0, r3
 80009bc:	42a8      	cmp	r0, r5
 80009be:	4180      	sbcs	r0, r0
 80009c0:	4653      	mov	r3, sl
 80009c2:	4240      	negs	r0, r0
 80009c4:	1ae4      	subs	r4, r4, r3
 80009c6:	2701      	movs	r7, #1
 80009c8:	1a24      	subs	r4, r4, r0
 80009ca:	e5c0      	b.n	800054e <__aeabi_dadd+0xa6>
 80009cc:	0762      	lsls	r2, r4, #29
 80009ce:	08c0      	lsrs	r0, r0, #3
 80009d0:	4302      	orrs	r2, r0
 80009d2:	08e4      	lsrs	r4, r4, #3
 80009d4:	e736      	b.n	8000844 <__aeabi_dadd+0x39c>
 80009d6:	0011      	movs	r1, r2
 80009d8:	4653      	mov	r3, sl
 80009da:	3920      	subs	r1, #32
 80009dc:	40cb      	lsrs	r3, r1
 80009de:	4699      	mov	r9, r3
 80009e0:	2a20      	cmp	r2, #32
 80009e2:	d006      	beq.n	80009f2 <__aeabi_dadd+0x54a>
 80009e4:	2140      	movs	r1, #64	@ 0x40
 80009e6:	4653      	mov	r3, sl
 80009e8:	1a8a      	subs	r2, r1, r2
 80009ea:	4093      	lsls	r3, r2
 80009ec:	4662      	mov	r2, ip
 80009ee:	431a      	orrs	r2, r3
 80009f0:	4694      	mov	ip, r2
 80009f2:	4665      	mov	r5, ip
 80009f4:	1e6b      	subs	r3, r5, #1
 80009f6:	419d      	sbcs	r5, r3
 80009f8:	464b      	mov	r3, r9
 80009fa:	431d      	orrs	r5, r3
 80009fc:	e659      	b.n	80006b2 <__aeabi_dadd+0x20a>
 80009fe:	0762      	lsls	r2, r4, #29
 8000a00:	08c0      	lsrs	r0, r0, #3
 8000a02:	4302      	orrs	r2, r0
 8000a04:	08e4      	lsrs	r4, r4, #3
 8000a06:	e70d      	b.n	8000824 <__aeabi_dadd+0x37c>
 8000a08:	4653      	mov	r3, sl
 8000a0a:	075a      	lsls	r2, r3, #29
 8000a0c:	4663      	mov	r3, ip
 8000a0e:	08d8      	lsrs	r0, r3, #3
 8000a10:	4653      	mov	r3, sl
 8000a12:	000e      	movs	r6, r1
 8000a14:	4302      	orrs	r2, r0
 8000a16:	08dc      	lsrs	r4, r3, #3
 8000a18:	e714      	b.n	8000844 <__aeabi_dadd+0x39c>
 8000a1a:	0015      	movs	r5, r2
 8000a1c:	0026      	movs	r6, r4
 8000a1e:	3d20      	subs	r5, #32
 8000a20:	40ee      	lsrs	r6, r5
 8000a22:	2a20      	cmp	r2, #32
 8000a24:	d003      	beq.n	8000a2e <__aeabi_dadd+0x586>
 8000a26:	2540      	movs	r5, #64	@ 0x40
 8000a28:	1aaa      	subs	r2, r5, r2
 8000a2a:	4094      	lsls	r4, r2
 8000a2c:	4320      	orrs	r0, r4
 8000a2e:	1e42      	subs	r2, r0, #1
 8000a30:	4190      	sbcs	r0, r2
 8000a32:	0005      	movs	r5, r0
 8000a34:	4335      	orrs	r5, r6
 8000a36:	e606      	b.n	8000646 <__aeabi_dadd+0x19e>
 8000a38:	2a00      	cmp	r2, #0
 8000a3a:	d07c      	beq.n	8000b36 <__aeabi_dadd+0x68e>
 8000a3c:	4662      	mov	r2, ip
 8000a3e:	4653      	mov	r3, sl
 8000a40:	08c0      	lsrs	r0, r0, #3
 8000a42:	431a      	orrs	r2, r3
 8000a44:	d100      	bne.n	8000a48 <__aeabi_dadd+0x5a0>
 8000a46:	e6fa      	b.n	800083e <__aeabi_dadd+0x396>
 8000a48:	0762      	lsls	r2, r4, #29
 8000a4a:	4310      	orrs	r0, r2
 8000a4c:	2280      	movs	r2, #128	@ 0x80
 8000a4e:	08e4      	lsrs	r4, r4, #3
 8000a50:	0312      	lsls	r2, r2, #12
 8000a52:	4214      	tst	r4, r2
 8000a54:	d008      	beq.n	8000a68 <__aeabi_dadd+0x5c0>
 8000a56:	08d9      	lsrs	r1, r3, #3
 8000a58:	4211      	tst	r1, r2
 8000a5a:	d105      	bne.n	8000a68 <__aeabi_dadd+0x5c0>
 8000a5c:	4663      	mov	r3, ip
 8000a5e:	08d8      	lsrs	r0, r3, #3
 8000a60:	4653      	mov	r3, sl
 8000a62:	000c      	movs	r4, r1
 8000a64:	075b      	lsls	r3, r3, #29
 8000a66:	4318      	orrs	r0, r3
 8000a68:	0f42      	lsrs	r2, r0, #29
 8000a6a:	00c0      	lsls	r0, r0, #3
 8000a6c:	08c0      	lsrs	r0, r0, #3
 8000a6e:	0752      	lsls	r2, r2, #29
 8000a70:	4302      	orrs	r2, r0
 8000a72:	e6e7      	b.n	8000844 <__aeabi_dadd+0x39c>
 8000a74:	2a00      	cmp	r2, #0
 8000a76:	d100      	bne.n	8000a7a <__aeabi_dadd+0x5d2>
 8000a78:	e72d      	b.n	80008d6 <__aeabi_dadd+0x42e>
 8000a7a:	4663      	mov	r3, ip
 8000a7c:	08d8      	lsrs	r0, r3, #3
 8000a7e:	4653      	mov	r3, sl
 8000a80:	075a      	lsls	r2, r3, #29
 8000a82:	000e      	movs	r6, r1
 8000a84:	4302      	orrs	r2, r0
 8000a86:	08dc      	lsrs	r4, r3, #3
 8000a88:	e6cc      	b.n	8000824 <__aeabi_dadd+0x37c>
 8000a8a:	4663      	mov	r3, ip
 8000a8c:	1a1d      	subs	r5, r3, r0
 8000a8e:	45ac      	cmp	ip, r5
 8000a90:	4192      	sbcs	r2, r2
 8000a92:	4653      	mov	r3, sl
 8000a94:	4252      	negs	r2, r2
 8000a96:	1b1c      	subs	r4, r3, r4
 8000a98:	000e      	movs	r6, r1
 8000a9a:	4688      	mov	r8, r1
 8000a9c:	1aa4      	subs	r4, r4, r2
 8000a9e:	3701      	adds	r7, #1
 8000aa0:	e555      	b.n	800054e <__aeabi_dadd+0xa6>
 8000aa2:	4663      	mov	r3, ip
 8000aa4:	08d9      	lsrs	r1, r3, #3
 8000aa6:	4653      	mov	r3, sl
 8000aa8:	075a      	lsls	r2, r3, #29
 8000aaa:	430a      	orrs	r2, r1
 8000aac:	08dc      	lsrs	r4, r3, #3
 8000aae:	e6c9      	b.n	8000844 <__aeabi_dadd+0x39c>
 8000ab0:	4660      	mov	r0, ip
 8000ab2:	4654      	mov	r4, sl
 8000ab4:	e6d4      	b.n	8000860 <__aeabi_dadd+0x3b8>
 8000ab6:	08c0      	lsrs	r0, r0, #3
 8000ab8:	2a00      	cmp	r2, #0
 8000aba:	d100      	bne.n	8000abe <__aeabi_dadd+0x616>
 8000abc:	e6bf      	b.n	800083e <__aeabi_dadd+0x396>
 8000abe:	0762      	lsls	r2, r4, #29
 8000ac0:	4310      	orrs	r0, r2
 8000ac2:	2280      	movs	r2, #128	@ 0x80
 8000ac4:	08e4      	lsrs	r4, r4, #3
 8000ac6:	0312      	lsls	r2, r2, #12
 8000ac8:	4214      	tst	r4, r2
 8000aca:	d0cd      	beq.n	8000a68 <__aeabi_dadd+0x5c0>
 8000acc:	08dd      	lsrs	r5, r3, #3
 8000ace:	4215      	tst	r5, r2
 8000ad0:	d1ca      	bne.n	8000a68 <__aeabi_dadd+0x5c0>
 8000ad2:	4663      	mov	r3, ip
 8000ad4:	08d8      	lsrs	r0, r3, #3
 8000ad6:	4653      	mov	r3, sl
 8000ad8:	075b      	lsls	r3, r3, #29
 8000ada:	000e      	movs	r6, r1
 8000adc:	002c      	movs	r4, r5
 8000ade:	4318      	orrs	r0, r3
 8000ae0:	e7c2      	b.n	8000a68 <__aeabi_dadd+0x5c0>
 8000ae2:	4663      	mov	r3, ip
 8000ae4:	08d9      	lsrs	r1, r3, #3
 8000ae6:	4653      	mov	r3, sl
 8000ae8:	075a      	lsls	r2, r3, #29
 8000aea:	430a      	orrs	r2, r1
 8000aec:	08dc      	lsrs	r4, r3, #3
 8000aee:	e699      	b.n	8000824 <__aeabi_dadd+0x37c>
 8000af0:	4663      	mov	r3, ip
 8000af2:	08d8      	lsrs	r0, r3, #3
 8000af4:	4653      	mov	r3, sl
 8000af6:	075a      	lsls	r2, r3, #29
 8000af8:	000e      	movs	r6, r1
 8000afa:	4302      	orrs	r2, r0
 8000afc:	08dc      	lsrs	r4, r3, #3
 8000afe:	e6a1      	b.n	8000844 <__aeabi_dadd+0x39c>
 8000b00:	0011      	movs	r1, r2
 8000b02:	0027      	movs	r7, r4
 8000b04:	3920      	subs	r1, #32
 8000b06:	40cf      	lsrs	r7, r1
 8000b08:	2a20      	cmp	r2, #32
 8000b0a:	d003      	beq.n	8000b14 <__aeabi_dadd+0x66c>
 8000b0c:	2140      	movs	r1, #64	@ 0x40
 8000b0e:	1a8a      	subs	r2, r1, r2
 8000b10:	4094      	lsls	r4, r2
 8000b12:	4320      	orrs	r0, r4
 8000b14:	1e42      	subs	r2, r0, #1
 8000b16:	4190      	sbcs	r0, r2
 8000b18:	0005      	movs	r5, r0
 8000b1a:	433d      	orrs	r5, r7
 8000b1c:	e651      	b.n	80007c2 <__aeabi_dadd+0x31a>
 8000b1e:	000c      	movs	r4, r1
 8000b20:	2500      	movs	r5, #0
 8000b22:	2200      	movs	r2, #0
 8000b24:	e558      	b.n	80005d8 <__aeabi_dadd+0x130>
 8000b26:	4460      	add	r0, ip
 8000b28:	4560      	cmp	r0, ip
 8000b2a:	4192      	sbcs	r2, r2
 8000b2c:	4454      	add	r4, sl
 8000b2e:	4252      	negs	r2, r2
 8000b30:	0005      	movs	r5, r0
 8000b32:	18a4      	adds	r4, r4, r2
 8000b34:	e73a      	b.n	80009ac <__aeabi_dadd+0x504>
 8000b36:	4653      	mov	r3, sl
 8000b38:	075a      	lsls	r2, r3, #29
 8000b3a:	4663      	mov	r3, ip
 8000b3c:	08d9      	lsrs	r1, r3, #3
 8000b3e:	4653      	mov	r3, sl
 8000b40:	430a      	orrs	r2, r1
 8000b42:	08dc      	lsrs	r4, r3, #3
 8000b44:	e67e      	b.n	8000844 <__aeabi_dadd+0x39c>
 8000b46:	001a      	movs	r2, r3
 8000b48:	001c      	movs	r4, r3
 8000b4a:	432a      	orrs	r2, r5
 8000b4c:	d000      	beq.n	8000b50 <__aeabi_dadd+0x6a8>
 8000b4e:	e6ab      	b.n	80008a8 <__aeabi_dadd+0x400>
 8000b50:	e6c1      	b.n	80008d6 <__aeabi_dadd+0x42e>
 8000b52:	2120      	movs	r1, #32
 8000b54:	2500      	movs	r5, #0
 8000b56:	1a09      	subs	r1, r1, r0
 8000b58:	e519      	b.n	800058e <__aeabi_dadd+0xe6>
 8000b5a:	2200      	movs	r2, #0
 8000b5c:	2500      	movs	r5, #0
 8000b5e:	4c01      	ldr	r4, [pc, #4]	@ (8000b64 <__aeabi_dadd+0x6bc>)
 8000b60:	e53a      	b.n	80005d8 <__aeabi_dadd+0x130>
 8000b62:	46c0      	nop			@ (mov r8, r8)
 8000b64:	000007ff 	.word	0x000007ff
 8000b68:	ff7fffff 	.word	0xff7fffff
 8000b6c:	000007fe 	.word	0x000007fe

08000b70 <__aeabi_ddiv>:
 8000b70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000b72:	46de      	mov	lr, fp
 8000b74:	4645      	mov	r5, r8
 8000b76:	4657      	mov	r7, sl
 8000b78:	464e      	mov	r6, r9
 8000b7a:	b5e0      	push	{r5, r6, r7, lr}
 8000b7c:	b087      	sub	sp, #28
 8000b7e:	9200      	str	r2, [sp, #0]
 8000b80:	9301      	str	r3, [sp, #4]
 8000b82:	030b      	lsls	r3, r1, #12
 8000b84:	0b1b      	lsrs	r3, r3, #12
 8000b86:	469b      	mov	fp, r3
 8000b88:	0fca      	lsrs	r2, r1, #31
 8000b8a:	004b      	lsls	r3, r1, #1
 8000b8c:	0004      	movs	r4, r0
 8000b8e:	4680      	mov	r8, r0
 8000b90:	0d5b      	lsrs	r3, r3, #21
 8000b92:	9202      	str	r2, [sp, #8]
 8000b94:	d100      	bne.n	8000b98 <__aeabi_ddiv+0x28>
 8000b96:	e16a      	b.n	8000e6e <__aeabi_ddiv+0x2fe>
 8000b98:	4ad4      	ldr	r2, [pc, #848]	@ (8000eec <__aeabi_ddiv+0x37c>)
 8000b9a:	4293      	cmp	r3, r2
 8000b9c:	d100      	bne.n	8000ba0 <__aeabi_ddiv+0x30>
 8000b9e:	e18c      	b.n	8000eba <__aeabi_ddiv+0x34a>
 8000ba0:	4659      	mov	r1, fp
 8000ba2:	0f42      	lsrs	r2, r0, #29
 8000ba4:	00c9      	lsls	r1, r1, #3
 8000ba6:	430a      	orrs	r2, r1
 8000ba8:	2180      	movs	r1, #128	@ 0x80
 8000baa:	0409      	lsls	r1, r1, #16
 8000bac:	4311      	orrs	r1, r2
 8000bae:	00c2      	lsls	r2, r0, #3
 8000bb0:	4690      	mov	r8, r2
 8000bb2:	4acf      	ldr	r2, [pc, #828]	@ (8000ef0 <__aeabi_ddiv+0x380>)
 8000bb4:	4689      	mov	r9, r1
 8000bb6:	4692      	mov	sl, r2
 8000bb8:	449a      	add	sl, r3
 8000bba:	2300      	movs	r3, #0
 8000bbc:	2400      	movs	r4, #0
 8000bbe:	9303      	str	r3, [sp, #12]
 8000bc0:	9e00      	ldr	r6, [sp, #0]
 8000bc2:	9f01      	ldr	r7, [sp, #4]
 8000bc4:	033b      	lsls	r3, r7, #12
 8000bc6:	0b1b      	lsrs	r3, r3, #12
 8000bc8:	469b      	mov	fp, r3
 8000bca:	007b      	lsls	r3, r7, #1
 8000bcc:	0030      	movs	r0, r6
 8000bce:	0d5b      	lsrs	r3, r3, #21
 8000bd0:	0ffd      	lsrs	r5, r7, #31
 8000bd2:	2b00      	cmp	r3, #0
 8000bd4:	d100      	bne.n	8000bd8 <__aeabi_ddiv+0x68>
 8000bd6:	e128      	b.n	8000e2a <__aeabi_ddiv+0x2ba>
 8000bd8:	4ac4      	ldr	r2, [pc, #784]	@ (8000eec <__aeabi_ddiv+0x37c>)
 8000bda:	4293      	cmp	r3, r2
 8000bdc:	d100      	bne.n	8000be0 <__aeabi_ddiv+0x70>
 8000bde:	e177      	b.n	8000ed0 <__aeabi_ddiv+0x360>
 8000be0:	4659      	mov	r1, fp
 8000be2:	0f72      	lsrs	r2, r6, #29
 8000be4:	00c9      	lsls	r1, r1, #3
 8000be6:	430a      	orrs	r2, r1
 8000be8:	2180      	movs	r1, #128	@ 0x80
 8000bea:	0409      	lsls	r1, r1, #16
 8000bec:	4311      	orrs	r1, r2
 8000bee:	468b      	mov	fp, r1
 8000bf0:	49bf      	ldr	r1, [pc, #764]	@ (8000ef0 <__aeabi_ddiv+0x380>)
 8000bf2:	00f2      	lsls	r2, r6, #3
 8000bf4:	468c      	mov	ip, r1
 8000bf6:	4651      	mov	r1, sl
 8000bf8:	4463      	add	r3, ip
 8000bfa:	1acb      	subs	r3, r1, r3
 8000bfc:	469a      	mov	sl, r3
 8000bfe:	2300      	movs	r3, #0
 8000c00:	9e02      	ldr	r6, [sp, #8]
 8000c02:	406e      	eors	r6, r5
 8000c04:	2c0f      	cmp	r4, #15
 8000c06:	d827      	bhi.n	8000c58 <__aeabi_ddiv+0xe8>
 8000c08:	49ba      	ldr	r1, [pc, #744]	@ (8000ef4 <__aeabi_ddiv+0x384>)
 8000c0a:	00a4      	lsls	r4, r4, #2
 8000c0c:	5909      	ldr	r1, [r1, r4]
 8000c0e:	468f      	mov	pc, r1
 8000c10:	46cb      	mov	fp, r9
 8000c12:	4642      	mov	r2, r8
 8000c14:	9e02      	ldr	r6, [sp, #8]
 8000c16:	9b03      	ldr	r3, [sp, #12]
 8000c18:	2b02      	cmp	r3, #2
 8000c1a:	d016      	beq.n	8000c4a <__aeabi_ddiv+0xda>
 8000c1c:	2b03      	cmp	r3, #3
 8000c1e:	d100      	bne.n	8000c22 <__aeabi_ddiv+0xb2>
 8000c20:	e2a6      	b.n	8001170 <__aeabi_ddiv+0x600>
 8000c22:	2b01      	cmp	r3, #1
 8000c24:	d000      	beq.n	8000c28 <__aeabi_ddiv+0xb8>
 8000c26:	e0df      	b.n	8000de8 <__aeabi_ddiv+0x278>
 8000c28:	2200      	movs	r2, #0
 8000c2a:	2300      	movs	r3, #0
 8000c2c:	2400      	movs	r4, #0
 8000c2e:	4690      	mov	r8, r2
 8000c30:	051b      	lsls	r3, r3, #20
 8000c32:	4323      	orrs	r3, r4
 8000c34:	07f6      	lsls	r6, r6, #31
 8000c36:	4333      	orrs	r3, r6
 8000c38:	4640      	mov	r0, r8
 8000c3a:	0019      	movs	r1, r3
 8000c3c:	b007      	add	sp, #28
 8000c3e:	bcf0      	pop	{r4, r5, r6, r7}
 8000c40:	46bb      	mov	fp, r7
 8000c42:	46b2      	mov	sl, r6
 8000c44:	46a9      	mov	r9, r5
 8000c46:	46a0      	mov	r8, r4
 8000c48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000c4a:	2200      	movs	r2, #0
 8000c4c:	2400      	movs	r4, #0
 8000c4e:	4690      	mov	r8, r2
 8000c50:	4ba6      	ldr	r3, [pc, #664]	@ (8000eec <__aeabi_ddiv+0x37c>)
 8000c52:	e7ed      	b.n	8000c30 <__aeabi_ddiv+0xc0>
 8000c54:	002e      	movs	r6, r5
 8000c56:	e7df      	b.n	8000c18 <__aeabi_ddiv+0xa8>
 8000c58:	45cb      	cmp	fp, r9
 8000c5a:	d200      	bcs.n	8000c5e <__aeabi_ddiv+0xee>
 8000c5c:	e1d4      	b.n	8001008 <__aeabi_ddiv+0x498>
 8000c5e:	d100      	bne.n	8000c62 <__aeabi_ddiv+0xf2>
 8000c60:	e1cf      	b.n	8001002 <__aeabi_ddiv+0x492>
 8000c62:	2301      	movs	r3, #1
 8000c64:	425b      	negs	r3, r3
 8000c66:	469c      	mov	ip, r3
 8000c68:	4644      	mov	r4, r8
 8000c6a:	4648      	mov	r0, r9
 8000c6c:	2700      	movs	r7, #0
 8000c6e:	44e2      	add	sl, ip
 8000c70:	465b      	mov	r3, fp
 8000c72:	0e15      	lsrs	r5, r2, #24
 8000c74:	021b      	lsls	r3, r3, #8
 8000c76:	431d      	orrs	r5, r3
 8000c78:	0c19      	lsrs	r1, r3, #16
 8000c7a:	042b      	lsls	r3, r5, #16
 8000c7c:	0212      	lsls	r2, r2, #8
 8000c7e:	9500      	str	r5, [sp, #0]
 8000c80:	0c1d      	lsrs	r5, r3, #16
 8000c82:	4691      	mov	r9, r2
 8000c84:	9102      	str	r1, [sp, #8]
 8000c86:	9503      	str	r5, [sp, #12]
 8000c88:	f7ff fae0 	bl	800024c <__aeabi_uidivmod>
 8000c8c:	0002      	movs	r2, r0
 8000c8e:	436a      	muls	r2, r5
 8000c90:	040b      	lsls	r3, r1, #16
 8000c92:	0c21      	lsrs	r1, r4, #16
 8000c94:	4680      	mov	r8, r0
 8000c96:	4319      	orrs	r1, r3
 8000c98:	428a      	cmp	r2, r1
 8000c9a:	d909      	bls.n	8000cb0 <__aeabi_ddiv+0x140>
 8000c9c:	9d00      	ldr	r5, [sp, #0]
 8000c9e:	2301      	movs	r3, #1
 8000ca0:	46ac      	mov	ip, r5
 8000ca2:	425b      	negs	r3, r3
 8000ca4:	4461      	add	r1, ip
 8000ca6:	469c      	mov	ip, r3
 8000ca8:	44e0      	add	r8, ip
 8000caa:	428d      	cmp	r5, r1
 8000cac:	d800      	bhi.n	8000cb0 <__aeabi_ddiv+0x140>
 8000cae:	e1fb      	b.n	80010a8 <__aeabi_ddiv+0x538>
 8000cb0:	1a88      	subs	r0, r1, r2
 8000cb2:	9902      	ldr	r1, [sp, #8]
 8000cb4:	f7ff faca 	bl	800024c <__aeabi_uidivmod>
 8000cb8:	9a03      	ldr	r2, [sp, #12]
 8000cba:	0424      	lsls	r4, r4, #16
 8000cbc:	4342      	muls	r2, r0
 8000cbe:	0409      	lsls	r1, r1, #16
 8000cc0:	0c24      	lsrs	r4, r4, #16
 8000cc2:	0003      	movs	r3, r0
 8000cc4:	430c      	orrs	r4, r1
 8000cc6:	42a2      	cmp	r2, r4
 8000cc8:	d906      	bls.n	8000cd8 <__aeabi_ddiv+0x168>
 8000cca:	9900      	ldr	r1, [sp, #0]
 8000ccc:	3b01      	subs	r3, #1
 8000cce:	468c      	mov	ip, r1
 8000cd0:	4464      	add	r4, ip
 8000cd2:	42a1      	cmp	r1, r4
 8000cd4:	d800      	bhi.n	8000cd8 <__aeabi_ddiv+0x168>
 8000cd6:	e1e1      	b.n	800109c <__aeabi_ddiv+0x52c>
 8000cd8:	1aa0      	subs	r0, r4, r2
 8000cda:	4642      	mov	r2, r8
 8000cdc:	0412      	lsls	r2, r2, #16
 8000cde:	431a      	orrs	r2, r3
 8000ce0:	4693      	mov	fp, r2
 8000ce2:	464b      	mov	r3, r9
 8000ce4:	4659      	mov	r1, fp
 8000ce6:	0c1b      	lsrs	r3, r3, #16
 8000ce8:	001d      	movs	r5, r3
 8000cea:	9304      	str	r3, [sp, #16]
 8000cec:	040b      	lsls	r3, r1, #16
 8000cee:	4649      	mov	r1, r9
 8000cf0:	0409      	lsls	r1, r1, #16
 8000cf2:	0c09      	lsrs	r1, r1, #16
 8000cf4:	000c      	movs	r4, r1
 8000cf6:	0c1b      	lsrs	r3, r3, #16
 8000cf8:	435c      	muls	r4, r3
 8000cfa:	0c12      	lsrs	r2, r2, #16
 8000cfc:	436b      	muls	r3, r5
 8000cfe:	4688      	mov	r8, r1
 8000d00:	4351      	muls	r1, r2
 8000d02:	436a      	muls	r2, r5
 8000d04:	0c25      	lsrs	r5, r4, #16
 8000d06:	46ac      	mov	ip, r5
 8000d08:	185b      	adds	r3, r3, r1
 8000d0a:	4463      	add	r3, ip
 8000d0c:	4299      	cmp	r1, r3
 8000d0e:	d903      	bls.n	8000d18 <__aeabi_ddiv+0x1a8>
 8000d10:	2180      	movs	r1, #128	@ 0x80
 8000d12:	0249      	lsls	r1, r1, #9
 8000d14:	468c      	mov	ip, r1
 8000d16:	4462      	add	r2, ip
 8000d18:	0c19      	lsrs	r1, r3, #16
 8000d1a:	0424      	lsls	r4, r4, #16
 8000d1c:	041b      	lsls	r3, r3, #16
 8000d1e:	0c24      	lsrs	r4, r4, #16
 8000d20:	188a      	adds	r2, r1, r2
 8000d22:	191c      	adds	r4, r3, r4
 8000d24:	4290      	cmp	r0, r2
 8000d26:	d302      	bcc.n	8000d2e <__aeabi_ddiv+0x1be>
 8000d28:	d116      	bne.n	8000d58 <__aeabi_ddiv+0x1e8>
 8000d2a:	42a7      	cmp	r7, r4
 8000d2c:	d214      	bcs.n	8000d58 <__aeabi_ddiv+0x1e8>
 8000d2e:	465b      	mov	r3, fp
 8000d30:	9d00      	ldr	r5, [sp, #0]
 8000d32:	3b01      	subs	r3, #1
 8000d34:	444f      	add	r7, r9
 8000d36:	9305      	str	r3, [sp, #20]
 8000d38:	454f      	cmp	r7, r9
 8000d3a:	419b      	sbcs	r3, r3
 8000d3c:	46ac      	mov	ip, r5
 8000d3e:	425b      	negs	r3, r3
 8000d40:	4463      	add	r3, ip
 8000d42:	18c0      	adds	r0, r0, r3
 8000d44:	4285      	cmp	r5, r0
 8000d46:	d300      	bcc.n	8000d4a <__aeabi_ddiv+0x1da>
 8000d48:	e1a1      	b.n	800108e <__aeabi_ddiv+0x51e>
 8000d4a:	4282      	cmp	r2, r0
 8000d4c:	d900      	bls.n	8000d50 <__aeabi_ddiv+0x1e0>
 8000d4e:	e1f6      	b.n	800113e <__aeabi_ddiv+0x5ce>
 8000d50:	d100      	bne.n	8000d54 <__aeabi_ddiv+0x1e4>
 8000d52:	e1f1      	b.n	8001138 <__aeabi_ddiv+0x5c8>
 8000d54:	9b05      	ldr	r3, [sp, #20]
 8000d56:	469b      	mov	fp, r3
 8000d58:	1b3c      	subs	r4, r7, r4
 8000d5a:	42a7      	cmp	r7, r4
 8000d5c:	41bf      	sbcs	r7, r7
 8000d5e:	9d00      	ldr	r5, [sp, #0]
 8000d60:	1a80      	subs	r0, r0, r2
 8000d62:	427f      	negs	r7, r7
 8000d64:	1bc0      	subs	r0, r0, r7
 8000d66:	4285      	cmp	r5, r0
 8000d68:	d100      	bne.n	8000d6c <__aeabi_ddiv+0x1fc>
 8000d6a:	e1d0      	b.n	800110e <__aeabi_ddiv+0x59e>
 8000d6c:	9902      	ldr	r1, [sp, #8]
 8000d6e:	f7ff fa6d 	bl	800024c <__aeabi_uidivmod>
 8000d72:	9a03      	ldr	r2, [sp, #12]
 8000d74:	040b      	lsls	r3, r1, #16
 8000d76:	4342      	muls	r2, r0
 8000d78:	0c21      	lsrs	r1, r4, #16
 8000d7a:	0007      	movs	r7, r0
 8000d7c:	4319      	orrs	r1, r3
 8000d7e:	428a      	cmp	r2, r1
 8000d80:	d900      	bls.n	8000d84 <__aeabi_ddiv+0x214>
 8000d82:	e178      	b.n	8001076 <__aeabi_ddiv+0x506>
 8000d84:	1a88      	subs	r0, r1, r2
 8000d86:	9902      	ldr	r1, [sp, #8]
 8000d88:	f7ff fa60 	bl	800024c <__aeabi_uidivmod>
 8000d8c:	9a03      	ldr	r2, [sp, #12]
 8000d8e:	0424      	lsls	r4, r4, #16
 8000d90:	4342      	muls	r2, r0
 8000d92:	0409      	lsls	r1, r1, #16
 8000d94:	0c24      	lsrs	r4, r4, #16
 8000d96:	0003      	movs	r3, r0
 8000d98:	430c      	orrs	r4, r1
 8000d9a:	42a2      	cmp	r2, r4
 8000d9c:	d900      	bls.n	8000da0 <__aeabi_ddiv+0x230>
 8000d9e:	e15d      	b.n	800105c <__aeabi_ddiv+0x4ec>
 8000da0:	4641      	mov	r1, r8
 8000da2:	1aa4      	subs	r4, r4, r2
 8000da4:	043a      	lsls	r2, r7, #16
 8000da6:	431a      	orrs	r2, r3
 8000da8:	9d04      	ldr	r5, [sp, #16]
 8000daa:	0413      	lsls	r3, r2, #16
 8000dac:	0c1b      	lsrs	r3, r3, #16
 8000dae:	4359      	muls	r1, r3
 8000db0:	4647      	mov	r7, r8
 8000db2:	436b      	muls	r3, r5
 8000db4:	469c      	mov	ip, r3
 8000db6:	0c10      	lsrs	r0, r2, #16
 8000db8:	4347      	muls	r7, r0
 8000dba:	0c0b      	lsrs	r3, r1, #16
 8000dbc:	44bc      	add	ip, r7
 8000dbe:	4463      	add	r3, ip
 8000dc0:	4368      	muls	r0, r5
 8000dc2:	429f      	cmp	r7, r3
 8000dc4:	d903      	bls.n	8000dce <__aeabi_ddiv+0x25e>
 8000dc6:	2580      	movs	r5, #128	@ 0x80
 8000dc8:	026d      	lsls	r5, r5, #9
 8000dca:	46ac      	mov	ip, r5
 8000dcc:	4460      	add	r0, ip
 8000dce:	0c1f      	lsrs	r7, r3, #16
 8000dd0:	0409      	lsls	r1, r1, #16
 8000dd2:	041b      	lsls	r3, r3, #16
 8000dd4:	0c09      	lsrs	r1, r1, #16
 8000dd6:	183f      	adds	r7, r7, r0
 8000dd8:	185b      	adds	r3, r3, r1
 8000dda:	42bc      	cmp	r4, r7
 8000ddc:	d200      	bcs.n	8000de0 <__aeabi_ddiv+0x270>
 8000dde:	e102      	b.n	8000fe6 <__aeabi_ddiv+0x476>
 8000de0:	d100      	bne.n	8000de4 <__aeabi_ddiv+0x274>
 8000de2:	e0fd      	b.n	8000fe0 <__aeabi_ddiv+0x470>
 8000de4:	2301      	movs	r3, #1
 8000de6:	431a      	orrs	r2, r3
 8000de8:	4b43      	ldr	r3, [pc, #268]	@ (8000ef8 <__aeabi_ddiv+0x388>)
 8000dea:	4453      	add	r3, sl
 8000dec:	2b00      	cmp	r3, #0
 8000dee:	dc00      	bgt.n	8000df2 <__aeabi_ddiv+0x282>
 8000df0:	e0ae      	b.n	8000f50 <__aeabi_ddiv+0x3e0>
 8000df2:	0751      	lsls	r1, r2, #29
 8000df4:	d000      	beq.n	8000df8 <__aeabi_ddiv+0x288>
 8000df6:	e198      	b.n	800112a <__aeabi_ddiv+0x5ba>
 8000df8:	4659      	mov	r1, fp
 8000dfa:	01c9      	lsls	r1, r1, #7
 8000dfc:	d506      	bpl.n	8000e0c <__aeabi_ddiv+0x29c>
 8000dfe:	4659      	mov	r1, fp
 8000e00:	4b3e      	ldr	r3, [pc, #248]	@ (8000efc <__aeabi_ddiv+0x38c>)
 8000e02:	4019      	ands	r1, r3
 8000e04:	2380      	movs	r3, #128	@ 0x80
 8000e06:	468b      	mov	fp, r1
 8000e08:	00db      	lsls	r3, r3, #3
 8000e0a:	4453      	add	r3, sl
 8000e0c:	493c      	ldr	r1, [pc, #240]	@ (8000f00 <__aeabi_ddiv+0x390>)
 8000e0e:	428b      	cmp	r3, r1
 8000e10:	dd00      	ble.n	8000e14 <__aeabi_ddiv+0x2a4>
 8000e12:	e71a      	b.n	8000c4a <__aeabi_ddiv+0xda>
 8000e14:	4659      	mov	r1, fp
 8000e16:	08d2      	lsrs	r2, r2, #3
 8000e18:	0749      	lsls	r1, r1, #29
 8000e1a:	4311      	orrs	r1, r2
 8000e1c:	465a      	mov	r2, fp
 8000e1e:	055b      	lsls	r3, r3, #21
 8000e20:	0254      	lsls	r4, r2, #9
 8000e22:	4688      	mov	r8, r1
 8000e24:	0b24      	lsrs	r4, r4, #12
 8000e26:	0d5b      	lsrs	r3, r3, #21
 8000e28:	e702      	b.n	8000c30 <__aeabi_ddiv+0xc0>
 8000e2a:	465a      	mov	r2, fp
 8000e2c:	9b00      	ldr	r3, [sp, #0]
 8000e2e:	431a      	orrs	r2, r3
 8000e30:	d100      	bne.n	8000e34 <__aeabi_ddiv+0x2c4>
 8000e32:	e07e      	b.n	8000f32 <__aeabi_ddiv+0x3c2>
 8000e34:	465b      	mov	r3, fp
 8000e36:	2b00      	cmp	r3, #0
 8000e38:	d100      	bne.n	8000e3c <__aeabi_ddiv+0x2cc>
 8000e3a:	e100      	b.n	800103e <__aeabi_ddiv+0x4ce>
 8000e3c:	4658      	mov	r0, fp
 8000e3e:	f001 fabb 	bl	80023b8 <__clzsi2>
 8000e42:	0002      	movs	r2, r0
 8000e44:	0003      	movs	r3, r0
 8000e46:	3a0b      	subs	r2, #11
 8000e48:	271d      	movs	r7, #29
 8000e4a:	9e00      	ldr	r6, [sp, #0]
 8000e4c:	1aba      	subs	r2, r7, r2
 8000e4e:	0019      	movs	r1, r3
 8000e50:	4658      	mov	r0, fp
 8000e52:	40d6      	lsrs	r6, r2
 8000e54:	3908      	subs	r1, #8
 8000e56:	4088      	lsls	r0, r1
 8000e58:	0032      	movs	r2, r6
 8000e5a:	4302      	orrs	r2, r0
 8000e5c:	4693      	mov	fp, r2
 8000e5e:	9a00      	ldr	r2, [sp, #0]
 8000e60:	408a      	lsls	r2, r1
 8000e62:	4928      	ldr	r1, [pc, #160]	@ (8000f04 <__aeabi_ddiv+0x394>)
 8000e64:	4453      	add	r3, sl
 8000e66:	468a      	mov	sl, r1
 8000e68:	449a      	add	sl, r3
 8000e6a:	2300      	movs	r3, #0
 8000e6c:	e6c8      	b.n	8000c00 <__aeabi_ddiv+0x90>
 8000e6e:	465b      	mov	r3, fp
 8000e70:	4303      	orrs	r3, r0
 8000e72:	4699      	mov	r9, r3
 8000e74:	d056      	beq.n	8000f24 <__aeabi_ddiv+0x3b4>
 8000e76:	465b      	mov	r3, fp
 8000e78:	2b00      	cmp	r3, #0
 8000e7a:	d100      	bne.n	8000e7e <__aeabi_ddiv+0x30e>
 8000e7c:	e0cd      	b.n	800101a <__aeabi_ddiv+0x4aa>
 8000e7e:	4658      	mov	r0, fp
 8000e80:	f001 fa9a 	bl	80023b8 <__clzsi2>
 8000e84:	230b      	movs	r3, #11
 8000e86:	425b      	negs	r3, r3
 8000e88:	469c      	mov	ip, r3
 8000e8a:	0002      	movs	r2, r0
 8000e8c:	4484      	add	ip, r0
 8000e8e:	4666      	mov	r6, ip
 8000e90:	231d      	movs	r3, #29
 8000e92:	1b9b      	subs	r3, r3, r6
 8000e94:	0026      	movs	r6, r4
 8000e96:	0011      	movs	r1, r2
 8000e98:	4658      	mov	r0, fp
 8000e9a:	40de      	lsrs	r6, r3
 8000e9c:	3908      	subs	r1, #8
 8000e9e:	4088      	lsls	r0, r1
 8000ea0:	0033      	movs	r3, r6
 8000ea2:	4303      	orrs	r3, r0
 8000ea4:	4699      	mov	r9, r3
 8000ea6:	0023      	movs	r3, r4
 8000ea8:	408b      	lsls	r3, r1
 8000eaa:	4698      	mov	r8, r3
 8000eac:	4b16      	ldr	r3, [pc, #88]	@ (8000f08 <__aeabi_ddiv+0x398>)
 8000eae:	2400      	movs	r4, #0
 8000eb0:	1a9b      	subs	r3, r3, r2
 8000eb2:	469a      	mov	sl, r3
 8000eb4:	2300      	movs	r3, #0
 8000eb6:	9303      	str	r3, [sp, #12]
 8000eb8:	e682      	b.n	8000bc0 <__aeabi_ddiv+0x50>
 8000eba:	465a      	mov	r2, fp
 8000ebc:	4302      	orrs	r2, r0
 8000ebe:	4691      	mov	r9, r2
 8000ec0:	d12a      	bne.n	8000f18 <__aeabi_ddiv+0x3a8>
 8000ec2:	2200      	movs	r2, #0
 8000ec4:	469a      	mov	sl, r3
 8000ec6:	2302      	movs	r3, #2
 8000ec8:	4690      	mov	r8, r2
 8000eca:	2408      	movs	r4, #8
 8000ecc:	9303      	str	r3, [sp, #12]
 8000ece:	e677      	b.n	8000bc0 <__aeabi_ddiv+0x50>
 8000ed0:	465a      	mov	r2, fp
 8000ed2:	9b00      	ldr	r3, [sp, #0]
 8000ed4:	431a      	orrs	r2, r3
 8000ed6:	4b0d      	ldr	r3, [pc, #52]	@ (8000f0c <__aeabi_ddiv+0x39c>)
 8000ed8:	469c      	mov	ip, r3
 8000eda:	44e2      	add	sl, ip
 8000edc:	2a00      	cmp	r2, #0
 8000ede:	d117      	bne.n	8000f10 <__aeabi_ddiv+0x3a0>
 8000ee0:	2302      	movs	r3, #2
 8000ee2:	431c      	orrs	r4, r3
 8000ee4:	2300      	movs	r3, #0
 8000ee6:	469b      	mov	fp, r3
 8000ee8:	3302      	adds	r3, #2
 8000eea:	e689      	b.n	8000c00 <__aeabi_ddiv+0x90>
 8000eec:	000007ff 	.word	0x000007ff
 8000ef0:	fffffc01 	.word	0xfffffc01
 8000ef4:	08007274 	.word	0x08007274
 8000ef8:	000003ff 	.word	0x000003ff
 8000efc:	feffffff 	.word	0xfeffffff
 8000f00:	000007fe 	.word	0x000007fe
 8000f04:	000003f3 	.word	0x000003f3
 8000f08:	fffffc0d 	.word	0xfffffc0d
 8000f0c:	fffff801 	.word	0xfffff801
 8000f10:	2303      	movs	r3, #3
 8000f12:	0032      	movs	r2, r6
 8000f14:	431c      	orrs	r4, r3
 8000f16:	e673      	b.n	8000c00 <__aeabi_ddiv+0x90>
 8000f18:	469a      	mov	sl, r3
 8000f1a:	2303      	movs	r3, #3
 8000f1c:	46d9      	mov	r9, fp
 8000f1e:	240c      	movs	r4, #12
 8000f20:	9303      	str	r3, [sp, #12]
 8000f22:	e64d      	b.n	8000bc0 <__aeabi_ddiv+0x50>
 8000f24:	2300      	movs	r3, #0
 8000f26:	4698      	mov	r8, r3
 8000f28:	469a      	mov	sl, r3
 8000f2a:	3301      	adds	r3, #1
 8000f2c:	2404      	movs	r4, #4
 8000f2e:	9303      	str	r3, [sp, #12]
 8000f30:	e646      	b.n	8000bc0 <__aeabi_ddiv+0x50>
 8000f32:	2301      	movs	r3, #1
 8000f34:	431c      	orrs	r4, r3
 8000f36:	2300      	movs	r3, #0
 8000f38:	469b      	mov	fp, r3
 8000f3a:	3301      	adds	r3, #1
 8000f3c:	e660      	b.n	8000c00 <__aeabi_ddiv+0x90>
 8000f3e:	2300      	movs	r3, #0
 8000f40:	2480      	movs	r4, #128	@ 0x80
 8000f42:	4698      	mov	r8, r3
 8000f44:	2600      	movs	r6, #0
 8000f46:	4b92      	ldr	r3, [pc, #584]	@ (8001190 <__aeabi_ddiv+0x620>)
 8000f48:	0324      	lsls	r4, r4, #12
 8000f4a:	e671      	b.n	8000c30 <__aeabi_ddiv+0xc0>
 8000f4c:	2201      	movs	r2, #1
 8000f4e:	4252      	negs	r2, r2
 8000f50:	2101      	movs	r1, #1
 8000f52:	1ac9      	subs	r1, r1, r3
 8000f54:	2938      	cmp	r1, #56	@ 0x38
 8000f56:	dd00      	ble.n	8000f5a <__aeabi_ddiv+0x3ea>
 8000f58:	e666      	b.n	8000c28 <__aeabi_ddiv+0xb8>
 8000f5a:	291f      	cmp	r1, #31
 8000f5c:	dc00      	bgt.n	8000f60 <__aeabi_ddiv+0x3f0>
 8000f5e:	e0ab      	b.n	80010b8 <__aeabi_ddiv+0x548>
 8000f60:	201f      	movs	r0, #31
 8000f62:	4240      	negs	r0, r0
 8000f64:	1ac3      	subs	r3, r0, r3
 8000f66:	4658      	mov	r0, fp
 8000f68:	40d8      	lsrs	r0, r3
 8000f6a:	0003      	movs	r3, r0
 8000f6c:	2920      	cmp	r1, #32
 8000f6e:	d004      	beq.n	8000f7a <__aeabi_ddiv+0x40a>
 8000f70:	4658      	mov	r0, fp
 8000f72:	4988      	ldr	r1, [pc, #544]	@ (8001194 <__aeabi_ddiv+0x624>)
 8000f74:	4451      	add	r1, sl
 8000f76:	4088      	lsls	r0, r1
 8000f78:	4302      	orrs	r2, r0
 8000f7a:	1e51      	subs	r1, r2, #1
 8000f7c:	418a      	sbcs	r2, r1
 8000f7e:	431a      	orrs	r2, r3
 8000f80:	2307      	movs	r3, #7
 8000f82:	0019      	movs	r1, r3
 8000f84:	2400      	movs	r4, #0
 8000f86:	4011      	ands	r1, r2
 8000f88:	4213      	tst	r3, r2
 8000f8a:	d00c      	beq.n	8000fa6 <__aeabi_ddiv+0x436>
 8000f8c:	230f      	movs	r3, #15
 8000f8e:	4013      	ands	r3, r2
 8000f90:	2b04      	cmp	r3, #4
 8000f92:	d100      	bne.n	8000f96 <__aeabi_ddiv+0x426>
 8000f94:	e0f9      	b.n	800118a <__aeabi_ddiv+0x61a>
 8000f96:	1d11      	adds	r1, r2, #4
 8000f98:	4291      	cmp	r1, r2
 8000f9a:	419b      	sbcs	r3, r3
 8000f9c:	000a      	movs	r2, r1
 8000f9e:	425b      	negs	r3, r3
 8000fa0:	0759      	lsls	r1, r3, #29
 8000fa2:	025b      	lsls	r3, r3, #9
 8000fa4:	0b1c      	lsrs	r4, r3, #12
 8000fa6:	08d2      	lsrs	r2, r2, #3
 8000fa8:	430a      	orrs	r2, r1
 8000faa:	4690      	mov	r8, r2
 8000fac:	2300      	movs	r3, #0
 8000fae:	e63f      	b.n	8000c30 <__aeabi_ddiv+0xc0>
 8000fb0:	2480      	movs	r4, #128	@ 0x80
 8000fb2:	464b      	mov	r3, r9
 8000fb4:	0324      	lsls	r4, r4, #12
 8000fb6:	4223      	tst	r3, r4
 8000fb8:	d009      	beq.n	8000fce <__aeabi_ddiv+0x45e>
 8000fba:	465b      	mov	r3, fp
 8000fbc:	4223      	tst	r3, r4
 8000fbe:	d106      	bne.n	8000fce <__aeabi_ddiv+0x45e>
 8000fc0:	431c      	orrs	r4, r3
 8000fc2:	0324      	lsls	r4, r4, #12
 8000fc4:	002e      	movs	r6, r5
 8000fc6:	4690      	mov	r8, r2
 8000fc8:	4b71      	ldr	r3, [pc, #452]	@ (8001190 <__aeabi_ddiv+0x620>)
 8000fca:	0b24      	lsrs	r4, r4, #12
 8000fcc:	e630      	b.n	8000c30 <__aeabi_ddiv+0xc0>
 8000fce:	2480      	movs	r4, #128	@ 0x80
 8000fd0:	464b      	mov	r3, r9
 8000fd2:	0324      	lsls	r4, r4, #12
 8000fd4:	431c      	orrs	r4, r3
 8000fd6:	0324      	lsls	r4, r4, #12
 8000fd8:	9e02      	ldr	r6, [sp, #8]
 8000fda:	4b6d      	ldr	r3, [pc, #436]	@ (8001190 <__aeabi_ddiv+0x620>)
 8000fdc:	0b24      	lsrs	r4, r4, #12
 8000fde:	e627      	b.n	8000c30 <__aeabi_ddiv+0xc0>
 8000fe0:	2b00      	cmp	r3, #0
 8000fe2:	d100      	bne.n	8000fe6 <__aeabi_ddiv+0x476>
 8000fe4:	e700      	b.n	8000de8 <__aeabi_ddiv+0x278>
 8000fe6:	9800      	ldr	r0, [sp, #0]
 8000fe8:	1e51      	subs	r1, r2, #1
 8000fea:	4684      	mov	ip, r0
 8000fec:	4464      	add	r4, ip
 8000fee:	4284      	cmp	r4, r0
 8000ff0:	d200      	bcs.n	8000ff4 <__aeabi_ddiv+0x484>
 8000ff2:	e084      	b.n	80010fe <__aeabi_ddiv+0x58e>
 8000ff4:	42bc      	cmp	r4, r7
 8000ff6:	d200      	bcs.n	8000ffa <__aeabi_ddiv+0x48a>
 8000ff8:	e0ae      	b.n	8001158 <__aeabi_ddiv+0x5e8>
 8000ffa:	d100      	bne.n	8000ffe <__aeabi_ddiv+0x48e>
 8000ffc:	e0c1      	b.n	8001182 <__aeabi_ddiv+0x612>
 8000ffe:	000a      	movs	r2, r1
 8001000:	e6f0      	b.n	8000de4 <__aeabi_ddiv+0x274>
 8001002:	4542      	cmp	r2, r8
 8001004:	d900      	bls.n	8001008 <__aeabi_ddiv+0x498>
 8001006:	e62c      	b.n	8000c62 <__aeabi_ddiv+0xf2>
 8001008:	464b      	mov	r3, r9
 800100a:	07dc      	lsls	r4, r3, #31
 800100c:	0858      	lsrs	r0, r3, #1
 800100e:	4643      	mov	r3, r8
 8001010:	085b      	lsrs	r3, r3, #1
 8001012:	431c      	orrs	r4, r3
 8001014:	4643      	mov	r3, r8
 8001016:	07df      	lsls	r7, r3, #31
 8001018:	e62a      	b.n	8000c70 <__aeabi_ddiv+0x100>
 800101a:	f001 f9cd 	bl	80023b8 <__clzsi2>
 800101e:	2315      	movs	r3, #21
 8001020:	469c      	mov	ip, r3
 8001022:	4484      	add	ip, r0
 8001024:	0002      	movs	r2, r0
 8001026:	4663      	mov	r3, ip
 8001028:	3220      	adds	r2, #32
 800102a:	2b1c      	cmp	r3, #28
 800102c:	dc00      	bgt.n	8001030 <__aeabi_ddiv+0x4c0>
 800102e:	e72e      	b.n	8000e8e <__aeabi_ddiv+0x31e>
 8001030:	0023      	movs	r3, r4
 8001032:	3808      	subs	r0, #8
 8001034:	4083      	lsls	r3, r0
 8001036:	4699      	mov	r9, r3
 8001038:	2300      	movs	r3, #0
 800103a:	4698      	mov	r8, r3
 800103c:	e736      	b.n	8000eac <__aeabi_ddiv+0x33c>
 800103e:	f001 f9bb 	bl	80023b8 <__clzsi2>
 8001042:	0002      	movs	r2, r0
 8001044:	0003      	movs	r3, r0
 8001046:	3215      	adds	r2, #21
 8001048:	3320      	adds	r3, #32
 800104a:	2a1c      	cmp	r2, #28
 800104c:	dc00      	bgt.n	8001050 <__aeabi_ddiv+0x4e0>
 800104e:	e6fb      	b.n	8000e48 <__aeabi_ddiv+0x2d8>
 8001050:	9900      	ldr	r1, [sp, #0]
 8001052:	3808      	subs	r0, #8
 8001054:	4081      	lsls	r1, r0
 8001056:	2200      	movs	r2, #0
 8001058:	468b      	mov	fp, r1
 800105a:	e702      	b.n	8000e62 <__aeabi_ddiv+0x2f2>
 800105c:	9900      	ldr	r1, [sp, #0]
 800105e:	3b01      	subs	r3, #1
 8001060:	468c      	mov	ip, r1
 8001062:	4464      	add	r4, ip
 8001064:	42a1      	cmp	r1, r4
 8001066:	d900      	bls.n	800106a <__aeabi_ddiv+0x4fa>
 8001068:	e69a      	b.n	8000da0 <__aeabi_ddiv+0x230>
 800106a:	42a2      	cmp	r2, r4
 800106c:	d800      	bhi.n	8001070 <__aeabi_ddiv+0x500>
 800106e:	e697      	b.n	8000da0 <__aeabi_ddiv+0x230>
 8001070:	1e83      	subs	r3, r0, #2
 8001072:	4464      	add	r4, ip
 8001074:	e694      	b.n	8000da0 <__aeabi_ddiv+0x230>
 8001076:	46ac      	mov	ip, r5
 8001078:	4461      	add	r1, ip
 800107a:	3f01      	subs	r7, #1
 800107c:	428d      	cmp	r5, r1
 800107e:	d900      	bls.n	8001082 <__aeabi_ddiv+0x512>
 8001080:	e680      	b.n	8000d84 <__aeabi_ddiv+0x214>
 8001082:	428a      	cmp	r2, r1
 8001084:	d800      	bhi.n	8001088 <__aeabi_ddiv+0x518>
 8001086:	e67d      	b.n	8000d84 <__aeabi_ddiv+0x214>
 8001088:	1e87      	subs	r7, r0, #2
 800108a:	4461      	add	r1, ip
 800108c:	e67a      	b.n	8000d84 <__aeabi_ddiv+0x214>
 800108e:	4285      	cmp	r5, r0
 8001090:	d000      	beq.n	8001094 <__aeabi_ddiv+0x524>
 8001092:	e65f      	b.n	8000d54 <__aeabi_ddiv+0x1e4>
 8001094:	45b9      	cmp	r9, r7
 8001096:	d900      	bls.n	800109a <__aeabi_ddiv+0x52a>
 8001098:	e65c      	b.n	8000d54 <__aeabi_ddiv+0x1e4>
 800109a:	e656      	b.n	8000d4a <__aeabi_ddiv+0x1da>
 800109c:	42a2      	cmp	r2, r4
 800109e:	d800      	bhi.n	80010a2 <__aeabi_ddiv+0x532>
 80010a0:	e61a      	b.n	8000cd8 <__aeabi_ddiv+0x168>
 80010a2:	1e83      	subs	r3, r0, #2
 80010a4:	4464      	add	r4, ip
 80010a6:	e617      	b.n	8000cd8 <__aeabi_ddiv+0x168>
 80010a8:	428a      	cmp	r2, r1
 80010aa:	d800      	bhi.n	80010ae <__aeabi_ddiv+0x53e>
 80010ac:	e600      	b.n	8000cb0 <__aeabi_ddiv+0x140>
 80010ae:	46ac      	mov	ip, r5
 80010b0:	1e83      	subs	r3, r0, #2
 80010b2:	4698      	mov	r8, r3
 80010b4:	4461      	add	r1, ip
 80010b6:	e5fb      	b.n	8000cb0 <__aeabi_ddiv+0x140>
 80010b8:	4837      	ldr	r0, [pc, #220]	@ (8001198 <__aeabi_ddiv+0x628>)
 80010ba:	0014      	movs	r4, r2
 80010bc:	4450      	add	r0, sl
 80010be:	4082      	lsls	r2, r0
 80010c0:	465b      	mov	r3, fp
 80010c2:	0017      	movs	r7, r2
 80010c4:	4083      	lsls	r3, r0
 80010c6:	40cc      	lsrs	r4, r1
 80010c8:	1e7a      	subs	r2, r7, #1
 80010ca:	4197      	sbcs	r7, r2
 80010cc:	4323      	orrs	r3, r4
 80010ce:	433b      	orrs	r3, r7
 80010d0:	001a      	movs	r2, r3
 80010d2:	465b      	mov	r3, fp
 80010d4:	40cb      	lsrs	r3, r1
 80010d6:	0751      	lsls	r1, r2, #29
 80010d8:	d009      	beq.n	80010ee <__aeabi_ddiv+0x57e>
 80010da:	210f      	movs	r1, #15
 80010dc:	4011      	ands	r1, r2
 80010de:	2904      	cmp	r1, #4
 80010e0:	d005      	beq.n	80010ee <__aeabi_ddiv+0x57e>
 80010e2:	1d11      	adds	r1, r2, #4
 80010e4:	4291      	cmp	r1, r2
 80010e6:	4192      	sbcs	r2, r2
 80010e8:	4252      	negs	r2, r2
 80010ea:	189b      	adds	r3, r3, r2
 80010ec:	000a      	movs	r2, r1
 80010ee:	0219      	lsls	r1, r3, #8
 80010f0:	d400      	bmi.n	80010f4 <__aeabi_ddiv+0x584>
 80010f2:	e755      	b.n	8000fa0 <__aeabi_ddiv+0x430>
 80010f4:	2200      	movs	r2, #0
 80010f6:	2301      	movs	r3, #1
 80010f8:	2400      	movs	r4, #0
 80010fa:	4690      	mov	r8, r2
 80010fc:	e598      	b.n	8000c30 <__aeabi_ddiv+0xc0>
 80010fe:	000a      	movs	r2, r1
 8001100:	42bc      	cmp	r4, r7
 8001102:	d000      	beq.n	8001106 <__aeabi_ddiv+0x596>
 8001104:	e66e      	b.n	8000de4 <__aeabi_ddiv+0x274>
 8001106:	454b      	cmp	r3, r9
 8001108:	d000      	beq.n	800110c <__aeabi_ddiv+0x59c>
 800110a:	e66b      	b.n	8000de4 <__aeabi_ddiv+0x274>
 800110c:	e66c      	b.n	8000de8 <__aeabi_ddiv+0x278>
 800110e:	4b23      	ldr	r3, [pc, #140]	@ (800119c <__aeabi_ddiv+0x62c>)
 8001110:	4a23      	ldr	r2, [pc, #140]	@ (80011a0 <__aeabi_ddiv+0x630>)
 8001112:	4453      	add	r3, sl
 8001114:	4592      	cmp	sl, r2
 8001116:	da00      	bge.n	800111a <__aeabi_ddiv+0x5aa>
 8001118:	e718      	b.n	8000f4c <__aeabi_ddiv+0x3dc>
 800111a:	2101      	movs	r1, #1
 800111c:	4249      	negs	r1, r1
 800111e:	1d0a      	adds	r2, r1, #4
 8001120:	428a      	cmp	r2, r1
 8001122:	4189      	sbcs	r1, r1
 8001124:	4249      	negs	r1, r1
 8001126:	448b      	add	fp, r1
 8001128:	e666      	b.n	8000df8 <__aeabi_ddiv+0x288>
 800112a:	210f      	movs	r1, #15
 800112c:	4011      	ands	r1, r2
 800112e:	2904      	cmp	r1, #4
 8001130:	d100      	bne.n	8001134 <__aeabi_ddiv+0x5c4>
 8001132:	e661      	b.n	8000df8 <__aeabi_ddiv+0x288>
 8001134:	0011      	movs	r1, r2
 8001136:	e7f2      	b.n	800111e <__aeabi_ddiv+0x5ae>
 8001138:	42bc      	cmp	r4, r7
 800113a:	d800      	bhi.n	800113e <__aeabi_ddiv+0x5ce>
 800113c:	e60a      	b.n	8000d54 <__aeabi_ddiv+0x1e4>
 800113e:	2302      	movs	r3, #2
 8001140:	425b      	negs	r3, r3
 8001142:	469c      	mov	ip, r3
 8001144:	9900      	ldr	r1, [sp, #0]
 8001146:	444f      	add	r7, r9
 8001148:	454f      	cmp	r7, r9
 800114a:	419b      	sbcs	r3, r3
 800114c:	44e3      	add	fp, ip
 800114e:	468c      	mov	ip, r1
 8001150:	425b      	negs	r3, r3
 8001152:	4463      	add	r3, ip
 8001154:	18c0      	adds	r0, r0, r3
 8001156:	e5ff      	b.n	8000d58 <__aeabi_ddiv+0x1e8>
 8001158:	4649      	mov	r1, r9
 800115a:	9d00      	ldr	r5, [sp, #0]
 800115c:	0048      	lsls	r0, r1, #1
 800115e:	4548      	cmp	r0, r9
 8001160:	4189      	sbcs	r1, r1
 8001162:	46ac      	mov	ip, r5
 8001164:	4249      	negs	r1, r1
 8001166:	4461      	add	r1, ip
 8001168:	4681      	mov	r9, r0
 800116a:	3a02      	subs	r2, #2
 800116c:	1864      	adds	r4, r4, r1
 800116e:	e7c7      	b.n	8001100 <__aeabi_ddiv+0x590>
 8001170:	2480      	movs	r4, #128	@ 0x80
 8001172:	465b      	mov	r3, fp
 8001174:	0324      	lsls	r4, r4, #12
 8001176:	431c      	orrs	r4, r3
 8001178:	0324      	lsls	r4, r4, #12
 800117a:	4690      	mov	r8, r2
 800117c:	4b04      	ldr	r3, [pc, #16]	@ (8001190 <__aeabi_ddiv+0x620>)
 800117e:	0b24      	lsrs	r4, r4, #12
 8001180:	e556      	b.n	8000c30 <__aeabi_ddiv+0xc0>
 8001182:	4599      	cmp	r9, r3
 8001184:	d3e8      	bcc.n	8001158 <__aeabi_ddiv+0x5e8>
 8001186:	000a      	movs	r2, r1
 8001188:	e7bd      	b.n	8001106 <__aeabi_ddiv+0x596>
 800118a:	2300      	movs	r3, #0
 800118c:	e708      	b.n	8000fa0 <__aeabi_ddiv+0x430>
 800118e:	46c0      	nop			@ (mov r8, r8)
 8001190:	000007ff 	.word	0x000007ff
 8001194:	0000043e 	.word	0x0000043e
 8001198:	0000041e 	.word	0x0000041e
 800119c:	000003ff 	.word	0x000003ff
 80011a0:	fffffc02 	.word	0xfffffc02

080011a4 <__eqdf2>:
 80011a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80011a6:	4657      	mov	r7, sl
 80011a8:	46de      	mov	lr, fp
 80011aa:	464e      	mov	r6, r9
 80011ac:	4645      	mov	r5, r8
 80011ae:	b5e0      	push	{r5, r6, r7, lr}
 80011b0:	000d      	movs	r5, r1
 80011b2:	0004      	movs	r4, r0
 80011b4:	0fe8      	lsrs	r0, r5, #31
 80011b6:	4683      	mov	fp, r0
 80011b8:	0309      	lsls	r1, r1, #12
 80011ba:	0fd8      	lsrs	r0, r3, #31
 80011bc:	0b09      	lsrs	r1, r1, #12
 80011be:	4682      	mov	sl, r0
 80011c0:	4819      	ldr	r0, [pc, #100]	@ (8001228 <__eqdf2+0x84>)
 80011c2:	468c      	mov	ip, r1
 80011c4:	031f      	lsls	r7, r3, #12
 80011c6:	0069      	lsls	r1, r5, #1
 80011c8:	005e      	lsls	r6, r3, #1
 80011ca:	0d49      	lsrs	r1, r1, #21
 80011cc:	0b3f      	lsrs	r7, r7, #12
 80011ce:	0d76      	lsrs	r6, r6, #21
 80011d0:	4281      	cmp	r1, r0
 80011d2:	d018      	beq.n	8001206 <__eqdf2+0x62>
 80011d4:	4286      	cmp	r6, r0
 80011d6:	d00f      	beq.n	80011f8 <__eqdf2+0x54>
 80011d8:	2001      	movs	r0, #1
 80011da:	42b1      	cmp	r1, r6
 80011dc:	d10d      	bne.n	80011fa <__eqdf2+0x56>
 80011de:	45bc      	cmp	ip, r7
 80011e0:	d10b      	bne.n	80011fa <__eqdf2+0x56>
 80011e2:	4294      	cmp	r4, r2
 80011e4:	d109      	bne.n	80011fa <__eqdf2+0x56>
 80011e6:	45d3      	cmp	fp, sl
 80011e8:	d01c      	beq.n	8001224 <__eqdf2+0x80>
 80011ea:	2900      	cmp	r1, #0
 80011ec:	d105      	bne.n	80011fa <__eqdf2+0x56>
 80011ee:	4660      	mov	r0, ip
 80011f0:	4320      	orrs	r0, r4
 80011f2:	1e43      	subs	r3, r0, #1
 80011f4:	4198      	sbcs	r0, r3
 80011f6:	e000      	b.n	80011fa <__eqdf2+0x56>
 80011f8:	2001      	movs	r0, #1
 80011fa:	bcf0      	pop	{r4, r5, r6, r7}
 80011fc:	46bb      	mov	fp, r7
 80011fe:	46b2      	mov	sl, r6
 8001200:	46a9      	mov	r9, r5
 8001202:	46a0      	mov	r8, r4
 8001204:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001206:	2001      	movs	r0, #1
 8001208:	428e      	cmp	r6, r1
 800120a:	d1f6      	bne.n	80011fa <__eqdf2+0x56>
 800120c:	4661      	mov	r1, ip
 800120e:	4339      	orrs	r1, r7
 8001210:	000f      	movs	r7, r1
 8001212:	4317      	orrs	r7, r2
 8001214:	4327      	orrs	r7, r4
 8001216:	d1f0      	bne.n	80011fa <__eqdf2+0x56>
 8001218:	465b      	mov	r3, fp
 800121a:	4652      	mov	r2, sl
 800121c:	1a98      	subs	r0, r3, r2
 800121e:	1e43      	subs	r3, r0, #1
 8001220:	4198      	sbcs	r0, r3
 8001222:	e7ea      	b.n	80011fa <__eqdf2+0x56>
 8001224:	2000      	movs	r0, #0
 8001226:	e7e8      	b.n	80011fa <__eqdf2+0x56>
 8001228:	000007ff 	.word	0x000007ff

0800122c <__gedf2>:
 800122c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800122e:	4657      	mov	r7, sl
 8001230:	464e      	mov	r6, r9
 8001232:	4645      	mov	r5, r8
 8001234:	46de      	mov	lr, fp
 8001236:	b5e0      	push	{r5, r6, r7, lr}
 8001238:	000d      	movs	r5, r1
 800123a:	030f      	lsls	r7, r1, #12
 800123c:	0b39      	lsrs	r1, r7, #12
 800123e:	b083      	sub	sp, #12
 8001240:	0004      	movs	r4, r0
 8001242:	4680      	mov	r8, r0
 8001244:	9101      	str	r1, [sp, #4]
 8001246:	0058      	lsls	r0, r3, #1
 8001248:	0fe9      	lsrs	r1, r5, #31
 800124a:	4f31      	ldr	r7, [pc, #196]	@ (8001310 <__gedf2+0xe4>)
 800124c:	0d40      	lsrs	r0, r0, #21
 800124e:	468c      	mov	ip, r1
 8001250:	006e      	lsls	r6, r5, #1
 8001252:	0319      	lsls	r1, r3, #12
 8001254:	4682      	mov	sl, r0
 8001256:	4691      	mov	r9, r2
 8001258:	0d76      	lsrs	r6, r6, #21
 800125a:	0b09      	lsrs	r1, r1, #12
 800125c:	0fd8      	lsrs	r0, r3, #31
 800125e:	42be      	cmp	r6, r7
 8001260:	d01f      	beq.n	80012a2 <__gedf2+0x76>
 8001262:	45ba      	cmp	sl, r7
 8001264:	d00f      	beq.n	8001286 <__gedf2+0x5a>
 8001266:	2e00      	cmp	r6, #0
 8001268:	d12f      	bne.n	80012ca <__gedf2+0x9e>
 800126a:	4655      	mov	r5, sl
 800126c:	9e01      	ldr	r6, [sp, #4]
 800126e:	4334      	orrs	r4, r6
 8001270:	2d00      	cmp	r5, #0
 8001272:	d127      	bne.n	80012c4 <__gedf2+0x98>
 8001274:	430a      	orrs	r2, r1
 8001276:	d03a      	beq.n	80012ee <__gedf2+0xc2>
 8001278:	2c00      	cmp	r4, #0
 800127a:	d145      	bne.n	8001308 <__gedf2+0xdc>
 800127c:	2800      	cmp	r0, #0
 800127e:	d11a      	bne.n	80012b6 <__gedf2+0x8a>
 8001280:	2001      	movs	r0, #1
 8001282:	4240      	negs	r0, r0
 8001284:	e017      	b.n	80012b6 <__gedf2+0x8a>
 8001286:	4311      	orrs	r1, r2
 8001288:	d13b      	bne.n	8001302 <__gedf2+0xd6>
 800128a:	2e00      	cmp	r6, #0
 800128c:	d102      	bne.n	8001294 <__gedf2+0x68>
 800128e:	9f01      	ldr	r7, [sp, #4]
 8001290:	4327      	orrs	r7, r4
 8001292:	d0f3      	beq.n	800127c <__gedf2+0x50>
 8001294:	4584      	cmp	ip, r0
 8001296:	d109      	bne.n	80012ac <__gedf2+0x80>
 8001298:	4663      	mov	r3, ip
 800129a:	2b00      	cmp	r3, #0
 800129c:	d0f0      	beq.n	8001280 <__gedf2+0x54>
 800129e:	4660      	mov	r0, ip
 80012a0:	e009      	b.n	80012b6 <__gedf2+0x8a>
 80012a2:	9f01      	ldr	r7, [sp, #4]
 80012a4:	4327      	orrs	r7, r4
 80012a6:	d12c      	bne.n	8001302 <__gedf2+0xd6>
 80012a8:	45b2      	cmp	sl, r6
 80012aa:	d024      	beq.n	80012f6 <__gedf2+0xca>
 80012ac:	4663      	mov	r3, ip
 80012ae:	2002      	movs	r0, #2
 80012b0:	3b01      	subs	r3, #1
 80012b2:	4018      	ands	r0, r3
 80012b4:	3801      	subs	r0, #1
 80012b6:	b003      	add	sp, #12
 80012b8:	bcf0      	pop	{r4, r5, r6, r7}
 80012ba:	46bb      	mov	fp, r7
 80012bc:	46b2      	mov	sl, r6
 80012be:	46a9      	mov	r9, r5
 80012c0:	46a0      	mov	r8, r4
 80012c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012c4:	2c00      	cmp	r4, #0
 80012c6:	d0d9      	beq.n	800127c <__gedf2+0x50>
 80012c8:	e7e4      	b.n	8001294 <__gedf2+0x68>
 80012ca:	4654      	mov	r4, sl
 80012cc:	2c00      	cmp	r4, #0
 80012ce:	d0ed      	beq.n	80012ac <__gedf2+0x80>
 80012d0:	4584      	cmp	ip, r0
 80012d2:	d1eb      	bne.n	80012ac <__gedf2+0x80>
 80012d4:	4556      	cmp	r6, sl
 80012d6:	dce9      	bgt.n	80012ac <__gedf2+0x80>
 80012d8:	dbde      	blt.n	8001298 <__gedf2+0x6c>
 80012da:	9b01      	ldr	r3, [sp, #4]
 80012dc:	428b      	cmp	r3, r1
 80012de:	d8e5      	bhi.n	80012ac <__gedf2+0x80>
 80012e0:	d1da      	bne.n	8001298 <__gedf2+0x6c>
 80012e2:	45c8      	cmp	r8, r9
 80012e4:	d8e2      	bhi.n	80012ac <__gedf2+0x80>
 80012e6:	2000      	movs	r0, #0
 80012e8:	45c8      	cmp	r8, r9
 80012ea:	d2e4      	bcs.n	80012b6 <__gedf2+0x8a>
 80012ec:	e7d4      	b.n	8001298 <__gedf2+0x6c>
 80012ee:	2000      	movs	r0, #0
 80012f0:	2c00      	cmp	r4, #0
 80012f2:	d0e0      	beq.n	80012b6 <__gedf2+0x8a>
 80012f4:	e7da      	b.n	80012ac <__gedf2+0x80>
 80012f6:	4311      	orrs	r1, r2
 80012f8:	d103      	bne.n	8001302 <__gedf2+0xd6>
 80012fa:	4584      	cmp	ip, r0
 80012fc:	d1d6      	bne.n	80012ac <__gedf2+0x80>
 80012fe:	2000      	movs	r0, #0
 8001300:	e7d9      	b.n	80012b6 <__gedf2+0x8a>
 8001302:	2002      	movs	r0, #2
 8001304:	4240      	negs	r0, r0
 8001306:	e7d6      	b.n	80012b6 <__gedf2+0x8a>
 8001308:	4584      	cmp	ip, r0
 800130a:	d0e6      	beq.n	80012da <__gedf2+0xae>
 800130c:	e7ce      	b.n	80012ac <__gedf2+0x80>
 800130e:	46c0      	nop			@ (mov r8, r8)
 8001310:	000007ff 	.word	0x000007ff

08001314 <__ledf2>:
 8001314:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001316:	4657      	mov	r7, sl
 8001318:	464e      	mov	r6, r9
 800131a:	4645      	mov	r5, r8
 800131c:	46de      	mov	lr, fp
 800131e:	b5e0      	push	{r5, r6, r7, lr}
 8001320:	000d      	movs	r5, r1
 8001322:	030f      	lsls	r7, r1, #12
 8001324:	0004      	movs	r4, r0
 8001326:	4680      	mov	r8, r0
 8001328:	0fe8      	lsrs	r0, r5, #31
 800132a:	0b39      	lsrs	r1, r7, #12
 800132c:	4684      	mov	ip, r0
 800132e:	b083      	sub	sp, #12
 8001330:	0058      	lsls	r0, r3, #1
 8001332:	4f30      	ldr	r7, [pc, #192]	@ (80013f4 <__ledf2+0xe0>)
 8001334:	0d40      	lsrs	r0, r0, #21
 8001336:	9101      	str	r1, [sp, #4]
 8001338:	031e      	lsls	r6, r3, #12
 800133a:	0069      	lsls	r1, r5, #1
 800133c:	4682      	mov	sl, r0
 800133e:	4691      	mov	r9, r2
 8001340:	0d49      	lsrs	r1, r1, #21
 8001342:	0b36      	lsrs	r6, r6, #12
 8001344:	0fd8      	lsrs	r0, r3, #31
 8001346:	42b9      	cmp	r1, r7
 8001348:	d020      	beq.n	800138c <__ledf2+0x78>
 800134a:	45ba      	cmp	sl, r7
 800134c:	d00f      	beq.n	800136e <__ledf2+0x5a>
 800134e:	2900      	cmp	r1, #0
 8001350:	d12b      	bne.n	80013aa <__ledf2+0x96>
 8001352:	9901      	ldr	r1, [sp, #4]
 8001354:	430c      	orrs	r4, r1
 8001356:	4651      	mov	r1, sl
 8001358:	2900      	cmp	r1, #0
 800135a:	d137      	bne.n	80013cc <__ledf2+0xb8>
 800135c:	4332      	orrs	r2, r6
 800135e:	d038      	beq.n	80013d2 <__ledf2+0xbe>
 8001360:	2c00      	cmp	r4, #0
 8001362:	d144      	bne.n	80013ee <__ledf2+0xda>
 8001364:	2800      	cmp	r0, #0
 8001366:	d119      	bne.n	800139c <__ledf2+0x88>
 8001368:	2001      	movs	r0, #1
 800136a:	4240      	negs	r0, r0
 800136c:	e016      	b.n	800139c <__ledf2+0x88>
 800136e:	4316      	orrs	r6, r2
 8001370:	d113      	bne.n	800139a <__ledf2+0x86>
 8001372:	2900      	cmp	r1, #0
 8001374:	d102      	bne.n	800137c <__ledf2+0x68>
 8001376:	9f01      	ldr	r7, [sp, #4]
 8001378:	4327      	orrs	r7, r4
 800137a:	d0f3      	beq.n	8001364 <__ledf2+0x50>
 800137c:	4584      	cmp	ip, r0
 800137e:	d020      	beq.n	80013c2 <__ledf2+0xae>
 8001380:	4663      	mov	r3, ip
 8001382:	2002      	movs	r0, #2
 8001384:	3b01      	subs	r3, #1
 8001386:	4018      	ands	r0, r3
 8001388:	3801      	subs	r0, #1
 800138a:	e007      	b.n	800139c <__ledf2+0x88>
 800138c:	9f01      	ldr	r7, [sp, #4]
 800138e:	4327      	orrs	r7, r4
 8001390:	d103      	bne.n	800139a <__ledf2+0x86>
 8001392:	458a      	cmp	sl, r1
 8001394:	d1f4      	bne.n	8001380 <__ledf2+0x6c>
 8001396:	4316      	orrs	r6, r2
 8001398:	d01f      	beq.n	80013da <__ledf2+0xc6>
 800139a:	2002      	movs	r0, #2
 800139c:	b003      	add	sp, #12
 800139e:	bcf0      	pop	{r4, r5, r6, r7}
 80013a0:	46bb      	mov	fp, r7
 80013a2:	46b2      	mov	sl, r6
 80013a4:	46a9      	mov	r9, r5
 80013a6:	46a0      	mov	r8, r4
 80013a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80013aa:	4654      	mov	r4, sl
 80013ac:	2c00      	cmp	r4, #0
 80013ae:	d0e7      	beq.n	8001380 <__ledf2+0x6c>
 80013b0:	4584      	cmp	ip, r0
 80013b2:	d1e5      	bne.n	8001380 <__ledf2+0x6c>
 80013b4:	4551      	cmp	r1, sl
 80013b6:	dce3      	bgt.n	8001380 <__ledf2+0x6c>
 80013b8:	db03      	blt.n	80013c2 <__ledf2+0xae>
 80013ba:	9b01      	ldr	r3, [sp, #4]
 80013bc:	42b3      	cmp	r3, r6
 80013be:	d8df      	bhi.n	8001380 <__ledf2+0x6c>
 80013c0:	d00f      	beq.n	80013e2 <__ledf2+0xce>
 80013c2:	4663      	mov	r3, ip
 80013c4:	2b00      	cmp	r3, #0
 80013c6:	d0cf      	beq.n	8001368 <__ledf2+0x54>
 80013c8:	4660      	mov	r0, ip
 80013ca:	e7e7      	b.n	800139c <__ledf2+0x88>
 80013cc:	2c00      	cmp	r4, #0
 80013ce:	d0c9      	beq.n	8001364 <__ledf2+0x50>
 80013d0:	e7d4      	b.n	800137c <__ledf2+0x68>
 80013d2:	2000      	movs	r0, #0
 80013d4:	2c00      	cmp	r4, #0
 80013d6:	d0e1      	beq.n	800139c <__ledf2+0x88>
 80013d8:	e7d2      	b.n	8001380 <__ledf2+0x6c>
 80013da:	4584      	cmp	ip, r0
 80013dc:	d1d0      	bne.n	8001380 <__ledf2+0x6c>
 80013de:	2000      	movs	r0, #0
 80013e0:	e7dc      	b.n	800139c <__ledf2+0x88>
 80013e2:	45c8      	cmp	r8, r9
 80013e4:	d8cc      	bhi.n	8001380 <__ledf2+0x6c>
 80013e6:	2000      	movs	r0, #0
 80013e8:	45c8      	cmp	r8, r9
 80013ea:	d2d7      	bcs.n	800139c <__ledf2+0x88>
 80013ec:	e7e9      	b.n	80013c2 <__ledf2+0xae>
 80013ee:	4584      	cmp	ip, r0
 80013f0:	d0e3      	beq.n	80013ba <__ledf2+0xa6>
 80013f2:	e7c5      	b.n	8001380 <__ledf2+0x6c>
 80013f4:	000007ff 	.word	0x000007ff

080013f8 <__aeabi_dmul>:
 80013f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80013fa:	4657      	mov	r7, sl
 80013fc:	46de      	mov	lr, fp
 80013fe:	464e      	mov	r6, r9
 8001400:	4645      	mov	r5, r8
 8001402:	b5e0      	push	{r5, r6, r7, lr}
 8001404:	001f      	movs	r7, r3
 8001406:	030b      	lsls	r3, r1, #12
 8001408:	0b1b      	lsrs	r3, r3, #12
 800140a:	0016      	movs	r6, r2
 800140c:	469a      	mov	sl, r3
 800140e:	0fca      	lsrs	r2, r1, #31
 8001410:	004b      	lsls	r3, r1, #1
 8001412:	0004      	movs	r4, r0
 8001414:	4693      	mov	fp, r2
 8001416:	b087      	sub	sp, #28
 8001418:	0d5b      	lsrs	r3, r3, #21
 800141a:	d100      	bne.n	800141e <__aeabi_dmul+0x26>
 800141c:	e0d5      	b.n	80015ca <__aeabi_dmul+0x1d2>
 800141e:	4abb      	ldr	r2, [pc, #748]	@ (800170c <__aeabi_dmul+0x314>)
 8001420:	4293      	cmp	r3, r2
 8001422:	d100      	bne.n	8001426 <__aeabi_dmul+0x2e>
 8001424:	e0f8      	b.n	8001618 <__aeabi_dmul+0x220>
 8001426:	4651      	mov	r1, sl
 8001428:	0f42      	lsrs	r2, r0, #29
 800142a:	00c9      	lsls	r1, r1, #3
 800142c:	430a      	orrs	r2, r1
 800142e:	2180      	movs	r1, #128	@ 0x80
 8001430:	0409      	lsls	r1, r1, #16
 8001432:	4311      	orrs	r1, r2
 8001434:	00c2      	lsls	r2, r0, #3
 8001436:	4691      	mov	r9, r2
 8001438:	4ab5      	ldr	r2, [pc, #724]	@ (8001710 <__aeabi_dmul+0x318>)
 800143a:	468a      	mov	sl, r1
 800143c:	189d      	adds	r5, r3, r2
 800143e:	2300      	movs	r3, #0
 8001440:	4698      	mov	r8, r3
 8001442:	9302      	str	r3, [sp, #8]
 8001444:	033c      	lsls	r4, r7, #12
 8001446:	007b      	lsls	r3, r7, #1
 8001448:	0ffa      	lsrs	r2, r7, #31
 800144a:	0030      	movs	r0, r6
 800144c:	0b24      	lsrs	r4, r4, #12
 800144e:	0d5b      	lsrs	r3, r3, #21
 8001450:	9200      	str	r2, [sp, #0]
 8001452:	d100      	bne.n	8001456 <__aeabi_dmul+0x5e>
 8001454:	e096      	b.n	8001584 <__aeabi_dmul+0x18c>
 8001456:	4aad      	ldr	r2, [pc, #692]	@ (800170c <__aeabi_dmul+0x314>)
 8001458:	4293      	cmp	r3, r2
 800145a:	d031      	beq.n	80014c0 <__aeabi_dmul+0xc8>
 800145c:	0f72      	lsrs	r2, r6, #29
 800145e:	00e4      	lsls	r4, r4, #3
 8001460:	4322      	orrs	r2, r4
 8001462:	2480      	movs	r4, #128	@ 0x80
 8001464:	0424      	lsls	r4, r4, #16
 8001466:	4314      	orrs	r4, r2
 8001468:	4aa9      	ldr	r2, [pc, #676]	@ (8001710 <__aeabi_dmul+0x318>)
 800146a:	00f0      	lsls	r0, r6, #3
 800146c:	4694      	mov	ip, r2
 800146e:	4463      	add	r3, ip
 8001470:	195b      	adds	r3, r3, r5
 8001472:	1c5a      	adds	r2, r3, #1
 8001474:	9201      	str	r2, [sp, #4]
 8001476:	4642      	mov	r2, r8
 8001478:	2600      	movs	r6, #0
 800147a:	2a0a      	cmp	r2, #10
 800147c:	dc42      	bgt.n	8001504 <__aeabi_dmul+0x10c>
 800147e:	465a      	mov	r2, fp
 8001480:	9900      	ldr	r1, [sp, #0]
 8001482:	404a      	eors	r2, r1
 8001484:	4693      	mov	fp, r2
 8001486:	4642      	mov	r2, r8
 8001488:	2a02      	cmp	r2, #2
 800148a:	dc32      	bgt.n	80014f2 <__aeabi_dmul+0xfa>
 800148c:	3a01      	subs	r2, #1
 800148e:	2a01      	cmp	r2, #1
 8001490:	d900      	bls.n	8001494 <__aeabi_dmul+0x9c>
 8001492:	e149      	b.n	8001728 <__aeabi_dmul+0x330>
 8001494:	2e02      	cmp	r6, #2
 8001496:	d100      	bne.n	800149a <__aeabi_dmul+0xa2>
 8001498:	e0ca      	b.n	8001630 <__aeabi_dmul+0x238>
 800149a:	2e01      	cmp	r6, #1
 800149c:	d13d      	bne.n	800151a <__aeabi_dmul+0x122>
 800149e:	2300      	movs	r3, #0
 80014a0:	2400      	movs	r4, #0
 80014a2:	2200      	movs	r2, #0
 80014a4:	0010      	movs	r0, r2
 80014a6:	465a      	mov	r2, fp
 80014a8:	051b      	lsls	r3, r3, #20
 80014aa:	4323      	orrs	r3, r4
 80014ac:	07d2      	lsls	r2, r2, #31
 80014ae:	4313      	orrs	r3, r2
 80014b0:	0019      	movs	r1, r3
 80014b2:	b007      	add	sp, #28
 80014b4:	bcf0      	pop	{r4, r5, r6, r7}
 80014b6:	46bb      	mov	fp, r7
 80014b8:	46b2      	mov	sl, r6
 80014ba:	46a9      	mov	r9, r5
 80014bc:	46a0      	mov	r8, r4
 80014be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80014c0:	4b92      	ldr	r3, [pc, #584]	@ (800170c <__aeabi_dmul+0x314>)
 80014c2:	4326      	orrs	r6, r4
 80014c4:	18eb      	adds	r3, r5, r3
 80014c6:	2e00      	cmp	r6, #0
 80014c8:	d100      	bne.n	80014cc <__aeabi_dmul+0xd4>
 80014ca:	e0bb      	b.n	8001644 <__aeabi_dmul+0x24c>
 80014cc:	2203      	movs	r2, #3
 80014ce:	4641      	mov	r1, r8
 80014d0:	4311      	orrs	r1, r2
 80014d2:	465a      	mov	r2, fp
 80014d4:	4688      	mov	r8, r1
 80014d6:	9900      	ldr	r1, [sp, #0]
 80014d8:	404a      	eors	r2, r1
 80014da:	2180      	movs	r1, #128	@ 0x80
 80014dc:	0109      	lsls	r1, r1, #4
 80014de:	468c      	mov	ip, r1
 80014e0:	0029      	movs	r1, r5
 80014e2:	4461      	add	r1, ip
 80014e4:	9101      	str	r1, [sp, #4]
 80014e6:	4641      	mov	r1, r8
 80014e8:	290a      	cmp	r1, #10
 80014ea:	dd00      	ble.n	80014ee <__aeabi_dmul+0xf6>
 80014ec:	e233      	b.n	8001956 <__aeabi_dmul+0x55e>
 80014ee:	4693      	mov	fp, r2
 80014f0:	2603      	movs	r6, #3
 80014f2:	4642      	mov	r2, r8
 80014f4:	2701      	movs	r7, #1
 80014f6:	4097      	lsls	r7, r2
 80014f8:	21a6      	movs	r1, #166	@ 0xa6
 80014fa:	003a      	movs	r2, r7
 80014fc:	00c9      	lsls	r1, r1, #3
 80014fe:	400a      	ands	r2, r1
 8001500:	420f      	tst	r7, r1
 8001502:	d031      	beq.n	8001568 <__aeabi_dmul+0x170>
 8001504:	9e02      	ldr	r6, [sp, #8]
 8001506:	2e02      	cmp	r6, #2
 8001508:	d100      	bne.n	800150c <__aeabi_dmul+0x114>
 800150a:	e235      	b.n	8001978 <__aeabi_dmul+0x580>
 800150c:	2e03      	cmp	r6, #3
 800150e:	d100      	bne.n	8001512 <__aeabi_dmul+0x11a>
 8001510:	e1d2      	b.n	80018b8 <__aeabi_dmul+0x4c0>
 8001512:	4654      	mov	r4, sl
 8001514:	4648      	mov	r0, r9
 8001516:	2e01      	cmp	r6, #1
 8001518:	d0c1      	beq.n	800149e <__aeabi_dmul+0xa6>
 800151a:	9a01      	ldr	r2, [sp, #4]
 800151c:	4b7d      	ldr	r3, [pc, #500]	@ (8001714 <__aeabi_dmul+0x31c>)
 800151e:	4694      	mov	ip, r2
 8001520:	4463      	add	r3, ip
 8001522:	2b00      	cmp	r3, #0
 8001524:	dc00      	bgt.n	8001528 <__aeabi_dmul+0x130>
 8001526:	e0c0      	b.n	80016aa <__aeabi_dmul+0x2b2>
 8001528:	0742      	lsls	r2, r0, #29
 800152a:	d009      	beq.n	8001540 <__aeabi_dmul+0x148>
 800152c:	220f      	movs	r2, #15
 800152e:	4002      	ands	r2, r0
 8001530:	2a04      	cmp	r2, #4
 8001532:	d005      	beq.n	8001540 <__aeabi_dmul+0x148>
 8001534:	1d02      	adds	r2, r0, #4
 8001536:	4282      	cmp	r2, r0
 8001538:	4180      	sbcs	r0, r0
 800153a:	4240      	negs	r0, r0
 800153c:	1824      	adds	r4, r4, r0
 800153e:	0010      	movs	r0, r2
 8001540:	01e2      	lsls	r2, r4, #7
 8001542:	d506      	bpl.n	8001552 <__aeabi_dmul+0x15a>
 8001544:	4b74      	ldr	r3, [pc, #464]	@ (8001718 <__aeabi_dmul+0x320>)
 8001546:	9a01      	ldr	r2, [sp, #4]
 8001548:	401c      	ands	r4, r3
 800154a:	2380      	movs	r3, #128	@ 0x80
 800154c:	4694      	mov	ip, r2
 800154e:	00db      	lsls	r3, r3, #3
 8001550:	4463      	add	r3, ip
 8001552:	4a72      	ldr	r2, [pc, #456]	@ (800171c <__aeabi_dmul+0x324>)
 8001554:	4293      	cmp	r3, r2
 8001556:	dc6b      	bgt.n	8001630 <__aeabi_dmul+0x238>
 8001558:	0762      	lsls	r2, r4, #29
 800155a:	08c0      	lsrs	r0, r0, #3
 800155c:	0264      	lsls	r4, r4, #9
 800155e:	055b      	lsls	r3, r3, #21
 8001560:	4302      	orrs	r2, r0
 8001562:	0b24      	lsrs	r4, r4, #12
 8001564:	0d5b      	lsrs	r3, r3, #21
 8001566:	e79d      	b.n	80014a4 <__aeabi_dmul+0xac>
 8001568:	2190      	movs	r1, #144	@ 0x90
 800156a:	0089      	lsls	r1, r1, #2
 800156c:	420f      	tst	r7, r1
 800156e:	d163      	bne.n	8001638 <__aeabi_dmul+0x240>
 8001570:	2288      	movs	r2, #136	@ 0x88
 8001572:	423a      	tst	r2, r7
 8001574:	d100      	bne.n	8001578 <__aeabi_dmul+0x180>
 8001576:	e0d7      	b.n	8001728 <__aeabi_dmul+0x330>
 8001578:	9b00      	ldr	r3, [sp, #0]
 800157a:	46a2      	mov	sl, r4
 800157c:	469b      	mov	fp, r3
 800157e:	4681      	mov	r9, r0
 8001580:	9602      	str	r6, [sp, #8]
 8001582:	e7bf      	b.n	8001504 <__aeabi_dmul+0x10c>
 8001584:	0023      	movs	r3, r4
 8001586:	4333      	orrs	r3, r6
 8001588:	d100      	bne.n	800158c <__aeabi_dmul+0x194>
 800158a:	e07f      	b.n	800168c <__aeabi_dmul+0x294>
 800158c:	2c00      	cmp	r4, #0
 800158e:	d100      	bne.n	8001592 <__aeabi_dmul+0x19a>
 8001590:	e1ad      	b.n	80018ee <__aeabi_dmul+0x4f6>
 8001592:	0020      	movs	r0, r4
 8001594:	f000 ff10 	bl	80023b8 <__clzsi2>
 8001598:	0002      	movs	r2, r0
 800159a:	0003      	movs	r3, r0
 800159c:	3a0b      	subs	r2, #11
 800159e:	201d      	movs	r0, #29
 80015a0:	0019      	movs	r1, r3
 80015a2:	1a82      	subs	r2, r0, r2
 80015a4:	0030      	movs	r0, r6
 80015a6:	3908      	subs	r1, #8
 80015a8:	40d0      	lsrs	r0, r2
 80015aa:	408c      	lsls	r4, r1
 80015ac:	4304      	orrs	r4, r0
 80015ae:	0030      	movs	r0, r6
 80015b0:	4088      	lsls	r0, r1
 80015b2:	4a5b      	ldr	r2, [pc, #364]	@ (8001720 <__aeabi_dmul+0x328>)
 80015b4:	1aeb      	subs	r3, r5, r3
 80015b6:	4694      	mov	ip, r2
 80015b8:	4463      	add	r3, ip
 80015ba:	1c5a      	adds	r2, r3, #1
 80015bc:	9201      	str	r2, [sp, #4]
 80015be:	4642      	mov	r2, r8
 80015c0:	2600      	movs	r6, #0
 80015c2:	2a0a      	cmp	r2, #10
 80015c4:	dc00      	bgt.n	80015c8 <__aeabi_dmul+0x1d0>
 80015c6:	e75a      	b.n	800147e <__aeabi_dmul+0x86>
 80015c8:	e79c      	b.n	8001504 <__aeabi_dmul+0x10c>
 80015ca:	4653      	mov	r3, sl
 80015cc:	4303      	orrs	r3, r0
 80015ce:	4699      	mov	r9, r3
 80015d0:	d054      	beq.n	800167c <__aeabi_dmul+0x284>
 80015d2:	4653      	mov	r3, sl
 80015d4:	2b00      	cmp	r3, #0
 80015d6:	d100      	bne.n	80015da <__aeabi_dmul+0x1e2>
 80015d8:	e177      	b.n	80018ca <__aeabi_dmul+0x4d2>
 80015da:	4650      	mov	r0, sl
 80015dc:	f000 feec 	bl	80023b8 <__clzsi2>
 80015e0:	230b      	movs	r3, #11
 80015e2:	425b      	negs	r3, r3
 80015e4:	469c      	mov	ip, r3
 80015e6:	0002      	movs	r2, r0
 80015e8:	4484      	add	ip, r0
 80015ea:	0011      	movs	r1, r2
 80015ec:	4650      	mov	r0, sl
 80015ee:	3908      	subs	r1, #8
 80015f0:	4088      	lsls	r0, r1
 80015f2:	231d      	movs	r3, #29
 80015f4:	4680      	mov	r8, r0
 80015f6:	4660      	mov	r0, ip
 80015f8:	1a1b      	subs	r3, r3, r0
 80015fa:	0020      	movs	r0, r4
 80015fc:	40d8      	lsrs	r0, r3
 80015fe:	0003      	movs	r3, r0
 8001600:	4640      	mov	r0, r8
 8001602:	4303      	orrs	r3, r0
 8001604:	469a      	mov	sl, r3
 8001606:	0023      	movs	r3, r4
 8001608:	408b      	lsls	r3, r1
 800160a:	4699      	mov	r9, r3
 800160c:	2300      	movs	r3, #0
 800160e:	4d44      	ldr	r5, [pc, #272]	@ (8001720 <__aeabi_dmul+0x328>)
 8001610:	4698      	mov	r8, r3
 8001612:	1aad      	subs	r5, r5, r2
 8001614:	9302      	str	r3, [sp, #8]
 8001616:	e715      	b.n	8001444 <__aeabi_dmul+0x4c>
 8001618:	4652      	mov	r2, sl
 800161a:	4302      	orrs	r2, r0
 800161c:	4691      	mov	r9, r2
 800161e:	d126      	bne.n	800166e <__aeabi_dmul+0x276>
 8001620:	2200      	movs	r2, #0
 8001622:	001d      	movs	r5, r3
 8001624:	2302      	movs	r3, #2
 8001626:	4692      	mov	sl, r2
 8001628:	3208      	adds	r2, #8
 800162a:	4690      	mov	r8, r2
 800162c:	9302      	str	r3, [sp, #8]
 800162e:	e709      	b.n	8001444 <__aeabi_dmul+0x4c>
 8001630:	2400      	movs	r4, #0
 8001632:	2200      	movs	r2, #0
 8001634:	4b35      	ldr	r3, [pc, #212]	@ (800170c <__aeabi_dmul+0x314>)
 8001636:	e735      	b.n	80014a4 <__aeabi_dmul+0xac>
 8001638:	2300      	movs	r3, #0
 800163a:	2480      	movs	r4, #128	@ 0x80
 800163c:	469b      	mov	fp, r3
 800163e:	0324      	lsls	r4, r4, #12
 8001640:	4b32      	ldr	r3, [pc, #200]	@ (800170c <__aeabi_dmul+0x314>)
 8001642:	e72f      	b.n	80014a4 <__aeabi_dmul+0xac>
 8001644:	2202      	movs	r2, #2
 8001646:	4641      	mov	r1, r8
 8001648:	4311      	orrs	r1, r2
 800164a:	2280      	movs	r2, #128	@ 0x80
 800164c:	0112      	lsls	r2, r2, #4
 800164e:	4694      	mov	ip, r2
 8001650:	002a      	movs	r2, r5
 8001652:	4462      	add	r2, ip
 8001654:	4688      	mov	r8, r1
 8001656:	9201      	str	r2, [sp, #4]
 8001658:	290a      	cmp	r1, #10
 800165a:	dd00      	ble.n	800165e <__aeabi_dmul+0x266>
 800165c:	e752      	b.n	8001504 <__aeabi_dmul+0x10c>
 800165e:	465a      	mov	r2, fp
 8001660:	2000      	movs	r0, #0
 8001662:	9900      	ldr	r1, [sp, #0]
 8001664:	0004      	movs	r4, r0
 8001666:	404a      	eors	r2, r1
 8001668:	4693      	mov	fp, r2
 800166a:	2602      	movs	r6, #2
 800166c:	e70b      	b.n	8001486 <__aeabi_dmul+0x8e>
 800166e:	220c      	movs	r2, #12
 8001670:	001d      	movs	r5, r3
 8001672:	2303      	movs	r3, #3
 8001674:	4681      	mov	r9, r0
 8001676:	4690      	mov	r8, r2
 8001678:	9302      	str	r3, [sp, #8]
 800167a:	e6e3      	b.n	8001444 <__aeabi_dmul+0x4c>
 800167c:	2300      	movs	r3, #0
 800167e:	469a      	mov	sl, r3
 8001680:	3304      	adds	r3, #4
 8001682:	4698      	mov	r8, r3
 8001684:	3b03      	subs	r3, #3
 8001686:	2500      	movs	r5, #0
 8001688:	9302      	str	r3, [sp, #8]
 800168a:	e6db      	b.n	8001444 <__aeabi_dmul+0x4c>
 800168c:	4642      	mov	r2, r8
 800168e:	3301      	adds	r3, #1
 8001690:	431a      	orrs	r2, r3
 8001692:	002b      	movs	r3, r5
 8001694:	4690      	mov	r8, r2
 8001696:	1c5a      	adds	r2, r3, #1
 8001698:	9201      	str	r2, [sp, #4]
 800169a:	4642      	mov	r2, r8
 800169c:	2400      	movs	r4, #0
 800169e:	2000      	movs	r0, #0
 80016a0:	2601      	movs	r6, #1
 80016a2:	2a0a      	cmp	r2, #10
 80016a4:	dc00      	bgt.n	80016a8 <__aeabi_dmul+0x2b0>
 80016a6:	e6ea      	b.n	800147e <__aeabi_dmul+0x86>
 80016a8:	e72c      	b.n	8001504 <__aeabi_dmul+0x10c>
 80016aa:	2201      	movs	r2, #1
 80016ac:	1ad2      	subs	r2, r2, r3
 80016ae:	2a38      	cmp	r2, #56	@ 0x38
 80016b0:	dd00      	ble.n	80016b4 <__aeabi_dmul+0x2bc>
 80016b2:	e6f4      	b.n	800149e <__aeabi_dmul+0xa6>
 80016b4:	2a1f      	cmp	r2, #31
 80016b6:	dc00      	bgt.n	80016ba <__aeabi_dmul+0x2c2>
 80016b8:	e12a      	b.n	8001910 <__aeabi_dmul+0x518>
 80016ba:	211f      	movs	r1, #31
 80016bc:	4249      	negs	r1, r1
 80016be:	1acb      	subs	r3, r1, r3
 80016c0:	0021      	movs	r1, r4
 80016c2:	40d9      	lsrs	r1, r3
 80016c4:	000b      	movs	r3, r1
 80016c6:	2a20      	cmp	r2, #32
 80016c8:	d005      	beq.n	80016d6 <__aeabi_dmul+0x2de>
 80016ca:	4a16      	ldr	r2, [pc, #88]	@ (8001724 <__aeabi_dmul+0x32c>)
 80016cc:	9d01      	ldr	r5, [sp, #4]
 80016ce:	4694      	mov	ip, r2
 80016d0:	4465      	add	r5, ip
 80016d2:	40ac      	lsls	r4, r5
 80016d4:	4320      	orrs	r0, r4
 80016d6:	1e42      	subs	r2, r0, #1
 80016d8:	4190      	sbcs	r0, r2
 80016da:	4318      	orrs	r0, r3
 80016dc:	2307      	movs	r3, #7
 80016de:	0019      	movs	r1, r3
 80016e0:	2400      	movs	r4, #0
 80016e2:	4001      	ands	r1, r0
 80016e4:	4203      	tst	r3, r0
 80016e6:	d00c      	beq.n	8001702 <__aeabi_dmul+0x30a>
 80016e8:	230f      	movs	r3, #15
 80016ea:	4003      	ands	r3, r0
 80016ec:	2b04      	cmp	r3, #4
 80016ee:	d100      	bne.n	80016f2 <__aeabi_dmul+0x2fa>
 80016f0:	e140      	b.n	8001974 <__aeabi_dmul+0x57c>
 80016f2:	1d03      	adds	r3, r0, #4
 80016f4:	4283      	cmp	r3, r0
 80016f6:	41a4      	sbcs	r4, r4
 80016f8:	0018      	movs	r0, r3
 80016fa:	4264      	negs	r4, r4
 80016fc:	0761      	lsls	r1, r4, #29
 80016fe:	0264      	lsls	r4, r4, #9
 8001700:	0b24      	lsrs	r4, r4, #12
 8001702:	08c2      	lsrs	r2, r0, #3
 8001704:	2300      	movs	r3, #0
 8001706:	430a      	orrs	r2, r1
 8001708:	e6cc      	b.n	80014a4 <__aeabi_dmul+0xac>
 800170a:	46c0      	nop			@ (mov r8, r8)
 800170c:	000007ff 	.word	0x000007ff
 8001710:	fffffc01 	.word	0xfffffc01
 8001714:	000003ff 	.word	0x000003ff
 8001718:	feffffff 	.word	0xfeffffff
 800171c:	000007fe 	.word	0x000007fe
 8001720:	fffffc0d 	.word	0xfffffc0d
 8001724:	0000043e 	.word	0x0000043e
 8001728:	4649      	mov	r1, r9
 800172a:	464a      	mov	r2, r9
 800172c:	0409      	lsls	r1, r1, #16
 800172e:	0c09      	lsrs	r1, r1, #16
 8001730:	000d      	movs	r5, r1
 8001732:	0c16      	lsrs	r6, r2, #16
 8001734:	0c02      	lsrs	r2, r0, #16
 8001736:	0400      	lsls	r0, r0, #16
 8001738:	0c00      	lsrs	r0, r0, #16
 800173a:	4345      	muls	r5, r0
 800173c:	46ac      	mov	ip, r5
 800173e:	0005      	movs	r5, r0
 8001740:	4375      	muls	r5, r6
 8001742:	46a8      	mov	r8, r5
 8001744:	0015      	movs	r5, r2
 8001746:	000f      	movs	r7, r1
 8001748:	4375      	muls	r5, r6
 800174a:	9200      	str	r2, [sp, #0]
 800174c:	9502      	str	r5, [sp, #8]
 800174e:	002a      	movs	r2, r5
 8001750:	9d00      	ldr	r5, [sp, #0]
 8001752:	436f      	muls	r7, r5
 8001754:	4665      	mov	r5, ip
 8001756:	0c2d      	lsrs	r5, r5, #16
 8001758:	46a9      	mov	r9, r5
 800175a:	4447      	add	r7, r8
 800175c:	444f      	add	r7, r9
 800175e:	45b8      	cmp	r8, r7
 8001760:	d905      	bls.n	800176e <__aeabi_dmul+0x376>
 8001762:	0015      	movs	r5, r2
 8001764:	2280      	movs	r2, #128	@ 0x80
 8001766:	0252      	lsls	r2, r2, #9
 8001768:	4690      	mov	r8, r2
 800176a:	4445      	add	r5, r8
 800176c:	9502      	str	r5, [sp, #8]
 800176e:	0c3d      	lsrs	r5, r7, #16
 8001770:	9503      	str	r5, [sp, #12]
 8001772:	4665      	mov	r5, ip
 8001774:	042d      	lsls	r5, r5, #16
 8001776:	043f      	lsls	r7, r7, #16
 8001778:	0c2d      	lsrs	r5, r5, #16
 800177a:	46ac      	mov	ip, r5
 800177c:	003d      	movs	r5, r7
 800177e:	4465      	add	r5, ip
 8001780:	9504      	str	r5, [sp, #16]
 8001782:	0c25      	lsrs	r5, r4, #16
 8001784:	0424      	lsls	r4, r4, #16
 8001786:	0c24      	lsrs	r4, r4, #16
 8001788:	46ac      	mov	ip, r5
 800178a:	0025      	movs	r5, r4
 800178c:	4375      	muls	r5, r6
 800178e:	46a8      	mov	r8, r5
 8001790:	4665      	mov	r5, ip
 8001792:	000f      	movs	r7, r1
 8001794:	4369      	muls	r1, r5
 8001796:	4441      	add	r1, r8
 8001798:	4689      	mov	r9, r1
 800179a:	4367      	muls	r7, r4
 800179c:	0c39      	lsrs	r1, r7, #16
 800179e:	4449      	add	r1, r9
 80017a0:	436e      	muls	r6, r5
 80017a2:	4588      	cmp	r8, r1
 80017a4:	d903      	bls.n	80017ae <__aeabi_dmul+0x3b6>
 80017a6:	2280      	movs	r2, #128	@ 0x80
 80017a8:	0252      	lsls	r2, r2, #9
 80017aa:	4690      	mov	r8, r2
 80017ac:	4446      	add	r6, r8
 80017ae:	0c0d      	lsrs	r5, r1, #16
 80017b0:	46a8      	mov	r8, r5
 80017b2:	0035      	movs	r5, r6
 80017b4:	4445      	add	r5, r8
 80017b6:	9505      	str	r5, [sp, #20]
 80017b8:	9d03      	ldr	r5, [sp, #12]
 80017ba:	043f      	lsls	r7, r7, #16
 80017bc:	46a8      	mov	r8, r5
 80017be:	0c3f      	lsrs	r7, r7, #16
 80017c0:	0409      	lsls	r1, r1, #16
 80017c2:	19c9      	adds	r1, r1, r7
 80017c4:	4488      	add	r8, r1
 80017c6:	4645      	mov	r5, r8
 80017c8:	9503      	str	r5, [sp, #12]
 80017ca:	4655      	mov	r5, sl
 80017cc:	042e      	lsls	r6, r5, #16
 80017ce:	0c36      	lsrs	r6, r6, #16
 80017d0:	0c2f      	lsrs	r7, r5, #16
 80017d2:	0035      	movs	r5, r6
 80017d4:	4345      	muls	r5, r0
 80017d6:	4378      	muls	r0, r7
 80017d8:	4681      	mov	r9, r0
 80017da:	0038      	movs	r0, r7
 80017dc:	46a8      	mov	r8, r5
 80017de:	0c2d      	lsrs	r5, r5, #16
 80017e0:	46aa      	mov	sl, r5
 80017e2:	9a00      	ldr	r2, [sp, #0]
 80017e4:	4350      	muls	r0, r2
 80017e6:	4372      	muls	r2, r6
 80017e8:	444a      	add	r2, r9
 80017ea:	4452      	add	r2, sl
 80017ec:	4591      	cmp	r9, r2
 80017ee:	d903      	bls.n	80017f8 <__aeabi_dmul+0x400>
 80017f0:	2580      	movs	r5, #128	@ 0x80
 80017f2:	026d      	lsls	r5, r5, #9
 80017f4:	46a9      	mov	r9, r5
 80017f6:	4448      	add	r0, r9
 80017f8:	0c15      	lsrs	r5, r2, #16
 80017fa:	46a9      	mov	r9, r5
 80017fc:	4645      	mov	r5, r8
 80017fe:	042d      	lsls	r5, r5, #16
 8001800:	0c2d      	lsrs	r5, r5, #16
 8001802:	46a8      	mov	r8, r5
 8001804:	4665      	mov	r5, ip
 8001806:	437d      	muls	r5, r7
 8001808:	0412      	lsls	r2, r2, #16
 800180a:	4448      	add	r0, r9
 800180c:	4490      	add	r8, r2
 800180e:	46a9      	mov	r9, r5
 8001810:	0032      	movs	r2, r6
 8001812:	4665      	mov	r5, ip
 8001814:	4362      	muls	r2, r4
 8001816:	436e      	muls	r6, r5
 8001818:	437c      	muls	r4, r7
 800181a:	0c17      	lsrs	r7, r2, #16
 800181c:	1936      	adds	r6, r6, r4
 800181e:	19bf      	adds	r7, r7, r6
 8001820:	42bc      	cmp	r4, r7
 8001822:	d903      	bls.n	800182c <__aeabi_dmul+0x434>
 8001824:	2480      	movs	r4, #128	@ 0x80
 8001826:	0264      	lsls	r4, r4, #9
 8001828:	46a4      	mov	ip, r4
 800182a:	44e1      	add	r9, ip
 800182c:	9c02      	ldr	r4, [sp, #8]
 800182e:	9e03      	ldr	r6, [sp, #12]
 8001830:	46a4      	mov	ip, r4
 8001832:	9d05      	ldr	r5, [sp, #20]
 8001834:	4466      	add	r6, ip
 8001836:	428e      	cmp	r6, r1
 8001838:	4189      	sbcs	r1, r1
 800183a:	46ac      	mov	ip, r5
 800183c:	0412      	lsls	r2, r2, #16
 800183e:	043c      	lsls	r4, r7, #16
 8001840:	0c12      	lsrs	r2, r2, #16
 8001842:	18a2      	adds	r2, r4, r2
 8001844:	4462      	add	r2, ip
 8001846:	4249      	negs	r1, r1
 8001848:	1854      	adds	r4, r2, r1
 800184a:	4446      	add	r6, r8
 800184c:	46a4      	mov	ip, r4
 800184e:	4546      	cmp	r6, r8
 8001850:	41a4      	sbcs	r4, r4
 8001852:	4682      	mov	sl, r0
 8001854:	4264      	negs	r4, r4
 8001856:	46a0      	mov	r8, r4
 8001858:	42aa      	cmp	r2, r5
 800185a:	4192      	sbcs	r2, r2
 800185c:	458c      	cmp	ip, r1
 800185e:	4189      	sbcs	r1, r1
 8001860:	44e2      	add	sl, ip
 8001862:	44d0      	add	r8, sl
 8001864:	4249      	negs	r1, r1
 8001866:	4252      	negs	r2, r2
 8001868:	430a      	orrs	r2, r1
 800186a:	45a0      	cmp	r8, r4
 800186c:	41a4      	sbcs	r4, r4
 800186e:	4582      	cmp	sl, r0
 8001870:	4189      	sbcs	r1, r1
 8001872:	4264      	negs	r4, r4
 8001874:	4249      	negs	r1, r1
 8001876:	430c      	orrs	r4, r1
 8001878:	4641      	mov	r1, r8
 800187a:	0c3f      	lsrs	r7, r7, #16
 800187c:	19d2      	adds	r2, r2, r7
 800187e:	1912      	adds	r2, r2, r4
 8001880:	0dcc      	lsrs	r4, r1, #23
 8001882:	9904      	ldr	r1, [sp, #16]
 8001884:	0270      	lsls	r0, r6, #9
 8001886:	4308      	orrs	r0, r1
 8001888:	1e41      	subs	r1, r0, #1
 800188a:	4188      	sbcs	r0, r1
 800188c:	4641      	mov	r1, r8
 800188e:	444a      	add	r2, r9
 8001890:	0df6      	lsrs	r6, r6, #23
 8001892:	0252      	lsls	r2, r2, #9
 8001894:	4330      	orrs	r0, r6
 8001896:	0249      	lsls	r1, r1, #9
 8001898:	4314      	orrs	r4, r2
 800189a:	4308      	orrs	r0, r1
 800189c:	01d2      	lsls	r2, r2, #7
 800189e:	d535      	bpl.n	800190c <__aeabi_dmul+0x514>
 80018a0:	2201      	movs	r2, #1
 80018a2:	0843      	lsrs	r3, r0, #1
 80018a4:	4002      	ands	r2, r0
 80018a6:	4313      	orrs	r3, r2
 80018a8:	07e0      	lsls	r0, r4, #31
 80018aa:	4318      	orrs	r0, r3
 80018ac:	0864      	lsrs	r4, r4, #1
 80018ae:	e634      	b.n	800151a <__aeabi_dmul+0x122>
 80018b0:	9b00      	ldr	r3, [sp, #0]
 80018b2:	46a2      	mov	sl, r4
 80018b4:	469b      	mov	fp, r3
 80018b6:	4681      	mov	r9, r0
 80018b8:	2480      	movs	r4, #128	@ 0x80
 80018ba:	4653      	mov	r3, sl
 80018bc:	0324      	lsls	r4, r4, #12
 80018be:	431c      	orrs	r4, r3
 80018c0:	0324      	lsls	r4, r4, #12
 80018c2:	464a      	mov	r2, r9
 80018c4:	4b2e      	ldr	r3, [pc, #184]	@ (8001980 <__aeabi_dmul+0x588>)
 80018c6:	0b24      	lsrs	r4, r4, #12
 80018c8:	e5ec      	b.n	80014a4 <__aeabi_dmul+0xac>
 80018ca:	f000 fd75 	bl	80023b8 <__clzsi2>
 80018ce:	2315      	movs	r3, #21
 80018d0:	469c      	mov	ip, r3
 80018d2:	4484      	add	ip, r0
 80018d4:	0002      	movs	r2, r0
 80018d6:	4663      	mov	r3, ip
 80018d8:	3220      	adds	r2, #32
 80018da:	2b1c      	cmp	r3, #28
 80018dc:	dc00      	bgt.n	80018e0 <__aeabi_dmul+0x4e8>
 80018de:	e684      	b.n	80015ea <__aeabi_dmul+0x1f2>
 80018e0:	2300      	movs	r3, #0
 80018e2:	4699      	mov	r9, r3
 80018e4:	0023      	movs	r3, r4
 80018e6:	3808      	subs	r0, #8
 80018e8:	4083      	lsls	r3, r0
 80018ea:	469a      	mov	sl, r3
 80018ec:	e68e      	b.n	800160c <__aeabi_dmul+0x214>
 80018ee:	f000 fd63 	bl	80023b8 <__clzsi2>
 80018f2:	0002      	movs	r2, r0
 80018f4:	0003      	movs	r3, r0
 80018f6:	3215      	adds	r2, #21
 80018f8:	3320      	adds	r3, #32
 80018fa:	2a1c      	cmp	r2, #28
 80018fc:	dc00      	bgt.n	8001900 <__aeabi_dmul+0x508>
 80018fe:	e64e      	b.n	800159e <__aeabi_dmul+0x1a6>
 8001900:	0002      	movs	r2, r0
 8001902:	0034      	movs	r4, r6
 8001904:	3a08      	subs	r2, #8
 8001906:	2000      	movs	r0, #0
 8001908:	4094      	lsls	r4, r2
 800190a:	e652      	b.n	80015b2 <__aeabi_dmul+0x1ba>
 800190c:	9301      	str	r3, [sp, #4]
 800190e:	e604      	b.n	800151a <__aeabi_dmul+0x122>
 8001910:	4b1c      	ldr	r3, [pc, #112]	@ (8001984 <__aeabi_dmul+0x58c>)
 8001912:	0021      	movs	r1, r4
 8001914:	469c      	mov	ip, r3
 8001916:	0003      	movs	r3, r0
 8001918:	9d01      	ldr	r5, [sp, #4]
 800191a:	40d3      	lsrs	r3, r2
 800191c:	4465      	add	r5, ip
 800191e:	40a9      	lsls	r1, r5
 8001920:	4319      	orrs	r1, r3
 8001922:	0003      	movs	r3, r0
 8001924:	40ab      	lsls	r3, r5
 8001926:	1e58      	subs	r0, r3, #1
 8001928:	4183      	sbcs	r3, r0
 800192a:	4319      	orrs	r1, r3
 800192c:	0008      	movs	r0, r1
 800192e:	40d4      	lsrs	r4, r2
 8001930:	074b      	lsls	r3, r1, #29
 8001932:	d009      	beq.n	8001948 <__aeabi_dmul+0x550>
 8001934:	230f      	movs	r3, #15
 8001936:	400b      	ands	r3, r1
 8001938:	2b04      	cmp	r3, #4
 800193a:	d005      	beq.n	8001948 <__aeabi_dmul+0x550>
 800193c:	1d0b      	adds	r3, r1, #4
 800193e:	428b      	cmp	r3, r1
 8001940:	4180      	sbcs	r0, r0
 8001942:	4240      	negs	r0, r0
 8001944:	1824      	adds	r4, r4, r0
 8001946:	0018      	movs	r0, r3
 8001948:	0223      	lsls	r3, r4, #8
 800194a:	d400      	bmi.n	800194e <__aeabi_dmul+0x556>
 800194c:	e6d6      	b.n	80016fc <__aeabi_dmul+0x304>
 800194e:	2301      	movs	r3, #1
 8001950:	2400      	movs	r4, #0
 8001952:	2200      	movs	r2, #0
 8001954:	e5a6      	b.n	80014a4 <__aeabi_dmul+0xac>
 8001956:	290f      	cmp	r1, #15
 8001958:	d1aa      	bne.n	80018b0 <__aeabi_dmul+0x4b8>
 800195a:	2380      	movs	r3, #128	@ 0x80
 800195c:	4652      	mov	r2, sl
 800195e:	031b      	lsls	r3, r3, #12
 8001960:	421a      	tst	r2, r3
 8001962:	d0a9      	beq.n	80018b8 <__aeabi_dmul+0x4c0>
 8001964:	421c      	tst	r4, r3
 8001966:	d1a7      	bne.n	80018b8 <__aeabi_dmul+0x4c0>
 8001968:	431c      	orrs	r4, r3
 800196a:	9b00      	ldr	r3, [sp, #0]
 800196c:	0002      	movs	r2, r0
 800196e:	469b      	mov	fp, r3
 8001970:	4b03      	ldr	r3, [pc, #12]	@ (8001980 <__aeabi_dmul+0x588>)
 8001972:	e597      	b.n	80014a4 <__aeabi_dmul+0xac>
 8001974:	2400      	movs	r4, #0
 8001976:	e6c1      	b.n	80016fc <__aeabi_dmul+0x304>
 8001978:	2400      	movs	r4, #0
 800197a:	4b01      	ldr	r3, [pc, #4]	@ (8001980 <__aeabi_dmul+0x588>)
 800197c:	0022      	movs	r2, r4
 800197e:	e591      	b.n	80014a4 <__aeabi_dmul+0xac>
 8001980:	000007ff 	.word	0x000007ff
 8001984:	0000041e 	.word	0x0000041e

08001988 <__aeabi_dsub>:
 8001988:	b5f0      	push	{r4, r5, r6, r7, lr}
 800198a:	464e      	mov	r6, r9
 800198c:	4645      	mov	r5, r8
 800198e:	46de      	mov	lr, fp
 8001990:	4657      	mov	r7, sl
 8001992:	b5e0      	push	{r5, r6, r7, lr}
 8001994:	b085      	sub	sp, #20
 8001996:	9000      	str	r0, [sp, #0]
 8001998:	9101      	str	r1, [sp, #4]
 800199a:	030c      	lsls	r4, r1, #12
 800199c:	004f      	lsls	r7, r1, #1
 800199e:	0fce      	lsrs	r6, r1, #31
 80019a0:	0a61      	lsrs	r1, r4, #9
 80019a2:	9c00      	ldr	r4, [sp, #0]
 80019a4:	46b0      	mov	r8, r6
 80019a6:	0f64      	lsrs	r4, r4, #29
 80019a8:	430c      	orrs	r4, r1
 80019aa:	9900      	ldr	r1, [sp, #0]
 80019ac:	0d7f      	lsrs	r7, r7, #21
 80019ae:	00c8      	lsls	r0, r1, #3
 80019b0:	0011      	movs	r1, r2
 80019b2:	001a      	movs	r2, r3
 80019b4:	031b      	lsls	r3, r3, #12
 80019b6:	469c      	mov	ip, r3
 80019b8:	9100      	str	r1, [sp, #0]
 80019ba:	9201      	str	r2, [sp, #4]
 80019bc:	0051      	lsls	r1, r2, #1
 80019be:	0d4b      	lsrs	r3, r1, #21
 80019c0:	4699      	mov	r9, r3
 80019c2:	9b01      	ldr	r3, [sp, #4]
 80019c4:	9d00      	ldr	r5, [sp, #0]
 80019c6:	0fd9      	lsrs	r1, r3, #31
 80019c8:	4663      	mov	r3, ip
 80019ca:	0f6a      	lsrs	r2, r5, #29
 80019cc:	0a5b      	lsrs	r3, r3, #9
 80019ce:	4313      	orrs	r3, r2
 80019d0:	00ea      	lsls	r2, r5, #3
 80019d2:	4694      	mov	ip, r2
 80019d4:	4693      	mov	fp, r2
 80019d6:	4ac1      	ldr	r2, [pc, #772]	@ (8001cdc <__aeabi_dsub+0x354>)
 80019d8:	9003      	str	r0, [sp, #12]
 80019da:	9302      	str	r3, [sp, #8]
 80019dc:	4591      	cmp	r9, r2
 80019de:	d100      	bne.n	80019e2 <__aeabi_dsub+0x5a>
 80019e0:	e0cd      	b.n	8001b7e <__aeabi_dsub+0x1f6>
 80019e2:	2501      	movs	r5, #1
 80019e4:	4069      	eors	r1, r5
 80019e6:	464d      	mov	r5, r9
 80019e8:	1b7d      	subs	r5, r7, r5
 80019ea:	46aa      	mov	sl, r5
 80019ec:	428e      	cmp	r6, r1
 80019ee:	d100      	bne.n	80019f2 <__aeabi_dsub+0x6a>
 80019f0:	e080      	b.n	8001af4 <__aeabi_dsub+0x16c>
 80019f2:	2d00      	cmp	r5, #0
 80019f4:	dc00      	bgt.n	80019f8 <__aeabi_dsub+0x70>
 80019f6:	e335      	b.n	8002064 <__aeabi_dsub+0x6dc>
 80019f8:	4649      	mov	r1, r9
 80019fa:	2900      	cmp	r1, #0
 80019fc:	d100      	bne.n	8001a00 <__aeabi_dsub+0x78>
 80019fe:	e0df      	b.n	8001bc0 <__aeabi_dsub+0x238>
 8001a00:	4297      	cmp	r7, r2
 8001a02:	d100      	bne.n	8001a06 <__aeabi_dsub+0x7e>
 8001a04:	e194      	b.n	8001d30 <__aeabi_dsub+0x3a8>
 8001a06:	4652      	mov	r2, sl
 8001a08:	2501      	movs	r5, #1
 8001a0a:	2a38      	cmp	r2, #56	@ 0x38
 8001a0c:	dc19      	bgt.n	8001a42 <__aeabi_dsub+0xba>
 8001a0e:	2280      	movs	r2, #128	@ 0x80
 8001a10:	9b02      	ldr	r3, [sp, #8]
 8001a12:	0412      	lsls	r2, r2, #16
 8001a14:	4313      	orrs	r3, r2
 8001a16:	9302      	str	r3, [sp, #8]
 8001a18:	4652      	mov	r2, sl
 8001a1a:	2a1f      	cmp	r2, #31
 8001a1c:	dd00      	ble.n	8001a20 <__aeabi_dsub+0x98>
 8001a1e:	e1e3      	b.n	8001de8 <__aeabi_dsub+0x460>
 8001a20:	4653      	mov	r3, sl
 8001a22:	2220      	movs	r2, #32
 8001a24:	4661      	mov	r1, ip
 8001a26:	9d02      	ldr	r5, [sp, #8]
 8001a28:	1ad2      	subs	r2, r2, r3
 8001a2a:	4095      	lsls	r5, r2
 8001a2c:	40d9      	lsrs	r1, r3
 8001a2e:	430d      	orrs	r5, r1
 8001a30:	4661      	mov	r1, ip
 8001a32:	4091      	lsls	r1, r2
 8001a34:	000a      	movs	r2, r1
 8001a36:	1e51      	subs	r1, r2, #1
 8001a38:	418a      	sbcs	r2, r1
 8001a3a:	4315      	orrs	r5, r2
 8001a3c:	9a02      	ldr	r2, [sp, #8]
 8001a3e:	40da      	lsrs	r2, r3
 8001a40:	1aa4      	subs	r4, r4, r2
 8001a42:	1b45      	subs	r5, r0, r5
 8001a44:	42a8      	cmp	r0, r5
 8001a46:	4180      	sbcs	r0, r0
 8001a48:	4240      	negs	r0, r0
 8001a4a:	1a24      	subs	r4, r4, r0
 8001a4c:	0223      	lsls	r3, r4, #8
 8001a4e:	d400      	bmi.n	8001a52 <__aeabi_dsub+0xca>
 8001a50:	e13d      	b.n	8001cce <__aeabi_dsub+0x346>
 8001a52:	0264      	lsls	r4, r4, #9
 8001a54:	0a64      	lsrs	r4, r4, #9
 8001a56:	2c00      	cmp	r4, #0
 8001a58:	d100      	bne.n	8001a5c <__aeabi_dsub+0xd4>
 8001a5a:	e147      	b.n	8001cec <__aeabi_dsub+0x364>
 8001a5c:	0020      	movs	r0, r4
 8001a5e:	f000 fcab 	bl	80023b8 <__clzsi2>
 8001a62:	0003      	movs	r3, r0
 8001a64:	3b08      	subs	r3, #8
 8001a66:	2120      	movs	r1, #32
 8001a68:	0028      	movs	r0, r5
 8001a6a:	1aca      	subs	r2, r1, r3
 8001a6c:	40d0      	lsrs	r0, r2
 8001a6e:	409c      	lsls	r4, r3
 8001a70:	0002      	movs	r2, r0
 8001a72:	409d      	lsls	r5, r3
 8001a74:	4322      	orrs	r2, r4
 8001a76:	429f      	cmp	r7, r3
 8001a78:	dd00      	ble.n	8001a7c <__aeabi_dsub+0xf4>
 8001a7a:	e177      	b.n	8001d6c <__aeabi_dsub+0x3e4>
 8001a7c:	1bd8      	subs	r0, r3, r7
 8001a7e:	3001      	adds	r0, #1
 8001a80:	1a09      	subs	r1, r1, r0
 8001a82:	002c      	movs	r4, r5
 8001a84:	408d      	lsls	r5, r1
 8001a86:	40c4      	lsrs	r4, r0
 8001a88:	1e6b      	subs	r3, r5, #1
 8001a8a:	419d      	sbcs	r5, r3
 8001a8c:	0013      	movs	r3, r2
 8001a8e:	40c2      	lsrs	r2, r0
 8001a90:	408b      	lsls	r3, r1
 8001a92:	4325      	orrs	r5, r4
 8001a94:	2700      	movs	r7, #0
 8001a96:	0014      	movs	r4, r2
 8001a98:	431d      	orrs	r5, r3
 8001a9a:	076b      	lsls	r3, r5, #29
 8001a9c:	d009      	beq.n	8001ab2 <__aeabi_dsub+0x12a>
 8001a9e:	230f      	movs	r3, #15
 8001aa0:	402b      	ands	r3, r5
 8001aa2:	2b04      	cmp	r3, #4
 8001aa4:	d005      	beq.n	8001ab2 <__aeabi_dsub+0x12a>
 8001aa6:	1d2b      	adds	r3, r5, #4
 8001aa8:	42ab      	cmp	r3, r5
 8001aaa:	41ad      	sbcs	r5, r5
 8001aac:	426d      	negs	r5, r5
 8001aae:	1964      	adds	r4, r4, r5
 8001ab0:	001d      	movs	r5, r3
 8001ab2:	0223      	lsls	r3, r4, #8
 8001ab4:	d400      	bmi.n	8001ab8 <__aeabi_dsub+0x130>
 8001ab6:	e140      	b.n	8001d3a <__aeabi_dsub+0x3b2>
 8001ab8:	4a88      	ldr	r2, [pc, #544]	@ (8001cdc <__aeabi_dsub+0x354>)
 8001aba:	3701      	adds	r7, #1
 8001abc:	4297      	cmp	r7, r2
 8001abe:	d100      	bne.n	8001ac2 <__aeabi_dsub+0x13a>
 8001ac0:	e101      	b.n	8001cc6 <__aeabi_dsub+0x33e>
 8001ac2:	2601      	movs	r6, #1
 8001ac4:	4643      	mov	r3, r8
 8001ac6:	4986      	ldr	r1, [pc, #536]	@ (8001ce0 <__aeabi_dsub+0x358>)
 8001ac8:	08ed      	lsrs	r5, r5, #3
 8001aca:	4021      	ands	r1, r4
 8001acc:	074a      	lsls	r2, r1, #29
 8001ace:	432a      	orrs	r2, r5
 8001ad0:	057c      	lsls	r4, r7, #21
 8001ad2:	024d      	lsls	r5, r1, #9
 8001ad4:	0b2d      	lsrs	r5, r5, #12
 8001ad6:	0d64      	lsrs	r4, r4, #21
 8001ad8:	401e      	ands	r6, r3
 8001ada:	0524      	lsls	r4, r4, #20
 8001adc:	432c      	orrs	r4, r5
 8001ade:	07f6      	lsls	r6, r6, #31
 8001ae0:	4334      	orrs	r4, r6
 8001ae2:	0010      	movs	r0, r2
 8001ae4:	0021      	movs	r1, r4
 8001ae6:	b005      	add	sp, #20
 8001ae8:	bcf0      	pop	{r4, r5, r6, r7}
 8001aea:	46bb      	mov	fp, r7
 8001aec:	46b2      	mov	sl, r6
 8001aee:	46a9      	mov	r9, r5
 8001af0:	46a0      	mov	r8, r4
 8001af2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001af4:	2d00      	cmp	r5, #0
 8001af6:	dc00      	bgt.n	8001afa <__aeabi_dsub+0x172>
 8001af8:	e2d0      	b.n	800209c <__aeabi_dsub+0x714>
 8001afa:	4649      	mov	r1, r9
 8001afc:	2900      	cmp	r1, #0
 8001afe:	d000      	beq.n	8001b02 <__aeabi_dsub+0x17a>
 8001b00:	e0d4      	b.n	8001cac <__aeabi_dsub+0x324>
 8001b02:	4661      	mov	r1, ip
 8001b04:	9b02      	ldr	r3, [sp, #8]
 8001b06:	4319      	orrs	r1, r3
 8001b08:	d100      	bne.n	8001b0c <__aeabi_dsub+0x184>
 8001b0a:	e12b      	b.n	8001d64 <__aeabi_dsub+0x3dc>
 8001b0c:	1e69      	subs	r1, r5, #1
 8001b0e:	2d01      	cmp	r5, #1
 8001b10:	d100      	bne.n	8001b14 <__aeabi_dsub+0x18c>
 8001b12:	e1d9      	b.n	8001ec8 <__aeabi_dsub+0x540>
 8001b14:	4295      	cmp	r5, r2
 8001b16:	d100      	bne.n	8001b1a <__aeabi_dsub+0x192>
 8001b18:	e10a      	b.n	8001d30 <__aeabi_dsub+0x3a8>
 8001b1a:	2501      	movs	r5, #1
 8001b1c:	2938      	cmp	r1, #56	@ 0x38
 8001b1e:	dc17      	bgt.n	8001b50 <__aeabi_dsub+0x1c8>
 8001b20:	468a      	mov	sl, r1
 8001b22:	4653      	mov	r3, sl
 8001b24:	2b1f      	cmp	r3, #31
 8001b26:	dd00      	ble.n	8001b2a <__aeabi_dsub+0x1a2>
 8001b28:	e1e7      	b.n	8001efa <__aeabi_dsub+0x572>
 8001b2a:	2220      	movs	r2, #32
 8001b2c:	1ad2      	subs	r2, r2, r3
 8001b2e:	9b02      	ldr	r3, [sp, #8]
 8001b30:	4661      	mov	r1, ip
 8001b32:	4093      	lsls	r3, r2
 8001b34:	001d      	movs	r5, r3
 8001b36:	4653      	mov	r3, sl
 8001b38:	40d9      	lsrs	r1, r3
 8001b3a:	4663      	mov	r3, ip
 8001b3c:	4093      	lsls	r3, r2
 8001b3e:	001a      	movs	r2, r3
 8001b40:	430d      	orrs	r5, r1
 8001b42:	1e51      	subs	r1, r2, #1
 8001b44:	418a      	sbcs	r2, r1
 8001b46:	4653      	mov	r3, sl
 8001b48:	4315      	orrs	r5, r2
 8001b4a:	9a02      	ldr	r2, [sp, #8]
 8001b4c:	40da      	lsrs	r2, r3
 8001b4e:	18a4      	adds	r4, r4, r2
 8001b50:	182d      	adds	r5, r5, r0
 8001b52:	4285      	cmp	r5, r0
 8001b54:	4180      	sbcs	r0, r0
 8001b56:	4240      	negs	r0, r0
 8001b58:	1824      	adds	r4, r4, r0
 8001b5a:	0223      	lsls	r3, r4, #8
 8001b5c:	d400      	bmi.n	8001b60 <__aeabi_dsub+0x1d8>
 8001b5e:	e0b6      	b.n	8001cce <__aeabi_dsub+0x346>
 8001b60:	4b5e      	ldr	r3, [pc, #376]	@ (8001cdc <__aeabi_dsub+0x354>)
 8001b62:	3701      	adds	r7, #1
 8001b64:	429f      	cmp	r7, r3
 8001b66:	d100      	bne.n	8001b6a <__aeabi_dsub+0x1e2>
 8001b68:	e0ad      	b.n	8001cc6 <__aeabi_dsub+0x33e>
 8001b6a:	2101      	movs	r1, #1
 8001b6c:	4b5c      	ldr	r3, [pc, #368]	@ (8001ce0 <__aeabi_dsub+0x358>)
 8001b6e:	086a      	lsrs	r2, r5, #1
 8001b70:	401c      	ands	r4, r3
 8001b72:	4029      	ands	r1, r5
 8001b74:	430a      	orrs	r2, r1
 8001b76:	07e5      	lsls	r5, r4, #31
 8001b78:	4315      	orrs	r5, r2
 8001b7a:	0864      	lsrs	r4, r4, #1
 8001b7c:	e78d      	b.n	8001a9a <__aeabi_dsub+0x112>
 8001b7e:	4a59      	ldr	r2, [pc, #356]	@ (8001ce4 <__aeabi_dsub+0x35c>)
 8001b80:	9b02      	ldr	r3, [sp, #8]
 8001b82:	4692      	mov	sl, r2
 8001b84:	4662      	mov	r2, ip
 8001b86:	44ba      	add	sl, r7
 8001b88:	431a      	orrs	r2, r3
 8001b8a:	d02c      	beq.n	8001be6 <__aeabi_dsub+0x25e>
 8001b8c:	428e      	cmp	r6, r1
 8001b8e:	d02e      	beq.n	8001bee <__aeabi_dsub+0x266>
 8001b90:	4652      	mov	r2, sl
 8001b92:	2a00      	cmp	r2, #0
 8001b94:	d060      	beq.n	8001c58 <__aeabi_dsub+0x2d0>
 8001b96:	2f00      	cmp	r7, #0
 8001b98:	d100      	bne.n	8001b9c <__aeabi_dsub+0x214>
 8001b9a:	e0db      	b.n	8001d54 <__aeabi_dsub+0x3cc>
 8001b9c:	4663      	mov	r3, ip
 8001b9e:	000e      	movs	r6, r1
 8001ba0:	9c02      	ldr	r4, [sp, #8]
 8001ba2:	08d8      	lsrs	r0, r3, #3
 8001ba4:	0762      	lsls	r2, r4, #29
 8001ba6:	4302      	orrs	r2, r0
 8001ba8:	08e4      	lsrs	r4, r4, #3
 8001baa:	0013      	movs	r3, r2
 8001bac:	4323      	orrs	r3, r4
 8001bae:	d100      	bne.n	8001bb2 <__aeabi_dsub+0x22a>
 8001bb0:	e254      	b.n	800205c <__aeabi_dsub+0x6d4>
 8001bb2:	2580      	movs	r5, #128	@ 0x80
 8001bb4:	032d      	lsls	r5, r5, #12
 8001bb6:	4325      	orrs	r5, r4
 8001bb8:	032d      	lsls	r5, r5, #12
 8001bba:	4c48      	ldr	r4, [pc, #288]	@ (8001cdc <__aeabi_dsub+0x354>)
 8001bbc:	0b2d      	lsrs	r5, r5, #12
 8001bbe:	e78c      	b.n	8001ada <__aeabi_dsub+0x152>
 8001bc0:	4661      	mov	r1, ip
 8001bc2:	9b02      	ldr	r3, [sp, #8]
 8001bc4:	4319      	orrs	r1, r3
 8001bc6:	d100      	bne.n	8001bca <__aeabi_dsub+0x242>
 8001bc8:	e0cc      	b.n	8001d64 <__aeabi_dsub+0x3dc>
 8001bca:	0029      	movs	r1, r5
 8001bcc:	3901      	subs	r1, #1
 8001bce:	2d01      	cmp	r5, #1
 8001bd0:	d100      	bne.n	8001bd4 <__aeabi_dsub+0x24c>
 8001bd2:	e188      	b.n	8001ee6 <__aeabi_dsub+0x55e>
 8001bd4:	4295      	cmp	r5, r2
 8001bd6:	d100      	bne.n	8001bda <__aeabi_dsub+0x252>
 8001bd8:	e0aa      	b.n	8001d30 <__aeabi_dsub+0x3a8>
 8001bda:	2501      	movs	r5, #1
 8001bdc:	2938      	cmp	r1, #56	@ 0x38
 8001bde:	dd00      	ble.n	8001be2 <__aeabi_dsub+0x25a>
 8001be0:	e72f      	b.n	8001a42 <__aeabi_dsub+0xba>
 8001be2:	468a      	mov	sl, r1
 8001be4:	e718      	b.n	8001a18 <__aeabi_dsub+0x90>
 8001be6:	2201      	movs	r2, #1
 8001be8:	4051      	eors	r1, r2
 8001bea:	428e      	cmp	r6, r1
 8001bec:	d1d0      	bne.n	8001b90 <__aeabi_dsub+0x208>
 8001bee:	4653      	mov	r3, sl
 8001bf0:	2b00      	cmp	r3, #0
 8001bf2:	d100      	bne.n	8001bf6 <__aeabi_dsub+0x26e>
 8001bf4:	e0be      	b.n	8001d74 <__aeabi_dsub+0x3ec>
 8001bf6:	2f00      	cmp	r7, #0
 8001bf8:	d000      	beq.n	8001bfc <__aeabi_dsub+0x274>
 8001bfa:	e138      	b.n	8001e6e <__aeabi_dsub+0x4e6>
 8001bfc:	46ca      	mov	sl, r9
 8001bfe:	0022      	movs	r2, r4
 8001c00:	4302      	orrs	r2, r0
 8001c02:	d100      	bne.n	8001c06 <__aeabi_dsub+0x27e>
 8001c04:	e1e2      	b.n	8001fcc <__aeabi_dsub+0x644>
 8001c06:	4653      	mov	r3, sl
 8001c08:	1e59      	subs	r1, r3, #1
 8001c0a:	2b01      	cmp	r3, #1
 8001c0c:	d100      	bne.n	8001c10 <__aeabi_dsub+0x288>
 8001c0e:	e20d      	b.n	800202c <__aeabi_dsub+0x6a4>
 8001c10:	4a32      	ldr	r2, [pc, #200]	@ (8001cdc <__aeabi_dsub+0x354>)
 8001c12:	4592      	cmp	sl, r2
 8001c14:	d100      	bne.n	8001c18 <__aeabi_dsub+0x290>
 8001c16:	e1d2      	b.n	8001fbe <__aeabi_dsub+0x636>
 8001c18:	2701      	movs	r7, #1
 8001c1a:	2938      	cmp	r1, #56	@ 0x38
 8001c1c:	dc13      	bgt.n	8001c46 <__aeabi_dsub+0x2be>
 8001c1e:	291f      	cmp	r1, #31
 8001c20:	dd00      	ble.n	8001c24 <__aeabi_dsub+0x29c>
 8001c22:	e1ee      	b.n	8002002 <__aeabi_dsub+0x67a>
 8001c24:	2220      	movs	r2, #32
 8001c26:	9b02      	ldr	r3, [sp, #8]
 8001c28:	1a52      	subs	r2, r2, r1
 8001c2a:	0025      	movs	r5, r4
 8001c2c:	0007      	movs	r7, r0
 8001c2e:	469a      	mov	sl, r3
 8001c30:	40cc      	lsrs	r4, r1
 8001c32:	4090      	lsls	r0, r2
 8001c34:	4095      	lsls	r5, r2
 8001c36:	40cf      	lsrs	r7, r1
 8001c38:	44a2      	add	sl, r4
 8001c3a:	1e42      	subs	r2, r0, #1
 8001c3c:	4190      	sbcs	r0, r2
 8001c3e:	4653      	mov	r3, sl
 8001c40:	432f      	orrs	r7, r5
 8001c42:	4307      	orrs	r7, r0
 8001c44:	9302      	str	r3, [sp, #8]
 8001c46:	003d      	movs	r5, r7
 8001c48:	4465      	add	r5, ip
 8001c4a:	4565      	cmp	r5, ip
 8001c4c:	4192      	sbcs	r2, r2
 8001c4e:	9b02      	ldr	r3, [sp, #8]
 8001c50:	4252      	negs	r2, r2
 8001c52:	464f      	mov	r7, r9
 8001c54:	18d4      	adds	r4, r2, r3
 8001c56:	e780      	b.n	8001b5a <__aeabi_dsub+0x1d2>
 8001c58:	4a23      	ldr	r2, [pc, #140]	@ (8001ce8 <__aeabi_dsub+0x360>)
 8001c5a:	1c7d      	adds	r5, r7, #1
 8001c5c:	4215      	tst	r5, r2
 8001c5e:	d000      	beq.n	8001c62 <__aeabi_dsub+0x2da>
 8001c60:	e0aa      	b.n	8001db8 <__aeabi_dsub+0x430>
 8001c62:	4662      	mov	r2, ip
 8001c64:	0025      	movs	r5, r4
 8001c66:	9b02      	ldr	r3, [sp, #8]
 8001c68:	4305      	orrs	r5, r0
 8001c6a:	431a      	orrs	r2, r3
 8001c6c:	2f00      	cmp	r7, #0
 8001c6e:	d000      	beq.n	8001c72 <__aeabi_dsub+0x2ea>
 8001c70:	e0f5      	b.n	8001e5e <__aeabi_dsub+0x4d6>
 8001c72:	2d00      	cmp	r5, #0
 8001c74:	d100      	bne.n	8001c78 <__aeabi_dsub+0x2f0>
 8001c76:	e16b      	b.n	8001f50 <__aeabi_dsub+0x5c8>
 8001c78:	2a00      	cmp	r2, #0
 8001c7a:	d100      	bne.n	8001c7e <__aeabi_dsub+0x2f6>
 8001c7c:	e152      	b.n	8001f24 <__aeabi_dsub+0x59c>
 8001c7e:	4663      	mov	r3, ip
 8001c80:	1ac5      	subs	r5, r0, r3
 8001c82:	9b02      	ldr	r3, [sp, #8]
 8001c84:	1ae2      	subs	r2, r4, r3
 8001c86:	42a8      	cmp	r0, r5
 8001c88:	419b      	sbcs	r3, r3
 8001c8a:	425b      	negs	r3, r3
 8001c8c:	1ad3      	subs	r3, r2, r3
 8001c8e:	021a      	lsls	r2, r3, #8
 8001c90:	d400      	bmi.n	8001c94 <__aeabi_dsub+0x30c>
 8001c92:	e1d5      	b.n	8002040 <__aeabi_dsub+0x6b8>
 8001c94:	4663      	mov	r3, ip
 8001c96:	1a1d      	subs	r5, r3, r0
 8001c98:	45ac      	cmp	ip, r5
 8001c9a:	4192      	sbcs	r2, r2
 8001c9c:	2601      	movs	r6, #1
 8001c9e:	9b02      	ldr	r3, [sp, #8]
 8001ca0:	4252      	negs	r2, r2
 8001ca2:	1b1c      	subs	r4, r3, r4
 8001ca4:	4688      	mov	r8, r1
 8001ca6:	1aa4      	subs	r4, r4, r2
 8001ca8:	400e      	ands	r6, r1
 8001caa:	e6f6      	b.n	8001a9a <__aeabi_dsub+0x112>
 8001cac:	4297      	cmp	r7, r2
 8001cae:	d03f      	beq.n	8001d30 <__aeabi_dsub+0x3a8>
 8001cb0:	4652      	mov	r2, sl
 8001cb2:	2501      	movs	r5, #1
 8001cb4:	2a38      	cmp	r2, #56	@ 0x38
 8001cb6:	dd00      	ble.n	8001cba <__aeabi_dsub+0x332>
 8001cb8:	e74a      	b.n	8001b50 <__aeabi_dsub+0x1c8>
 8001cba:	2280      	movs	r2, #128	@ 0x80
 8001cbc:	9b02      	ldr	r3, [sp, #8]
 8001cbe:	0412      	lsls	r2, r2, #16
 8001cc0:	4313      	orrs	r3, r2
 8001cc2:	9302      	str	r3, [sp, #8]
 8001cc4:	e72d      	b.n	8001b22 <__aeabi_dsub+0x19a>
 8001cc6:	003c      	movs	r4, r7
 8001cc8:	2500      	movs	r5, #0
 8001cca:	2200      	movs	r2, #0
 8001ccc:	e705      	b.n	8001ada <__aeabi_dsub+0x152>
 8001cce:	2307      	movs	r3, #7
 8001cd0:	402b      	ands	r3, r5
 8001cd2:	2b00      	cmp	r3, #0
 8001cd4:	d000      	beq.n	8001cd8 <__aeabi_dsub+0x350>
 8001cd6:	e6e2      	b.n	8001a9e <__aeabi_dsub+0x116>
 8001cd8:	e06b      	b.n	8001db2 <__aeabi_dsub+0x42a>
 8001cda:	46c0      	nop			@ (mov r8, r8)
 8001cdc:	000007ff 	.word	0x000007ff
 8001ce0:	ff7fffff 	.word	0xff7fffff
 8001ce4:	fffff801 	.word	0xfffff801
 8001ce8:	000007fe 	.word	0x000007fe
 8001cec:	0028      	movs	r0, r5
 8001cee:	f000 fb63 	bl	80023b8 <__clzsi2>
 8001cf2:	0003      	movs	r3, r0
 8001cf4:	3318      	adds	r3, #24
 8001cf6:	2b1f      	cmp	r3, #31
 8001cf8:	dc00      	bgt.n	8001cfc <__aeabi_dsub+0x374>
 8001cfa:	e6b4      	b.n	8001a66 <__aeabi_dsub+0xde>
 8001cfc:	002a      	movs	r2, r5
 8001cfe:	3808      	subs	r0, #8
 8001d00:	4082      	lsls	r2, r0
 8001d02:	429f      	cmp	r7, r3
 8001d04:	dd00      	ble.n	8001d08 <__aeabi_dsub+0x380>
 8001d06:	e0b9      	b.n	8001e7c <__aeabi_dsub+0x4f4>
 8001d08:	1bdb      	subs	r3, r3, r7
 8001d0a:	1c58      	adds	r0, r3, #1
 8001d0c:	281f      	cmp	r0, #31
 8001d0e:	dc00      	bgt.n	8001d12 <__aeabi_dsub+0x38a>
 8001d10:	e1a0      	b.n	8002054 <__aeabi_dsub+0x6cc>
 8001d12:	0015      	movs	r5, r2
 8001d14:	3b1f      	subs	r3, #31
 8001d16:	40dd      	lsrs	r5, r3
 8001d18:	2820      	cmp	r0, #32
 8001d1a:	d005      	beq.n	8001d28 <__aeabi_dsub+0x3a0>
 8001d1c:	2340      	movs	r3, #64	@ 0x40
 8001d1e:	1a1b      	subs	r3, r3, r0
 8001d20:	409a      	lsls	r2, r3
 8001d22:	1e53      	subs	r3, r2, #1
 8001d24:	419a      	sbcs	r2, r3
 8001d26:	4315      	orrs	r5, r2
 8001d28:	2307      	movs	r3, #7
 8001d2a:	2700      	movs	r7, #0
 8001d2c:	402b      	ands	r3, r5
 8001d2e:	e7d0      	b.n	8001cd2 <__aeabi_dsub+0x34a>
 8001d30:	08c0      	lsrs	r0, r0, #3
 8001d32:	0762      	lsls	r2, r4, #29
 8001d34:	4302      	orrs	r2, r0
 8001d36:	08e4      	lsrs	r4, r4, #3
 8001d38:	e737      	b.n	8001baa <__aeabi_dsub+0x222>
 8001d3a:	08ea      	lsrs	r2, r5, #3
 8001d3c:	0763      	lsls	r3, r4, #29
 8001d3e:	431a      	orrs	r2, r3
 8001d40:	4bd3      	ldr	r3, [pc, #844]	@ (8002090 <__aeabi_dsub+0x708>)
 8001d42:	08e4      	lsrs	r4, r4, #3
 8001d44:	429f      	cmp	r7, r3
 8001d46:	d100      	bne.n	8001d4a <__aeabi_dsub+0x3c2>
 8001d48:	e72f      	b.n	8001baa <__aeabi_dsub+0x222>
 8001d4a:	0324      	lsls	r4, r4, #12
 8001d4c:	0b25      	lsrs	r5, r4, #12
 8001d4e:	057c      	lsls	r4, r7, #21
 8001d50:	0d64      	lsrs	r4, r4, #21
 8001d52:	e6c2      	b.n	8001ada <__aeabi_dsub+0x152>
 8001d54:	46ca      	mov	sl, r9
 8001d56:	0022      	movs	r2, r4
 8001d58:	4302      	orrs	r2, r0
 8001d5a:	d158      	bne.n	8001e0e <__aeabi_dsub+0x486>
 8001d5c:	4663      	mov	r3, ip
 8001d5e:	000e      	movs	r6, r1
 8001d60:	9c02      	ldr	r4, [sp, #8]
 8001d62:	9303      	str	r3, [sp, #12]
 8001d64:	9b03      	ldr	r3, [sp, #12]
 8001d66:	4657      	mov	r7, sl
 8001d68:	08da      	lsrs	r2, r3, #3
 8001d6a:	e7e7      	b.n	8001d3c <__aeabi_dsub+0x3b4>
 8001d6c:	4cc9      	ldr	r4, [pc, #804]	@ (8002094 <__aeabi_dsub+0x70c>)
 8001d6e:	1aff      	subs	r7, r7, r3
 8001d70:	4014      	ands	r4, r2
 8001d72:	e692      	b.n	8001a9a <__aeabi_dsub+0x112>
 8001d74:	4dc8      	ldr	r5, [pc, #800]	@ (8002098 <__aeabi_dsub+0x710>)
 8001d76:	1c7a      	adds	r2, r7, #1
 8001d78:	422a      	tst	r2, r5
 8001d7a:	d000      	beq.n	8001d7e <__aeabi_dsub+0x3f6>
 8001d7c:	e084      	b.n	8001e88 <__aeabi_dsub+0x500>
 8001d7e:	0022      	movs	r2, r4
 8001d80:	4302      	orrs	r2, r0
 8001d82:	2f00      	cmp	r7, #0
 8001d84:	d000      	beq.n	8001d88 <__aeabi_dsub+0x400>
 8001d86:	e0ef      	b.n	8001f68 <__aeabi_dsub+0x5e0>
 8001d88:	2a00      	cmp	r2, #0
 8001d8a:	d100      	bne.n	8001d8e <__aeabi_dsub+0x406>
 8001d8c:	e0e5      	b.n	8001f5a <__aeabi_dsub+0x5d2>
 8001d8e:	4662      	mov	r2, ip
 8001d90:	9902      	ldr	r1, [sp, #8]
 8001d92:	430a      	orrs	r2, r1
 8001d94:	d100      	bne.n	8001d98 <__aeabi_dsub+0x410>
 8001d96:	e0c5      	b.n	8001f24 <__aeabi_dsub+0x59c>
 8001d98:	4663      	mov	r3, ip
 8001d9a:	18c5      	adds	r5, r0, r3
 8001d9c:	468c      	mov	ip, r1
 8001d9e:	4285      	cmp	r5, r0
 8001da0:	4180      	sbcs	r0, r0
 8001da2:	4464      	add	r4, ip
 8001da4:	4240      	negs	r0, r0
 8001da6:	1824      	adds	r4, r4, r0
 8001da8:	0223      	lsls	r3, r4, #8
 8001daa:	d502      	bpl.n	8001db2 <__aeabi_dsub+0x42a>
 8001dac:	4bb9      	ldr	r3, [pc, #740]	@ (8002094 <__aeabi_dsub+0x70c>)
 8001dae:	3701      	adds	r7, #1
 8001db0:	401c      	ands	r4, r3
 8001db2:	46ba      	mov	sl, r7
 8001db4:	9503      	str	r5, [sp, #12]
 8001db6:	e7d5      	b.n	8001d64 <__aeabi_dsub+0x3dc>
 8001db8:	4662      	mov	r2, ip
 8001dba:	1a85      	subs	r5, r0, r2
 8001dbc:	42a8      	cmp	r0, r5
 8001dbe:	4192      	sbcs	r2, r2
 8001dc0:	4252      	negs	r2, r2
 8001dc2:	4691      	mov	r9, r2
 8001dc4:	9b02      	ldr	r3, [sp, #8]
 8001dc6:	1ae3      	subs	r3, r4, r3
 8001dc8:	001a      	movs	r2, r3
 8001dca:	464b      	mov	r3, r9
 8001dcc:	1ad2      	subs	r2, r2, r3
 8001dce:	0013      	movs	r3, r2
 8001dd0:	4691      	mov	r9, r2
 8001dd2:	021a      	lsls	r2, r3, #8
 8001dd4:	d46c      	bmi.n	8001eb0 <__aeabi_dsub+0x528>
 8001dd6:	464a      	mov	r2, r9
 8001dd8:	464c      	mov	r4, r9
 8001dda:	432a      	orrs	r2, r5
 8001ddc:	d000      	beq.n	8001de0 <__aeabi_dsub+0x458>
 8001dde:	e63a      	b.n	8001a56 <__aeabi_dsub+0xce>
 8001de0:	2600      	movs	r6, #0
 8001de2:	2400      	movs	r4, #0
 8001de4:	2500      	movs	r5, #0
 8001de6:	e678      	b.n	8001ada <__aeabi_dsub+0x152>
 8001de8:	9902      	ldr	r1, [sp, #8]
 8001dea:	4653      	mov	r3, sl
 8001dec:	000d      	movs	r5, r1
 8001dee:	3a20      	subs	r2, #32
 8001df0:	40d5      	lsrs	r5, r2
 8001df2:	2b20      	cmp	r3, #32
 8001df4:	d006      	beq.n	8001e04 <__aeabi_dsub+0x47c>
 8001df6:	2240      	movs	r2, #64	@ 0x40
 8001df8:	1ad2      	subs	r2, r2, r3
 8001dfa:	000b      	movs	r3, r1
 8001dfc:	4093      	lsls	r3, r2
 8001dfe:	4662      	mov	r2, ip
 8001e00:	431a      	orrs	r2, r3
 8001e02:	4693      	mov	fp, r2
 8001e04:	465b      	mov	r3, fp
 8001e06:	1e5a      	subs	r2, r3, #1
 8001e08:	4193      	sbcs	r3, r2
 8001e0a:	431d      	orrs	r5, r3
 8001e0c:	e619      	b.n	8001a42 <__aeabi_dsub+0xba>
 8001e0e:	4653      	mov	r3, sl
 8001e10:	1e5a      	subs	r2, r3, #1
 8001e12:	2b01      	cmp	r3, #1
 8001e14:	d100      	bne.n	8001e18 <__aeabi_dsub+0x490>
 8001e16:	e0c6      	b.n	8001fa6 <__aeabi_dsub+0x61e>
 8001e18:	4e9d      	ldr	r6, [pc, #628]	@ (8002090 <__aeabi_dsub+0x708>)
 8001e1a:	45b2      	cmp	sl, r6
 8001e1c:	d100      	bne.n	8001e20 <__aeabi_dsub+0x498>
 8001e1e:	e6bd      	b.n	8001b9c <__aeabi_dsub+0x214>
 8001e20:	4688      	mov	r8, r1
 8001e22:	000e      	movs	r6, r1
 8001e24:	2501      	movs	r5, #1
 8001e26:	2a38      	cmp	r2, #56	@ 0x38
 8001e28:	dc10      	bgt.n	8001e4c <__aeabi_dsub+0x4c4>
 8001e2a:	2a1f      	cmp	r2, #31
 8001e2c:	dc7f      	bgt.n	8001f2e <__aeabi_dsub+0x5a6>
 8001e2e:	2120      	movs	r1, #32
 8001e30:	0025      	movs	r5, r4
 8001e32:	1a89      	subs	r1, r1, r2
 8001e34:	0007      	movs	r7, r0
 8001e36:	4088      	lsls	r0, r1
 8001e38:	408d      	lsls	r5, r1
 8001e3a:	40d7      	lsrs	r7, r2
 8001e3c:	40d4      	lsrs	r4, r2
 8001e3e:	1e41      	subs	r1, r0, #1
 8001e40:	4188      	sbcs	r0, r1
 8001e42:	9b02      	ldr	r3, [sp, #8]
 8001e44:	433d      	orrs	r5, r7
 8001e46:	1b1b      	subs	r3, r3, r4
 8001e48:	4305      	orrs	r5, r0
 8001e4a:	9302      	str	r3, [sp, #8]
 8001e4c:	4662      	mov	r2, ip
 8001e4e:	1b55      	subs	r5, r2, r5
 8001e50:	45ac      	cmp	ip, r5
 8001e52:	4192      	sbcs	r2, r2
 8001e54:	9b02      	ldr	r3, [sp, #8]
 8001e56:	4252      	negs	r2, r2
 8001e58:	464f      	mov	r7, r9
 8001e5a:	1a9c      	subs	r4, r3, r2
 8001e5c:	e5f6      	b.n	8001a4c <__aeabi_dsub+0xc4>
 8001e5e:	2d00      	cmp	r5, #0
 8001e60:	d000      	beq.n	8001e64 <__aeabi_dsub+0x4dc>
 8001e62:	e0b7      	b.n	8001fd4 <__aeabi_dsub+0x64c>
 8001e64:	2a00      	cmp	r2, #0
 8001e66:	d100      	bne.n	8001e6a <__aeabi_dsub+0x4e2>
 8001e68:	e0f0      	b.n	800204c <__aeabi_dsub+0x6c4>
 8001e6a:	2601      	movs	r6, #1
 8001e6c:	400e      	ands	r6, r1
 8001e6e:	4663      	mov	r3, ip
 8001e70:	9802      	ldr	r0, [sp, #8]
 8001e72:	08d9      	lsrs	r1, r3, #3
 8001e74:	0742      	lsls	r2, r0, #29
 8001e76:	430a      	orrs	r2, r1
 8001e78:	08c4      	lsrs	r4, r0, #3
 8001e7a:	e696      	b.n	8001baa <__aeabi_dsub+0x222>
 8001e7c:	4c85      	ldr	r4, [pc, #532]	@ (8002094 <__aeabi_dsub+0x70c>)
 8001e7e:	1aff      	subs	r7, r7, r3
 8001e80:	4014      	ands	r4, r2
 8001e82:	0762      	lsls	r2, r4, #29
 8001e84:	08e4      	lsrs	r4, r4, #3
 8001e86:	e760      	b.n	8001d4a <__aeabi_dsub+0x3c2>
 8001e88:	4981      	ldr	r1, [pc, #516]	@ (8002090 <__aeabi_dsub+0x708>)
 8001e8a:	428a      	cmp	r2, r1
 8001e8c:	d100      	bne.n	8001e90 <__aeabi_dsub+0x508>
 8001e8e:	e0c9      	b.n	8002024 <__aeabi_dsub+0x69c>
 8001e90:	4663      	mov	r3, ip
 8001e92:	18c1      	adds	r1, r0, r3
 8001e94:	4281      	cmp	r1, r0
 8001e96:	4180      	sbcs	r0, r0
 8001e98:	9b02      	ldr	r3, [sp, #8]
 8001e9a:	4240      	negs	r0, r0
 8001e9c:	18e3      	adds	r3, r4, r3
 8001e9e:	181b      	adds	r3, r3, r0
 8001ea0:	07dd      	lsls	r5, r3, #31
 8001ea2:	085c      	lsrs	r4, r3, #1
 8001ea4:	2307      	movs	r3, #7
 8001ea6:	0849      	lsrs	r1, r1, #1
 8001ea8:	430d      	orrs	r5, r1
 8001eaa:	0017      	movs	r7, r2
 8001eac:	402b      	ands	r3, r5
 8001eae:	e710      	b.n	8001cd2 <__aeabi_dsub+0x34a>
 8001eb0:	4663      	mov	r3, ip
 8001eb2:	1a1d      	subs	r5, r3, r0
 8001eb4:	45ac      	cmp	ip, r5
 8001eb6:	4192      	sbcs	r2, r2
 8001eb8:	2601      	movs	r6, #1
 8001eba:	9b02      	ldr	r3, [sp, #8]
 8001ebc:	4252      	negs	r2, r2
 8001ebe:	1b1c      	subs	r4, r3, r4
 8001ec0:	4688      	mov	r8, r1
 8001ec2:	1aa4      	subs	r4, r4, r2
 8001ec4:	400e      	ands	r6, r1
 8001ec6:	e5c6      	b.n	8001a56 <__aeabi_dsub+0xce>
 8001ec8:	4663      	mov	r3, ip
 8001eca:	18c5      	adds	r5, r0, r3
 8001ecc:	9b02      	ldr	r3, [sp, #8]
 8001ece:	4285      	cmp	r5, r0
 8001ed0:	4180      	sbcs	r0, r0
 8001ed2:	469c      	mov	ip, r3
 8001ed4:	4240      	negs	r0, r0
 8001ed6:	4464      	add	r4, ip
 8001ed8:	1824      	adds	r4, r4, r0
 8001eda:	2701      	movs	r7, #1
 8001edc:	0223      	lsls	r3, r4, #8
 8001ede:	d400      	bmi.n	8001ee2 <__aeabi_dsub+0x55a>
 8001ee0:	e6f5      	b.n	8001cce <__aeabi_dsub+0x346>
 8001ee2:	2702      	movs	r7, #2
 8001ee4:	e641      	b.n	8001b6a <__aeabi_dsub+0x1e2>
 8001ee6:	4663      	mov	r3, ip
 8001ee8:	1ac5      	subs	r5, r0, r3
 8001eea:	42a8      	cmp	r0, r5
 8001eec:	4180      	sbcs	r0, r0
 8001eee:	9b02      	ldr	r3, [sp, #8]
 8001ef0:	4240      	negs	r0, r0
 8001ef2:	1ae4      	subs	r4, r4, r3
 8001ef4:	2701      	movs	r7, #1
 8001ef6:	1a24      	subs	r4, r4, r0
 8001ef8:	e5a8      	b.n	8001a4c <__aeabi_dsub+0xc4>
 8001efa:	9d02      	ldr	r5, [sp, #8]
 8001efc:	4652      	mov	r2, sl
 8001efe:	002b      	movs	r3, r5
 8001f00:	3a20      	subs	r2, #32
 8001f02:	40d3      	lsrs	r3, r2
 8001f04:	0019      	movs	r1, r3
 8001f06:	4653      	mov	r3, sl
 8001f08:	2b20      	cmp	r3, #32
 8001f0a:	d006      	beq.n	8001f1a <__aeabi_dsub+0x592>
 8001f0c:	2240      	movs	r2, #64	@ 0x40
 8001f0e:	1ad2      	subs	r2, r2, r3
 8001f10:	002b      	movs	r3, r5
 8001f12:	4093      	lsls	r3, r2
 8001f14:	4662      	mov	r2, ip
 8001f16:	431a      	orrs	r2, r3
 8001f18:	4693      	mov	fp, r2
 8001f1a:	465d      	mov	r5, fp
 8001f1c:	1e6b      	subs	r3, r5, #1
 8001f1e:	419d      	sbcs	r5, r3
 8001f20:	430d      	orrs	r5, r1
 8001f22:	e615      	b.n	8001b50 <__aeabi_dsub+0x1c8>
 8001f24:	0762      	lsls	r2, r4, #29
 8001f26:	08c0      	lsrs	r0, r0, #3
 8001f28:	4302      	orrs	r2, r0
 8001f2a:	08e4      	lsrs	r4, r4, #3
 8001f2c:	e70d      	b.n	8001d4a <__aeabi_dsub+0x3c2>
 8001f2e:	0011      	movs	r1, r2
 8001f30:	0027      	movs	r7, r4
 8001f32:	3920      	subs	r1, #32
 8001f34:	40cf      	lsrs	r7, r1
 8001f36:	2a20      	cmp	r2, #32
 8001f38:	d005      	beq.n	8001f46 <__aeabi_dsub+0x5be>
 8001f3a:	2140      	movs	r1, #64	@ 0x40
 8001f3c:	1a8a      	subs	r2, r1, r2
 8001f3e:	4094      	lsls	r4, r2
 8001f40:	0025      	movs	r5, r4
 8001f42:	4305      	orrs	r5, r0
 8001f44:	9503      	str	r5, [sp, #12]
 8001f46:	9d03      	ldr	r5, [sp, #12]
 8001f48:	1e6a      	subs	r2, r5, #1
 8001f4a:	4195      	sbcs	r5, r2
 8001f4c:	433d      	orrs	r5, r7
 8001f4e:	e77d      	b.n	8001e4c <__aeabi_dsub+0x4c4>
 8001f50:	2a00      	cmp	r2, #0
 8001f52:	d100      	bne.n	8001f56 <__aeabi_dsub+0x5ce>
 8001f54:	e744      	b.n	8001de0 <__aeabi_dsub+0x458>
 8001f56:	2601      	movs	r6, #1
 8001f58:	400e      	ands	r6, r1
 8001f5a:	4663      	mov	r3, ip
 8001f5c:	08d9      	lsrs	r1, r3, #3
 8001f5e:	9b02      	ldr	r3, [sp, #8]
 8001f60:	075a      	lsls	r2, r3, #29
 8001f62:	430a      	orrs	r2, r1
 8001f64:	08dc      	lsrs	r4, r3, #3
 8001f66:	e6f0      	b.n	8001d4a <__aeabi_dsub+0x3c2>
 8001f68:	2a00      	cmp	r2, #0
 8001f6a:	d028      	beq.n	8001fbe <__aeabi_dsub+0x636>
 8001f6c:	4662      	mov	r2, ip
 8001f6e:	9f02      	ldr	r7, [sp, #8]
 8001f70:	08c0      	lsrs	r0, r0, #3
 8001f72:	433a      	orrs	r2, r7
 8001f74:	d100      	bne.n	8001f78 <__aeabi_dsub+0x5f0>
 8001f76:	e6dc      	b.n	8001d32 <__aeabi_dsub+0x3aa>
 8001f78:	0762      	lsls	r2, r4, #29
 8001f7a:	4310      	orrs	r0, r2
 8001f7c:	2280      	movs	r2, #128	@ 0x80
 8001f7e:	08e4      	lsrs	r4, r4, #3
 8001f80:	0312      	lsls	r2, r2, #12
 8001f82:	4214      	tst	r4, r2
 8001f84:	d009      	beq.n	8001f9a <__aeabi_dsub+0x612>
 8001f86:	08fd      	lsrs	r5, r7, #3
 8001f88:	4215      	tst	r5, r2
 8001f8a:	d106      	bne.n	8001f9a <__aeabi_dsub+0x612>
 8001f8c:	4663      	mov	r3, ip
 8001f8e:	2601      	movs	r6, #1
 8001f90:	002c      	movs	r4, r5
 8001f92:	08d8      	lsrs	r0, r3, #3
 8001f94:	077b      	lsls	r3, r7, #29
 8001f96:	4318      	orrs	r0, r3
 8001f98:	400e      	ands	r6, r1
 8001f9a:	0f42      	lsrs	r2, r0, #29
 8001f9c:	00c0      	lsls	r0, r0, #3
 8001f9e:	08c0      	lsrs	r0, r0, #3
 8001fa0:	0752      	lsls	r2, r2, #29
 8001fa2:	4302      	orrs	r2, r0
 8001fa4:	e601      	b.n	8001baa <__aeabi_dsub+0x222>
 8001fa6:	4663      	mov	r3, ip
 8001fa8:	1a1d      	subs	r5, r3, r0
 8001faa:	45ac      	cmp	ip, r5
 8001fac:	4192      	sbcs	r2, r2
 8001fae:	9b02      	ldr	r3, [sp, #8]
 8001fb0:	4252      	negs	r2, r2
 8001fb2:	1b1c      	subs	r4, r3, r4
 8001fb4:	000e      	movs	r6, r1
 8001fb6:	4688      	mov	r8, r1
 8001fb8:	2701      	movs	r7, #1
 8001fba:	1aa4      	subs	r4, r4, r2
 8001fbc:	e546      	b.n	8001a4c <__aeabi_dsub+0xc4>
 8001fbe:	4663      	mov	r3, ip
 8001fc0:	08d9      	lsrs	r1, r3, #3
 8001fc2:	9b02      	ldr	r3, [sp, #8]
 8001fc4:	075a      	lsls	r2, r3, #29
 8001fc6:	430a      	orrs	r2, r1
 8001fc8:	08dc      	lsrs	r4, r3, #3
 8001fca:	e5ee      	b.n	8001baa <__aeabi_dsub+0x222>
 8001fcc:	4663      	mov	r3, ip
 8001fce:	9c02      	ldr	r4, [sp, #8]
 8001fd0:	9303      	str	r3, [sp, #12]
 8001fd2:	e6c7      	b.n	8001d64 <__aeabi_dsub+0x3dc>
 8001fd4:	08c0      	lsrs	r0, r0, #3
 8001fd6:	2a00      	cmp	r2, #0
 8001fd8:	d100      	bne.n	8001fdc <__aeabi_dsub+0x654>
 8001fda:	e6aa      	b.n	8001d32 <__aeabi_dsub+0x3aa>
 8001fdc:	0762      	lsls	r2, r4, #29
 8001fde:	4310      	orrs	r0, r2
 8001fe0:	2280      	movs	r2, #128	@ 0x80
 8001fe2:	08e4      	lsrs	r4, r4, #3
 8001fe4:	0312      	lsls	r2, r2, #12
 8001fe6:	4214      	tst	r4, r2
 8001fe8:	d0d7      	beq.n	8001f9a <__aeabi_dsub+0x612>
 8001fea:	9f02      	ldr	r7, [sp, #8]
 8001fec:	08fd      	lsrs	r5, r7, #3
 8001fee:	4215      	tst	r5, r2
 8001ff0:	d1d3      	bne.n	8001f9a <__aeabi_dsub+0x612>
 8001ff2:	4663      	mov	r3, ip
 8001ff4:	2601      	movs	r6, #1
 8001ff6:	08d8      	lsrs	r0, r3, #3
 8001ff8:	077b      	lsls	r3, r7, #29
 8001ffa:	002c      	movs	r4, r5
 8001ffc:	4318      	orrs	r0, r3
 8001ffe:	400e      	ands	r6, r1
 8002000:	e7cb      	b.n	8001f9a <__aeabi_dsub+0x612>
 8002002:	000a      	movs	r2, r1
 8002004:	0027      	movs	r7, r4
 8002006:	3a20      	subs	r2, #32
 8002008:	40d7      	lsrs	r7, r2
 800200a:	2920      	cmp	r1, #32
 800200c:	d005      	beq.n	800201a <__aeabi_dsub+0x692>
 800200e:	2240      	movs	r2, #64	@ 0x40
 8002010:	1a52      	subs	r2, r2, r1
 8002012:	4094      	lsls	r4, r2
 8002014:	0025      	movs	r5, r4
 8002016:	4305      	orrs	r5, r0
 8002018:	9503      	str	r5, [sp, #12]
 800201a:	9d03      	ldr	r5, [sp, #12]
 800201c:	1e6a      	subs	r2, r5, #1
 800201e:	4195      	sbcs	r5, r2
 8002020:	432f      	orrs	r7, r5
 8002022:	e610      	b.n	8001c46 <__aeabi_dsub+0x2be>
 8002024:	0014      	movs	r4, r2
 8002026:	2500      	movs	r5, #0
 8002028:	2200      	movs	r2, #0
 800202a:	e556      	b.n	8001ada <__aeabi_dsub+0x152>
 800202c:	9b02      	ldr	r3, [sp, #8]
 800202e:	4460      	add	r0, ip
 8002030:	4699      	mov	r9, r3
 8002032:	4560      	cmp	r0, ip
 8002034:	4192      	sbcs	r2, r2
 8002036:	444c      	add	r4, r9
 8002038:	4252      	negs	r2, r2
 800203a:	0005      	movs	r5, r0
 800203c:	18a4      	adds	r4, r4, r2
 800203e:	e74c      	b.n	8001eda <__aeabi_dsub+0x552>
 8002040:	001a      	movs	r2, r3
 8002042:	001c      	movs	r4, r3
 8002044:	432a      	orrs	r2, r5
 8002046:	d000      	beq.n	800204a <__aeabi_dsub+0x6c2>
 8002048:	e6b3      	b.n	8001db2 <__aeabi_dsub+0x42a>
 800204a:	e6c9      	b.n	8001de0 <__aeabi_dsub+0x458>
 800204c:	2480      	movs	r4, #128	@ 0x80
 800204e:	2600      	movs	r6, #0
 8002050:	0324      	lsls	r4, r4, #12
 8002052:	e5ae      	b.n	8001bb2 <__aeabi_dsub+0x22a>
 8002054:	2120      	movs	r1, #32
 8002056:	2500      	movs	r5, #0
 8002058:	1a09      	subs	r1, r1, r0
 800205a:	e517      	b.n	8001a8c <__aeabi_dsub+0x104>
 800205c:	2200      	movs	r2, #0
 800205e:	2500      	movs	r5, #0
 8002060:	4c0b      	ldr	r4, [pc, #44]	@ (8002090 <__aeabi_dsub+0x708>)
 8002062:	e53a      	b.n	8001ada <__aeabi_dsub+0x152>
 8002064:	2d00      	cmp	r5, #0
 8002066:	d100      	bne.n	800206a <__aeabi_dsub+0x6e2>
 8002068:	e5f6      	b.n	8001c58 <__aeabi_dsub+0x2d0>
 800206a:	464b      	mov	r3, r9
 800206c:	1bda      	subs	r2, r3, r7
 800206e:	4692      	mov	sl, r2
 8002070:	2f00      	cmp	r7, #0
 8002072:	d100      	bne.n	8002076 <__aeabi_dsub+0x6ee>
 8002074:	e66f      	b.n	8001d56 <__aeabi_dsub+0x3ce>
 8002076:	2a38      	cmp	r2, #56	@ 0x38
 8002078:	dc05      	bgt.n	8002086 <__aeabi_dsub+0x6fe>
 800207a:	2680      	movs	r6, #128	@ 0x80
 800207c:	0436      	lsls	r6, r6, #16
 800207e:	4334      	orrs	r4, r6
 8002080:	4688      	mov	r8, r1
 8002082:	000e      	movs	r6, r1
 8002084:	e6d1      	b.n	8001e2a <__aeabi_dsub+0x4a2>
 8002086:	4688      	mov	r8, r1
 8002088:	000e      	movs	r6, r1
 800208a:	2501      	movs	r5, #1
 800208c:	e6de      	b.n	8001e4c <__aeabi_dsub+0x4c4>
 800208e:	46c0      	nop			@ (mov r8, r8)
 8002090:	000007ff 	.word	0x000007ff
 8002094:	ff7fffff 	.word	0xff7fffff
 8002098:	000007fe 	.word	0x000007fe
 800209c:	2d00      	cmp	r5, #0
 800209e:	d100      	bne.n	80020a2 <__aeabi_dsub+0x71a>
 80020a0:	e668      	b.n	8001d74 <__aeabi_dsub+0x3ec>
 80020a2:	464b      	mov	r3, r9
 80020a4:	1bd9      	subs	r1, r3, r7
 80020a6:	2f00      	cmp	r7, #0
 80020a8:	d101      	bne.n	80020ae <__aeabi_dsub+0x726>
 80020aa:	468a      	mov	sl, r1
 80020ac:	e5a7      	b.n	8001bfe <__aeabi_dsub+0x276>
 80020ae:	2701      	movs	r7, #1
 80020b0:	2938      	cmp	r1, #56	@ 0x38
 80020b2:	dd00      	ble.n	80020b6 <__aeabi_dsub+0x72e>
 80020b4:	e5c7      	b.n	8001c46 <__aeabi_dsub+0x2be>
 80020b6:	2280      	movs	r2, #128	@ 0x80
 80020b8:	0412      	lsls	r2, r2, #16
 80020ba:	4314      	orrs	r4, r2
 80020bc:	e5af      	b.n	8001c1e <__aeabi_dsub+0x296>
 80020be:	46c0      	nop			@ (mov r8, r8)

080020c0 <__aeabi_dcmpun>:
 80020c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80020c2:	46c6      	mov	lr, r8
 80020c4:	031e      	lsls	r6, r3, #12
 80020c6:	0b36      	lsrs	r6, r6, #12
 80020c8:	46b0      	mov	r8, r6
 80020ca:	4e0d      	ldr	r6, [pc, #52]	@ (8002100 <__aeabi_dcmpun+0x40>)
 80020cc:	030c      	lsls	r4, r1, #12
 80020ce:	004d      	lsls	r5, r1, #1
 80020d0:	005f      	lsls	r7, r3, #1
 80020d2:	b500      	push	{lr}
 80020d4:	0b24      	lsrs	r4, r4, #12
 80020d6:	0d6d      	lsrs	r5, r5, #21
 80020d8:	0d7f      	lsrs	r7, r7, #21
 80020da:	42b5      	cmp	r5, r6
 80020dc:	d00b      	beq.n	80020f6 <__aeabi_dcmpun+0x36>
 80020de:	4908      	ldr	r1, [pc, #32]	@ (8002100 <__aeabi_dcmpun+0x40>)
 80020e0:	2000      	movs	r0, #0
 80020e2:	428f      	cmp	r7, r1
 80020e4:	d104      	bne.n	80020f0 <__aeabi_dcmpun+0x30>
 80020e6:	4646      	mov	r6, r8
 80020e8:	4316      	orrs	r6, r2
 80020ea:	0030      	movs	r0, r6
 80020ec:	1e43      	subs	r3, r0, #1
 80020ee:	4198      	sbcs	r0, r3
 80020f0:	bc80      	pop	{r7}
 80020f2:	46b8      	mov	r8, r7
 80020f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80020f6:	4304      	orrs	r4, r0
 80020f8:	2001      	movs	r0, #1
 80020fa:	2c00      	cmp	r4, #0
 80020fc:	d1f8      	bne.n	80020f0 <__aeabi_dcmpun+0x30>
 80020fe:	e7ee      	b.n	80020de <__aeabi_dcmpun+0x1e>
 8002100:	000007ff 	.word	0x000007ff

08002104 <__aeabi_d2iz>:
 8002104:	000b      	movs	r3, r1
 8002106:	0002      	movs	r2, r0
 8002108:	b570      	push	{r4, r5, r6, lr}
 800210a:	4d16      	ldr	r5, [pc, #88]	@ (8002164 <__aeabi_d2iz+0x60>)
 800210c:	030c      	lsls	r4, r1, #12
 800210e:	b082      	sub	sp, #8
 8002110:	0049      	lsls	r1, r1, #1
 8002112:	2000      	movs	r0, #0
 8002114:	9200      	str	r2, [sp, #0]
 8002116:	9301      	str	r3, [sp, #4]
 8002118:	0b24      	lsrs	r4, r4, #12
 800211a:	0d49      	lsrs	r1, r1, #21
 800211c:	0fde      	lsrs	r6, r3, #31
 800211e:	42a9      	cmp	r1, r5
 8002120:	dd04      	ble.n	800212c <__aeabi_d2iz+0x28>
 8002122:	4811      	ldr	r0, [pc, #68]	@ (8002168 <__aeabi_d2iz+0x64>)
 8002124:	4281      	cmp	r1, r0
 8002126:	dd03      	ble.n	8002130 <__aeabi_d2iz+0x2c>
 8002128:	4b10      	ldr	r3, [pc, #64]	@ (800216c <__aeabi_d2iz+0x68>)
 800212a:	18f0      	adds	r0, r6, r3
 800212c:	b002      	add	sp, #8
 800212e:	bd70      	pop	{r4, r5, r6, pc}
 8002130:	2080      	movs	r0, #128	@ 0x80
 8002132:	0340      	lsls	r0, r0, #13
 8002134:	4320      	orrs	r0, r4
 8002136:	4c0e      	ldr	r4, [pc, #56]	@ (8002170 <__aeabi_d2iz+0x6c>)
 8002138:	1a64      	subs	r4, r4, r1
 800213a:	2c1f      	cmp	r4, #31
 800213c:	dd08      	ble.n	8002150 <__aeabi_d2iz+0x4c>
 800213e:	4b0d      	ldr	r3, [pc, #52]	@ (8002174 <__aeabi_d2iz+0x70>)
 8002140:	1a5b      	subs	r3, r3, r1
 8002142:	40d8      	lsrs	r0, r3
 8002144:	0003      	movs	r3, r0
 8002146:	4258      	negs	r0, r3
 8002148:	2e00      	cmp	r6, #0
 800214a:	d1ef      	bne.n	800212c <__aeabi_d2iz+0x28>
 800214c:	0018      	movs	r0, r3
 800214e:	e7ed      	b.n	800212c <__aeabi_d2iz+0x28>
 8002150:	4b09      	ldr	r3, [pc, #36]	@ (8002178 <__aeabi_d2iz+0x74>)
 8002152:	9a00      	ldr	r2, [sp, #0]
 8002154:	469c      	mov	ip, r3
 8002156:	0003      	movs	r3, r0
 8002158:	4461      	add	r1, ip
 800215a:	408b      	lsls	r3, r1
 800215c:	40e2      	lsrs	r2, r4
 800215e:	4313      	orrs	r3, r2
 8002160:	e7f1      	b.n	8002146 <__aeabi_d2iz+0x42>
 8002162:	46c0      	nop			@ (mov r8, r8)
 8002164:	000003fe 	.word	0x000003fe
 8002168:	0000041d 	.word	0x0000041d
 800216c:	7fffffff 	.word	0x7fffffff
 8002170:	00000433 	.word	0x00000433
 8002174:	00000413 	.word	0x00000413
 8002178:	fffffbed 	.word	0xfffffbed

0800217c <__aeabi_i2d>:
 800217c:	b570      	push	{r4, r5, r6, lr}
 800217e:	2800      	cmp	r0, #0
 8002180:	d016      	beq.n	80021b0 <__aeabi_i2d+0x34>
 8002182:	17c3      	asrs	r3, r0, #31
 8002184:	18c5      	adds	r5, r0, r3
 8002186:	405d      	eors	r5, r3
 8002188:	0fc4      	lsrs	r4, r0, #31
 800218a:	0028      	movs	r0, r5
 800218c:	f000 f914 	bl	80023b8 <__clzsi2>
 8002190:	4b10      	ldr	r3, [pc, #64]	@ (80021d4 <__aeabi_i2d+0x58>)
 8002192:	1a1b      	subs	r3, r3, r0
 8002194:	055b      	lsls	r3, r3, #21
 8002196:	0d5b      	lsrs	r3, r3, #21
 8002198:	280a      	cmp	r0, #10
 800219a:	dc14      	bgt.n	80021c6 <__aeabi_i2d+0x4a>
 800219c:	0002      	movs	r2, r0
 800219e:	002e      	movs	r6, r5
 80021a0:	3215      	adds	r2, #21
 80021a2:	4096      	lsls	r6, r2
 80021a4:	220b      	movs	r2, #11
 80021a6:	1a12      	subs	r2, r2, r0
 80021a8:	40d5      	lsrs	r5, r2
 80021aa:	032d      	lsls	r5, r5, #12
 80021ac:	0b2d      	lsrs	r5, r5, #12
 80021ae:	e003      	b.n	80021b8 <__aeabi_i2d+0x3c>
 80021b0:	2400      	movs	r4, #0
 80021b2:	2300      	movs	r3, #0
 80021b4:	2500      	movs	r5, #0
 80021b6:	2600      	movs	r6, #0
 80021b8:	051b      	lsls	r3, r3, #20
 80021ba:	432b      	orrs	r3, r5
 80021bc:	07e4      	lsls	r4, r4, #31
 80021be:	4323      	orrs	r3, r4
 80021c0:	0030      	movs	r0, r6
 80021c2:	0019      	movs	r1, r3
 80021c4:	bd70      	pop	{r4, r5, r6, pc}
 80021c6:	380b      	subs	r0, #11
 80021c8:	4085      	lsls	r5, r0
 80021ca:	032d      	lsls	r5, r5, #12
 80021cc:	2600      	movs	r6, #0
 80021ce:	0b2d      	lsrs	r5, r5, #12
 80021d0:	e7f2      	b.n	80021b8 <__aeabi_i2d+0x3c>
 80021d2:	46c0      	nop			@ (mov r8, r8)
 80021d4:	0000041e 	.word	0x0000041e

080021d8 <__aeabi_ui2d>:
 80021d8:	b510      	push	{r4, lr}
 80021da:	1e04      	subs	r4, r0, #0
 80021dc:	d010      	beq.n	8002200 <__aeabi_ui2d+0x28>
 80021de:	f000 f8eb 	bl	80023b8 <__clzsi2>
 80021e2:	4b0e      	ldr	r3, [pc, #56]	@ (800221c <__aeabi_ui2d+0x44>)
 80021e4:	1a1b      	subs	r3, r3, r0
 80021e6:	055b      	lsls	r3, r3, #21
 80021e8:	0d5b      	lsrs	r3, r3, #21
 80021ea:	280a      	cmp	r0, #10
 80021ec:	dc0f      	bgt.n	800220e <__aeabi_ui2d+0x36>
 80021ee:	220b      	movs	r2, #11
 80021f0:	0021      	movs	r1, r4
 80021f2:	1a12      	subs	r2, r2, r0
 80021f4:	40d1      	lsrs	r1, r2
 80021f6:	3015      	adds	r0, #21
 80021f8:	030a      	lsls	r2, r1, #12
 80021fa:	4084      	lsls	r4, r0
 80021fc:	0b12      	lsrs	r2, r2, #12
 80021fe:	e001      	b.n	8002204 <__aeabi_ui2d+0x2c>
 8002200:	2300      	movs	r3, #0
 8002202:	2200      	movs	r2, #0
 8002204:	051b      	lsls	r3, r3, #20
 8002206:	4313      	orrs	r3, r2
 8002208:	0020      	movs	r0, r4
 800220a:	0019      	movs	r1, r3
 800220c:	bd10      	pop	{r4, pc}
 800220e:	0022      	movs	r2, r4
 8002210:	380b      	subs	r0, #11
 8002212:	4082      	lsls	r2, r0
 8002214:	0312      	lsls	r2, r2, #12
 8002216:	2400      	movs	r4, #0
 8002218:	0b12      	lsrs	r2, r2, #12
 800221a:	e7f3      	b.n	8002204 <__aeabi_ui2d+0x2c>
 800221c:	0000041e 	.word	0x0000041e

08002220 <__aeabi_f2d>:
 8002220:	b570      	push	{r4, r5, r6, lr}
 8002222:	0242      	lsls	r2, r0, #9
 8002224:	0043      	lsls	r3, r0, #1
 8002226:	0fc4      	lsrs	r4, r0, #31
 8002228:	20fe      	movs	r0, #254	@ 0xfe
 800222a:	0e1b      	lsrs	r3, r3, #24
 800222c:	1c59      	adds	r1, r3, #1
 800222e:	0a55      	lsrs	r5, r2, #9
 8002230:	4208      	tst	r0, r1
 8002232:	d00c      	beq.n	800224e <__aeabi_f2d+0x2e>
 8002234:	21e0      	movs	r1, #224	@ 0xe0
 8002236:	0089      	lsls	r1, r1, #2
 8002238:	468c      	mov	ip, r1
 800223a:	076d      	lsls	r5, r5, #29
 800223c:	0b12      	lsrs	r2, r2, #12
 800223e:	4463      	add	r3, ip
 8002240:	051b      	lsls	r3, r3, #20
 8002242:	4313      	orrs	r3, r2
 8002244:	07e4      	lsls	r4, r4, #31
 8002246:	4323      	orrs	r3, r4
 8002248:	0028      	movs	r0, r5
 800224a:	0019      	movs	r1, r3
 800224c:	bd70      	pop	{r4, r5, r6, pc}
 800224e:	2b00      	cmp	r3, #0
 8002250:	d114      	bne.n	800227c <__aeabi_f2d+0x5c>
 8002252:	2d00      	cmp	r5, #0
 8002254:	d01b      	beq.n	800228e <__aeabi_f2d+0x6e>
 8002256:	0028      	movs	r0, r5
 8002258:	f000 f8ae 	bl	80023b8 <__clzsi2>
 800225c:	280a      	cmp	r0, #10
 800225e:	dc1c      	bgt.n	800229a <__aeabi_f2d+0x7a>
 8002260:	230b      	movs	r3, #11
 8002262:	002a      	movs	r2, r5
 8002264:	1a1b      	subs	r3, r3, r0
 8002266:	40da      	lsrs	r2, r3
 8002268:	0003      	movs	r3, r0
 800226a:	3315      	adds	r3, #21
 800226c:	409d      	lsls	r5, r3
 800226e:	4b0e      	ldr	r3, [pc, #56]	@ (80022a8 <__aeabi_f2d+0x88>)
 8002270:	0312      	lsls	r2, r2, #12
 8002272:	1a1b      	subs	r3, r3, r0
 8002274:	055b      	lsls	r3, r3, #21
 8002276:	0b12      	lsrs	r2, r2, #12
 8002278:	0d5b      	lsrs	r3, r3, #21
 800227a:	e7e1      	b.n	8002240 <__aeabi_f2d+0x20>
 800227c:	2d00      	cmp	r5, #0
 800227e:	d009      	beq.n	8002294 <__aeabi_f2d+0x74>
 8002280:	0b13      	lsrs	r3, r2, #12
 8002282:	2280      	movs	r2, #128	@ 0x80
 8002284:	0312      	lsls	r2, r2, #12
 8002286:	431a      	orrs	r2, r3
 8002288:	076d      	lsls	r5, r5, #29
 800228a:	4b08      	ldr	r3, [pc, #32]	@ (80022ac <__aeabi_f2d+0x8c>)
 800228c:	e7d8      	b.n	8002240 <__aeabi_f2d+0x20>
 800228e:	2300      	movs	r3, #0
 8002290:	2200      	movs	r2, #0
 8002292:	e7d5      	b.n	8002240 <__aeabi_f2d+0x20>
 8002294:	2200      	movs	r2, #0
 8002296:	4b05      	ldr	r3, [pc, #20]	@ (80022ac <__aeabi_f2d+0x8c>)
 8002298:	e7d2      	b.n	8002240 <__aeabi_f2d+0x20>
 800229a:	0003      	movs	r3, r0
 800229c:	002a      	movs	r2, r5
 800229e:	3b0b      	subs	r3, #11
 80022a0:	409a      	lsls	r2, r3
 80022a2:	2500      	movs	r5, #0
 80022a4:	e7e3      	b.n	800226e <__aeabi_f2d+0x4e>
 80022a6:	46c0      	nop			@ (mov r8, r8)
 80022a8:	00000389 	.word	0x00000389
 80022ac:	000007ff 	.word	0x000007ff

080022b0 <__aeabi_d2f>:
 80022b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80022b2:	004b      	lsls	r3, r1, #1
 80022b4:	030f      	lsls	r7, r1, #12
 80022b6:	0d5b      	lsrs	r3, r3, #21
 80022b8:	4c3b      	ldr	r4, [pc, #236]	@ (80023a8 <__aeabi_d2f+0xf8>)
 80022ba:	0f45      	lsrs	r5, r0, #29
 80022bc:	b083      	sub	sp, #12
 80022be:	0a7f      	lsrs	r7, r7, #9
 80022c0:	1c5e      	adds	r6, r3, #1
 80022c2:	432f      	orrs	r7, r5
 80022c4:	9000      	str	r0, [sp, #0]
 80022c6:	9101      	str	r1, [sp, #4]
 80022c8:	0fca      	lsrs	r2, r1, #31
 80022ca:	00c5      	lsls	r5, r0, #3
 80022cc:	4226      	tst	r6, r4
 80022ce:	d00b      	beq.n	80022e8 <__aeabi_d2f+0x38>
 80022d0:	4936      	ldr	r1, [pc, #216]	@ (80023ac <__aeabi_d2f+0xfc>)
 80022d2:	185c      	adds	r4, r3, r1
 80022d4:	2cfe      	cmp	r4, #254	@ 0xfe
 80022d6:	dd13      	ble.n	8002300 <__aeabi_d2f+0x50>
 80022d8:	20ff      	movs	r0, #255	@ 0xff
 80022da:	2300      	movs	r3, #0
 80022dc:	05c0      	lsls	r0, r0, #23
 80022de:	4318      	orrs	r0, r3
 80022e0:	07d2      	lsls	r2, r2, #31
 80022e2:	4310      	orrs	r0, r2
 80022e4:	b003      	add	sp, #12
 80022e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80022e8:	2b00      	cmp	r3, #0
 80022ea:	d102      	bne.n	80022f2 <__aeabi_d2f+0x42>
 80022ec:	2000      	movs	r0, #0
 80022ee:	2300      	movs	r3, #0
 80022f0:	e7f4      	b.n	80022dc <__aeabi_d2f+0x2c>
 80022f2:	433d      	orrs	r5, r7
 80022f4:	d0f0      	beq.n	80022d8 <__aeabi_d2f+0x28>
 80022f6:	2380      	movs	r3, #128	@ 0x80
 80022f8:	03db      	lsls	r3, r3, #15
 80022fa:	20ff      	movs	r0, #255	@ 0xff
 80022fc:	433b      	orrs	r3, r7
 80022fe:	e7ed      	b.n	80022dc <__aeabi_d2f+0x2c>
 8002300:	2c00      	cmp	r4, #0
 8002302:	dd14      	ble.n	800232e <__aeabi_d2f+0x7e>
 8002304:	9b00      	ldr	r3, [sp, #0]
 8002306:	00ff      	lsls	r7, r7, #3
 8002308:	019b      	lsls	r3, r3, #6
 800230a:	1e58      	subs	r0, r3, #1
 800230c:	4183      	sbcs	r3, r0
 800230e:	0f69      	lsrs	r1, r5, #29
 8002310:	433b      	orrs	r3, r7
 8002312:	430b      	orrs	r3, r1
 8002314:	0759      	lsls	r1, r3, #29
 8002316:	d041      	beq.n	800239c <__aeabi_d2f+0xec>
 8002318:	210f      	movs	r1, #15
 800231a:	4019      	ands	r1, r3
 800231c:	2904      	cmp	r1, #4
 800231e:	d028      	beq.n	8002372 <__aeabi_d2f+0xc2>
 8002320:	3304      	adds	r3, #4
 8002322:	0159      	lsls	r1, r3, #5
 8002324:	d525      	bpl.n	8002372 <__aeabi_d2f+0xc2>
 8002326:	3401      	adds	r4, #1
 8002328:	2300      	movs	r3, #0
 800232a:	b2e0      	uxtb	r0, r4
 800232c:	e7d6      	b.n	80022dc <__aeabi_d2f+0x2c>
 800232e:	0021      	movs	r1, r4
 8002330:	3117      	adds	r1, #23
 8002332:	dbdb      	blt.n	80022ec <__aeabi_d2f+0x3c>
 8002334:	2180      	movs	r1, #128	@ 0x80
 8002336:	201e      	movs	r0, #30
 8002338:	0409      	lsls	r1, r1, #16
 800233a:	4339      	orrs	r1, r7
 800233c:	1b00      	subs	r0, r0, r4
 800233e:	281f      	cmp	r0, #31
 8002340:	dd1b      	ble.n	800237a <__aeabi_d2f+0xca>
 8002342:	2602      	movs	r6, #2
 8002344:	4276      	negs	r6, r6
 8002346:	1b34      	subs	r4, r6, r4
 8002348:	000e      	movs	r6, r1
 800234a:	40e6      	lsrs	r6, r4
 800234c:	0034      	movs	r4, r6
 800234e:	2820      	cmp	r0, #32
 8002350:	d004      	beq.n	800235c <__aeabi_d2f+0xac>
 8002352:	4817      	ldr	r0, [pc, #92]	@ (80023b0 <__aeabi_d2f+0x100>)
 8002354:	4684      	mov	ip, r0
 8002356:	4463      	add	r3, ip
 8002358:	4099      	lsls	r1, r3
 800235a:	430d      	orrs	r5, r1
 800235c:	002b      	movs	r3, r5
 800235e:	1e59      	subs	r1, r3, #1
 8002360:	418b      	sbcs	r3, r1
 8002362:	4323      	orrs	r3, r4
 8002364:	0759      	lsls	r1, r3, #29
 8002366:	d015      	beq.n	8002394 <__aeabi_d2f+0xe4>
 8002368:	210f      	movs	r1, #15
 800236a:	2400      	movs	r4, #0
 800236c:	4019      	ands	r1, r3
 800236e:	2904      	cmp	r1, #4
 8002370:	d117      	bne.n	80023a2 <__aeabi_d2f+0xf2>
 8002372:	019b      	lsls	r3, r3, #6
 8002374:	0a5b      	lsrs	r3, r3, #9
 8002376:	b2e0      	uxtb	r0, r4
 8002378:	e7b0      	b.n	80022dc <__aeabi_d2f+0x2c>
 800237a:	4c0e      	ldr	r4, [pc, #56]	@ (80023b4 <__aeabi_d2f+0x104>)
 800237c:	191c      	adds	r4, r3, r4
 800237e:	002b      	movs	r3, r5
 8002380:	40a5      	lsls	r5, r4
 8002382:	40c3      	lsrs	r3, r0
 8002384:	40a1      	lsls	r1, r4
 8002386:	1e68      	subs	r0, r5, #1
 8002388:	4185      	sbcs	r5, r0
 800238a:	4329      	orrs	r1, r5
 800238c:	430b      	orrs	r3, r1
 800238e:	2400      	movs	r4, #0
 8002390:	0759      	lsls	r1, r3, #29
 8002392:	d1c1      	bne.n	8002318 <__aeabi_d2f+0x68>
 8002394:	019b      	lsls	r3, r3, #6
 8002396:	2000      	movs	r0, #0
 8002398:	0a5b      	lsrs	r3, r3, #9
 800239a:	e79f      	b.n	80022dc <__aeabi_d2f+0x2c>
 800239c:	08db      	lsrs	r3, r3, #3
 800239e:	b2e0      	uxtb	r0, r4
 80023a0:	e79c      	b.n	80022dc <__aeabi_d2f+0x2c>
 80023a2:	3304      	adds	r3, #4
 80023a4:	e7e5      	b.n	8002372 <__aeabi_d2f+0xc2>
 80023a6:	46c0      	nop			@ (mov r8, r8)
 80023a8:	000007fe 	.word	0x000007fe
 80023ac:	fffffc80 	.word	0xfffffc80
 80023b0:	fffffca2 	.word	0xfffffca2
 80023b4:	fffffc82 	.word	0xfffffc82

080023b8 <__clzsi2>:
 80023b8:	211c      	movs	r1, #28
 80023ba:	2301      	movs	r3, #1
 80023bc:	041b      	lsls	r3, r3, #16
 80023be:	4298      	cmp	r0, r3
 80023c0:	d301      	bcc.n	80023c6 <__clzsi2+0xe>
 80023c2:	0c00      	lsrs	r0, r0, #16
 80023c4:	3910      	subs	r1, #16
 80023c6:	0a1b      	lsrs	r3, r3, #8
 80023c8:	4298      	cmp	r0, r3
 80023ca:	d301      	bcc.n	80023d0 <__clzsi2+0x18>
 80023cc:	0a00      	lsrs	r0, r0, #8
 80023ce:	3908      	subs	r1, #8
 80023d0:	091b      	lsrs	r3, r3, #4
 80023d2:	4298      	cmp	r0, r3
 80023d4:	d301      	bcc.n	80023da <__clzsi2+0x22>
 80023d6:	0900      	lsrs	r0, r0, #4
 80023d8:	3904      	subs	r1, #4
 80023da:	a202      	add	r2, pc, #8	@ (adr r2, 80023e4 <__clzsi2+0x2c>)
 80023dc:	5c10      	ldrb	r0, [r2, r0]
 80023de:	1840      	adds	r0, r0, r1
 80023e0:	4770      	bx	lr
 80023e2:	46c0      	nop			@ (mov r8, r8)
 80023e4:	02020304 	.word	0x02020304
 80023e8:	01010101 	.word	0x01010101
	...

080023f4 <initPins>:
/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */


void initPins()
{
 80023f4:	b510      	push	{r4, lr}
	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, GPIO_PIN_RESET);
 80023f6:	2200      	movs	r2, #0
 80023f8:	2110      	movs	r1, #16
 80023fa:	4802      	ldr	r0, [pc, #8]	@ (8002404 <initPins+0x10>)
 80023fc:	f000 fe9e 	bl	800313c <HAL_GPIO_WritePin>
}
 8002400:	bd10      	pop	{r4, pc}
 8002402:	46c0      	nop			@ (mov r8, r8)
 8002404:	48000400 	.word	0x48000400

08002408 <lsm303dlhc_init_la>:
// linear acceleration
//for Compass click - Mikroelektronika
// https://github.com/z49x2vmq/lsm303/blob/master/lsm303dlhc.h
//https://z49x2vmq.github.io/2018/05/26/lsm303-stm32-hal/
void lsm303dlhc_init_la()
{
 8002408:	b530      	push	{r4, r5, lr}
		{CTRL_REG3_A, 0},
        {CTRL_REG4_A, FS_4G | HR}								// BDU (Block Data Update) - locks data until it is read, FS_4G - acceleration in ±4g, HR (High Resolution)
    };

    //sends first row of init
    if (HAL_I2C_Master_Transmit(&hi2c1, LA_ADDRESS, init[0], 2, HAL_MAX_DELAY) != HAL_OK)	// 2 is number of bytes that will be sent
 800240a:	2501      	movs	r5, #1
{
 800240c:	b085      	sub	sp, #20
    uint8_t init[2][2] =
 800240e:	2204      	movs	r2, #4
 8002410:	4915      	ldr	r1, [pc, #84]	@ (8002468 <lsm303dlhc_init_la+0x60>)
 8002412:	a803      	add	r0, sp, #12
 8002414:	f002 fda2 	bl	8004f5c <memcpy>
    if (HAL_I2C_Master_Transmit(&hi2c1, LA_ADDRESS, init[0], 2, HAL_MAX_DELAY) != HAL_OK)	// 2 is number of bytes that will be sent
 8002418:	4c14      	ldr	r4, [pc, #80]	@ (800246c <lsm303dlhc_init_la+0x64>)
 800241a:	426d      	negs	r5, r5
 800241c:	2302      	movs	r3, #2
 800241e:	2132      	movs	r1, #50	@ 0x32
 8002420:	0020      	movs	r0, r4
 8002422:	9500      	str	r5, [sp, #0]
 8002424:	aa03      	add	r2, sp, #12
 8002426:	f001 f86f 	bl	8003508 <HAL_I2C_Master_Transmit>
 800242a:	2800      	cmp	r0, #0
 800242c:	d11a      	bne.n	8002464 <lsm303dlhc_init_la+0x5c>
    {
    	 return;
    }
    //sends second row of init
    if (HAL_I2C_Master_Transmit(&hi2c1, LA_ADDRESS, init[1], 2, HAL_MAX_DELAY) != HAL_OK)
 800242e:	220e      	movs	r2, #14
 8002430:	2302      	movs	r3, #2
 8002432:	2132      	movs	r1, #50	@ 0x32
 8002434:	0020      	movs	r0, r4
 8002436:	9500      	str	r5, [sp, #0]
 8002438:	446a      	add	r2, sp
 800243a:	f001 f865 	bl	8003508 <HAL_I2C_Master_Transmit>
 800243e:	2800      	cmp	r0, #0
 8002440:	d110      	bne.n	8002464 <lsm303dlhc_init_la+0x5c>
    {
    	return;
    }
    //sends third row of init
	if (HAL_I2C_Master_Transmit(&hi2c1, LA_ADDRESS, init[2], 2, HAL_MAX_DELAY) != HAL_OK)
 8002442:	2302      	movs	r3, #2
 8002444:	2132      	movs	r1, #50	@ 0x32
 8002446:	0020      	movs	r0, r4
 8002448:	9500      	str	r5, [sp, #0]
 800244a:	aa04      	add	r2, sp, #16
 800244c:	f001 f85c 	bl	8003508 <HAL_I2C_Master_Transmit>
 8002450:	2800      	cmp	r0, #0
 8002452:	d107      	bne.n	8002464 <lsm303dlhc_init_la+0x5c>
	{
		return;
	}
    //sends 4. row of init
	if (HAL_I2C_Master_Transmit(&hi2c1, LA_ADDRESS, init[3], 2, HAL_MAX_DELAY) != HAL_OK)
 8002454:	2212      	movs	r2, #18
 8002456:	2302      	movs	r3, #2
 8002458:	2132      	movs	r1, #50	@ 0x32
 800245a:	0020      	movs	r0, r4
 800245c:	9500      	str	r5, [sp, #0]
 800245e:	446a      	add	r2, sp
 8002460:	f001 f852 	bl	8003508 <HAL_I2C_Master_Transmit>
	{
		return;
	}
}
 8002464:	b005      	add	sp, #20
 8002466:	bd30      	pop	{r4, r5, pc}
 8002468:	08007270 	.word	0x08007270
 800246c:	20000348 	.word	0x20000348

08002470 <lsm303dlhc_read_la>:
+--------+--------+--------+--------+--------+--------+
*/

void lsm303dlhc_read_la()
{
    uint8_t reg = OUT_X_L_A | 0b10000000;		// register from which we read data
 8002470:	2217      	movs	r2, #23
{
 8002472:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002474:	b08d      	sub	sp, #52	@ 0x34
    uint8_t reg = OUT_X_L_A | 0b10000000;		// register from which we read data
 8002476:	ab06      	add	r3, sp, #24
    // 0b10000000 - sets biggetst bit on 1 -> activates auto-increment on reading

    //we say that we want to read data from address in reg in the future
    if (HAL_I2C_Master_Transmit(&hi2c1, LA_ADDRESS, &reg, 1, 1000) != HAL_OK)		// 1000 is timeout
 8002478:	26fa      	movs	r6, #250	@ 0xfa
    uint8_t reg = OUT_X_L_A | 0b10000000;		// register from which we read data
 800247a:	18d2      	adds	r2, r2, r3
 800247c:	23a8      	movs	r3, #168	@ 0xa8
    if (HAL_I2C_Master_Transmit(&hi2c1, LA_ADDRESS, &reg, 1, 1000) != HAL_OK)		// 1000 is timeout
 800247e:	4d4d      	ldr	r5, [pc, #308]	@ (80025b4 <lsm303dlhc_read_la+0x144>)
 8002480:	00b6      	lsls	r6, r6, #2
    uint8_t reg = OUT_X_L_A | 0b10000000;		// register from which we read data
 8002482:	7013      	strb	r3, [r2, #0]
    if (HAL_I2C_Master_Transmit(&hi2c1, LA_ADDRESS, &reg, 1, 1000) != HAL_OK)		// 1000 is timeout
 8002484:	2132      	movs	r1, #50	@ 0x32
 8002486:	0028      	movs	r0, r5
 8002488:	9600      	str	r6, [sp, #0]
 800248a:	3ba7      	subs	r3, #167	@ 0xa7
 800248c:	f001 f83c 	bl	8003508 <HAL_I2C_Master_Transmit>
 8002490:	2800      	cmp	r0, #0
 8002492:	d000      	beq.n	8002496 <lsm303dlhc_read_la+0x26>
 8002494:	e08c      	b.n	80025b0 <lsm303dlhc_read_la+0x140>
    {
        return;
    }

    // receive data -> all three axes
    if (HAL_I2C_Master_Receive(&hi2c1, LA_ADDRESS, i2cData, 6, 1000) != HAL_OK)
 8002496:	4c48      	ldr	r4, [pc, #288]	@ (80025b8 <lsm303dlhc_read_la+0x148>)
 8002498:	2306      	movs	r3, #6
 800249a:	0022      	movs	r2, r4
 800249c:	2132      	movs	r1, #50	@ 0x32
 800249e:	0028      	movs	r0, r5
 80024a0:	9600      	str	r6, [sp, #0]
 80024a2:	f001 f8d1 	bl	8003648 <HAL_I2C_Master_Receive>
 80024a6:	2800      	cmp	r0, #0
 80024a8:	d000      	beq.n	80024ac <lsm303dlhc_read_la+0x3c>
 80024aa:	e081      	b.n	80025b0 <lsm303dlhc_read_la+0x140>
    {
        return;
    }

    // process data
    int16_t x = i2cData[1] << 8 | i2cData[0];
 80024ac:	7867      	ldrb	r7, [r4, #1]
 80024ae:	7823      	ldrb	r3, [r4, #0]
    int16_t y = i2cData[3] << 8 | i2cData[2];
 80024b0:	78e6      	ldrb	r6, [r4, #3]
    int16_t x = i2cData[1] << 8 | i2cData[0];
 80024b2:	023f      	lsls	r7, r7, #8
 80024b4:	431f      	orrs	r7, r3
    int16_t y = i2cData[3] << 8 | i2cData[2];
 80024b6:	78a3      	ldrb	r3, [r4, #2]
    int16_t z = i2cData[5] << 8 | i2cData[4];
 80024b8:	7965      	ldrb	r5, [r4, #5]
    int16_t y = i2cData[3] << 8 | i2cData[2];
 80024ba:	0236      	lsls	r6, r6, #8
 80024bc:	431e      	orrs	r6, r3
    int16_t z = i2cData[5] << 8 | i2cData[4];
 80024be:	7923      	ldrb	r3, [r4, #4]
 80024c0:	022d      	lsls	r5, r5, #8

    sprintf(buffer, "Linear Accelerometer (raw data): X value: %06d, Y value: %06d, Z value: %06d\n", x, y, z);
 80024c2:	4c3e      	ldr	r4, [pc, #248]	@ (80025bc <lsm303dlhc_read_la+0x14c>)
    int16_t z = i2cData[5] << 8 | i2cData[4];
 80024c4:	431d      	orrs	r5, r3
    int16_t x = i2cData[1] << 8 | i2cData[0];
 80024c6:	b23f      	sxth	r7, r7
    int16_t y = i2cData[3] << 8 | i2cData[2];
 80024c8:	b236      	sxth	r6, r6
    int16_t z = i2cData[5] << 8 | i2cData[4];
 80024ca:	b22d      	sxth	r5, r5
    sprintf(buffer, "Linear Accelerometer (raw data): X value: %06d, Y value: %06d, Z value: %06d\n", x, y, z);
 80024cc:	0033      	movs	r3, r6
 80024ce:	003a      	movs	r2, r7
 80024d0:	493b      	ldr	r1, [pc, #236]	@ (80025c0 <lsm303dlhc_read_la+0x150>)
 80024d2:	9500      	str	r5, [sp, #0]
 80024d4:	0020      	movs	r0, r4
 80024d6:	f002 fc19 	bl	8004d0c <siprintf>
    HAL_UART_Transmit(&huart2, buffer, strlen(buffer), HAL_MAX_DELAY);
 80024da:	0020      	movs	r0, r4
 80024dc:	f7fd fe14 	bl	8000108 <strlen>
 80024e0:	2301      	movs	r3, #1
 80024e2:	b282      	uxth	r2, r0
 80024e4:	4837      	ldr	r0, [pc, #220]	@ (80025c4 <lsm303dlhc_read_la+0x154>)
 80024e6:	425b      	negs	r3, r3
 80024e8:	0021      	movs	r1, r4
 80024ea:	9005      	str	r0, [sp, #20]
 80024ec:	f001 feb4 	bl	8004258 <HAL_UART_Transmit>

    float x1 = x / 8192.0;
 80024f0:	0038      	movs	r0, r7
 80024f2:	f7ff fe43 	bl	800217c <__aeabi_i2d>
 80024f6:	2200      	movs	r2, #0
 80024f8:	4b33      	ldr	r3, [pc, #204]	@ (80025c8 <lsm303dlhc_read_la+0x158>)
 80024fa:	f7fe ff7d 	bl	80013f8 <__aeabi_dmul>
 80024fe:	f7ff fed7 	bl	80022b0 <__aeabi_d2f>
    x1 *= 9.81;
 8002502:	f7ff fe8d 	bl	8002220 <__aeabi_f2d>
 8002506:	4a31      	ldr	r2, [pc, #196]	@ (80025cc <lsm303dlhc_read_la+0x15c>)
 8002508:	4b31      	ldr	r3, [pc, #196]	@ (80025d0 <lsm303dlhc_read_la+0x160>)
 800250a:	f7fe ff75 	bl	80013f8 <__aeabi_dmul>
 800250e:	9006      	str	r0, [sp, #24]
 8002510:	9107      	str	r1, [sp, #28]
    float y1 = y / 8192.0;
 8002512:	0030      	movs	r0, r6
 8002514:	f7ff fe32 	bl	800217c <__aeabi_i2d>
 8002518:	2200      	movs	r2, #0
 800251a:	4b2b      	ldr	r3, [pc, #172]	@ (80025c8 <lsm303dlhc_read_la+0x158>)
 800251c:	f7fe ff6c 	bl	80013f8 <__aeabi_dmul>
 8002520:	f7ff fec6 	bl	80022b0 <__aeabi_d2f>
	y1 *= 9.81;
 8002524:	f7ff fe7c 	bl	8002220 <__aeabi_f2d>
 8002528:	4a28      	ldr	r2, [pc, #160]	@ (80025cc <lsm303dlhc_read_la+0x15c>)
 800252a:	4b29      	ldr	r3, [pc, #164]	@ (80025d0 <lsm303dlhc_read_la+0x160>)
 800252c:	f7fe ff64 	bl	80013f8 <__aeabi_dmul>
 8002530:	9008      	str	r0, [sp, #32]
 8002532:	9109      	str	r1, [sp, #36]	@ 0x24
	float z1 = z / 8192.0;
 8002534:	0028      	movs	r0, r5
 8002536:	f7ff fe21 	bl	800217c <__aeabi_i2d>
 800253a:	2200      	movs	r2, #0
 800253c:	4b22      	ldr	r3, [pc, #136]	@ (80025c8 <lsm303dlhc_read_la+0x158>)
 800253e:	f7fe ff5b 	bl	80013f8 <__aeabi_dmul>
 8002542:	f7ff feb5 	bl	80022b0 <__aeabi_d2f>
	z1 *= 9.81;
 8002546:	f7ff fe6b 	bl	8002220 <__aeabi_f2d>
 800254a:	4a20      	ldr	r2, [pc, #128]	@ (80025cc <lsm303dlhc_read_la+0x15c>)
 800254c:	4b20      	ldr	r3, [pc, #128]	@ (80025d0 <lsm303dlhc_read_la+0x160>)
 800254e:	f7fe ff53 	bl	80013f8 <__aeabi_dmul>
 8002552:	0006      	movs	r6, r0
 8002554:	000f      	movs	r7, r1
    x1 *= 9.81;
 8002556:	9806      	ldr	r0, [sp, #24]
 8002558:	9907      	ldr	r1, [sp, #28]
 800255a:	f7ff fea9 	bl	80022b0 <__aeabi_d2f>

    sprintf(buffer, "Linear Accelerometer (in m/s^2): X value: %.2f, Y value: %.2f, Z value: %.2f\n\n", x1, y1, z1);
 800255e:	f7ff fe5f 	bl	8002220 <__aeabi_f2d>
 8002562:	9006      	str	r0, [sp, #24]
 8002564:	9107      	str	r1, [sp, #28]
	z1 *= 9.81;
 8002566:	0039      	movs	r1, r7
 8002568:	0030      	movs	r0, r6
 800256a:	f7ff fea1 	bl	80022b0 <__aeabi_d2f>
    sprintf(buffer, "Linear Accelerometer (in m/s^2): X value: %.2f, Y value: %.2f, Z value: %.2f\n\n", x1, y1, z1);
 800256e:	f7ff fe57 	bl	8002220 <__aeabi_f2d>
 8002572:	9002      	str	r0, [sp, #8]
 8002574:	9103      	str	r1, [sp, #12]
	y1 *= 9.81;
 8002576:	9808      	ldr	r0, [sp, #32]
 8002578:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800257a:	f7ff fe99 	bl	80022b0 <__aeabi_d2f>
    sprintf(buffer, "Linear Accelerometer (in m/s^2): X value: %.2f, Y value: %.2f, Z value: %.2f\n\n", x1, y1, z1);
 800257e:	f7ff fe4f 	bl	8002220 <__aeabi_f2d>
 8002582:	9a06      	ldr	r2, [sp, #24]
 8002584:	9b07      	ldr	r3, [sp, #28]
 8002586:	4d13      	ldr	r5, [pc, #76]	@ (80025d4 <lsm303dlhc_read_la+0x164>)
 8002588:	9000      	str	r0, [sp, #0]
 800258a:	9101      	str	r1, [sp, #4]
 800258c:	0029      	movs	r1, r5
 800258e:	0020      	movs	r0, r4
 8002590:	f002 fbbc 	bl	8004d0c <siprintf>
    HAL_UART_Transmit(&huart2, buffer, strlen(buffer), HAL_MAX_DELAY);
 8002594:	0020      	movs	r0, r4
 8002596:	f7fd fdb7 	bl	8000108 <strlen>
 800259a:	2301      	movs	r3, #1
 800259c:	b282      	uxth	r2, r0
 800259e:	0021      	movs	r1, r4
 80025a0:	9805      	ldr	r0, [sp, #20]
 80025a2:	425b      	negs	r3, r3
 80025a4:	f001 fe58 	bl	8004258 <HAL_UART_Transmit>
    HAL_Delay(500);
 80025a8:	20fa      	movs	r0, #250	@ 0xfa
 80025aa:	0040      	lsls	r0, r0, #1
 80025ac:	f000 fb10 	bl	8002bd0 <HAL_Delay>

    // Values:
    // when stanging ideal is x=0, y=0, z=8192
    // ubrzanje u g je: a = sirova_vrednost/8192
    // ubrzanje u m/s2 je: a = g*9.81
}
 80025b0:	b00d      	add	sp, #52	@ 0x34
 80025b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80025b4:	20000348 	.word	0x20000348
 80025b8:	200001f0 	.word	0x200001f0
 80025bc:	200001f6 	.word	0x200001f6
 80025c0:	080072b4 	.word	0x080072b4
 80025c4:	200002c0 	.word	0x200002c0
 80025c8:	3f200000 	.word	0x3f200000
 80025cc:	51eb851f 	.word	0x51eb851f
 80025d0:	40239eb8 	.word	0x40239eb8
 80025d4:	08007302 	.word	0x08007302

080025d8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80025d8:	b510      	push	{r4, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80025da:	2410      	movs	r4, #16
{
 80025dc:	b098      	sub	sp, #96	@ 0x60
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80025de:	2230      	movs	r2, #48	@ 0x30
 80025e0:	2100      	movs	r1, #0
 80025e2:	a80c      	add	r0, sp, #48	@ 0x30
 80025e4:	f002 fc76 	bl	8004ed4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80025e8:	0022      	movs	r2, r4
 80025ea:	2100      	movs	r1, #0
 80025ec:	a801      	add	r0, sp, #4
 80025ee:	f002 fc71 	bl	8004ed4 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80025f2:	2100      	movs	r1, #0
 80025f4:	2218      	movs	r2, #24
 80025f6:	a805      	add	r0, sp, #20
 80025f8:	f002 fc6c 	bl	8004ed4 <memset>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80025fc:	2302      	movs	r3, #2
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80025fe:	a80b      	add	r0, sp, #44	@ 0x2c
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8002600:	930b      	str	r3, [sp, #44]	@ 0x2c
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8002602:	3b01      	subs	r3, #1
 8002604:	930e      	str	r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8002606:	940f      	str	r4, [sp, #60]	@ 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002608:	f001 f8f8 	bl	80037fc <HAL_RCC_OscConfig>
 800260c:	1e01      	subs	r1, r0, #0
 800260e:	d001      	beq.n	8002614 <SystemClock_Config+0x3c>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002610:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002612:	e7fe      	b.n	8002612 <SystemClock_Config+0x3a>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002614:	2307      	movs	r3, #7
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8002616:	9002      	str	r0, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002618:	9003      	str	r0, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 800261a:	9004      	str	r0, [sp, #16]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 800261c:	a801      	add	r0, sp, #4
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800261e:	9301      	str	r3, [sp, #4]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8002620:	f001 fb72 	bl	8003d08 <HAL_RCC_ClockConfig>
 8002624:	2800      	cmp	r0, #0
 8002626:	d001      	beq.n	800262c <SystemClock_Config+0x54>
 8002628:	b672      	cpsid	i
  while (1)
 800262a:	e7fe      	b.n	800262a <SystemClock_Config+0x52>
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 800262c:	2320      	movs	r3, #32
  PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 800262e:	9008      	str	r0, [sp, #32]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8002630:	a805      	add	r0, sp, #20
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 8002632:	9305      	str	r3, [sp, #20]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8002634:	f001 fc02 	bl	8003e3c <HAL_RCCEx_PeriphCLKConfig>
 8002638:	2800      	cmp	r0, #0
 800263a:	d001      	beq.n	8002640 <SystemClock_Config+0x68>
 800263c:	b672      	cpsid	i
  while (1)
 800263e:	e7fe      	b.n	800263e <SystemClock_Config+0x66>
}
 8002640:	b018      	add	sp, #96	@ 0x60
 8002642:	bd10      	pop	{r4, pc}

08002644 <main>:
{
 8002644:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002646:	b08b      	sub	sp, #44	@ 0x2c
  HAL_Init();
 8002648:	f000 faa0 	bl	8002b8c <HAL_Init>
  SystemClock_Config();
 800264c:	f7ff ffc4 	bl	80025d8 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002650:	2214      	movs	r2, #20
 8002652:	2100      	movs	r1, #0
 8002654:	a805      	add	r0, sp, #20
 8002656:	f002 fc3d 	bl	8004ed4 <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800265a:	2280      	movs	r2, #128	@ 0x80
 800265c:	4e63      	ldr	r6, [pc, #396]	@ (80027ec <main+0x1a8>)
 800265e:	03d2      	lsls	r2, r2, #15
 8002660:	6973      	ldr	r3, [r6, #20]
  HAL_GPIO_WritePin(ActivateLed_GPIO_Port, ActivateLed_Pin, GPIO_PIN_RESET);
 8002662:	2090      	movs	r0, #144	@ 0x90
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8002664:	4313      	orrs	r3, r2
 8002666:	6173      	str	r3, [r6, #20]
 8002668:	6973      	ldr	r3, [r6, #20]
  HAL_GPIO_WritePin(ActivateLed_GPIO_Port, ActivateLed_Pin, GPIO_PIN_RESET);
 800266a:	2110      	movs	r1, #16
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800266c:	4013      	ands	r3, r2
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800266e:	2280      	movs	r2, #128	@ 0x80
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8002670:	9302      	str	r3, [sp, #8]
 8002672:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002674:	6973      	ldr	r3, [r6, #20]
 8002676:	0292      	lsls	r2, r2, #10
 8002678:	4313      	orrs	r3, r2
 800267a:	6173      	str	r3, [r6, #20]
 800267c:	6973      	ldr	r3, [r6, #20]
  HAL_GPIO_WritePin(ActivateLed_GPIO_Port, ActivateLed_Pin, GPIO_PIN_RESET);
 800267e:	05c0      	lsls	r0, r0, #23
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002680:	4013      	ands	r3, r2
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002682:	2280      	movs	r2, #128	@ 0x80
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002684:	9303      	str	r3, [sp, #12]
 8002686:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002688:	6973      	ldr	r3, [r6, #20]
 800268a:	02d2      	lsls	r2, r2, #11
 800268c:	4313      	orrs	r3, r2
 800268e:	6173      	str	r3, [r6, #20]
 8002690:	6973      	ldr	r3, [r6, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002692:	2400      	movs	r4, #0
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002694:	4013      	ands	r3, r2
 8002696:	9304      	str	r3, [sp, #16]
  HAL_GPIO_WritePin(ActivateLed_GPIO_Port, ActivateLed_Pin, GPIO_PIN_RESET);
 8002698:	2200      	movs	r2, #0
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800269a:	9b04      	ldr	r3, [sp, #16]
  HAL_GPIO_WritePin(ActivateLed_GPIO_Port, ActivateLed_Pin, GPIO_PIN_RESET);
 800269c:	f000 fd4e 	bl	800313c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, GPIO_PIN_RESET);
 80026a0:	2200      	movs	r2, #0
 80026a2:	2110      	movs	r1, #16
 80026a4:	4852      	ldr	r0, [pc, #328]	@ (80027f0 <main+0x1ac>)
 80026a6:	f000 fd49 	bl	800313c <HAL_GPIO_WritePin>
  HAL_GPIO_Init(ReadButton_GPIO_Port, &GPIO_InitStruct);
 80026aa:	2090      	movs	r0, #144	@ 0x90
  GPIO_InitStruct.Pin = ReadButton_Pin;
 80026ac:	2302      	movs	r3, #2
  HAL_GPIO_Init(ReadButton_GPIO_Port, &GPIO_InitStruct);
 80026ae:	a905      	add	r1, sp, #20
 80026b0:	05c0      	lsls	r0, r0, #23
  GPIO_InitStruct.Pin = ReadButton_Pin;
 80026b2:	9305      	str	r3, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80026b4:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80026b6:	9407      	str	r4, [sp, #28]
  HAL_GPIO_Init(ReadButton_GPIO_Port, &GPIO_InitStruct);
 80026b8:	f000 fc8e 	bl	8002fd8 <HAL_GPIO_Init>
  HAL_GPIO_Init(ActivateLed_GPIO_Port, &GPIO_InitStruct);
 80026bc:	2090      	movs	r0, #144	@ 0x90
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80026be:	2501      	movs	r5, #1
  GPIO_InitStruct.Pin = ActivateLed_Pin;
 80026c0:	2710      	movs	r7, #16
  HAL_GPIO_Init(ActivateLed_GPIO_Port, &GPIO_InitStruct);
 80026c2:	a905      	add	r1, sp, #20
 80026c4:	05c0      	lsls	r0, r0, #23
  GPIO_InitStruct.Pin = ActivateLed_Pin;
 80026c6:	9705      	str	r7, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80026c8:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80026ca:	9407      	str	r4, [sp, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80026cc:	9408      	str	r4, [sp, #32]
  HAL_GPIO_Init(ActivateLed_GPIO_Port, &GPIO_InitStruct);
 80026ce:	f000 fc83 	bl	8002fd8 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80026d2:	4847      	ldr	r0, [pc, #284]	@ (80027f0 <main+0x1ac>)
 80026d4:	a905      	add	r1, sp, #20
  GPIO_InitStruct.Pin = GPIO_PIN_4;
 80026d6:	9705      	str	r7, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80026d8:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80026da:	9407      	str	r4, [sp, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80026dc:	9408      	str	r4, [sp, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80026de:	f000 fc7b 	bl	8002fd8 <HAL_GPIO_Init>
  __HAL_RCC_DMA1_CLK_ENABLE();
 80026e2:	6973      	ldr	r3, [r6, #20]
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 80026e4:	0022      	movs	r2, r4
  __HAL_RCC_DMA1_CLK_ENABLE();
 80026e6:	432b      	orrs	r3, r5
 80026e8:	6173      	str	r3, [r6, #20]
 80026ea:	6973      	ldr	r3, [r6, #20]
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 80026ec:	0021      	movs	r1, r4
  __HAL_RCC_DMA1_CLK_ENABLE();
 80026ee:	402b      	ands	r3, r5
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 80026f0:	2009      	movs	r0, #9
  __HAL_RCC_DMA1_CLK_ENABLE();
 80026f2:	9301      	str	r3, [sp, #4]
 80026f4:	9b01      	ldr	r3, [sp, #4]
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 80026f6:	f000 fba3 	bl	8002e40 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 80026fa:	2009      	movs	r0, #9
 80026fc:	f000 fbca 	bl	8002e94 <HAL_NVIC_EnableIRQ>
  huart2.Instance = USART2;
 8002700:	483c      	ldr	r0, [pc, #240]	@ (80027f4 <main+0x1b0>)
 8002702:	4b3d      	ldr	r3, [pc, #244]	@ (80027f8 <main+0x1b4>)
  huart2.Init.Mode = UART_MODE_TX_RX;
 8002704:	260c      	movs	r6, #12
  huart2.Instance = USART2;
 8002706:	6003      	str	r3, [r0, #0]
  huart2.Init.BaudRate = 115200;
 8002708:	23e1      	movs	r3, #225	@ 0xe1
 800270a:	025b      	lsls	r3, r3, #9
 800270c:	6043      	str	r3, [r0, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800270e:	6084      	str	r4, [r0, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8002710:	60c4      	str	r4, [r0, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8002712:	6104      	str	r4, [r0, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8002714:	6146      	str	r6, [r0, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002716:	6184      	str	r4, [r0, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8002718:	61c4      	str	r4, [r0, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 800271a:	6204      	str	r4, [r0, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 800271c:	6244      	str	r4, [r0, #36]	@ 0x24
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800271e:	f001 fe61 	bl	80043e4 <HAL_UART_Init>
 8002722:	0007      	movs	r7, r0
 8002724:	42a0      	cmp	r0, r4
 8002726:	d001      	beq.n	800272c <main+0xe8>
 8002728:	b672      	cpsid	i
  while (1)
 800272a:	e7fe      	b.n	800272a <main+0xe6>
  ADC_ChannelConfTypeDef sConfig = {0};
 800272c:	0001      	movs	r1, r0
 800272e:	0032      	movs	r2, r6
 8002730:	a805      	add	r0, sp, #20
 8002732:	f002 fbcf 	bl	8004ed4 <memset>
  hadc.Instance = ADC1;
 8002736:	4c31      	ldr	r4, [pc, #196]	@ (80027fc <main+0x1b8>)
 8002738:	4b31      	ldr	r3, [pc, #196]	@ (8002800 <main+0x1bc>)
  if (HAL_ADC_Init(&hadc) != HAL_OK)
 800273a:	0020      	movs	r0, r4
  hadc.Instance = ADC1;
 800273c:	6023      	str	r3, [r4, #0]
  hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 800273e:	2380      	movs	r3, #128	@ 0x80
 8002740:	05db      	lsls	r3, r3, #23
 8002742:	6063      	str	r3, [r4, #4]
  hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8002744:	2304      	movs	r3, #4
 8002746:	6163      	str	r3, [r4, #20]
  hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8002748:	23c2      	movs	r3, #194	@ 0xc2
 800274a:	33ff      	adds	r3, #255	@ 0xff
 800274c:	61e3      	str	r3, [r4, #28]
  hadc.Init.DMAContinuousRequests = DISABLE;
 800274e:	1d63      	adds	r3, r4, #5
  hadc.Init.Resolution = ADC_RESOLUTION_12B;
 8002750:	60a7      	str	r7, [r4, #8]
  hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8002752:	60e7      	str	r7, [r4, #12]
  hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 8002754:	6125      	str	r5, [r4, #16]
  hadc.Init.LowPowerAutoWait = DISABLE;
 8002756:	61a7      	str	r7, [r4, #24]
  hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8002758:	6227      	str	r7, [r4, #32]
  hadc.Init.DMAContinuousRequests = DISABLE;
 800275a:	77df      	strb	r7, [r3, #31]
  hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 800275c:	62a5      	str	r5, [r4, #40]	@ 0x28
  if (HAL_ADC_Init(&hadc) != HAL_OK)
 800275e:	f000 fa49 	bl	8002bf4 <HAL_ADC_Init>
 8002762:	2800      	cmp	r0, #0
 8002764:	d001      	beq.n	800276a <main+0x126>
 8002766:	b672      	cpsid	i
  while (1)
 8002768:	e7fe      	b.n	8002768 <main+0x124>
  sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 800276a:	2380      	movs	r3, #128	@ 0x80
 800276c:	015b      	lsls	r3, r3, #5
 800276e:	9306      	str	r3, [sp, #24]
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 8002770:	2380      	movs	r3, #128	@ 0x80
  sConfig.Channel = ADC_CHANNEL_0;
 8002772:	9005      	str	r0, [sp, #20]
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 8002774:	055b      	lsls	r3, r3, #21
  if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 8002776:	0020      	movs	r0, r4
 8002778:	a905      	add	r1, sp, #20
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 800277a:	9307      	str	r3, [sp, #28]
  if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 800277c:	f000 fadc 	bl	8002d38 <HAL_ADC_ConfigChannel>
 8002780:	2800      	cmp	r0, #0
 8002782:	d001      	beq.n	8002788 <main+0x144>
 8002784:	b672      	cpsid	i
  while (1)
 8002786:	e7fe      	b.n	8002786 <main+0x142>
  sConfig.Channel = ADC_CHANNEL_8;
 8002788:	2308      	movs	r3, #8
  if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 800278a:	0020      	movs	r0, r4
 800278c:	a905      	add	r1, sp, #20
  sConfig.Channel = ADC_CHANNEL_8;
 800278e:	9305      	str	r3, [sp, #20]
  if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 8002790:	f000 fad2 	bl	8002d38 <HAL_ADC_ConfigChannel>
 8002794:	2800      	cmp	r0, #0
 8002796:	d001      	beq.n	800279c <main+0x158>
 8002798:	b672      	cpsid	i
  while (1)
 800279a:	e7fe      	b.n	800279a <main+0x156>
  hi2c1.Instance = I2C1;
 800279c:	4c19      	ldr	r4, [pc, #100]	@ (8002804 <main+0x1c0>)
 800279e:	4b1a      	ldr	r3, [pc, #104]	@ (8002808 <main+0x1c4>)
  hi2c1.Init.OwnAddress1 = 0;
 80027a0:	60a0      	str	r0, [r4, #8]
  hi2c1.Instance = I2C1;
 80027a2:	6023      	str	r3, [r4, #0]
  hi2c1.Init.Timing = 0x0010020A;
 80027a4:	4b19      	ldr	r3, [pc, #100]	@ (800280c <main+0x1c8>)
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80027a6:	6120      	str	r0, [r4, #16]
  hi2c1.Init.OwnAddress2 = 0;
 80027a8:	6160      	str	r0, [r4, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 80027aa:	61a0      	str	r0, [r4, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80027ac:	61e0      	str	r0, [r4, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80027ae:	6220      	str	r0, [r4, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80027b0:	0020      	movs	r0, r4
  hi2c1.Init.Timing = 0x0010020A;
 80027b2:	6063      	str	r3, [r4, #4]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80027b4:	60e5      	str	r5, [r4, #12]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80027b6:	f000 fe49 	bl	800344c <HAL_I2C_Init>
 80027ba:	1e01      	subs	r1, r0, #0
 80027bc:	d001      	beq.n	80027c2 <main+0x17e>
 80027be:	b672      	cpsid	i
  while (1)
 80027c0:	e7fe      	b.n	80027c0 <main+0x17c>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 80027c2:	0020      	movs	r0, r4
 80027c4:	f000 ffd0 	bl	8003768 <HAL_I2CEx_ConfigAnalogFilter>
 80027c8:	1e01      	subs	r1, r0, #0
 80027ca:	d001      	beq.n	80027d0 <main+0x18c>
 80027cc:	b672      	cpsid	i
  while (1)
 80027ce:	e7fe      	b.n	80027ce <main+0x18a>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 80027d0:	0020      	movs	r0, r4
 80027d2:	f000 ffef 	bl	80037b4 <HAL_I2CEx_ConfigDigitalFilter>
 80027d6:	2800      	cmp	r0, #0
 80027d8:	d001      	beq.n	80027de <main+0x19a>
 80027da:	b672      	cpsid	i
  while (1)
 80027dc:	e7fe      	b.n	80027dc <main+0x198>
  initPins();
 80027de:	f7ff fe09 	bl	80023f4 <initPins>
  lsm303dlhc_init_la();
 80027e2:	f7ff fe11 	bl	8002408 <lsm303dlhc_init_la>
	  lsm303dlhc_read_la();
 80027e6:	f7ff fe43 	bl	8002470 <lsm303dlhc_read_la>
  while (1)
 80027ea:	e7fc      	b.n	80027e6 <main+0x1a2>
 80027ec:	40021000 	.word	0x40021000
 80027f0:	48000400 	.word	0x48000400
 80027f4:	200002c0 	.word	0x200002c0
 80027f8:	40004400 	.word	0x40004400
 80027fc:	200003e0 	.word	0x200003e0
 8002800:	40012400 	.word	0x40012400
 8002804:	20000348 	.word	0x20000348
 8002808:	40005400 	.word	0x40005400
 800280c:	0010020a 	.word	0x0010020a

08002810 <Error_Handler>:
 8002810:	b672      	cpsid	i
  while (1)
 8002812:	e7fe      	b.n	8002812 <Error_Handler+0x2>

08002814 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002814:	2101      	movs	r1, #1
 8002816:	4b0a      	ldr	r3, [pc, #40]	@ (8002840 <HAL_MspInit+0x2c>)
{
 8002818:	b082      	sub	sp, #8
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800281a:	699a      	ldr	r2, [r3, #24]
 800281c:	430a      	orrs	r2, r1
 800281e:	619a      	str	r2, [r3, #24]
 8002820:	699a      	ldr	r2, [r3, #24]
 8002822:	400a      	ands	r2, r1
  __HAL_RCC_PWR_CLK_ENABLE();
 8002824:	2180      	movs	r1, #128	@ 0x80
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002826:	9200      	str	r2, [sp, #0]
 8002828:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800282a:	69da      	ldr	r2, [r3, #28]
 800282c:	0549      	lsls	r1, r1, #21
 800282e:	430a      	orrs	r2, r1
 8002830:	61da      	str	r2, [r3, #28]
 8002832:	69db      	ldr	r3, [r3, #28]
 8002834:	400b      	ands	r3, r1
 8002836:	9301      	str	r3, [sp, #4]
 8002838:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800283a:	b002      	add	sp, #8
 800283c:	4770      	bx	lr
 800283e:	46c0      	nop			@ (mov r8, r8)
 8002840:	40021000 	.word	0x40021000

08002844 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8002844:	b570      	push	{r4, r5, r6, lr}
 8002846:	0005      	movs	r5, r0
 8002848:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800284a:	2214      	movs	r2, #20
 800284c:	2100      	movs	r1, #0
 800284e:	a803      	add	r0, sp, #12
 8002850:	f002 fb40 	bl	8004ed4 <memset>
  if(hadc->Instance==ADC1)
 8002854:	4b24      	ldr	r3, [pc, #144]	@ (80028e8 <HAL_ADC_MspInit+0xa4>)
 8002856:	682a      	ldr	r2, [r5, #0]
 8002858:	429a      	cmp	r2, r3
 800285a:	d143      	bne.n	80028e4 <HAL_ADC_MspInit+0xa0>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 800285c:	2180      	movs	r1, #128	@ 0x80
 800285e:	4b23      	ldr	r3, [pc, #140]	@ (80028ec <HAL_ADC_MspInit+0xa8>)
 8002860:	0089      	lsls	r1, r1, #2
 8002862:	699a      	ldr	r2, [r3, #24]
    PB0     ------> ADC_IN8
    */
    GPIO_InitStruct.Pin = Thermistor_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(Thermistor_GPIO_Port, &GPIO_InitStruct);
 8002864:	2090      	movs	r0, #144	@ 0x90
    __HAL_RCC_ADC1_CLK_ENABLE();
 8002866:	430a      	orrs	r2, r1
 8002868:	619a      	str	r2, [r3, #24]
 800286a:	699a      	ldr	r2, [r3, #24]
    GPIO_InitStruct.Pin = Thermistor_Pin;
 800286c:	2601      	movs	r6, #1
    __HAL_RCC_ADC1_CLK_ENABLE();
 800286e:	400a      	ands	r2, r1
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002870:	2180      	movs	r1, #128	@ 0x80
    __HAL_RCC_ADC1_CLK_ENABLE();
 8002872:	9200      	str	r2, [sp, #0]
 8002874:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002876:	695a      	ldr	r2, [r3, #20]
 8002878:	0289      	lsls	r1, r1, #10
 800287a:	430a      	orrs	r2, r1
 800287c:	615a      	str	r2, [r3, #20]
 800287e:	695a      	ldr	r2, [r3, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8002880:	2403      	movs	r4, #3
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002882:	400a      	ands	r2, r1
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002884:	2180      	movs	r1, #128	@ 0x80
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002886:	9201      	str	r2, [sp, #4]
 8002888:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800288a:	695a      	ldr	r2, [r3, #20]
 800288c:	02c9      	lsls	r1, r1, #11
 800288e:	430a      	orrs	r2, r1
 8002890:	615a      	str	r2, [r3, #20]
 8002892:	695b      	ldr	r3, [r3, #20]
    HAL_GPIO_Init(Thermistor_GPIO_Port, &GPIO_InitStruct);
 8002894:	05c0      	lsls	r0, r0, #23
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002896:	400b      	ands	r3, r1
 8002898:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(Thermistor_GPIO_Port, &GPIO_InitStruct);
 800289a:	a903      	add	r1, sp, #12
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800289c:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = Thermistor_Pin;
 800289e:	9603      	str	r6, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80028a0:	9404      	str	r4, [sp, #16]
    HAL_GPIO_Init(Thermistor_GPIO_Port, &GPIO_InitStruct);
 80028a2:	f000 fb99 	bl	8002fd8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = Potentiometer_Pin;
 80028a6:	9603      	str	r6, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80028a8:	2600      	movs	r6, #0
    HAL_GPIO_Init(Potentiometer_GPIO_Port, &GPIO_InitStruct);
 80028aa:	4811      	ldr	r0, [pc, #68]	@ (80028f0 <HAL_ADC_MspInit+0xac>)
 80028ac:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80028ae:	9404      	str	r4, [sp, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80028b0:	9605      	str	r6, [sp, #20]
    HAL_GPIO_Init(Potentiometer_GPIO_Port, &GPIO_InitStruct);
 80028b2:	f000 fb91 	bl	8002fd8 <HAL_GPIO_Init>

    /* ADC1 DMA Init */
    /* ADC Init */
    hdma_adc.Instance = DMA1_Channel1;
 80028b6:	4c0f      	ldr	r4, [pc, #60]	@ (80028f4 <HAL_ADC_MspInit+0xb0>)
 80028b8:	4b0f      	ldr	r3, [pc, #60]	@ (80028f8 <HAL_ADC_MspInit+0xb4>)
    hdma_adc.Init.MemInc = DMA_MINC_ENABLE;
    hdma_adc.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
    hdma_adc.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
    hdma_adc.Init.Mode = DMA_NORMAL;
    hdma_adc.Init.Priority = DMA_PRIORITY_LOW;
    if (HAL_DMA_Init(&hdma_adc) != HAL_OK)
 80028ba:	0020      	movs	r0, r4
    hdma_adc.Instance = DMA1_Channel1;
 80028bc:	6023      	str	r3, [r4, #0]
    hdma_adc.Init.MemInc = DMA_MINC_ENABLE;
 80028be:	2380      	movs	r3, #128	@ 0x80
 80028c0:	60e3      	str	r3, [r4, #12]
    hdma_adc.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 80028c2:	18db      	adds	r3, r3, r3
 80028c4:	6123      	str	r3, [r4, #16]
    hdma_adc.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 80028c6:	2380      	movs	r3, #128	@ 0x80
 80028c8:	00db      	lsls	r3, r3, #3
    hdma_adc.Init.Direction = DMA_PERIPH_TO_MEMORY;
 80028ca:	6066      	str	r6, [r4, #4]
    hdma_adc.Init.PeriphInc = DMA_PINC_DISABLE;
 80028cc:	60a6      	str	r6, [r4, #8]
    hdma_adc.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 80028ce:	6163      	str	r3, [r4, #20]
    hdma_adc.Init.Mode = DMA_NORMAL;
 80028d0:	61a6      	str	r6, [r4, #24]
    hdma_adc.Init.Priority = DMA_PRIORITY_LOW;
 80028d2:	61e6      	str	r6, [r4, #28]
    if (HAL_DMA_Init(&hdma_adc) != HAL_OK)
 80028d4:	f000 fb04 	bl	8002ee0 <HAL_DMA_Init>
 80028d8:	42b0      	cmp	r0, r6
 80028da:	d001      	beq.n	80028e0 <HAL_ADC_MspInit+0x9c>
    {
      Error_Handler();
 80028dc:	f7ff ff98 	bl	8002810 <Error_Handler>
    }

    __HAL_LINKDMA(hadc,DMA_Handle,hdma_adc);
 80028e0:	632c      	str	r4, [r5, #48]	@ 0x30
 80028e2:	6265      	str	r5, [r4, #36]	@ 0x24

  /* USER CODE END ADC1_MspInit 1 */

  }

}
 80028e4:	b008      	add	sp, #32
 80028e6:	bd70      	pop	{r4, r5, r6, pc}
 80028e8:	40012400 	.word	0x40012400
 80028ec:	40021000 	.word	0x40021000
 80028f0:	48000400 	.word	0x48000400
 80028f4:	2000039c 	.word	0x2000039c
 80028f8:	40020008 	.word	0x40020008

080028fc <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80028fc:	b570      	push	{r4, r5, r6, lr}
 80028fe:	0004      	movs	r4, r0
 8002900:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002902:	2214      	movs	r2, #20
 8002904:	2100      	movs	r1, #0
 8002906:	a803      	add	r0, sp, #12
 8002908:	f002 fae4 	bl	8004ed4 <memset>
  if(hi2c->Instance==I2C1)
 800290c:	4b1d      	ldr	r3, [pc, #116]	@ (8002984 <HAL_I2C_MspInit+0x88>)
 800290e:	6822      	ldr	r2, [r4, #0]
 8002910:	429a      	cmp	r2, r3
 8002912:	d135      	bne.n	8002980 <HAL_I2C_MspInit+0x84>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002914:	2280      	movs	r2, #128	@ 0x80
 8002916:	4c1c      	ldr	r4, [pc, #112]	@ (8002988 <HAL_I2C_MspInit+0x8c>)
 8002918:	03d2      	lsls	r2, r2, #15
 800291a:	6963      	ldr	r3, [r4, #20]
    /**I2C1 GPIO Configuration
    PF1-OSC_OUT     ------> I2C1_SCL
    PA10     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800291c:	2612      	movs	r6, #18
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800291e:	4313      	orrs	r3, r2
 8002920:	6163      	str	r3, [r4, #20]
 8002922:	6963      	ldr	r3, [r4, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002924:	2503      	movs	r5, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002926:	4013      	ands	r3, r2
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002928:	2280      	movs	r2, #128	@ 0x80
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800292a:	9300      	str	r3, [sp, #0]
 800292c:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800292e:	6963      	ldr	r3, [r4, #20]
 8002930:	0292      	lsls	r2, r2, #10
 8002932:	4313      	orrs	r3, r2
 8002934:	6163      	str	r3, [r4, #20]
 8002936:	6963      	ldr	r3, [r4, #20]
    GPIO_InitStruct.Alternate = GPIO_AF1_I2C1;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002938:	4814      	ldr	r0, [pc, #80]	@ (800298c <HAL_I2C_MspInit+0x90>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800293a:	4013      	ands	r3, r2
 800293c:	9301      	str	r3, [sp, #4]
 800293e:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_1;
 8002940:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002942:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Pin = GPIO_PIN_1;
 8002944:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_I2C1;
 8002946:	3b01      	subs	r3, #1
 8002948:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800294a:	9604      	str	r6, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800294c:	9506      	str	r5, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800294e:	f000 fb43 	bl	8002fd8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8002952:	2380      	movs	r3, #128	@ 0x80
 8002954:	00db      	lsls	r3, r3, #3
 8002956:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002958:	2090      	movs	r0, #144	@ 0x90
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800295a:	2300      	movs	r3, #0
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800295c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800295e:	9305      	str	r3, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002960:	05c0      	lsls	r0, r0, #23
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8002962:	3304      	adds	r3, #4
 8002964:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002966:	9604      	str	r6, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002968:	9506      	str	r5, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800296a:	f000 fb35 	bl	8002fd8 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 800296e:	2280      	movs	r2, #128	@ 0x80
 8002970:	69e3      	ldr	r3, [r4, #28]
 8002972:	0392      	lsls	r2, r2, #14
 8002974:	4313      	orrs	r3, r2
 8002976:	61e3      	str	r3, [r4, #28]
 8002978:	69e3      	ldr	r3, [r4, #28]
 800297a:	4013      	ands	r3, r2
 800297c:	9302      	str	r3, [sp, #8]
 800297e:	9b02      	ldr	r3, [sp, #8]

  /* USER CODE END I2C1_MspInit 1 */

  }

}
 8002980:	b008      	add	sp, #32
 8002982:	bd70      	pop	{r4, r5, r6, pc}
 8002984:	40005400 	.word	0x40005400
 8002988:	40021000 	.word	0x40021000
 800298c:	48001400 	.word	0x48001400

08002990 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8002990:	b510      	push	{r4, lr}
 8002992:	0004      	movs	r4, r0
 8002994:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002996:	2214      	movs	r2, #20
 8002998:	2100      	movs	r1, #0
 800299a:	a803      	add	r0, sp, #12
 800299c:	f002 fa9a 	bl	8004ed4 <memset>
  if(huart->Instance==USART2)
 80029a0:	4b11      	ldr	r3, [pc, #68]	@ (80029e8 <HAL_UART_MspInit+0x58>)
 80029a2:	6822      	ldr	r2, [r4, #0]
 80029a4:	429a      	cmp	r2, r3
 80029a6:	d11d      	bne.n	80029e4 <HAL_UART_MspInit+0x54>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 80029a8:	2280      	movs	r2, #128	@ 0x80
 80029aa:	4b10      	ldr	r3, [pc, #64]	@ (80029ec <HAL_UART_MspInit+0x5c>)
 80029ac:	0292      	lsls	r2, r2, #10
 80029ae:	69d9      	ldr	r1, [r3, #28]
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80029b0:	2090      	movs	r0, #144	@ 0x90
    __HAL_RCC_USART2_CLK_ENABLE();
 80029b2:	4311      	orrs	r1, r2
 80029b4:	61d9      	str	r1, [r3, #28]
 80029b6:	69d9      	ldr	r1, [r3, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80029b8:	05c0      	lsls	r0, r0, #23
    __HAL_RCC_USART2_CLK_ENABLE();
 80029ba:	4011      	ands	r1, r2
 80029bc:	9101      	str	r1, [sp, #4]
 80029be:	9901      	ldr	r1, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80029c0:	6959      	ldr	r1, [r3, #20]
 80029c2:	4311      	orrs	r1, r2
 80029c4:	6159      	str	r1, [r3, #20]
 80029c6:	695b      	ldr	r3, [r3, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80029c8:	a903      	add	r1, sp, #12
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80029ca:	4013      	ands	r3, r2
 80029cc:	9302      	str	r3, [sp, #8]
 80029ce:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 80029d0:	230c      	movs	r3, #12
 80029d2:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80029d4:	3b0a      	subs	r3, #10
 80029d6:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80029d8:	3301      	adds	r3, #1
 80029da:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
 80029dc:	3b02      	subs	r3, #2
 80029de:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80029e0:	f000 fafa 	bl	8002fd8 <HAL_GPIO_Init>

  /* USER CODE END USART2_MspInit 1 */

  }

}
 80029e4:	b008      	add	sp, #32
 80029e6:	bd10      	pop	{r4, pc}
 80029e8:	40004400 	.word	0x40004400
 80029ec:	40021000 	.word	0x40021000

080029f0 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80029f0:	e7fe      	b.n	80029f0 <NMI_Handler>

080029f2 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80029f2:	e7fe      	b.n	80029f2 <HardFault_Handler>

080029f4 <SVC_Handler>:

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 80029f4:	4770      	bx	lr

080029f6 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
 80029f6:	4770      	bx	lr

080029f8 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80029f8:	b510      	push	{r4, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80029fa:	f000 f8d7 	bl	8002bac <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80029fe:	bd10      	pop	{r4, pc}

08002a00 <DMA1_Channel1_IRQHandler>:

/**
  * @brief This function handles DMA1 channel 1 interrupt.
  */
void DMA1_Channel1_IRQHandler(void)
{
 8002a00:	b510      	push	{r4, lr}
  /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */

  /* USER CODE END DMA1_Channel1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc);
 8002a02:	4802      	ldr	r0, [pc, #8]	@ (8002a0c <DMA1_Channel1_IRQHandler+0xc>)
 8002a04:	f000 fa9e 	bl	8002f44 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */

  /* USER CODE END DMA1_Channel1_IRQn 1 */
}
 8002a08:	bd10      	pop	{r4, pc}
 8002a0a:	46c0      	nop			@ (mov r8, r8)
 8002a0c:	2000039c 	.word	0x2000039c

08002a10 <_getpid>:
 8002a10:	2001      	movs	r0, #1
 8002a12:	4770      	bx	lr

08002a14 <_kill>:
 8002a14:	b510      	push	{r4, lr}
 8002a16:	f002 fa69 	bl	8004eec <__errno>
 8002a1a:	2316      	movs	r3, #22
 8002a1c:	6003      	str	r3, [r0, #0]
 8002a1e:	2001      	movs	r0, #1
 8002a20:	4240      	negs	r0, r0
 8002a22:	bd10      	pop	{r4, pc}

08002a24 <_exit>:
 8002a24:	b510      	push	{r4, lr}
 8002a26:	f002 fa61 	bl	8004eec <__errno>
 8002a2a:	2316      	movs	r3, #22
 8002a2c:	6003      	str	r3, [r0, #0]
 8002a2e:	e7fe      	b.n	8002a2e <_exit+0xa>

08002a30 <_read>:
 8002a30:	b570      	push	{r4, r5, r6, lr}
 8002a32:	000e      	movs	r6, r1
 8002a34:	0014      	movs	r4, r2
 8002a36:	2500      	movs	r5, #0
 8002a38:	42a5      	cmp	r5, r4
 8002a3a:	db01      	blt.n	8002a40 <_read+0x10>
 8002a3c:	0020      	movs	r0, r4
 8002a3e:	bd70      	pop	{r4, r5, r6, pc}
 8002a40:	e000      	b.n	8002a44 <_read+0x14>
 8002a42:	bf00      	nop
 8002a44:	5570      	strb	r0, [r6, r5]
 8002a46:	3501      	adds	r5, #1
 8002a48:	e7f6      	b.n	8002a38 <_read+0x8>

08002a4a <_write>:
 8002a4a:	b570      	push	{r4, r5, r6, lr}
 8002a4c:	000e      	movs	r6, r1
 8002a4e:	0014      	movs	r4, r2
 8002a50:	2500      	movs	r5, #0
 8002a52:	42a5      	cmp	r5, r4
 8002a54:	db01      	blt.n	8002a5a <_write+0x10>
 8002a56:	0020      	movs	r0, r4
 8002a58:	bd70      	pop	{r4, r5, r6, pc}
 8002a5a:	5d70      	ldrb	r0, [r6, r5]
 8002a5c:	e000      	b.n	8002a60 <_write+0x16>
 8002a5e:	bf00      	nop
 8002a60:	3501      	adds	r5, #1
 8002a62:	e7f6      	b.n	8002a52 <_write+0x8>

08002a64 <_close>:
 8002a64:	2001      	movs	r0, #1
 8002a66:	4240      	negs	r0, r0
 8002a68:	4770      	bx	lr

08002a6a <_fstat>:
 8002a6a:	2380      	movs	r3, #128	@ 0x80
 8002a6c:	019b      	lsls	r3, r3, #6
 8002a6e:	2000      	movs	r0, #0
 8002a70:	604b      	str	r3, [r1, #4]
 8002a72:	4770      	bx	lr

08002a74 <_isatty>:
 8002a74:	2001      	movs	r0, #1
 8002a76:	4770      	bx	lr

08002a78 <_lseek>:
 8002a78:	2000      	movs	r0, #0
 8002a7a:	4770      	bx	lr

08002a7c <_sbrk>:
 8002a7c:	490b      	ldr	r1, [pc, #44]	@ (8002aac <_sbrk+0x30>)
 8002a7e:	4a0c      	ldr	r2, [pc, #48]	@ (8002ab0 <_sbrk+0x34>)
 8002a80:	0003      	movs	r3, r0
 8002a82:	1a52      	subs	r2, r2, r1
 8002a84:	490b      	ldr	r1, [pc, #44]	@ (8002ab4 <_sbrk+0x38>)
 8002a86:	b510      	push	{r4, lr}
 8002a88:	6808      	ldr	r0, [r1, #0]
 8002a8a:	2800      	cmp	r0, #0
 8002a8c:	d101      	bne.n	8002a92 <_sbrk+0x16>
 8002a8e:	480a      	ldr	r0, [pc, #40]	@ (8002ab8 <_sbrk+0x3c>)
 8002a90:	6008      	str	r0, [r1, #0]
 8002a92:	6808      	ldr	r0, [r1, #0]
 8002a94:	18c3      	adds	r3, r0, r3
 8002a96:	4293      	cmp	r3, r2
 8002a98:	d906      	bls.n	8002aa8 <_sbrk+0x2c>
 8002a9a:	f002 fa27 	bl	8004eec <__errno>
 8002a9e:	230c      	movs	r3, #12
 8002aa0:	6003      	str	r3, [r0, #0]
 8002aa2:	2001      	movs	r0, #1
 8002aa4:	4240      	negs	r0, r0
 8002aa6:	bd10      	pop	{r4, pc}
 8002aa8:	600b      	str	r3, [r1, #0]
 8002aaa:	e7fc      	b.n	8002aa6 <_sbrk+0x2a>
 8002aac:	00000400 	.word	0x00000400
 8002ab0:	20001800 	.word	0x20001800
 8002ab4:	20000420 	.word	0x20000420
 8002ab8:	20000578 	.word	0x20000578

08002abc <SystemInit>:
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 8002abc:	4770      	bx	lr
	...

08002ac0 <Reset_Handler>:
 8002ac0:	4813      	ldr	r0, [pc, #76]	@ (8002b10 <LoopForever+0x2>)
 8002ac2:	4685      	mov	sp, r0
 8002ac4:	f7ff fffa 	bl	8002abc <SystemInit>
 8002ac8:	4812      	ldr	r0, [pc, #72]	@ (8002b14 <LoopForever+0x6>)
 8002aca:	6801      	ldr	r1, [r0, #0]
 8002acc:	0e09      	lsrs	r1, r1, #24
 8002ace:	4a12      	ldr	r2, [pc, #72]	@ (8002b18 <LoopForever+0xa>)
 8002ad0:	4291      	cmp	r1, r2
 8002ad2:	d105      	bne.n	8002ae0 <ApplicationStart>
 8002ad4:	4811      	ldr	r0, [pc, #68]	@ (8002b1c <LoopForever+0xe>)
 8002ad6:	4912      	ldr	r1, [pc, #72]	@ (8002b20 <LoopForever+0x12>)
 8002ad8:	6001      	str	r1, [r0, #0]
 8002ada:	4812      	ldr	r0, [pc, #72]	@ (8002b24 <LoopForever+0x16>)
 8002adc:	4912      	ldr	r1, [pc, #72]	@ (8002b28 <LoopForever+0x1a>)
 8002ade:	6001      	str	r1, [r0, #0]

08002ae0 <ApplicationStart>:
 8002ae0:	4812      	ldr	r0, [pc, #72]	@ (8002b2c <LoopForever+0x1e>)
 8002ae2:	4913      	ldr	r1, [pc, #76]	@ (8002b30 <LoopForever+0x22>)
 8002ae4:	4a13      	ldr	r2, [pc, #76]	@ (8002b34 <LoopForever+0x26>)
 8002ae6:	2300      	movs	r3, #0
 8002ae8:	e002      	b.n	8002af0 <LoopCopyDataInit>

08002aea <CopyDataInit>:
 8002aea:	58d4      	ldr	r4, [r2, r3]
 8002aec:	50c4      	str	r4, [r0, r3]
 8002aee:	3304      	adds	r3, #4

08002af0 <LoopCopyDataInit>:
 8002af0:	18c4      	adds	r4, r0, r3
 8002af2:	428c      	cmp	r4, r1
 8002af4:	d3f9      	bcc.n	8002aea <CopyDataInit>
 8002af6:	4a10      	ldr	r2, [pc, #64]	@ (8002b38 <LoopForever+0x2a>)
 8002af8:	4c10      	ldr	r4, [pc, #64]	@ (8002b3c <LoopForever+0x2e>)
 8002afa:	2300      	movs	r3, #0
 8002afc:	e001      	b.n	8002b02 <LoopFillZerobss>

08002afe <FillZerobss>:
 8002afe:	6013      	str	r3, [r2, #0]
 8002b00:	3204      	adds	r2, #4

08002b02 <LoopFillZerobss>:
 8002b02:	42a2      	cmp	r2, r4
 8002b04:	d3fb      	bcc.n	8002afe <FillZerobss>
 8002b06:	f002 f9f7 	bl	8004ef8 <__libc_init_array>
 8002b0a:	f7ff fd9b 	bl	8002644 <main>

08002b0e <LoopForever>:
 8002b0e:	e7fe      	b.n	8002b0e <LoopForever>
 8002b10:	20001800 	.word	0x20001800
 8002b14:	00000004 	.word	0x00000004
 8002b18:	0000001f 	.word	0x0000001f
 8002b1c:	40021018 	.word	0x40021018
 8002b20:	00000001 	.word	0x00000001
 8002b24:	40010000 	.word	0x40010000
 8002b28:	00000000 	.word	0x00000000
 8002b2c:	20000000 	.word	0x20000000
 8002b30:	200001d4 	.word	0x200001d4
 8002b34:	08007708 	.word	0x08007708
 8002b38:	200001d4 	.word	0x200001d4
 8002b3c:	20000574 	.word	0x20000574

08002b40 <ADC1_IRQHandler>:
 8002b40:	e7fe      	b.n	8002b40 <ADC1_IRQHandler>
	...

08002b44 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002b44:	b570      	push	{r4, r5, r6, lr}
 8002b46:	0005      	movs	r5, r0
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8002b48:	20fa      	movs	r0, #250	@ 0xfa
 8002b4a:	4b0d      	ldr	r3, [pc, #52]	@ (8002b80 <HAL_InitTick+0x3c>)
 8002b4c:	0080      	lsls	r0, r0, #2
 8002b4e:	7819      	ldrb	r1, [r3, #0]
 8002b50:	f7fd faf6 	bl	8000140 <__udivsi3>
 8002b54:	4c0b      	ldr	r4, [pc, #44]	@ (8002b84 <HAL_InitTick+0x40>)
 8002b56:	0001      	movs	r1, r0
 8002b58:	6820      	ldr	r0, [r4, #0]
 8002b5a:	f7fd faf1 	bl	8000140 <__udivsi3>
 8002b5e:	f000 f9a5 	bl	8002eac <HAL_SYSTICK_Config>
 8002b62:	0004      	movs	r4, r0
  {
    return HAL_ERROR;
 8002b64:	2001      	movs	r0, #1
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8002b66:	2c00      	cmp	r4, #0
 8002b68:	d109      	bne.n	8002b7e <HAL_InitTick+0x3a>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002b6a:	2d03      	cmp	r5, #3
 8002b6c:	d807      	bhi.n	8002b7e <HAL_InitTick+0x3a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8002b6e:	3802      	subs	r0, #2
 8002b70:	0022      	movs	r2, r4
 8002b72:	0029      	movs	r1, r5
 8002b74:	f000 f964 	bl	8002e40 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8002b78:	0020      	movs	r0, r4
 8002b7a:	4b03      	ldr	r3, [pc, #12]	@ (8002b88 <HAL_InitTick+0x44>)
 8002b7c:	601d      	str	r5, [r3, #0]
    return HAL_ERROR;
  }

   /* Return function status */
  return HAL_OK;
}
 8002b7e:	bd70      	pop	{r4, r5, r6, pc}
 8002b80:	20000004 	.word	0x20000004
 8002b84:	20000000 	.word	0x20000000
 8002b88:	20000008 	.word	0x20000008

08002b8c <HAL_Init>:
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002b8c:	2310      	movs	r3, #16
 8002b8e:	4a06      	ldr	r2, [pc, #24]	@ (8002ba8 <HAL_Init+0x1c>)
{
 8002b90:	b510      	push	{r4, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002b92:	6811      	ldr	r1, [r2, #0]
  HAL_InitTick(TICK_INT_PRIORITY);
 8002b94:	2000      	movs	r0, #0
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002b96:	430b      	orrs	r3, r1
 8002b98:	6013      	str	r3, [r2, #0]
  HAL_InitTick(TICK_INT_PRIORITY);
 8002b9a:	f7ff ffd3 	bl	8002b44 <HAL_InitTick>
  HAL_MspInit();
 8002b9e:	f7ff fe39 	bl	8002814 <HAL_MspInit>
}
 8002ba2:	2000      	movs	r0, #0
 8002ba4:	bd10      	pop	{r4, pc}
 8002ba6:	46c0      	nop			@ (mov r8, r8)
 8002ba8:	40022000 	.word	0x40022000

08002bac <HAL_IncTick>:
  *       implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8002bac:	4a03      	ldr	r2, [pc, #12]	@ (8002bbc <HAL_IncTick+0x10>)
 8002bae:	4b04      	ldr	r3, [pc, #16]	@ (8002bc0 <HAL_IncTick+0x14>)
 8002bb0:	6811      	ldr	r1, [r2, #0]
 8002bb2:	781b      	ldrb	r3, [r3, #0]
 8002bb4:	185b      	adds	r3, r3, r1
 8002bb6:	6013      	str	r3, [r2, #0]
}
 8002bb8:	4770      	bx	lr
 8002bba:	46c0      	nop			@ (mov r8, r8)
 8002bbc:	20000424 	.word	0x20000424
 8002bc0:	20000004 	.word	0x20000004

08002bc4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8002bc4:	4b01      	ldr	r3, [pc, #4]	@ (8002bcc <HAL_GetTick+0x8>)
 8002bc6:	6818      	ldr	r0, [r3, #0]
}
 8002bc8:	4770      	bx	lr
 8002bca:	46c0      	nop			@ (mov r8, r8)
 8002bcc:	20000424 	.word	0x20000424

08002bd0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8002bd0:	b570      	push	{r4, r5, r6, lr}
 8002bd2:	0004      	movs	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8002bd4:	f7ff fff6 	bl	8002bc4 <HAL_GetTick>
 8002bd8:	0005      	movs	r5, r0
  uint32_t wait = Delay;
  
  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8002bda:	1c63      	adds	r3, r4, #1
 8002bdc:	d002      	beq.n	8002be4 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8002bde:	4b04      	ldr	r3, [pc, #16]	@ (8002bf0 <HAL_Delay+0x20>)
 8002be0:	781b      	ldrb	r3, [r3, #0]
 8002be2:	18e4      	adds	r4, r4, r3
  }
  
  while((HAL_GetTick() - tickstart) < wait)
 8002be4:	f7ff ffee 	bl	8002bc4 <HAL_GetTick>
 8002be8:	1b40      	subs	r0, r0, r5
 8002bea:	42a0      	cmp	r0, r4
 8002bec:	d3fa      	bcc.n	8002be4 <HAL_Delay+0x14>
  {
  }
}
 8002bee:	bd70      	pop	{r4, r5, r6, pc}
 8002bf0:	20000004 	.word	0x20000004

08002bf4 <HAL_ADC_Init>:
  *         of structure "ADC_InitTypeDef".
  * @param  hadc ADC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8002bf4:	b570      	push	{r4, r5, r6, lr}
 8002bf6:	1e04      	subs	r4, r0, #0
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  uint32_t tmpCFGR1 = 0U;

  /* Check ADC handle */
  if(hadc == NULL)
 8002bf8:	d100      	bne.n	8002bfc <HAL_ADC_Init+0x8>
 8002bfa:	e090      	b.n	8002d1e <HAL_ADC_Init+0x12a>
  /* Refer to header of this file for more details on clock enabling procedure*/
  
  /* Actions performed only if ADC is coming from state reset:                */
  /* - Initialization of ADC MSP                                              */
  /* - ADC voltage regulator enable                                           */
  if (hadc->State == HAL_ADC_STATE_RESET)
 8002bfc:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8002bfe:	2b00      	cmp	r3, #0
 8002c00:	d105      	bne.n	8002c0e <HAL_ADC_Init+0x1a>
  {
    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8002c02:	0002      	movs	r2, r0
 8002c04:	3234      	adds	r2, #52	@ 0x34
    ADC_CLEAR_ERRORCODE(hadc);
 8002c06:	63c3      	str	r3, [r0, #60]	@ 0x3c
    hadc->Lock = HAL_UNLOCKED;
 8002c08:	7013      	strb	r3, [r2, #0]
    
    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8002c0a:	f7ff fe1b 	bl	8002844 <HAL_ADC_MspInit>
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  /* and if there is no conversion on going on regular group (ADC can be      */ 
  /* enabled anyway, in case of call of this function to update a parameter   */
  /* on the fly).                                                             */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL) &&
 8002c0e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8002c10:	06db      	lsls	r3, r3, #27
 8002c12:	d500      	bpl.n	8002c16 <HAL_ADC_Init+0x22>
 8002c14:	e085      	b.n	8002d22 <HAL_ADC_Init+0x12e>
      (tmp_hal_status == HAL_OK)                                &&
      (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)          )
 8002c16:	6822      	ldr	r2, [r4, #0]
 8002c18:	6893      	ldr	r3, [r2, #8]
      (tmp_hal_status == HAL_OK)                                &&
 8002c1a:	075b      	lsls	r3, r3, #29
 8002c1c:	d500      	bpl.n	8002c20 <HAL_ADC_Init+0x2c>
 8002c1e:	e080      	b.n	8002d22 <HAL_ADC_Init+0x12e>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8002c20:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8002c22:	4b42      	ldr	r3, [pc, #264]	@ (8002d2c <HAL_ADC_Init+0x138>)
 8002c24:	4019      	ands	r1, r3
 8002c26:	3306      	adds	r3, #6
 8002c28:	33ff      	adds	r3, #255	@ 0xff
 8002c2a:	430b      	orrs	r3, r1
    /* Parameters update conditioned to ADC state:                            */
    /* Parameters that can be updated only when ADC is disabled:              */
    /*  - ADC clock mode                                                      */
    /*  - ADC clock prescaler                                                 */
    /*  - ADC resolution                                                      */
    if (ADC_IS_ENABLE(hadc) == RESET)
 8002c2c:	2103      	movs	r1, #3
    ADC_STATE_CLR_SET(hadc->State,
 8002c2e:	63a3      	str	r3, [r4, #56]	@ 0x38
    if (ADC_IS_ENABLE(hadc) == RESET)
 8002c30:	6893      	ldr	r3, [r2, #8]
 8002c32:	400b      	ands	r3, r1
 8002c34:	2b01      	cmp	r3, #1
 8002c36:	d105      	bne.n	8002c44 <HAL_ADC_Init+0x50>
 8002c38:	6811      	ldr	r1, [r2, #0]
 8002c3a:	4219      	tst	r1, r3
 8002c3c:	d10e      	bne.n	8002c5c <HAL_ADC_Init+0x68>
 8002c3e:	68d3      	ldr	r3, [r2, #12]
 8002c40:	041b      	lsls	r3, r3, #16
 8002c42:	d40b      	bmi.n	8002c5c <HAL_ADC_Init+0x68>
      /* parameters):                                                         */
      /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
      /*     (set into HAL_ADC_ConfigChannel() )                              */
     
      /* Configuration of ADC resolution                                      */
      MODIFY_REG(hadc->Instance->CFGR1,
 8002c44:	2118      	movs	r1, #24
 8002c46:	68d3      	ldr	r3, [r2, #12]
 8002c48:	438b      	bics	r3, r1
 8002c4a:	68a1      	ldr	r1, [r4, #8]
 8002c4c:	430b      	orrs	r3, r1
 8002c4e:	60d3      	str	r3, [r2, #12]
                 ADC_CFGR1_RES        ,
                 hadc->Init.Resolution );
      
      /* Configuration of ADC clock mode: clock source AHB or HSI with        */
      /* selectable prescaler                                                 */
      MODIFY_REG(hadc->Instance->CFGR2    ,
 8002c50:	6913      	ldr	r3, [r2, #16]
 8002c52:	6861      	ldr	r1, [r4, #4]
 8002c54:	009b      	lsls	r3, r3, #2
 8002c56:	089b      	lsrs	r3, r3, #2
 8002c58:	430b      	orrs	r3, r1
 8002c5a:	6113      	str	r3, [r2, #16]
    /*  - external trigger polarity                                           */
    /*  - data alignment                                                      */
    /*  - resolution                                                          */
    /*  - scan direction                                                      */
    /*  - DMA continuous request                                              */
    hadc->Instance->CFGR1 &= ~( ADC_CFGR1_DISCEN  |
 8002c5c:	68d3      	ldr	r3, [r2, #12]
 8002c5e:	4934      	ldr	r1, [pc, #208]	@ (8002d30 <HAL_ADC_Init+0x13c>)
 8002c60:	400b      	ands	r3, r1
 8002c62:	60d3      	str	r3, [r2, #12]
                                ADC_CFGR1_EXTEN   |
                                ADC_CFGR1_ALIGN   |
                                ADC_CFGR1_SCANDIR |
                                ADC_CFGR1_DMACFG   );

    tmpCFGR1 |= (ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 8002c64:	7e23      	ldrb	r3, [r4, #24]
                 ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)     |
 8002c66:	7e60      	ldrb	r0, [r4, #25]
    tmpCFGR1 |= (ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 8002c68:	039b      	lsls	r3, r3, #14
                 ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)     |
 8002c6a:	03c0      	lsls	r0, r0, #15
    tmpCFGR1 |= (ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 8002c6c:	4303      	orrs	r3, r0
                 ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)    |
 8002c6e:	7ea1      	ldrb	r1, [r4, #26]
                 ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                            |
                 hadc->Init.DataAlign                                             |
                 ADC_SCANDIR(hadc->Init.ScanConvMode)                             |
 8002c70:	68e0      	ldr	r0, [r4, #12]
 8002c72:	4303      	orrs	r3, r0
                 ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)    |
 8002c74:	0348      	lsls	r0, r1, #13
                 ADC_SCANDIR(hadc->Init.ScanConvMode)                             |
 8002c76:	4303      	orrs	r3, r0
                 ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests)  );
 8002c78:	1d60      	adds	r0, r4, #5
 8002c7a:	7fc0      	ldrb	r0, [r0, #31]
 8002c7c:	0040      	lsls	r0, r0, #1
                 ADC_SCANDIR(hadc->Init.ScanConvMode)                             |
 8002c7e:	4303      	orrs	r3, r0
                 ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                            |
 8002c80:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8002c82:	3801      	subs	r0, #1
 8002c84:	1e45      	subs	r5, r0, #1
 8002c86:	41a8      	sbcs	r0, r5
 8002c88:	0300      	lsls	r0, r0, #12
                 ADC_SCANDIR(hadc->Init.ScanConvMode)                             |
 8002c8a:	4303      	orrs	r3, r0
 8002c8c:	6920      	ldr	r0, [r4, #16]
 8002c8e:	3802      	subs	r0, #2
 8002c90:	4245      	negs	r5, r0
 8002c92:	4168      	adcs	r0, r5
 8002c94:	0080      	lsls	r0, r0, #2
 8002c96:	4303      	orrs	r3, r0
    
    /* Enable discontinuous mode only if continuous mode is disabled */
    if (hadc->Init.DiscontinuousConvMode == ENABLE)
 8002c98:	7ee0      	ldrb	r0, [r4, #27]
 8002c9a:	2801      	cmp	r0, #1
 8002c9c:	d104      	bne.n	8002ca8 <HAL_ADC_Init+0xb4>
    {
      if (hadc->Init.ContinuousConvMode == DISABLE)
 8002c9e:	2900      	cmp	r1, #0
 8002ca0:	d12b      	bne.n	8002cfa <HAL_ADC_Init+0x106>
      {
        /* Enable the selected ADC group regular discontinuous mode */
        tmpCFGR1 |= ADC_CFGR1_DISCEN;
 8002ca2:	2180      	movs	r1, #128	@ 0x80
 8002ca4:	0249      	lsls	r1, r1, #9
 8002ca6:	430b      	orrs	r3, r1
    /* Enable external trigger if trigger selection is different of software  */
    /* start.                                                                 */
    /* Note: This configuration keeps the hardware feature of parameter       */
    /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
    /*       software start.                                                  */
    if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8002ca8:	20c2      	movs	r0, #194	@ 0xc2
 8002caa:	69e1      	ldr	r1, [r4, #28]
 8002cac:	30ff      	adds	r0, #255	@ 0xff
 8002cae:	4281      	cmp	r1, r0
 8002cb0:	d002      	beq.n	8002cb8 <HAL_ADC_Init+0xc4>
    {
      tmpCFGR1 |= ( hadc->Init.ExternalTrigConv    |
 8002cb2:	6a20      	ldr	r0, [r4, #32]
 8002cb4:	4301      	orrs	r1, r0
 8002cb6:	430b      	orrs	r3, r1
    /* Management of parameters "SamplingTimeCommon" and "SamplingTime"       */
    /* (obsolete): sampling time set in this function if parameter            */
    /*  "SamplingTimeCommon" has been set to a valid sampling time.           */
    /* Otherwise, sampling time is set into ADC channel initialization        */
    /* structure with parameter "SamplingTime" (obsolete).                    */
    if (IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon))
 8002cb8:	2080      	movs	r0, #128	@ 0x80
    hadc->Instance->CFGR1 |= tmpCFGR1;
 8002cba:	68d1      	ldr	r1, [r2, #12]
    if (IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon))
 8002cbc:	0540      	lsls	r0, r0, #21
    hadc->Instance->CFGR1 |= tmpCFGR1;
 8002cbe:	4319      	orrs	r1, r3
 8002cc0:	60d1      	str	r1, [r2, #12]
    if (IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon))
 8002cc2:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8002cc4:	4281      	cmp	r1, r0
 8002cc6:	d002      	beq.n	8002cce <HAL_ADC_Init+0xda>
 8002cc8:	1e48      	subs	r0, r1, #1
 8002cca:	2806      	cmp	r0, #6
 8002ccc:	d807      	bhi.n	8002cde <HAL_ADC_Init+0xea>
    {
      /* Channel sampling time configuration */
      /* Clear the old sample time */
      hadc->Instance->SMPR &= ~(ADC_SMPR_SMP);
 8002cce:	2507      	movs	r5, #7
 8002cd0:	6950      	ldr	r0, [r2, #20]
      
      /* Set the new sample time */
      hadc->Instance->SMPR |= ADC_SMPR_SET(hadc->Init.SamplingTimeCommon);
 8002cd2:	4029      	ands	r1, r5
      hadc->Instance->SMPR &= ~(ADC_SMPR_SMP);
 8002cd4:	43a8      	bics	r0, r5
 8002cd6:	6150      	str	r0, [r2, #20]
      hadc->Instance->SMPR |= ADC_SMPR_SET(hadc->Init.SamplingTimeCommon);
 8002cd8:	6950      	ldr	r0, [r2, #20]
 8002cda:	4301      	orrs	r1, r0
 8002cdc:	6151      	str	r1, [r2, #20]
    /* Check back that ADC registers have effectively been configured to      */
    /* ensure of no potential problem of ADC core IP clocking.                */
    /* Check through register CFGR1 (excluding analog watchdog configuration: */
    /* set into separate dedicated function, and bits of ADC resolution set   */
    /* out of temporary variable 'tmpCFGR1').                                 */
    if ((hadc->Instance->CFGR1 & ~(ADC_CFGR1_AWDCH | ADC_CFGR1_AWDEN | ADC_CFGR1_AWDSGL | ADC_CFGR1_RES))
 8002cde:	68d2      	ldr	r2, [r2, #12]
 8002ce0:	4914      	ldr	r1, [pc, #80]	@ (8002d34 <HAL_ADC_Init+0x140>)
 8002ce2:	400a      	ands	r2, r1
 8002ce4:	429a      	cmp	r2, r3
 8002ce6:	d110      	bne.n	8002d0a <HAL_ADC_Init+0x116>
         == tmpCFGR1)
    {
      /* Set ADC error code to none */
      ADC_CLEAR_ERRORCODE(hadc);
 8002ce8:	2000      	movs	r0, #0
      
      /* Set the ADC state */
      ADC_STATE_CLR_SET(hadc->State,
 8002cea:	2303      	movs	r3, #3
      ADC_CLEAR_ERRORCODE(hadc);
 8002cec:	63e0      	str	r0, [r4, #60]	@ 0x3c
      ADC_STATE_CLR_SET(hadc->State,
 8002cee:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8002cf0:	439a      	bics	r2, r3
 8002cf2:	3b02      	subs	r3, #2
 8002cf4:	4313      	orrs	r3, r2
 8002cf6:	63a3      	str	r3, [r4, #56]	@ 0x38
    tmp_hal_status = HAL_ERROR;
  }
  
  /* Return function status */
  return tmp_hal_status;
}
 8002cf8:	bd70      	pop	{r4, r5, r6, pc}
        SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8002cfa:	2120      	movs	r1, #32
 8002cfc:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
 8002cfe:	4329      	orrs	r1, r5
 8002d00:	63a1      	str	r1, [r4, #56]	@ 0x38
        SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002d02:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 8002d04:	4308      	orrs	r0, r1
 8002d06:	63e0      	str	r0, [r4, #60]	@ 0x3c
 8002d08:	e7ce      	b.n	8002ca8 <HAL_ADC_Init+0xb4>
      ADC_STATE_CLR_SET(hadc->State,
 8002d0a:	2312      	movs	r3, #18
 8002d0c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8002d0e:	439a      	bics	r2, r3
 8002d10:	3b02      	subs	r3, #2
 8002d12:	4313      	orrs	r3, r2
 8002d14:	63a3      	str	r3, [r4, #56]	@ 0x38
      SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002d16:	2301      	movs	r3, #1
 8002d18:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8002d1a:	4313      	orrs	r3, r2
 8002d1c:	63e3      	str	r3, [r4, #60]	@ 0x3c
    return HAL_ERROR;
 8002d1e:	2001      	movs	r0, #1
 8002d20:	e7ea      	b.n	8002cf8 <HAL_ADC_Init+0x104>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8002d22:	2310      	movs	r3, #16
 8002d24:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8002d26:	4313      	orrs	r3, r2
 8002d28:	63a3      	str	r3, [r4, #56]	@ 0x38
    tmp_hal_status = HAL_ERROR;
 8002d2a:	e7f8      	b.n	8002d1e <HAL_ADC_Init+0x12a>
 8002d2c:	fffffefd 	.word	0xfffffefd
 8002d30:	fffe0219 	.word	0xfffe0219
 8002d34:	833fffe7 	.word	0x833fffe7

08002d38 <HAL_ADC_ConfigChannel>:
  * @param  hadc ADC handle
  * @param  sConfig Structure of ADC channel for regular group.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
{
 8002d38:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  __IO uint32_t wait_loop_index = 0U;
 8002d3a:	2200      	movs	r2, #0
  {
    assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
  }
  
  /* Process locked */
  __HAL_LOCK(hadc);
 8002d3c:	0004      	movs	r4, r0
  __IO uint32_t wait_loop_index = 0U;
 8002d3e:	9201      	str	r2, [sp, #4]
  __HAL_LOCK(hadc);
 8002d40:	3434      	adds	r4, #52	@ 0x34
 8002d42:	7822      	ldrb	r2, [r4, #0]
{
 8002d44:	0003      	movs	r3, r0
  if (! IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon))
 8002d46:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
  __HAL_LOCK(hadc);
 8002d48:	2002      	movs	r0, #2
 8002d4a:	2a01      	cmp	r2, #1
 8002d4c:	d02a      	beq.n	8002da4 <HAL_ADC_ConfigChannel+0x6c>
 8002d4e:	3801      	subs	r0, #1
 8002d50:	7020      	strb	r0, [r4, #0]
  /* Parameters that can be updated when ADC is disabled or enabled without   */
  /* conversion on going on regular group:                                    */
  /*  - Channel number                                                        */
  /*  - Channel sampling time                                                 */
  /*  - Management of internal measurement channels: VrefInt/TempSensor/Vbat  */
  if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 8002d52:	681a      	ldr	r2, [r3, #0]
 8002d54:	6896      	ldr	r6, [r2, #8]
 8002d56:	0776      	lsls	r6, r6, #29
 8002d58:	d45e      	bmi.n	8002e18 <HAL_ADC_ConfigChannel+0xe0>
    /* ADC conversion sequencer.                                              */
    if (sConfig->Rank != ADC_RANK_NONE)
    {
      /* Regular sequence configuration */
      /* Set the channel selection register from the selected channel */
      hadc->Instance->CHSELR |= ADC_CHSELR_CHANNEL(sConfig->Channel);
 8002d5a:	680b      	ldr	r3, [r1, #0]
    if (sConfig->Rank != ADC_RANK_NONE)
 8002d5c:	684f      	ldr	r7, [r1, #4]
      /* internal measurement paths enable: If internal channel selected,     */
      /* enable dedicated internal buffers and path.                          */
      /* Note: these internal measurement paths can be disabled using         */
      /*       HAL_ADC_DeInit() or removing the channel from sequencer with   */
      /*       channel configuration parameter "Rank".                        */
      if(ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
 8002d5e:	001e      	movs	r6, r3
    if (sConfig->Rank != ADC_RANK_NONE)
 8002d60:	46bc      	mov	ip, r7
 8002d62:	4f30      	ldr	r7, [pc, #192]	@ (8002e24 <HAL_ADC_ConfigChannel+0xec>)
      hadc->Instance->CHSELR |= ADC_CHSELR_CHANNEL(sConfig->Channel);
 8002d64:	4098      	lsls	r0, r3
      if(ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
 8002d66:	3e10      	subs	r6, #16
    if (sConfig->Rank != ADC_RANK_NONE)
 8002d68:	45bc      	cmp	ip, r7
 8002d6a:	d03f      	beq.n	8002dec <HAL_ADC_ConfigChannel+0xb4>
      hadc->Instance->CHSELR |= ADC_CHSELR_CHANNEL(sConfig->Channel);
 8002d6c:	6a97      	ldr	r7, [r2, #40]	@ 0x28
 8002d6e:	4338      	orrs	r0, r7
 8002d70:	6290      	str	r0, [r2, #40]	@ 0x28
      if (! IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon))
 8002d72:	2080      	movs	r0, #128	@ 0x80
 8002d74:	0540      	lsls	r0, r0, #21
 8002d76:	4285      	cmp	r5, r0
 8002d78:	d00f      	beq.n	8002d9a <HAL_ADC_ConfigChannel+0x62>
 8002d7a:	3d01      	subs	r5, #1
 8002d7c:	2d06      	cmp	r5, #6
 8002d7e:	d90c      	bls.n	8002d9a <HAL_ADC_ConfigChannel+0x62>
        if (sConfig->SamplingTime != ADC_GET_SAMPLINGTIME(hadc))
 8002d80:	2007      	movs	r0, #7
 8002d82:	6955      	ldr	r5, [r2, #20]
 8002d84:	6889      	ldr	r1, [r1, #8]
 8002d86:	4005      	ands	r5, r0
 8002d88:	42a9      	cmp	r1, r5
 8002d8a:	d006      	beq.n	8002d9a <HAL_ADC_ConfigChannel+0x62>
          hadc->Instance->SMPR &= ~(ADC_SMPR_SMP);
 8002d8c:	6955      	ldr	r5, [r2, #20]
          hadc->Instance->SMPR |= ADC_SMPR_SET(sConfig->SamplingTime);
 8002d8e:	4001      	ands	r1, r0
          hadc->Instance->SMPR &= ~(ADC_SMPR_SMP);
 8002d90:	4385      	bics	r5, r0
 8002d92:	6155      	str	r5, [r2, #20]
          hadc->Instance->SMPR |= ADC_SMPR_SET(sConfig->SamplingTime);
 8002d94:	6955      	ldr	r5, [r2, #20]
 8002d96:	4329      	orrs	r1, r5
 8002d98:	6151      	str	r1, [r2, #20]
      if(ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
 8002d9a:	2e02      	cmp	r6, #2
 8002d9c:	d903      	bls.n	8002da6 <HAL_ADC_ConfigChannel+0x6e>
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8002d9e:	2000      	movs	r0, #0
    
    tmp_hal_status = HAL_ERROR;
  }
  
  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 8002da0:	2300      	movs	r3, #0
 8002da2:	7023      	strb	r3, [r4, #0]
  
  /* Return function status */
  return tmp_hal_status;
}
 8002da4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
        ADC->CCR |= ADC_CHANNEL_INTERNAL_PATH(sConfig->Channel);
 8002da6:	4820      	ldr	r0, [pc, #128]	@ (8002e28 <HAL_ADC_ConfigChannel+0xf0>)
 8002da8:	6801      	ldr	r1, [r0, #0]
 8002daa:	2b10      	cmp	r3, #16
 8002dac:	d01b      	beq.n	8002de6 <HAL_ADC_ConfigChannel+0xae>
 8002dae:	001a      	movs	r2, r3
 8002db0:	3a11      	subs	r2, #17
 8002db2:	4255      	negs	r5, r2
 8002db4:	416a      	adcs	r2, r5
 8002db6:	4d1d      	ldr	r5, [pc, #116]	@ (8002e2c <HAL_ADC_ConfigChannel+0xf4>)
 8002db8:	4252      	negs	r2, r2
 8002dba:	402a      	ands	r2, r5
 8002dbc:	2580      	movs	r5, #128	@ 0x80
 8002dbe:	046d      	lsls	r5, r5, #17
 8002dc0:	1952      	adds	r2, r2, r5
 8002dc2:	430a      	orrs	r2, r1
 8002dc4:	6002      	str	r2, [r0, #0]
        if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 8002dc6:	2b10      	cmp	r3, #16
 8002dc8:	d1e9      	bne.n	8002d9e <HAL_ADC_ConfigChannel+0x66>
          wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 8002dca:	4b19      	ldr	r3, [pc, #100]	@ (8002e30 <HAL_ADC_ConfigChannel+0xf8>)
 8002dcc:	4919      	ldr	r1, [pc, #100]	@ (8002e34 <HAL_ADC_ConfigChannel+0xfc>)
 8002dce:	6818      	ldr	r0, [r3, #0]
 8002dd0:	f7fd f9b6 	bl	8000140 <__udivsi3>
 8002dd4:	230a      	movs	r3, #10
 8002dd6:	4343      	muls	r3, r0
            wait_loop_index--;
 8002dd8:	9301      	str	r3, [sp, #4]
          while(wait_loop_index != 0U)
 8002dda:	9b01      	ldr	r3, [sp, #4]
 8002ddc:	2b00      	cmp	r3, #0
 8002dde:	d0de      	beq.n	8002d9e <HAL_ADC_ConfigChannel+0x66>
            wait_loop_index--;
 8002de0:	9b01      	ldr	r3, [sp, #4]
 8002de2:	3b01      	subs	r3, #1
 8002de4:	e7f8      	b.n	8002dd8 <HAL_ADC_ConfigChannel+0xa0>
        ADC->CCR |= ADC_CHANNEL_INTERNAL_PATH(sConfig->Channel);
 8002de6:	2280      	movs	r2, #128	@ 0x80
 8002de8:	0412      	lsls	r2, r2, #16
 8002dea:	e7ea      	b.n	8002dc2 <HAL_ADC_ConfigChannel+0x8a>
      hadc->Instance->CHSELR &= ~ADC_CHSELR_CHANNEL(sConfig->Channel);
 8002dec:	6a91      	ldr	r1, [r2, #40]	@ 0x28
 8002dee:	4381      	bics	r1, r0
 8002df0:	6291      	str	r1, [r2, #40]	@ 0x28
      if(ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
 8002df2:	2e02      	cmp	r6, #2
 8002df4:	d8d3      	bhi.n	8002d9e <HAL_ADC_ConfigChannel+0x66>
        ADC->CCR &= ~ADC_CHANNEL_INTERNAL_PATH(sConfig->Channel);
 8002df6:	4a0c      	ldr	r2, [pc, #48]	@ (8002e28 <HAL_ADC_ConfigChannel+0xf0>)
 8002df8:	6811      	ldr	r1, [r2, #0]
 8002dfa:	2b10      	cmp	r3, #16
 8002dfc:	d00a      	beq.n	8002e14 <HAL_ADC_ConfigChannel+0xdc>
 8002dfe:	3b11      	subs	r3, #17
 8002e00:	1e58      	subs	r0, r3, #1
 8002e02:	4183      	sbcs	r3, r0
 8002e04:	4809      	ldr	r0, [pc, #36]	@ (8002e2c <HAL_ADC_ConfigChannel+0xf4>)
 8002e06:	425b      	negs	r3, r3
 8002e08:	4003      	ands	r3, r0
 8002e0a:	480b      	ldr	r0, [pc, #44]	@ (8002e38 <HAL_ADC_ConfigChannel+0x100>)
 8002e0c:	181b      	adds	r3, r3, r0
 8002e0e:	400b      	ands	r3, r1
 8002e10:	6013      	str	r3, [r2, #0]
 8002e12:	e7c4      	b.n	8002d9e <HAL_ADC_ConfigChannel+0x66>
 8002e14:	4b09      	ldr	r3, [pc, #36]	@ (8002e3c <HAL_ADC_ConfigChannel+0x104>)
 8002e16:	e7fa      	b.n	8002e0e <HAL_ADC_ConfigChannel+0xd6>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8002e18:	2220      	movs	r2, #32
 8002e1a:	6b99      	ldr	r1, [r3, #56]	@ 0x38
 8002e1c:	430a      	orrs	r2, r1
 8002e1e:	639a      	str	r2, [r3, #56]	@ 0x38
    tmp_hal_status = HAL_ERROR;
 8002e20:	e7be      	b.n	8002da0 <HAL_ADC_ConfigChannel+0x68>
 8002e22:	46c0      	nop			@ (mov r8, r8)
 8002e24:	00001001 	.word	0x00001001
 8002e28:	40012708 	.word	0x40012708
 8002e2c:	ff400000 	.word	0xff400000
 8002e30:	20000000 	.word	0x20000000
 8002e34:	000f4240 	.word	0x000f4240
 8002e38:	ffbfffff 	.word	0xffbfffff
 8002e3c:	ff7fffff 	.word	0xff7fffff

08002e40 <HAL_NVIC_SetPriority>:
  *         with stm32f0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0 based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8002e40:	b510      	push	{r4, lr}
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002e42:	24ff      	movs	r4, #255	@ 0xff
 8002e44:	2203      	movs	r2, #3
 8002e46:	000b      	movs	r3, r1
 8002e48:	0021      	movs	r1, r4
 8002e4a:	4002      	ands	r2, r0
 8002e4c:	00d2      	lsls	r2, r2, #3
 8002e4e:	4091      	lsls	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002e50:	019b      	lsls	r3, r3, #6
 8002e52:	4023      	ands	r3, r4
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002e54:	43c9      	mvns	r1, r1
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002e56:	4093      	lsls	r3, r2
  if ((int32_t)(IRQn) >= 0)
 8002e58:	2800      	cmp	r0, #0
 8002e5a:	db0a      	blt.n	8002e72 <HAL_NVIC_SetPriority+0x32>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002e5c:	24c0      	movs	r4, #192	@ 0xc0
 8002e5e:	4a0b      	ldr	r2, [pc, #44]	@ (8002e8c <HAL_NVIC_SetPriority+0x4c>)
 8002e60:	0880      	lsrs	r0, r0, #2
 8002e62:	0080      	lsls	r0, r0, #2
 8002e64:	1880      	adds	r0, r0, r2
 8002e66:	00a4      	lsls	r4, r4, #2
 8002e68:	5902      	ldr	r2, [r0, r4]
 8002e6a:	400a      	ands	r2, r1
 8002e6c:	4313      	orrs	r3, r2
 8002e6e:	5103      	str	r3, [r0, r4]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);

  /* Prevent unused argument(s) compilation warning */
  UNUSED(SubPriority);
}
 8002e70:	bd10      	pop	{r4, pc}
  }
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002e72:	220f      	movs	r2, #15
 8002e74:	4010      	ands	r0, r2
 8002e76:	3808      	subs	r0, #8
 8002e78:	4a05      	ldr	r2, [pc, #20]	@ (8002e90 <HAL_NVIC_SetPriority+0x50>)
 8002e7a:	0880      	lsrs	r0, r0, #2
 8002e7c:	0080      	lsls	r0, r0, #2
 8002e7e:	1880      	adds	r0, r0, r2
 8002e80:	69c2      	ldr	r2, [r0, #28]
 8002e82:	4011      	ands	r1, r2
 8002e84:	4319      	orrs	r1, r3
 8002e86:	61c1      	str	r1, [r0, #28]
 8002e88:	e7f2      	b.n	8002e70 <HAL_NVIC_SetPriority+0x30>
 8002e8a:	46c0      	nop			@ (mov r8, r8)
 8002e8c:	e000e100 	.word	0xe000e100
 8002e90:	e000ed00 	.word	0xe000ed00

08002e94 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8002e94:	2800      	cmp	r0, #0
 8002e96:	db05      	blt.n	8002ea4 <HAL_NVIC_EnableIRQ+0x10>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002e98:	231f      	movs	r3, #31
 8002e9a:	4018      	ands	r0, r3
 8002e9c:	3b1e      	subs	r3, #30
 8002e9e:	4083      	lsls	r3, r0
 8002ea0:	4a01      	ldr	r2, [pc, #4]	@ (8002ea8 <HAL_NVIC_EnableIRQ+0x14>)
 8002ea2:	6013      	str	r3, [r2, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8002ea4:	4770      	bx	lr
 8002ea6:	46c0      	nop			@ (mov r8, r8)
 8002ea8:	e000e100 	.word	0xe000e100

08002eac <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8002eac:	2280      	movs	r2, #128	@ 0x80
 8002eae:	1e43      	subs	r3, r0, #1
 8002eb0:	0452      	lsls	r2, r2, #17
  {
    return (1UL);                                                   /* Reload value impossible */
 8002eb2:	2001      	movs	r0, #1
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8002eb4:	4293      	cmp	r3, r2
 8002eb6:	d20d      	bcs.n	8002ed4 <HAL_SYSTICK_Config+0x28>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002eb8:	21c0      	movs	r1, #192	@ 0xc0
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8002eba:	4a07      	ldr	r2, [pc, #28]	@ (8002ed8 <HAL_SYSTICK_Config+0x2c>)
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002ebc:	4807      	ldr	r0, [pc, #28]	@ (8002edc <HAL_SYSTICK_Config+0x30>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8002ebe:	6053      	str	r3, [r2, #4]
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002ec0:	6a03      	ldr	r3, [r0, #32]
 8002ec2:	0609      	lsls	r1, r1, #24
 8002ec4:	021b      	lsls	r3, r3, #8
 8002ec6:	0a1b      	lsrs	r3, r3, #8
 8002ec8:	430b      	orrs	r3, r1
 8002eca:	6203      	str	r3, [r0, #32]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8002ecc:	2000      	movs	r0, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8002ece:	2307      	movs	r3, #7
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8002ed0:	6090      	str	r0, [r2, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8002ed2:	6013      	str	r3, [r2, #0]
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 8002ed4:	4770      	bx	lr
 8002ed6:	46c0      	nop			@ (mov r8, r8)
 8002ed8:	e000e010 	.word	0xe000e010
 8002edc:	e000ed00 	.word	0xe000ed00

08002ee0 <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 8002ee0:	b570      	push	{r4, r5, r6, lr}
 8002ee2:	0004      	movs	r4, r0
  uint32_t tmp = 0U;

  /* Check the DMA handle allocation */
  if (NULL == hdma)
  {
    return HAL_ERROR;
 8002ee4:	2001      	movs	r0, #1
  if (NULL == hdma)
 8002ee6:	2c00      	cmp	r4, #0
 8002ee8:	d024      	beq.n	8002f34 <HAL_DMA_Init+0x54>
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));

  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;
 8002eea:	2302      	movs	r3, #2
 8002eec:	1ca5      	adds	r5, r4, #2
 8002eee:	77eb      	strb	r3, [r5, #31]

  /* Get the CR register value */
  tmp = hdma->Instance->CCR;
 8002ef0:	6820      	ldr	r0, [r4, #0]

  /* Clear PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR bits */
  tmp &= ((uint32_t)~(DMA_CCR_PL    | DMA_CCR_MSIZE  | DMA_CCR_PSIZE  | \
 8002ef2:	4b11      	ldr	r3, [pc, #68]	@ (8002f38 <HAL_DMA_Init+0x58>)
  tmp = hdma->Instance->CCR;
 8002ef4:	6802      	ldr	r2, [r0, #0]
                      DMA_CCR_MINC  | DMA_CCR_PINC   | DMA_CCR_CIRC   | \
                      DMA_CCR_DIR));

  /* Prepare the DMA Channel configuration */
  tmp |=  hdma->Init.Direction        |
 8002ef6:	68a1      	ldr	r1, [r4, #8]
  tmp &= ((uint32_t)~(DMA_CCR_PL    | DMA_CCR_MSIZE  | DMA_CCR_PSIZE  | \
 8002ef8:	401a      	ands	r2, r3
  tmp |=  hdma->Init.Direction        |
 8002efa:	6863      	ldr	r3, [r4, #4]
 8002efc:	430b      	orrs	r3, r1
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8002efe:	68e1      	ldr	r1, [r4, #12]
 8002f00:	430b      	orrs	r3, r1
 8002f02:	6921      	ldr	r1, [r4, #16]
 8002f04:	430b      	orrs	r3, r1
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8002f06:	6961      	ldr	r1, [r4, #20]
 8002f08:	430b      	orrs	r3, r1
 8002f0a:	69a1      	ldr	r1, [r4, #24]
 8002f0c:	430b      	orrs	r3, r1
          hdma->Init.Mode                | hdma->Init.Priority;
 8002f0e:	69e1      	ldr	r1, [r4, #28]
 8002f10:	430b      	orrs	r3, r1
  tmp |=  hdma->Init.Direction        |
 8002f12:	4313      	orrs	r3, r2

  /* Write to DMA Channel CR register */
  hdma->Instance->CCR = tmp;
 8002f14:	6003      	str	r3, [r0, #0]
    hdma->DmaBaseAddress = DMA2;
  }
#else
  /* calculation of the channel index */
  /* DMA1 */
  hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Channel2 - (uint32_t)DMA1_Channel1)) << 2U;
 8002f16:	4b09      	ldr	r3, [pc, #36]	@ (8002f3c <HAL_DMA_Init+0x5c>)
 8002f18:	2114      	movs	r1, #20
 8002f1a:	18c0      	adds	r0, r0, r3
 8002f1c:	f7fd f910 	bl	8000140 <__udivsi3>
  hdma->DmaBaseAddress = DMA1;
 8002f20:	4b07      	ldr	r3, [pc, #28]	@ (8002f40 <HAL_DMA_Init+0x60>)
  hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Channel2 - (uint32_t)DMA1_Channel1)) << 2U;
 8002f22:	0080      	lsls	r0, r0, #2
 8002f24:	6420      	str	r0, [r4, #64]	@ 0x40
  hdma->DmaBaseAddress = DMA1;
 8002f26:	63e3      	str	r3, [r4, #60]	@ 0x3c
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8002f28:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 8002f2a:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8002f2c:	63a0      	str	r0, [r4, #56]	@ 0x38
  hdma->Lock = HAL_UNLOCKED;
 8002f2e:	18e4      	adds	r4, r4, r3
  hdma->State = HAL_DMA_STATE_READY;
 8002f30:	77eb      	strb	r3, [r5, #31]
  hdma->Lock = HAL_UNLOCKED;
 8002f32:	77e0      	strb	r0, [r4, #31]
}
 8002f34:	bd70      	pop	{r4, r5, r6, pc}
 8002f36:	46c0      	nop			@ (mov r8, r8)
 8002f38:	ffffc00f 	.word	0xffffc00f
 8002f3c:	bffdfff8 	.word	0xbffdfff8
 8002f40:	40020000 	.word	0x40020000

08002f44 <HAL_DMA_IRQHandler>:
{
 8002f44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if ((RESET != (flag_it & (DMA_FLAG_HT1 << hdma->ChannelIndex))) && (RESET != (source_it & DMA_IT_HT)))
 8002f46:	2704      	movs	r7, #4
 8002f48:	003e      	movs	r6, r7
 8002f4a:	6c01      	ldr	r1, [r0, #64]	@ 0x40
  uint32_t flag_it = hdma->DmaBaseAddress->ISR;
 8002f4c:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
  if ((RESET != (flag_it & (DMA_FLAG_HT1 << hdma->ChannelIndex))) && (RESET != (source_it & DMA_IT_HT)))
 8002f4e:	408e      	lsls	r6, r1
  uint32_t flag_it = hdma->DmaBaseAddress->ISR;
 8002f50:	6815      	ldr	r5, [r2, #0]
  uint32_t source_it = hdma->Instance->CCR;
 8002f52:	6803      	ldr	r3, [r0, #0]
 8002f54:	681c      	ldr	r4, [r3, #0]
  if ((RESET != (flag_it & (DMA_FLAG_HT1 << hdma->ChannelIndex))) && (RESET != (source_it & DMA_IT_HT)))
 8002f56:	4235      	tst	r5, r6
 8002f58:	d00d      	beq.n	8002f76 <HAL_DMA_IRQHandler+0x32>
 8002f5a:	423c      	tst	r4, r7
 8002f5c:	d00b      	beq.n	8002f76 <HAL_DMA_IRQHandler+0x32>
    if ((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 8002f5e:	6819      	ldr	r1, [r3, #0]
 8002f60:	0689      	lsls	r1, r1, #26
 8002f62:	d402      	bmi.n	8002f6a <HAL_DMA_IRQHandler+0x26>
      hdma->Instance->CCR &= ~DMA_IT_HT;
 8002f64:	6819      	ldr	r1, [r3, #0]
 8002f66:	43b9      	bics	r1, r7
 8002f68:	6019      	str	r1, [r3, #0]
    if (hdma->XferHalfCpltCallback != NULL)
 8002f6a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
    hdma->DmaBaseAddress->IFCR = DMA_FLAG_HT1 << hdma->ChannelIndex;
 8002f6c:	6056      	str	r6, [r2, #4]
    if (hdma->XferHalfCpltCallback != NULL)
 8002f6e:	2b00      	cmp	r3, #0
 8002f70:	d019      	beq.n	8002fa6 <HAL_DMA_IRQHandler+0x62>
      hdma->XferErrorCallback(hdma);
 8002f72:	4798      	blx	r3
}
 8002f74:	e017      	b.n	8002fa6 <HAL_DMA_IRQHandler+0x62>
  else if ((RESET != (flag_it & (DMA_FLAG_TC1 << hdma->ChannelIndex))) && (RESET != (source_it & DMA_IT_TC)))
 8002f76:	2702      	movs	r7, #2
 8002f78:	003e      	movs	r6, r7
 8002f7a:	408e      	lsls	r6, r1
 8002f7c:	4235      	tst	r5, r6
 8002f7e:	d013      	beq.n	8002fa8 <HAL_DMA_IRQHandler+0x64>
 8002f80:	423c      	tst	r4, r7
 8002f82:	d011      	beq.n	8002fa8 <HAL_DMA_IRQHandler+0x64>
    if ((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 8002f84:	6819      	ldr	r1, [r3, #0]
 8002f86:	0689      	lsls	r1, r1, #26
 8002f88:	d406      	bmi.n	8002f98 <HAL_DMA_IRQHandler+0x54>
      hdma->Instance->CCR &= ~(DMA_IT_TC | DMA_IT_TE);
 8002f8a:	240a      	movs	r4, #10
 8002f8c:	6819      	ldr	r1, [r3, #0]
 8002f8e:	43a1      	bics	r1, r4
 8002f90:	6019      	str	r1, [r3, #0]
      hdma->State = HAL_DMA_STATE_READY;
 8002f92:	2101      	movs	r1, #1
 8002f94:	19c3      	adds	r3, r0, r7
 8002f96:	77d9      	strb	r1, [r3, #31]
    hdma->DmaBaseAddress->IFCR = DMA_FLAG_TC1 << hdma->ChannelIndex;
 8002f98:	6056      	str	r6, [r2, #4]
    __HAL_UNLOCK(hdma);
 8002f9a:	2200      	movs	r2, #0
 8002f9c:	1c43      	adds	r3, r0, #1
 8002f9e:	77da      	strb	r2, [r3, #31]
    if (hdma->XferCpltCallback != NULL)
 8002fa0:	6a83      	ldr	r3, [r0, #40]	@ 0x28
    if (hdma->XferErrorCallback != NULL)
 8002fa2:	4293      	cmp	r3, r2
 8002fa4:	d1e5      	bne.n	8002f72 <HAL_DMA_IRQHandler+0x2e>
}
 8002fa6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  else if ((RESET != (flag_it & (DMA_FLAG_TE1 << hdma->ChannelIndex))) && (RESET != (source_it & DMA_IT_TE)))
 8002fa8:	2608      	movs	r6, #8
 8002faa:	0037      	movs	r7, r6
 8002fac:	408f      	lsls	r7, r1
 8002fae:	423d      	tst	r5, r7
 8002fb0:	d0f9      	beq.n	8002fa6 <HAL_DMA_IRQHandler+0x62>
 8002fb2:	4234      	tst	r4, r6
 8002fb4:	d0f7      	beq.n	8002fa6 <HAL_DMA_IRQHandler+0x62>
    hdma->Instance->CCR &= ~(DMA_IT_TC | DMA_IT_HT | DMA_IT_TE);
 8002fb6:	250e      	movs	r5, #14
 8002fb8:	681c      	ldr	r4, [r3, #0]
 8002fba:	43ac      	bics	r4, r5
 8002fbc:	601c      	str	r4, [r3, #0]
    hdma->DmaBaseAddress->IFCR = DMA_FLAG_GL1 << hdma->ChannelIndex;
 8002fbe:	2301      	movs	r3, #1
 8002fc0:	001c      	movs	r4, r3
 8002fc2:	408c      	lsls	r4, r1
 8002fc4:	6054      	str	r4, [r2, #4]
    hdma->State = HAL_DMA_STATE_READY;
 8002fc6:	1c82      	adds	r2, r0, #2
    hdma->ErrorCode = HAL_DMA_ERROR_TE;
 8002fc8:	6383      	str	r3, [r0, #56]	@ 0x38
    hdma->State = HAL_DMA_STATE_READY;
 8002fca:	77d3      	strb	r3, [r2, #31]
    __HAL_UNLOCK(hdma);
 8002fcc:	2200      	movs	r2, #0
 8002fce:	18c3      	adds	r3, r0, r3
 8002fd0:	77da      	strb	r2, [r3, #31]
    if (hdma->XferErrorCallback != NULL)
 8002fd2:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8002fd4:	e7e5      	b.n	8002fa2 <HAL_DMA_IRQHandler+0x5e>
	...

08002fd8 <HAL_GPIO_Init>:
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
  uint32_t position = 0x00u;
 8002fd8:	2300      	movs	r3, #0
{
 8002fda:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002fdc:	b087      	sub	sp, #28
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8002fde:	680a      	ldr	r2, [r1, #0]
 8002fe0:	0014      	movs	r4, r2
 8002fe2:	40dc      	lsrs	r4, r3
 8002fe4:	d101      	bne.n	8002fea <HAL_GPIO_Init+0x12>
      }
    }

    position++;
  } 
}
 8002fe6:	b007      	add	sp, #28
 8002fe8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 8002fea:	2501      	movs	r5, #1
 8002fec:	0014      	movs	r4, r2
 8002fee:	409d      	lsls	r5, r3
 8002ff0:	402c      	ands	r4, r5
 8002ff2:	9400      	str	r4, [sp, #0]
    if (iocurrent != 0x00u)
 8002ff4:	422a      	tst	r2, r5
 8002ff6:	d100      	bne.n	8002ffa <HAL_GPIO_Init+0x22>
 8002ff8:	e094      	b.n	8003124 <HAL_GPIO_Init+0x14c>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 8002ffa:	684a      	ldr	r2, [r1, #4]
 8002ffc:	005f      	lsls	r7, r3, #1
 8002ffe:	4694      	mov	ip, r2
 8003000:	2203      	movs	r2, #3
 8003002:	4664      	mov	r4, ip
 8003004:	4022      	ands	r2, r4
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2u));
 8003006:	2403      	movs	r4, #3
 8003008:	40bc      	lsls	r4, r7
 800300a:	43e4      	mvns	r4, r4
 800300c:	9401      	str	r4, [sp, #4]
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 800300e:	1e54      	subs	r4, r2, #1
 8003010:	2c01      	cmp	r4, #1
 8003012:	d82e      	bhi.n	8003072 <HAL_GPIO_Init+0x9a>
        temp = GPIOx->OSPEEDR;
 8003014:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2u));
 8003016:	9c01      	ldr	r4, [sp, #4]
 8003018:	4026      	ands	r6, r4
        temp |= (GPIO_Init->Speed << (position * 2u));
 800301a:	68cc      	ldr	r4, [r1, #12]
 800301c:	40bc      	lsls	r4, r7
 800301e:	4334      	orrs	r4, r6
        GPIOx->OSPEEDR = temp;
 8003020:	6084      	str	r4, [r0, #8]
        temp = GPIOx->OTYPER;
 8003022:	6844      	ldr	r4, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8003024:	2601      	movs	r6, #1
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003026:	43ac      	bics	r4, r5
 8003028:	0025      	movs	r5, r4
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800302a:	4664      	mov	r4, ip
 800302c:	0924      	lsrs	r4, r4, #4
 800302e:	4034      	ands	r4, r6
 8003030:	409c      	lsls	r4, r3
 8003032:	432c      	orrs	r4, r5
        GPIOx->OTYPER = temp;
 8003034:	6044      	str	r4, [r0, #4]
        temp = GPIOx->PUPDR;
 8003036:	68c5      	ldr	r5, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2u));
 8003038:	9c01      	ldr	r4, [sp, #4]
 800303a:	4025      	ands	r5, r4
        temp |= ((GPIO_Init->Pull) << (position * 2u));
 800303c:	688c      	ldr	r4, [r1, #8]
 800303e:	40bc      	lsls	r4, r7
 8003040:	432c      	orrs	r4, r5
        GPIOx->PUPDR = temp;
 8003042:	60c4      	str	r4, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8003044:	2a02      	cmp	r2, #2
 8003046:	d116      	bne.n	8003076 <HAL_GPIO_Init+0x9e>
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8003048:	2507      	movs	r5, #7
 800304a:	260f      	movs	r6, #15
 800304c:	401d      	ands	r5, r3
 800304e:	00ad      	lsls	r5, r5, #2
 8003050:	40ae      	lsls	r6, r5
        temp = GPIOx->AFR[position >> 3u];
 8003052:	08dc      	lsrs	r4, r3, #3
 8003054:	00a4      	lsls	r4, r4, #2
 8003056:	1904      	adds	r4, r0, r4
 8003058:	9402      	str	r4, [sp, #8]
 800305a:	6a24      	ldr	r4, [r4, #32]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 800305c:	9603      	str	r6, [sp, #12]
 800305e:	0026      	movs	r6, r4
 8003060:	9c03      	ldr	r4, [sp, #12]
 8003062:	43a6      	bics	r6, r4
 8003064:	0034      	movs	r4, r6
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 8003066:	690e      	ldr	r6, [r1, #16]
 8003068:	40ae      	lsls	r6, r5
 800306a:	4326      	orrs	r6, r4
        GPIOx->AFR[position >> 3u] = temp;
 800306c:	9c02      	ldr	r4, [sp, #8]
 800306e:	6226      	str	r6, [r4, #32]
 8003070:	e001      	b.n	8003076 <HAL_GPIO_Init+0x9e>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8003072:	2a03      	cmp	r2, #3
 8003074:	d1df      	bne.n	8003036 <HAL_GPIO_Init+0x5e>
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 8003076:	40ba      	lsls	r2, r7
      temp = GPIOx->MODER;
 8003078:	6804      	ldr	r4, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2u));
 800307a:	9d01      	ldr	r5, [sp, #4]
 800307c:	4025      	ands	r5, r4
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 800307e:	432a      	orrs	r2, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8003080:	24c0      	movs	r4, #192	@ 0xc0
      GPIOx->MODER = temp;
 8003082:	6002      	str	r2, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8003084:	4662      	mov	r2, ip
 8003086:	02a4      	lsls	r4, r4, #10
 8003088:	4222      	tst	r2, r4
 800308a:	d04b      	beq.n	8003124 <HAL_GPIO_Init+0x14c>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800308c:	2501      	movs	r5, #1
 800308e:	4a26      	ldr	r2, [pc, #152]	@ (8003128 <HAL_GPIO_Init+0x150>)
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8003090:	2790      	movs	r7, #144	@ 0x90
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003092:	6994      	ldr	r4, [r2, #24]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8003094:	05ff      	lsls	r7, r7, #23
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003096:	432c      	orrs	r4, r5
 8003098:	6194      	str	r4, [r2, #24]
 800309a:	6992      	ldr	r2, [r2, #24]
        temp = SYSCFG->EXTICR[position >> 2u];
 800309c:	089c      	lsrs	r4, r3, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800309e:	402a      	ands	r2, r5
 80030a0:	9205      	str	r2, [sp, #20]
 80030a2:	9a05      	ldr	r2, [sp, #20]
        temp = SYSCFG->EXTICR[position >> 2u];
 80030a4:	4a21      	ldr	r2, [pc, #132]	@ (800312c <HAL_GPIO_Init+0x154>)
 80030a6:	00a4      	lsls	r4, r4, #2
 80030a8:	18a4      	adds	r4, r4, r2
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 80030aa:	220f      	movs	r2, #15
 80030ac:	3502      	adds	r5, #2
 80030ae:	401d      	ands	r5, r3
 80030b0:	00ad      	lsls	r5, r5, #2
 80030b2:	40aa      	lsls	r2, r5
        temp = SYSCFG->EXTICR[position >> 2u];
 80030b4:	68a6      	ldr	r6, [r4, #8]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 80030b6:	4396      	bics	r6, r2
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 80030b8:	2200      	movs	r2, #0
 80030ba:	42b8      	cmp	r0, r7
 80030bc:	d008      	beq.n	80030d0 <HAL_GPIO_Init+0xf8>
 80030be:	4f1c      	ldr	r7, [pc, #112]	@ (8003130 <HAL_GPIO_Init+0x158>)
 80030c0:	3201      	adds	r2, #1
 80030c2:	42b8      	cmp	r0, r7
 80030c4:	d004      	beq.n	80030d0 <HAL_GPIO_Init+0xf8>
 80030c6:	4f1b      	ldr	r7, [pc, #108]	@ (8003134 <HAL_GPIO_Init+0x15c>)
 80030c8:	3204      	adds	r2, #4
 80030ca:	42b8      	cmp	r0, r7
 80030cc:	d100      	bne.n	80030d0 <HAL_GPIO_Init+0xf8>
 80030ce:	3a03      	subs	r2, #3
 80030d0:	40aa      	lsls	r2, r5
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 80030d2:	4667      	mov	r7, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 80030d4:	4332      	orrs	r2, r6
        SYSCFG->EXTICR[position >> 2u] = temp;
 80030d6:	60a2      	str	r2, [r4, #8]
        temp = EXTI->RTSR;
 80030d8:	4a17      	ldr	r2, [pc, #92]	@ (8003138 <HAL_GPIO_Init+0x160>)
        temp &= ~(iocurrent);
 80030da:	9c00      	ldr	r4, [sp, #0]
        temp = EXTI->RTSR;
 80030dc:	6896      	ldr	r6, [r2, #8]
          temp |= iocurrent;
 80030de:	9d00      	ldr	r5, [sp, #0]
        temp &= ~(iocurrent);
 80030e0:	43e4      	mvns	r4, r4
          temp |= iocurrent;
 80030e2:	4335      	orrs	r5, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 80030e4:	02ff      	lsls	r7, r7, #11
 80030e6:	d401      	bmi.n	80030ec <HAL_GPIO_Init+0x114>
        temp &= ~(iocurrent);
 80030e8:	0035      	movs	r5, r6
 80030ea:	4025      	ands	r5, r4
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 80030ec:	4667      	mov	r7, ip
        EXTI->RTSR = temp;
 80030ee:	6095      	str	r5, [r2, #8]
        temp = EXTI->FTSR;
 80030f0:	68d6      	ldr	r6, [r2, #12]
          temp |= iocurrent;
 80030f2:	9d00      	ldr	r5, [sp, #0]
 80030f4:	4335      	orrs	r5, r6
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 80030f6:	02bf      	lsls	r7, r7, #10
 80030f8:	d401      	bmi.n	80030fe <HAL_GPIO_Init+0x126>
        temp &= ~(iocurrent);
 80030fa:	0035      	movs	r5, r6
 80030fc:	4025      	ands	r5, r4
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 80030fe:	4667      	mov	r7, ip
        EXTI->FTSR = temp;
 8003100:	60d5      	str	r5, [r2, #12]
        temp = EXTI->EMR;
 8003102:	6856      	ldr	r6, [r2, #4]
          temp |= iocurrent;
 8003104:	9d00      	ldr	r5, [sp, #0]
 8003106:	4335      	orrs	r5, r6
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 8003108:	03bf      	lsls	r7, r7, #14
 800310a:	d401      	bmi.n	8003110 <HAL_GPIO_Init+0x138>
        temp &= ~(iocurrent);
 800310c:	0035      	movs	r5, r6
 800310e:	4025      	ands	r5, r4
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8003110:	4667      	mov	r7, ip
        EXTI->EMR = temp;
 8003112:	6055      	str	r5, [r2, #4]
        temp = EXTI->IMR;
 8003114:	6815      	ldr	r5, [r2, #0]
          temp |= iocurrent;
 8003116:	9e00      	ldr	r6, [sp, #0]
 8003118:	432e      	orrs	r6, r5
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 800311a:	03ff      	lsls	r7, r7, #15
 800311c:	d401      	bmi.n	8003122 <HAL_GPIO_Init+0x14a>
        temp &= ~(iocurrent);
 800311e:	4025      	ands	r5, r4
 8003120:	002e      	movs	r6, r5
        EXTI->IMR = temp;
 8003122:	6016      	str	r6, [r2, #0]
    position++;
 8003124:	3301      	adds	r3, #1
 8003126:	e75a      	b.n	8002fde <HAL_GPIO_Init+0x6>
 8003128:	40021000 	.word	0x40021000
 800312c:	40010000 	.word	0x40010000
 8003130:	48000400 	.word	0x48000400
 8003134:	48000800 	.word	0x48000800
 8003138:	40010400 	.word	0x40010400

0800313c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 800313c:	2a00      	cmp	r2, #0
 800313e:	d001      	beq.n	8003144 <HAL_GPIO_WritePin+0x8>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 8003140:	6181      	str	r1, [r0, #24]
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
  }
}
 8003142:	4770      	bx	lr
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 8003144:	6281      	str	r1, [r0, #40]	@ 0x28
}
 8003146:	e7fc      	b.n	8003142 <HAL_GPIO_WritePin+0x6>

08003148 <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8003148:	6803      	ldr	r3, [r0, #0]
 800314a:	699a      	ldr	r2, [r3, #24]
 800314c:	0792      	lsls	r2, r2, #30
 800314e:	d501      	bpl.n	8003154 <I2C_Flush_TXDR+0xc>
  {
    hi2c->Instance->TXDR = 0x00U;
 8003150:	2200      	movs	r2, #0
 8003152:	629a      	str	r2, [r3, #40]	@ 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8003154:	2201      	movs	r2, #1
 8003156:	6999      	ldr	r1, [r3, #24]
 8003158:	4211      	tst	r1, r2
 800315a:	d102      	bne.n	8003162 <I2C_Flush_TXDR+0x1a>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 800315c:	6999      	ldr	r1, [r3, #24]
 800315e:	430a      	orrs	r2, r1
 8003160:	619a      	str	r2, [r3, #24]
  }
}
 8003162:	4770      	bx	lr

08003164 <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 8003164:	b530      	push	{r4, r5, lr}
 8003166:	9c03      	ldr	r4, [sp, #12]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 8003168:	6800      	ldr	r0, [r0, #0]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 800316a:	4323      	orrs	r3, r4
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
 800316c:	0412      	lsls	r2, r2, #16
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 800316e:	0589      	lsls	r1, r1, #22
 8003170:	431a      	orrs	r2, r3
 8003172:	0d89      	lsrs	r1, r1, #22
  MODIFY_REG(hi2c->Instance->CR2, \
 8003174:	4b05      	ldr	r3, [pc, #20]	@ (800318c <I2C_TransferConfig+0x28>)
 8003176:	6845      	ldr	r5, [r0, #4]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8003178:	430a      	orrs	r2, r1
  MODIFY_REG(hi2c->Instance->CR2, \
 800317a:	0d64      	lsrs	r4, r4, #21
 800317c:	4323      	orrs	r3, r4
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 800317e:	0052      	lsls	r2, r2, #1
  MODIFY_REG(hi2c->Instance->CR2, \
 8003180:	439d      	bics	r5, r3
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8003182:	0852      	lsrs	r2, r2, #1
  MODIFY_REG(hi2c->Instance->CR2, \
 8003184:	432a      	orrs	r2, r5
 8003186:	6042      	str	r2, [r0, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 8003188:	bd30      	pop	{r4, r5, pc}
 800318a:	46c0      	nop			@ (mov r8, r8)
 800318c:	03ff63ff 	.word	0x03ff63ff

08003190 <I2C_IsErrorOccurred>:
{
 8003190:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003192:	0015      	movs	r5, r2
  uint32_t itflag   = hi2c->Instance->ISR;
 8003194:	6802      	ldr	r2, [r0, #0]
{
 8003196:	000e      	movs	r6, r1
  uint32_t itflag   = hi2c->Instance->ISR;
 8003198:	6991      	ldr	r1, [r2, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 800319a:	2310      	movs	r3, #16
 800319c:	000f      	movs	r7, r1
{
 800319e:	0004      	movs	r4, r0
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 80031a0:	401f      	ands	r7, r3
  HAL_StatusTypeDef status = HAL_OK;
 80031a2:	2000      	movs	r0, #0
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 80031a4:	4219      	tst	r1, r3
 80031a6:	d00d      	beq.n	80031c4 <I2C_IsErrorOccurred+0x34>
  HAL_StatusTypeDef status = HAL_OK;
 80031a8:	0007      	movs	r7, r0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80031aa:	61d3      	str	r3, [r2, #28]
  uint32_t error_code = 0;
 80031ac:	9001      	str	r0, [sp, #4]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 80031ae:	6823      	ldr	r3, [r4, #0]
 80031b0:	2120      	movs	r1, #32
 80031b2:	699a      	ldr	r2, [r3, #24]
 80031b4:	420a      	tst	r2, r1
 80031b6:	d15f      	bne.n	8003278 <I2C_IsErrorOccurred+0xe8>
 80031b8:	2f00      	cmp	r7, #0
 80031ba:	d031      	beq.n	8003220 <I2C_IsErrorOccurred+0x90>
    error_code |= HAL_I2C_ERROR_AF;
 80031bc:	2704      	movs	r7, #4
    status = HAL_ERROR;
 80031be:	2001      	movs	r0, #1
    error_code |= HAL_I2C_ERROR_AF;
 80031c0:	9b01      	ldr	r3, [sp, #4]
 80031c2:	431f      	orrs	r7, r3
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 80031c4:	2280      	movs	r2, #128	@ 0x80
  itflag = hi2c->Instance->ISR;
 80031c6:	6825      	ldr	r5, [r4, #0]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 80031c8:	0052      	lsls	r2, r2, #1
  itflag = hi2c->Instance->ISR;
 80031ca:	69ab      	ldr	r3, [r5, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 80031cc:	4213      	tst	r3, r2
 80031ce:	d002      	beq.n	80031d6 <I2C_IsErrorOccurred+0x46>
    error_code |= HAL_I2C_ERROR_BERR;
 80031d0:	2001      	movs	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 80031d2:	61ea      	str	r2, [r5, #28]
    error_code |= HAL_I2C_ERROR_BERR;
 80031d4:	4307      	orrs	r7, r0
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 80031d6:	2280      	movs	r2, #128	@ 0x80
 80031d8:	00d2      	lsls	r2, r2, #3
 80031da:	4213      	tst	r3, r2
 80031dc:	d003      	beq.n	80031e6 <I2C_IsErrorOccurred+0x56>
    error_code |= HAL_I2C_ERROR_OVR;
 80031de:	2108      	movs	r1, #8
    status = HAL_ERROR;
 80031e0:	2001      	movs	r0, #1
    error_code |= HAL_I2C_ERROR_OVR;
 80031e2:	430f      	orrs	r7, r1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 80031e4:	61ea      	str	r2, [r5, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 80031e6:	2280      	movs	r2, #128	@ 0x80
 80031e8:	0092      	lsls	r2, r2, #2
 80031ea:	4213      	tst	r3, r2
 80031ec:	d049      	beq.n	8003282 <I2C_IsErrorOccurred+0xf2>
    error_code |= HAL_I2C_ERROR_ARLO;
 80031ee:	2302      	movs	r3, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 80031f0:	61ea      	str	r2, [r5, #28]
    error_code |= HAL_I2C_ERROR_ARLO;
 80031f2:	431f      	orrs	r7, r3
    I2C_Flush_TXDR(hi2c);
 80031f4:	0020      	movs	r0, r4
 80031f6:	f7ff ffa7 	bl	8003148 <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
 80031fa:	686b      	ldr	r3, [r5, #4]
 80031fc:	4a22      	ldr	r2, [pc, #136]	@ (8003288 <I2C_IsErrorOccurred+0xf8>)
    __HAL_UNLOCK(hi2c);
 80031fe:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
 8003200:	4013      	ands	r3, r2
 8003202:	606b      	str	r3, [r5, #4]
    hi2c->ErrorCode |= error_code;
 8003204:	6c63      	ldr	r3, [r4, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8003206:	2220      	movs	r2, #32
    hi2c->ErrorCode |= error_code;
 8003208:	433b      	orrs	r3, r7
 800320a:	6463      	str	r3, [r4, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 800320c:	0023      	movs	r3, r4
 800320e:	3341      	adds	r3, #65	@ 0x41
 8003210:	701a      	strb	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8003212:	0022      	movs	r2, r4
 8003214:	2300      	movs	r3, #0
 8003216:	3242      	adds	r2, #66	@ 0x42
    __HAL_UNLOCK(hi2c);
 8003218:	3440      	adds	r4, #64	@ 0x40
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800321a:	7013      	strb	r3, [r2, #0]
    __HAL_UNLOCK(hi2c);
 800321c:	7023      	strb	r3, [r4, #0]
 800321e:	e032      	b.n	8003286 <I2C_IsErrorOccurred+0xf6>
      if (Timeout != HAL_MAX_DELAY)
 8003220:	1c72      	adds	r2, r6, #1
 8003222:	d0c5      	beq.n	80031b0 <I2C_IsErrorOccurred+0x20>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8003224:	f7ff fcce 	bl	8002bc4 <HAL_GetTick>
 8003228:	1b40      	subs	r0, r0, r5
 800322a:	42b0      	cmp	r0, r6
 800322c:	d801      	bhi.n	8003232 <I2C_IsErrorOccurred+0xa2>
 800322e:	2e00      	cmp	r6, #0
 8003230:	d1bd      	bne.n	80031ae <I2C_IsErrorOccurred+0x1e>
          tmp2 = hi2c->Mode;
 8003232:	0022      	movs	r2, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 8003234:	6823      	ldr	r3, [r4, #0]
          tmp2 = hi2c->Mode;
 8003236:	3242      	adds	r2, #66	@ 0x42
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 8003238:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
 800323a:	7811      	ldrb	r1, [r2, #0]
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 800323c:	699a      	ldr	r2, [r3, #24]
          tmp2 = hi2c->Mode;
 800323e:	b2c9      	uxtb	r1, r1
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8003240:	0412      	lsls	r2, r2, #16
 8003242:	d50b      	bpl.n	800325c <I2C_IsErrorOccurred+0xcc>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 8003244:	2280      	movs	r2, #128	@ 0x80
 8003246:	01d2      	lsls	r2, r2, #7
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8003248:	4210      	tst	r0, r2
 800324a:	d107      	bne.n	800325c <I2C_IsErrorOccurred+0xcc>
              (tmp1 != I2C_CR2_STOP) && \
 800324c:	2920      	cmp	r1, #32
 800324e:	d005      	beq.n	800325c <I2C_IsErrorOccurred+0xcc>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 8003250:	6859      	ldr	r1, [r3, #4]
 8003252:	430a      	orrs	r2, r1
 8003254:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
 8003256:	f7ff fcb5 	bl	8002bc4 <HAL_GetTick>
 800325a:	0005      	movs	r5, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 800325c:	2220      	movs	r2, #32
 800325e:	6823      	ldr	r3, [r4, #0]
 8003260:	699b      	ldr	r3, [r3, #24]
 8003262:	4213      	tst	r3, r2
 8003264:	d1a3      	bne.n	80031ae <I2C_IsErrorOccurred+0x1e>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 8003266:	f7ff fcad 	bl	8002bc4 <HAL_GetTick>
 800326a:	1b40      	subs	r0, r0, r5
 800326c:	2819      	cmp	r0, #25
 800326e:	d9f5      	bls.n	800325c <I2C_IsErrorOccurred+0xcc>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
 8003270:	2320      	movs	r3, #32
              status = HAL_ERROR;
 8003272:	2701      	movs	r7, #1
              error_code |= HAL_I2C_ERROR_TIMEOUT;
 8003274:	9301      	str	r3, [sp, #4]
 8003276:	e79a      	b.n	80031ae <I2C_IsErrorOccurred+0x1e>
    if (status == HAL_OK)
 8003278:	2f00      	cmp	r7, #0
 800327a:	d19f      	bne.n	80031bc <I2C_IsErrorOccurred+0x2c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800327c:	2220      	movs	r2, #32
 800327e:	61da      	str	r2, [r3, #28]
 8003280:	e79c      	b.n	80031bc <I2C_IsErrorOccurred+0x2c>
  if (status != HAL_OK)
 8003282:	2800      	cmp	r0, #0
 8003284:	d1b6      	bne.n	80031f4 <I2C_IsErrorOccurred+0x64>
}
 8003286:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8003288:	fe00e800 	.word	0xfe00e800

0800328c <I2C_WaitOnTXISFlagUntilTimeout>:
{
 800328c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800328e:	0004      	movs	r4, r0
 8003290:	000d      	movs	r5, r1
 8003292:	0016      	movs	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8003294:	2702      	movs	r7, #2
 8003296:	6823      	ldr	r3, [r4, #0]
 8003298:	699b      	ldr	r3, [r3, #24]
 800329a:	423b      	tst	r3, r7
 800329c:	d001      	beq.n	80032a2 <I2C_WaitOnTXISFlagUntilTimeout+0x16>
  return HAL_OK;
 800329e:	2000      	movs	r0, #0
 80032a0:	e021      	b.n	80032e6 <I2C_WaitOnTXISFlagUntilTimeout+0x5a>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 80032a2:	0032      	movs	r2, r6
 80032a4:	0029      	movs	r1, r5
 80032a6:	0020      	movs	r0, r4
 80032a8:	f7ff ff72 	bl	8003190 <I2C_IsErrorOccurred>
 80032ac:	2800      	cmp	r0, #0
 80032ae:	d119      	bne.n	80032e4 <I2C_WaitOnTXISFlagUntilTimeout+0x58>
    if (Timeout != HAL_MAX_DELAY)
 80032b0:	1c6b      	adds	r3, r5, #1
 80032b2:	d0f0      	beq.n	8003296 <I2C_WaitOnTXISFlagUntilTimeout+0xa>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80032b4:	f7ff fc86 	bl	8002bc4 <HAL_GetTick>
 80032b8:	1b80      	subs	r0, r0, r6
 80032ba:	42a8      	cmp	r0, r5
 80032bc:	d801      	bhi.n	80032c2 <I2C_WaitOnTXISFlagUntilTimeout+0x36>
 80032be:	2d00      	cmp	r5, #0
 80032c0:	d1e9      	bne.n	8003296 <I2C_WaitOnTXISFlagUntilTimeout+0xa>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
 80032c2:	6823      	ldr	r3, [r4, #0]
 80032c4:	6999      	ldr	r1, [r3, #24]
 80032c6:	2302      	movs	r3, #2
 80032c8:	000a      	movs	r2, r1
 80032ca:	401a      	ands	r2, r3
 80032cc:	4219      	tst	r1, r3
 80032ce:	d1e2      	bne.n	8003296 <I2C_WaitOnTXISFlagUntilTimeout+0xa>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80032d0:	2120      	movs	r1, #32
 80032d2:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80032d4:	430b      	orrs	r3, r1
 80032d6:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 80032d8:	0023      	movs	r3, r4
          __HAL_UNLOCK(hi2c);
 80032da:	3440      	adds	r4, #64	@ 0x40
          hi2c->State = HAL_I2C_STATE_READY;
 80032dc:	3341      	adds	r3, #65	@ 0x41
 80032de:	7019      	strb	r1, [r3, #0]
          hi2c->Mode = HAL_I2C_MODE_NONE;
 80032e0:	705a      	strb	r2, [r3, #1]
          __HAL_UNLOCK(hi2c);
 80032e2:	7022      	strb	r2, [r4, #0]
      return HAL_ERROR;
 80032e4:	2001      	movs	r0, #1
}
 80032e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080032e8 <I2C_WaitOnFlagUntilTimeout>:
{
 80032e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80032ea:	0004      	movs	r4, r0
 80032ec:	000d      	movs	r5, r1
 80032ee:	0017      	movs	r7, r2
 80032f0:	001e      	movs	r6, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80032f2:	6823      	ldr	r3, [r4, #0]
 80032f4:	699b      	ldr	r3, [r3, #24]
 80032f6:	402b      	ands	r3, r5
 80032f8:	1b5b      	subs	r3, r3, r5
 80032fa:	425a      	negs	r2, r3
 80032fc:	4153      	adcs	r3, r2
 80032fe:	42bb      	cmp	r3, r7
 8003300:	d001      	beq.n	8003306 <I2C_WaitOnFlagUntilTimeout+0x1e>
  return HAL_OK;
 8003302:	2000      	movs	r0, #0
 8003304:	e026      	b.n	8003354 <I2C_WaitOnFlagUntilTimeout+0x6c>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8003306:	0031      	movs	r1, r6
 8003308:	0020      	movs	r0, r4
 800330a:	9a06      	ldr	r2, [sp, #24]
 800330c:	f7ff ff40 	bl	8003190 <I2C_IsErrorOccurred>
 8003310:	2800      	cmp	r0, #0
 8003312:	d11e      	bne.n	8003352 <I2C_WaitOnFlagUntilTimeout+0x6a>
    if (Timeout != HAL_MAX_DELAY)
 8003314:	1c73      	adds	r3, r6, #1
 8003316:	d0ec      	beq.n	80032f2 <I2C_WaitOnFlagUntilTimeout+0xa>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003318:	f7ff fc54 	bl	8002bc4 <HAL_GetTick>
 800331c:	9b06      	ldr	r3, [sp, #24]
 800331e:	1ac0      	subs	r0, r0, r3
 8003320:	42b0      	cmp	r0, r6
 8003322:	d801      	bhi.n	8003328 <I2C_WaitOnFlagUntilTimeout+0x40>
 8003324:	2e00      	cmp	r6, #0
 8003326:	d1e4      	bne.n	80032f2 <I2C_WaitOnFlagUntilTimeout+0xa>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8003328:	6823      	ldr	r3, [r4, #0]
 800332a:	699b      	ldr	r3, [r3, #24]
 800332c:	402b      	ands	r3, r5
 800332e:	1b5b      	subs	r3, r3, r5
 8003330:	425a      	negs	r2, r3
 8003332:	4153      	adcs	r3, r2
 8003334:	42bb      	cmp	r3, r7
 8003336:	d1dc      	bne.n	80032f2 <I2C_WaitOnFlagUntilTimeout+0xa>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8003338:	2220      	movs	r2, #32
 800333a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800333c:	4313      	orrs	r3, r2
 800333e:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8003340:	0023      	movs	r3, r4
 8003342:	3341      	adds	r3, #65	@ 0x41
 8003344:	701a      	strb	r2, [r3, #0]
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8003346:	0022      	movs	r2, r4
 8003348:	2300      	movs	r3, #0
 800334a:	3242      	adds	r2, #66	@ 0x42
          __HAL_UNLOCK(hi2c);
 800334c:	3440      	adds	r4, #64	@ 0x40
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800334e:	7013      	strb	r3, [r2, #0]
          __HAL_UNLOCK(hi2c);
 8003350:	7023      	strb	r3, [r4, #0]
      return HAL_ERROR;
 8003352:	2001      	movs	r0, #1
}
 8003354:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08003356 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 8003356:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003358:	0004      	movs	r4, r0
 800335a:	000e      	movs	r6, r1
 800335c:	0017      	movs	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 800335e:	2520      	movs	r5, #32
 8003360:	6823      	ldr	r3, [r4, #0]
 8003362:	699b      	ldr	r3, [r3, #24]
 8003364:	422b      	tst	r3, r5
 8003366:	d001      	beq.n	800336c <I2C_WaitOnSTOPFlagUntilTimeout+0x16>
  return HAL_OK;
 8003368:	2000      	movs	r0, #0
 800336a:	e01d      	b.n	80033a8 <I2C_WaitOnSTOPFlagUntilTimeout+0x52>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 800336c:	003a      	movs	r2, r7
 800336e:	0031      	movs	r1, r6
 8003370:	0020      	movs	r0, r4
 8003372:	f7ff ff0d 	bl	8003190 <I2C_IsErrorOccurred>
 8003376:	2800      	cmp	r0, #0
 8003378:	d115      	bne.n	80033a6 <I2C_WaitOnSTOPFlagUntilTimeout+0x50>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800337a:	f7ff fc23 	bl	8002bc4 <HAL_GetTick>
 800337e:	1bc0      	subs	r0, r0, r7
 8003380:	42b0      	cmp	r0, r6
 8003382:	d801      	bhi.n	8003388 <I2C_WaitOnSTOPFlagUntilTimeout+0x32>
 8003384:	2e00      	cmp	r6, #0
 8003386:	d1eb      	bne.n	8003360 <I2C_WaitOnSTOPFlagUntilTimeout+0xa>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
 8003388:	6823      	ldr	r3, [r4, #0]
 800338a:	699b      	ldr	r3, [r3, #24]
 800338c:	001a      	movs	r2, r3
 800338e:	402a      	ands	r2, r5
 8003390:	422b      	tst	r3, r5
 8003392:	d1e5      	bne.n	8003360 <I2C_WaitOnSTOPFlagUntilTimeout+0xa>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8003394:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8003396:	432b      	orrs	r3, r5
 8003398:	6463      	str	r3, [r4, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 800339a:	0023      	movs	r3, r4
        __HAL_UNLOCK(hi2c);
 800339c:	3440      	adds	r4, #64	@ 0x40
        hi2c->State = HAL_I2C_STATE_READY;
 800339e:	3341      	adds	r3, #65	@ 0x41
 80033a0:	701d      	strb	r5, [r3, #0]
        hi2c->Mode = HAL_I2C_MODE_NONE;
 80033a2:	705a      	strb	r2, [r3, #1]
        __HAL_UNLOCK(hi2c);
 80033a4:	7022      	strb	r2, [r4, #0]
      return HAL_ERROR;
 80033a6:	2001      	movs	r0, #1
}
 80033a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080033ac <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 80033ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80033ae:	0005      	movs	r5, r0
  HAL_StatusTypeDef status = HAL_OK;
 80033b0:	2400      	movs	r4, #0
  while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET) && (status == HAL_OK))
 80033b2:	2704      	movs	r7, #4
    if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET) && (status == HAL_OK))
 80033b4:	2620      	movs	r6, #32
{
 80033b6:	9100      	str	r1, [sp, #0]
 80033b8:	9201      	str	r2, [sp, #4]
  while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET) && (status == HAL_OK))
 80033ba:	682b      	ldr	r3, [r5, #0]
 80033bc:	699b      	ldr	r3, [r3, #24]
 80033be:	423b      	tst	r3, r7
 80033c0:	d101      	bne.n	80033c6 <I2C_WaitOnRXNEFlagUntilTimeout+0x1a>
 80033c2:	2c00      	cmp	r4, #0
 80033c4:	d001      	beq.n	80033ca <I2C_WaitOnRXNEFlagUntilTimeout+0x1e>
}
 80033c6:	0020      	movs	r0, r4
 80033c8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 80033ca:	9a01      	ldr	r2, [sp, #4]
 80033cc:	0028      	movs	r0, r5
 80033ce:	9900      	ldr	r1, [sp, #0]
 80033d0:	f7ff fede 	bl	8003190 <I2C_IsErrorOccurred>
    if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET) && (status == HAL_OK))
 80033d4:	682b      	ldr	r3, [r5, #0]
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 80033d6:	0004      	movs	r4, r0
    if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET) && (status == HAL_OK))
 80033d8:	699a      	ldr	r2, [r3, #24]
 80033da:	4232      	tst	r2, r6
 80033dc:	d10f      	bne.n	80033fe <I2C_WaitOnRXNEFlagUntilTimeout+0x52>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 80033de:	1e63      	subs	r3, r4, #1
 80033e0:	419c      	sbcs	r4, r3
 80033e2:	b2e4      	uxtb	r4, r4
    if ((((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U)) && (status == HAL_OK))
 80033e4:	f7ff fbee 	bl	8002bc4 <HAL_GetTick>
 80033e8:	9b01      	ldr	r3, [sp, #4]
 80033ea:	1ac0      	subs	r0, r0, r3
 80033ec:	9b00      	ldr	r3, [sp, #0]
 80033ee:	4298      	cmp	r0, r3
 80033f0:	d801      	bhi.n	80033f6 <I2C_WaitOnRXNEFlagUntilTimeout+0x4a>
 80033f2:	2b00      	cmp	r3, #0
 80033f4:	d1e1      	bne.n	80033ba <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 80033f6:	2c00      	cmp	r4, #0
 80033f8:	d019      	beq.n	800342e <I2C_WaitOnRXNEFlagUntilTimeout+0x82>
{
 80033fa:	2401      	movs	r4, #1
 80033fc:	e7dd      	b.n	80033ba <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
    if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET) && (status == HAL_OK))
 80033fe:	2800      	cmp	r0, #0
 8003400:	d111      	bne.n	8003426 <I2C_WaitOnRXNEFlagUntilTimeout+0x7a>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET) && (hi2c->XferSize > 0U))
 8003402:	699a      	ldr	r2, [r3, #24]
      if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8003404:	2210      	movs	r2, #16
 8003406:	6999      	ldr	r1, [r3, #24]
 8003408:	4211      	tst	r1, r2
 800340a:	d00e      	beq.n	800342a <I2C_WaitOnRXNEFlagUntilTimeout+0x7e>
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800340c:	61da      	str	r2, [r3, #28]
        hi2c->ErrorCode = HAL_I2C_ERROR_AF;
 800340e:	646f      	str	r7, [r5, #68]	@ 0x44
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8003410:	61de      	str	r6, [r3, #28]
        I2C_RESET_CR2(hi2c);
 8003412:	685a      	ldr	r2, [r3, #4]
 8003414:	490c      	ldr	r1, [pc, #48]	@ (8003448 <I2C_WaitOnRXNEFlagUntilTimeout+0x9c>)
 8003416:	400a      	ands	r2, r1
 8003418:	605a      	str	r2, [r3, #4]
        hi2c->State = HAL_I2C_STATE_READY;
 800341a:	002b      	movs	r3, r5
 800341c:	3341      	adds	r3, #65	@ 0x41
 800341e:	701e      	strb	r6, [r3, #0]
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8003420:	7058      	strb	r0, [r3, #1]
        __HAL_UNLOCK(hi2c);
 8003422:	3b01      	subs	r3, #1
 8003424:	7018      	strb	r0, [r3, #0]
{
 8003426:	2401      	movs	r4, #1
 8003428:	e7dc      	b.n	80033e4 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
        hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800342a:	6468      	str	r0, [r5, #68]	@ 0x44
 800342c:	e7da      	b.n	80033e4 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 800342e:	682b      	ldr	r3, [r5, #0]
 8003430:	699b      	ldr	r3, [r3, #24]
 8003432:	423b      	tst	r3, r7
 8003434:	d1c1      	bne.n	80033ba <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8003436:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 8003438:	4333      	orrs	r3, r6
 800343a:	646b      	str	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 800343c:	002b      	movs	r3, r5
 800343e:	3341      	adds	r3, #65	@ 0x41
 8003440:	701e      	strb	r6, [r3, #0]
        __HAL_UNLOCK(hi2c);
 8003442:	3b01      	subs	r3, #1
 8003444:	701c      	strb	r4, [r3, #0]
        status = HAL_ERROR;
 8003446:	e7d8      	b.n	80033fa <I2C_WaitOnRXNEFlagUntilTimeout+0x4e>
 8003448:	fe00e800 	.word	0xfe00e800

0800344c <HAL_I2C_Init>:
{
 800344c:	b570      	push	{r4, r5, r6, lr}
 800344e:	0004      	movs	r4, r0
    return HAL_ERROR;
 8003450:	2001      	movs	r0, #1
  if (hi2c == NULL)
 8003452:	2c00      	cmp	r4, #0
 8003454:	d04e      	beq.n	80034f4 <HAL_I2C_Init+0xa8>
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8003456:	0025      	movs	r5, r4
 8003458:	3541      	adds	r5, #65	@ 0x41
 800345a:	782b      	ldrb	r3, [r5, #0]
 800345c:	b2da      	uxtb	r2, r3
 800345e:	2b00      	cmp	r3, #0
 8003460:	d105      	bne.n	800346e <HAL_I2C_Init+0x22>
    hi2c->Lock = HAL_UNLOCKED;
 8003462:	0023      	movs	r3, r4
 8003464:	3340      	adds	r3, #64	@ 0x40
    HAL_I2C_MspInit(hi2c);
 8003466:	0020      	movs	r0, r4
    hi2c->Lock = HAL_UNLOCKED;
 8003468:	701a      	strb	r2, [r3, #0]
    HAL_I2C_MspInit(hi2c);
 800346a:	f7ff fa47 	bl	80028fc <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 800346e:	2324      	movs	r3, #36	@ 0x24
  __HAL_I2C_DISABLE(hi2c);
 8003470:	2101      	movs	r1, #1
  hi2c->State = HAL_I2C_STATE_BUSY;
 8003472:	702b      	strb	r3, [r5, #0]
  __HAL_I2C_DISABLE(hi2c);
 8003474:	6823      	ldr	r3, [r4, #0]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8003476:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
 8003478:	681a      	ldr	r2, [r3, #0]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 800347a:	68a6      	ldr	r6, [r4, #8]
  __HAL_I2C_DISABLE(hi2c);
 800347c:	438a      	bics	r2, r1
 800347e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8003480:	491d      	ldr	r1, [pc, #116]	@ (80034f8 <HAL_I2C_Init+0xac>)
 8003482:	6862      	ldr	r2, [r4, #4]
 8003484:	400a      	ands	r2, r1
 8003486:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8003488:	689a      	ldr	r2, [r3, #8]
 800348a:	491c      	ldr	r1, [pc, #112]	@ (80034fc <HAL_I2C_Init+0xb0>)
 800348c:	400a      	ands	r2, r1
 800348e:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8003490:	2801      	cmp	r0, #1
 8003492:	d107      	bne.n	80034a4 <HAL_I2C_Init+0x58>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8003494:	2280      	movs	r2, #128	@ 0x80
 8003496:	0212      	lsls	r2, r2, #8
 8003498:	4332      	orrs	r2, r6
 800349a:	609a      	str	r2, [r3, #8]
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 800349c:	685a      	ldr	r2, [r3, #4]
 800349e:	4818      	ldr	r0, [pc, #96]	@ (8003500 <HAL_I2C_Init+0xb4>)
 80034a0:	4002      	ands	r2, r0
 80034a2:	e009      	b.n	80034b8 <HAL_I2C_Init+0x6c>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 80034a4:	2284      	movs	r2, #132	@ 0x84
 80034a6:	0212      	lsls	r2, r2, #8
 80034a8:	4332      	orrs	r2, r6
 80034aa:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 80034ac:	2802      	cmp	r0, #2
 80034ae:	d1f5      	bne.n	800349c <HAL_I2C_Init+0x50>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 80034b0:	2280      	movs	r2, #128	@ 0x80
 80034b2:	6858      	ldr	r0, [r3, #4]
 80034b4:	0112      	lsls	r2, r2, #4
 80034b6:	4302      	orrs	r2, r0
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 80034b8:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 80034ba:	6858      	ldr	r0, [r3, #4]
 80034bc:	4a11      	ldr	r2, [pc, #68]	@ (8003504 <HAL_I2C_Init+0xb8>)
 80034be:	4302      	orrs	r2, r0
 80034c0:	605a      	str	r2, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 80034c2:	68da      	ldr	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80034c4:	2000      	movs	r0, #0
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 80034c6:	400a      	ands	r2, r1
 80034c8:	60da      	str	r2, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 80034ca:	6961      	ldr	r1, [r4, #20]
 80034cc:	6922      	ldr	r2, [r4, #16]
 80034ce:	430a      	orrs	r2, r1
                          (hi2c->Init.OwnAddress2Masks << 8));
 80034d0:	69a1      	ldr	r1, [r4, #24]
 80034d2:	0209      	lsls	r1, r1, #8
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 80034d4:	430a      	orrs	r2, r1
 80034d6:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 80034d8:	6a21      	ldr	r1, [r4, #32]
 80034da:	69e2      	ldr	r2, [r4, #28]
 80034dc:	430a      	orrs	r2, r1
 80034de:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 80034e0:	2201      	movs	r2, #1
 80034e2:	6819      	ldr	r1, [r3, #0]
 80034e4:	430a      	orrs	r2, r1
 80034e6:	601a      	str	r2, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
 80034e8:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80034ea:	6460      	str	r0, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 80034ec:	702b      	strb	r3, [r5, #0]
  hi2c->PreviousState = I2C_STATE_NONE;
 80034ee:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80034f0:	3442      	adds	r4, #66	@ 0x42
 80034f2:	7020      	strb	r0, [r4, #0]
}
 80034f4:	bd70      	pop	{r4, r5, r6, pc}
 80034f6:	46c0      	nop			@ (mov r8, r8)
 80034f8:	f0ffffff 	.word	0xf0ffffff
 80034fc:	ffff7fff 	.word	0xffff7fff
 8003500:	fffff7ff 	.word	0xfffff7ff
 8003504:	02008000 	.word	0x02008000

08003508 <HAL_I2C_Master_Transmit>:
{
 8003508:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (hi2c->State == HAL_I2C_STATE_READY)
 800350a:	0006      	movs	r6, r0
{
 800350c:	b085      	sub	sp, #20
 800350e:	9202      	str	r2, [sp, #8]
 8003510:	9303      	str	r3, [sp, #12]
  if (hi2c->State == HAL_I2C_STATE_READY)
 8003512:	3641      	adds	r6, #65	@ 0x41
 8003514:	7833      	ldrb	r3, [r6, #0]
{
 8003516:	0004      	movs	r4, r0
 8003518:	000f      	movs	r7, r1
    __HAL_LOCK(hi2c);
 800351a:	2002      	movs	r0, #2
  if (hi2c->State == HAL_I2C_STATE_READY)
 800351c:	2b20      	cmp	r3, #32
 800351e:	d114      	bne.n	800354a <HAL_I2C_Master_Transmit+0x42>
    __HAL_LOCK(hi2c);
 8003520:	0023      	movs	r3, r4
 8003522:	3340      	adds	r3, #64	@ 0x40
 8003524:	781a      	ldrb	r2, [r3, #0]
 8003526:	2a01      	cmp	r2, #1
 8003528:	d00f      	beq.n	800354a <HAL_I2C_Master_Transmit+0x42>
 800352a:	2201      	movs	r2, #1
 800352c:	701a      	strb	r2, [r3, #0]
    tickstart = HAL_GetTick();
 800352e:	f7ff fb49 	bl	8002bc4 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8003532:	2180      	movs	r1, #128	@ 0x80
    tickstart = HAL_GetTick();
 8003534:	0005      	movs	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8003536:	9000      	str	r0, [sp, #0]
 8003538:	2319      	movs	r3, #25
 800353a:	2201      	movs	r2, #1
 800353c:	0020      	movs	r0, r4
 800353e:	0209      	lsls	r1, r1, #8
 8003540:	f7ff fed2 	bl	80032e8 <I2C_WaitOnFlagUntilTimeout>
 8003544:	2800      	cmp	r0, #0
 8003546:	d002      	beq.n	800354e <HAL_I2C_Master_Transmit+0x46>
      return HAL_ERROR;
 8003548:	2001      	movs	r0, #1
}
 800354a:	b005      	add	sp, #20
 800354c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800354e:	2321      	movs	r3, #33	@ 0x21
 8003550:	7033      	strb	r3, [r6, #0]
    hi2c->Mode      = HAL_I2C_MODE_MASTER;
 8003552:	0023      	movs	r3, r4
 8003554:	2210      	movs	r2, #16
 8003556:	3342      	adds	r3, #66	@ 0x42
 8003558:	701a      	strb	r2, [r3, #0]
    hi2c->pBuffPtr  = pData;
 800355a:	9b02      	ldr	r3, [sp, #8]
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800355c:	6460      	str	r0, [r4, #68]	@ 0x44
    hi2c->pBuffPtr  = pData;
 800355e:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount = Size;
 8003560:	9b03      	ldr	r3, [sp, #12]
    hi2c->XferISR   = NULL;
 8003562:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->XferCount = Size;
 8003564:	8563      	strh	r3, [r4, #42]	@ 0x2a
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8003566:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8003568:	2bff      	cmp	r3, #255	@ 0xff
 800356a:	d834      	bhi.n	80035d6 <HAL_I2C_Master_Transmit+0xce>
      xfermode = I2C_AUTOEND_MODE;
 800356c:	2380      	movs	r3, #128	@ 0x80
      hi2c->XferSize = hi2c->XferCount;
 800356e:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      xfermode = I2C_AUTOEND_MODE;
 8003570:	049b      	lsls	r3, r3, #18
      hi2c->XferSize = hi2c->XferCount;
 8003572:	b292      	uxth	r2, r2
      xfermode = I2C_AUTOEND_MODE;
 8003574:	4932      	ldr	r1, [pc, #200]	@ (8003640 <HAL_I2C_Master_Transmit+0x138>)
 8003576:	8522      	strh	r2, [r4, #40]	@ 0x28
    if (hi2c->XferSize > 0U)
 8003578:	2a00      	cmp	r2, #0
 800357a:	d00f      	beq.n	800359c <HAL_I2C_Master_Transmit+0x94>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 800357c:	9e02      	ldr	r6, [sp, #8]
 800357e:	6820      	ldr	r0, [r4, #0]
 8003580:	7836      	ldrb	r6, [r6, #0]
      hi2c->XferSize--;
 8003582:	3a01      	subs	r2, #1
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8003584:	6286      	str	r6, [r0, #40]	@ 0x28
      hi2c->pBuffPtr++;
 8003586:	9802      	ldr	r0, [sp, #8]
      hi2c->XferSize--;
 8003588:	b292      	uxth	r2, r2
      hi2c->pBuffPtr++;
 800358a:	3001      	adds	r0, #1
 800358c:	6260      	str	r0, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 800358e:	8d60      	ldrh	r0, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8003590:	8522      	strh	r2, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8003592:	3801      	subs	r0, #1
 8003594:	b280      	uxth	r0, r0
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)(hi2c->XferSize + 1U), xfermode,
 8003596:	3201      	adds	r2, #1
      hi2c->XferCount--;
 8003598:	8560      	strh	r0, [r4, #42]	@ 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)(hi2c->XferSize + 1U), xfermode,
 800359a:	b2d2      	uxtb	r2, r2
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode,
 800359c:	9100      	str	r1, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800359e:	0039      	movs	r1, r7
 80035a0:	0020      	movs	r0, r4
 80035a2:	f7ff fddf 	bl	8003164 <I2C_TransferConfig>
    while (hi2c->XferCount > 0U)
 80035a6:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80035a8:	002a      	movs	r2, r5
 80035aa:	0020      	movs	r0, r4
 80035ac:	990a      	ldr	r1, [sp, #40]	@ 0x28
    while (hi2c->XferCount > 0U)
 80035ae:	2b00      	cmp	r3, #0
 80035b0:	d115      	bne.n	80035de <HAL_I2C_Master_Transmit+0xd6>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80035b2:	f7ff fed0 	bl	8003356 <I2C_WaitOnSTOPFlagUntilTimeout>
 80035b6:	2800      	cmp	r0, #0
 80035b8:	d1c6      	bne.n	8003548 <HAL_I2C_Master_Transmit+0x40>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80035ba:	2120      	movs	r1, #32
 80035bc:	6823      	ldr	r3, [r4, #0]
    I2C_RESET_CR2(hi2c);
 80035be:	4d21      	ldr	r5, [pc, #132]	@ (8003644 <HAL_I2C_Master_Transmit+0x13c>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80035c0:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 80035c2:	685a      	ldr	r2, [r3, #4]
 80035c4:	402a      	ands	r2, r5
 80035c6:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 80035c8:	0023      	movs	r3, r4
    __HAL_UNLOCK(hi2c);
 80035ca:	3440      	adds	r4, #64	@ 0x40
    hi2c->State = HAL_I2C_STATE_READY;
 80035cc:	3341      	adds	r3, #65	@ 0x41
 80035ce:	7019      	strb	r1, [r3, #0]
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 80035d0:	7058      	strb	r0, [r3, #1]
    __HAL_UNLOCK(hi2c);
 80035d2:	7020      	strb	r0, [r4, #0]
    return HAL_OK;
 80035d4:	e7b9      	b.n	800354a <HAL_I2C_Master_Transmit+0x42>
      xfermode = I2C_RELOAD_MODE;
 80035d6:	2380      	movs	r3, #128	@ 0x80
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80035d8:	22ff      	movs	r2, #255	@ 0xff
      xfermode = I2C_RELOAD_MODE;
 80035da:	045b      	lsls	r3, r3, #17
 80035dc:	e7ca      	b.n	8003574 <HAL_I2C_Master_Transmit+0x6c>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80035de:	f7ff fe55 	bl	800328c <I2C_WaitOnTXISFlagUntilTimeout>
 80035e2:	2800      	cmp	r0, #0
 80035e4:	d1b0      	bne.n	8003548 <HAL_I2C_Master_Transmit+0x40>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 80035e6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80035e8:	6822      	ldr	r2, [r4, #0]
 80035ea:	7819      	ldrb	r1, [r3, #0]
      hi2c->pBuffPtr++;
 80035ec:	3301      	adds	r3, #1
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 80035ee:	6291      	str	r1, [r2, #40]	@ 0x28
      hi2c->pBuffPtr++;
 80035f0:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 80035f2:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 80035f4:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 80035f6:	3b01      	subs	r3, #1
 80035f8:	b29b      	uxth	r3, r3
 80035fa:	8563      	strh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 80035fc:	3a01      	subs	r2, #1
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80035fe:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8003600:	b292      	uxth	r2, r2
 8003602:	8522      	strh	r2, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8003604:	2b00      	cmp	r3, #0
 8003606:	d0ce      	beq.n	80035a6 <HAL_I2C_Master_Transmit+0x9e>
 8003608:	2a00      	cmp	r2, #0
 800360a:	d1cc      	bne.n	80035a6 <HAL_I2C_Master_Transmit+0x9e>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 800360c:	2180      	movs	r1, #128	@ 0x80
 800360e:	0020      	movs	r0, r4
 8003610:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003612:	9500      	str	r5, [sp, #0]
 8003614:	f7ff fe68 	bl	80032e8 <I2C_WaitOnFlagUntilTimeout>
 8003618:	2800      	cmp	r0, #0
 800361a:	d000      	beq.n	800361e <HAL_I2C_Master_Transmit+0x116>
 800361c:	e794      	b.n	8003548 <HAL_I2C_Master_Transmit+0x40>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 800361e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8003620:	2bff      	cmp	r3, #255	@ 0xff
 8003622:	d905      	bls.n	8003630 <HAL_I2C_Master_Transmit+0x128>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8003624:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8003626:	2380      	movs	r3, #128	@ 0x80
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8003628:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 800362a:	045b      	lsls	r3, r3, #17
 800362c:	9000      	str	r0, [sp, #0]
 800362e:	e7b6      	b.n	800359e <HAL_I2C_Master_Transmit+0x96>
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8003630:	2380      	movs	r3, #128	@ 0x80
          hi2c->XferSize = hi2c->XferCount;
 8003632:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8003634:	049b      	lsls	r3, r3, #18
          hi2c->XferSize = hi2c->XferCount;
 8003636:	b292      	uxth	r2, r2
 8003638:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800363a:	b2d2      	uxtb	r2, r2
 800363c:	9000      	str	r0, [sp, #0]
 800363e:	e7ae      	b.n	800359e <HAL_I2C_Master_Transmit+0x96>
 8003640:	80002000 	.word	0x80002000
 8003644:	fe00e800 	.word	0xfe00e800

08003648 <HAL_I2C_Master_Receive>:
{
 8003648:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (hi2c->State == HAL_I2C_STATE_READY)
 800364a:	0007      	movs	r7, r0
{
 800364c:	b087      	sub	sp, #28
 800364e:	9103      	str	r1, [sp, #12]
 8003650:	9204      	str	r2, [sp, #16]
 8003652:	9305      	str	r3, [sp, #20]
  if (hi2c->State == HAL_I2C_STATE_READY)
 8003654:	3741      	adds	r7, #65	@ 0x41
 8003656:	783b      	ldrb	r3, [r7, #0]
{
 8003658:	0004      	movs	r4, r0
    __HAL_LOCK(hi2c);
 800365a:	2002      	movs	r0, #2
  if (hi2c->State == HAL_I2C_STATE_READY)
 800365c:	2b20      	cmp	r3, #32
 800365e:	d114      	bne.n	800368a <HAL_I2C_Master_Receive+0x42>
    __HAL_LOCK(hi2c);
 8003660:	0023      	movs	r3, r4
 8003662:	3340      	adds	r3, #64	@ 0x40
 8003664:	781a      	ldrb	r2, [r3, #0]
 8003666:	2a01      	cmp	r2, #1
 8003668:	d00f      	beq.n	800368a <HAL_I2C_Master_Receive+0x42>
 800366a:	2601      	movs	r6, #1
 800366c:	701e      	strb	r6, [r3, #0]
    tickstart = HAL_GetTick();
 800366e:	f7ff faa9 	bl	8002bc4 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8003672:	2180      	movs	r1, #128	@ 0x80
    tickstart = HAL_GetTick();
 8003674:	0005      	movs	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8003676:	9000      	str	r0, [sp, #0]
 8003678:	2319      	movs	r3, #25
 800367a:	0032      	movs	r2, r6
 800367c:	0020      	movs	r0, r4
 800367e:	0209      	lsls	r1, r1, #8
 8003680:	f7ff fe32 	bl	80032e8 <I2C_WaitOnFlagUntilTimeout>
 8003684:	2800      	cmp	r0, #0
 8003686:	d002      	beq.n	800368e <HAL_I2C_Master_Receive+0x46>
      return HAL_ERROR;
 8003688:	2001      	movs	r0, #1
}
 800368a:	b007      	add	sp, #28
 800368c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800368e:	2322      	movs	r3, #34	@ 0x22
 8003690:	703b      	strb	r3, [r7, #0]
    hi2c->Mode      = HAL_I2C_MODE_MASTER;
 8003692:	0027      	movs	r7, r4
 8003694:	3b12      	subs	r3, #18
 8003696:	3742      	adds	r7, #66	@ 0x42
 8003698:	703b      	strb	r3, [r7, #0]
    hi2c->pBuffPtr  = pData;
 800369a:	9b04      	ldr	r3, [sp, #16]
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800369c:	6460      	str	r0, [r4, #68]	@ 0x44
    hi2c->pBuffPtr  = pData;
 800369e:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount = Size;
 80036a0:	9b05      	ldr	r3, [sp, #20]
    hi2c->XferISR   = NULL;
 80036a2:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->XferCount = Size;
 80036a4:	8563      	strh	r3, [r4, #42]	@ 0x2a
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80036a6:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
 80036a8:	4b2d      	ldr	r3, [pc, #180]	@ (8003760 <HAL_I2C_Master_Receive+0x118>)
 80036aa:	2aff      	cmp	r2, #255	@ 0xff
 80036ac:	d920      	bls.n	80036f0 <HAL_I2C_Master_Receive+0xa8>
      hi2c->XferSize = 1U;
 80036ae:	8526      	strh	r6, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 80036b0:	9300      	str	r3, [sp, #0]
 80036b2:	2380      	movs	r3, #128	@ 0x80
 80036b4:	0032      	movs	r2, r6
 80036b6:	045b      	lsls	r3, r3, #17
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80036b8:	0020      	movs	r0, r4
 80036ba:	9903      	ldr	r1, [sp, #12]
 80036bc:	f7ff fd52 	bl	8003164 <I2C_TransferConfig>
    while (hi2c->XferCount > 0U)
 80036c0:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80036c2:	002a      	movs	r2, r5
 80036c4:	0020      	movs	r0, r4
 80036c6:	990c      	ldr	r1, [sp, #48]	@ 0x30
    while (hi2c->XferCount > 0U)
 80036c8:	2b00      	cmp	r3, #0
 80036ca:	d119      	bne.n	8003700 <HAL_I2C_Master_Receive+0xb8>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80036cc:	f7ff fe43 	bl	8003356 <I2C_WaitOnSTOPFlagUntilTimeout>
 80036d0:	2800      	cmp	r0, #0
 80036d2:	d1d9      	bne.n	8003688 <HAL_I2C_Master_Receive+0x40>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80036d4:	2120      	movs	r1, #32
 80036d6:	6823      	ldr	r3, [r4, #0]
    I2C_RESET_CR2(hi2c);
 80036d8:	4d22      	ldr	r5, [pc, #136]	@ (8003764 <HAL_I2C_Master_Receive+0x11c>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80036da:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 80036dc:	685a      	ldr	r2, [r3, #4]
 80036de:	402a      	ands	r2, r5
 80036e0:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 80036e2:	0023      	movs	r3, r4
    __HAL_UNLOCK(hi2c);
 80036e4:	3440      	adds	r4, #64	@ 0x40
    hi2c->State = HAL_I2C_STATE_READY;
 80036e6:	3341      	adds	r3, #65	@ 0x41
 80036e8:	7019      	strb	r1, [r3, #0]
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 80036ea:	7038      	strb	r0, [r7, #0]
    __HAL_UNLOCK(hi2c);
 80036ec:	7020      	strb	r0, [r4, #0]
    return HAL_OK;
 80036ee:	e7cc      	b.n	800368a <HAL_I2C_Master_Receive+0x42>
      hi2c->XferSize = hi2c->XferCount;
 80036f0:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
 80036f2:	b292      	uxth	r2, r2
 80036f4:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80036f6:	b2d2      	uxtb	r2, r2
 80036f8:	9300      	str	r3, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80036fa:	2380      	movs	r3, #128	@ 0x80
 80036fc:	049b      	lsls	r3, r3, #18
 80036fe:	e7db      	b.n	80036b8 <HAL_I2C_Master_Receive+0x70>
      if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003700:	f7ff fe54 	bl	80033ac <I2C_WaitOnRXNEFlagUntilTimeout>
 8003704:	2800      	cmp	r0, #0
 8003706:	d1bf      	bne.n	8003688 <HAL_I2C_Master_Receive+0x40>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 8003708:	6823      	ldr	r3, [r4, #0]
 800370a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800370c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800370e:	701a      	strb	r2, [r3, #0]
      hi2c->pBuffPtr++;
 8003710:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      hi2c->XferSize--;
 8003712:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
 8003714:	3301      	adds	r3, #1
 8003716:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8003718:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 800371a:	3a01      	subs	r2, #1
      hi2c->XferCount--;
 800371c:	3b01      	subs	r3, #1
 800371e:	b29b      	uxth	r3, r3
 8003720:	8563      	strh	r3, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8003722:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8003724:	b292      	uxth	r2, r2
 8003726:	8522      	strh	r2, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8003728:	2b00      	cmp	r3, #0
 800372a:	d0c9      	beq.n	80036c0 <HAL_I2C_Master_Receive+0x78>
 800372c:	2a00      	cmp	r2, #0
 800372e:	d1c7      	bne.n	80036c0 <HAL_I2C_Master_Receive+0x78>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8003730:	2180      	movs	r1, #128	@ 0x80
 8003732:	0020      	movs	r0, r4
 8003734:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8003736:	9500      	str	r5, [sp, #0]
 8003738:	f7ff fdd6 	bl	80032e8 <I2C_WaitOnFlagUntilTimeout>
 800373c:	2800      	cmp	r0, #0
 800373e:	d1a3      	bne.n	8003688 <HAL_I2C_Master_Receive+0x40>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8003740:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8003742:	2bff      	cmp	r3, #255	@ 0xff
 8003744:	d905      	bls.n	8003752 <HAL_I2C_Master_Receive+0x10a>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8003746:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8003748:	2380      	movs	r3, #128	@ 0x80
          hi2c->XferSize = MAX_NBYTE_SIZE;
 800374a:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 800374c:	045b      	lsls	r3, r3, #17
 800374e:	9000      	str	r0, [sp, #0]
 8003750:	e7b2      	b.n	80036b8 <HAL_I2C_Master_Receive+0x70>
          hi2c->XferSize = hi2c->XferCount;
 8003752:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
 8003754:	b292      	uxth	r2, r2
 8003756:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8003758:	b2d2      	uxtb	r2, r2
 800375a:	9000      	str	r0, [sp, #0]
 800375c:	e7cd      	b.n	80036fa <HAL_I2C_Master_Receive+0xb2>
 800375e:	46c0      	nop			@ (mov r8, r8)
 8003760:	80002400 	.word	0x80002400
 8003764:	fe00e800 	.word	0xfe00e800

08003768 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8003768:	b5f0      	push	{r4, r5, r6, r7, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800376a:	0004      	movs	r4, r0
 800376c:	3441      	adds	r4, #65	@ 0x41
 800376e:	7822      	ldrb	r2, [r4, #0]
{
 8003770:	0003      	movs	r3, r0
 8003772:	000f      	movs	r7, r1
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8003774:	2002      	movs	r0, #2
  if (hi2c->State == HAL_I2C_STATE_READY)
 8003776:	b2d6      	uxtb	r6, r2
 8003778:	2a20      	cmp	r2, #32
 800377a:	d118      	bne.n	80037ae <HAL_I2CEx_ConfigAnalogFilter+0x46>
    __HAL_LOCK(hi2c);
 800377c:	001d      	movs	r5, r3
 800377e:	3540      	adds	r5, #64	@ 0x40
 8003780:	782a      	ldrb	r2, [r5, #0]
 8003782:	2a01      	cmp	r2, #1
 8003784:	d013      	beq.n	80037ae <HAL_I2CEx_ConfigAnalogFilter+0x46>

    hi2c->State = HAL_I2C_STATE_BUSY;
 8003786:	2224      	movs	r2, #36	@ 0x24
 8003788:	7022      	strb	r2, [r4, #0]

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800378a:	681b      	ldr	r3, [r3, #0]
 800378c:	3a23      	subs	r2, #35	@ 0x23
 800378e:	6819      	ldr	r1, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 8003790:	4807      	ldr	r0, [pc, #28]	@ (80037b0 <HAL_I2CEx_ConfigAnalogFilter+0x48>)
    __HAL_I2C_DISABLE(hi2c);
 8003792:	4391      	bics	r1, r2
 8003794:	6019      	str	r1, [r3, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 8003796:	6819      	ldr	r1, [r3, #0]
 8003798:	4001      	ands	r1, r0
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800379a:	2000      	movs	r0, #0
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 800379c:	6019      	str	r1, [r3, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
 800379e:	6819      	ldr	r1, [r3, #0]
 80037a0:	4339      	orrs	r1, r7
 80037a2:	6019      	str	r1, [r3, #0]
    __HAL_I2C_ENABLE(hi2c);
 80037a4:	6819      	ldr	r1, [r3, #0]
 80037a6:	430a      	orrs	r2, r1
 80037a8:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 80037aa:	7026      	strb	r6, [r4, #0]
    __HAL_UNLOCK(hi2c);
 80037ac:	7028      	strb	r0, [r5, #0]
  }
  else
  {
    return HAL_BUSY;
  }
}
 80037ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80037b0:	ffffefff 	.word	0xffffefff

080037b4 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80037b4:	0002      	movs	r2, r0
{
 80037b6:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (hi2c->State == HAL_I2C_STATE_READY)
 80037b8:	3241      	adds	r2, #65	@ 0x41
 80037ba:	7814      	ldrb	r4, [r2, #0]
{
 80037bc:	0003      	movs	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80037be:	b2e5      	uxtb	r5, r4
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 80037c0:	2002      	movs	r0, #2
  if (hi2c->State == HAL_I2C_STATE_READY)
 80037c2:	2c20      	cmp	r4, #32
 80037c4:	d117      	bne.n	80037f6 <HAL_I2CEx_ConfigDigitalFilter+0x42>
    __HAL_LOCK(hi2c);
 80037c6:	001c      	movs	r4, r3
 80037c8:	3440      	adds	r4, #64	@ 0x40
 80037ca:	7826      	ldrb	r6, [r4, #0]
 80037cc:	2e01      	cmp	r6, #1
 80037ce:	d012      	beq.n	80037f6 <HAL_I2CEx_ConfigDigitalFilter+0x42>

    hi2c->State = HAL_I2C_STATE_BUSY;
 80037d0:	3022      	adds	r0, #34	@ 0x22
 80037d2:	7010      	strb	r0, [r2, #0]

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80037d4:	681b      	ldr	r3, [r3, #0]
 80037d6:	3823      	subs	r0, #35	@ 0x23
 80037d8:	681e      	ldr	r6, [r3, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 80037da:	4f07      	ldr	r7, [pc, #28]	@ (80037f8 <HAL_I2CEx_ConfigDigitalFilter+0x44>)
    __HAL_I2C_DISABLE(hi2c);
 80037dc:	4386      	bics	r6, r0
 80037de:	601e      	str	r6, [r3, #0]
    tmpreg = hi2c->Instance->CR1;
 80037e0:	681e      	ldr	r6, [r3, #0]

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 80037e2:	0209      	lsls	r1, r1, #8
    tmpreg &= ~(I2C_CR1_DNF);
 80037e4:	403e      	ands	r6, r7
    tmpreg |= DigitalFilter << 8U;
 80037e6:	4331      	orrs	r1, r6

    /* Store the new register value */
    hi2c->Instance->CR1 = tmpreg;
 80037e8:	6019      	str	r1, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 80037ea:	6819      	ldr	r1, [r3, #0]
 80037ec:	4308      	orrs	r0, r1
 80037ee:	6018      	str	r0, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80037f0:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 80037f2:	7015      	strb	r5, [r2, #0]
    __HAL_UNLOCK(hi2c);
 80037f4:	7020      	strb	r0, [r4, #0]
  }
  else
  {
    return HAL_BUSY;
  }
}
 80037f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80037f8:	fffff0ff 	.word	0xfffff0ff

080037fc <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80037fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80037fe:	0004      	movs	r4, r0
 8003800:	b085      	sub	sp, #20
  uint32_t tickstart;
  uint32_t pll_config;
  uint32_t pll_config2;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8003802:	2800      	cmp	r0, #0
 8003804:	d102      	bne.n	800380c <HAL_RCC_OscConfig+0x10>
  {
    return HAL_ERROR;
 8003806:	2001      	movs	r0, #1
      }
    }
  }

  return HAL_OK;
}
 8003808:	b005      	add	sp, #20
 800380a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800380c:	6803      	ldr	r3, [r0, #0]
 800380e:	07db      	lsls	r3, r3, #31
 8003810:	d433      	bmi.n	800387a <HAL_RCC_OscConfig+0x7e>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8003812:	6823      	ldr	r3, [r4, #0]
 8003814:	079b      	lsls	r3, r3, #30
 8003816:	d500      	bpl.n	800381a <HAL_RCC_OscConfig+0x1e>
 8003818:	e087      	b.n	800392a <HAL_RCC_OscConfig+0x12e>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800381a:	6823      	ldr	r3, [r4, #0]
 800381c:	071b      	lsls	r3, r3, #28
 800381e:	d500      	bpl.n	8003822 <HAL_RCC_OscConfig+0x26>
 8003820:	e0c8      	b.n	80039b4 <HAL_RCC_OscConfig+0x1b8>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8003822:	6823      	ldr	r3, [r4, #0]
 8003824:	075b      	lsls	r3, r3, #29
 8003826:	d500      	bpl.n	800382a <HAL_RCC_OscConfig+0x2e>
 8003828:	e0eb      	b.n	8003a02 <HAL_RCC_OscConfig+0x206>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 800382a:	6823      	ldr	r3, [r4, #0]
 800382c:	06db      	lsls	r3, r3, #27
 800382e:	d51a      	bpl.n	8003866 <HAL_RCC_OscConfig+0x6a>
    if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 8003830:	6962      	ldr	r2, [r4, #20]
 8003832:	2304      	movs	r3, #4
 8003834:	4db9      	ldr	r5, [pc, #740]	@ (8003b1c <HAL_RCC_OscConfig+0x320>)
 8003836:	2a01      	cmp	r2, #1
 8003838:	d000      	beq.n	800383c <HAL_RCC_OscConfig+0x40>
 800383a:	e154      	b.n	8003ae6 <HAL_RCC_OscConfig+0x2ea>
      __HAL_RCC_HSI14ADC_DISABLE();
 800383c:	6b69      	ldr	r1, [r5, #52]	@ 0x34
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 800383e:	2702      	movs	r7, #2
      __HAL_RCC_HSI14ADC_DISABLE();
 8003840:	430b      	orrs	r3, r1
 8003842:	636b      	str	r3, [r5, #52]	@ 0x34
      __HAL_RCC_HSI14_ENABLE();
 8003844:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8003846:	431a      	orrs	r2, r3
 8003848:	636a      	str	r2, [r5, #52]	@ 0x34
      tickstart = HAL_GetTick();
 800384a:	f7ff f9bb 	bl	8002bc4 <HAL_GetTick>
 800384e:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 8003850:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8003852:	423b      	tst	r3, r7
 8003854:	d100      	bne.n	8003858 <HAL_RCC_OscConfig+0x5c>
 8003856:	e13f      	b.n	8003ad8 <HAL_RCC_OscConfig+0x2dc>
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 8003858:	21f8      	movs	r1, #248	@ 0xf8
 800385a:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
 800385c:	69a3      	ldr	r3, [r4, #24]
 800385e:	438a      	bics	r2, r1
 8003860:	00db      	lsls	r3, r3, #3
 8003862:	4313      	orrs	r3, r2
 8003864:	636b      	str	r3, [r5, #52]	@ 0x34
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 8003866:	6823      	ldr	r3, [r4, #0]
 8003868:	069b      	lsls	r3, r3, #26
 800386a:	d500      	bpl.n	800386e <HAL_RCC_OscConfig+0x72>
 800386c:	e162      	b.n	8003b34 <HAL_RCC_OscConfig+0x338>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800386e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8003870:	2b00      	cmp	r3, #0
 8003872:	d000      	beq.n	8003876 <HAL_RCC_OscConfig+0x7a>
 8003874:	e1a1      	b.n	8003bba <HAL_RCC_OscConfig+0x3be>
  return HAL_OK;
 8003876:	2000      	movs	r0, #0
 8003878:	e7c6      	b.n	8003808 <HAL_RCC_OscConfig+0xc>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 800387a:	220c      	movs	r2, #12
 800387c:	4da7      	ldr	r5, [pc, #668]	@ (8003b1c <HAL_RCC_OscConfig+0x320>)
 800387e:	686b      	ldr	r3, [r5, #4]
 8003880:	4013      	ands	r3, r2
 8003882:	2b04      	cmp	r3, #4
 8003884:	d00b      	beq.n	800389e <HAL_RCC_OscConfig+0xa2>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 8003886:	686b      	ldr	r3, [r5, #4]
 8003888:	4013      	ands	r3, r2
 800388a:	2b08      	cmp	r3, #8
 800388c:	d10e      	bne.n	80038ac <HAL_RCC_OscConfig+0xb0>
 800388e:	22c0      	movs	r2, #192	@ 0xc0
 8003890:	686b      	ldr	r3, [r5, #4]
 8003892:	0252      	lsls	r2, r2, #9
 8003894:	4013      	ands	r3, r2
 8003896:	2280      	movs	r2, #128	@ 0x80
 8003898:	0252      	lsls	r2, r2, #9
 800389a:	4293      	cmp	r3, r2
 800389c:	d106      	bne.n	80038ac <HAL_RCC_OscConfig+0xb0>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800389e:	682b      	ldr	r3, [r5, #0]
 80038a0:	039b      	lsls	r3, r3, #14
 80038a2:	d5b6      	bpl.n	8003812 <HAL_RCC_OscConfig+0x16>
 80038a4:	6863      	ldr	r3, [r4, #4]
 80038a6:	2b00      	cmp	r3, #0
 80038a8:	d1b3      	bne.n	8003812 <HAL_RCC_OscConfig+0x16>
 80038aa:	e7ac      	b.n	8003806 <HAL_RCC_OscConfig+0xa>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80038ac:	6863      	ldr	r3, [r4, #4]
 80038ae:	2b01      	cmp	r3, #1
 80038b0:	d113      	bne.n	80038da <HAL_RCC_OscConfig+0xde>
 80038b2:	2380      	movs	r3, #128	@ 0x80
 80038b4:	682a      	ldr	r2, [r5, #0]
 80038b6:	025b      	lsls	r3, r3, #9
 80038b8:	4313      	orrs	r3, r2
 80038ba:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80038bc:	f7ff f982 	bl	8002bc4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80038c0:	2780      	movs	r7, #128	@ 0x80
        tickstart = HAL_GetTick();
 80038c2:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80038c4:	02bf      	lsls	r7, r7, #10
 80038c6:	682b      	ldr	r3, [r5, #0]
 80038c8:	423b      	tst	r3, r7
 80038ca:	d1a2      	bne.n	8003812 <HAL_RCC_OscConfig+0x16>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80038cc:	f7ff f97a 	bl	8002bc4 <HAL_GetTick>
 80038d0:	1b80      	subs	r0, r0, r6
 80038d2:	2864      	cmp	r0, #100	@ 0x64
 80038d4:	d9f7      	bls.n	80038c6 <HAL_RCC_OscConfig+0xca>
            return HAL_TIMEOUT;
 80038d6:	2003      	movs	r0, #3
 80038d8:	e796      	b.n	8003808 <HAL_RCC_OscConfig+0xc>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80038da:	2b00      	cmp	r3, #0
 80038dc:	d115      	bne.n	800390a <HAL_RCC_OscConfig+0x10e>
 80038de:	682b      	ldr	r3, [r5, #0]
 80038e0:	4a8f      	ldr	r2, [pc, #572]	@ (8003b20 <HAL_RCC_OscConfig+0x324>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80038e2:	2780      	movs	r7, #128	@ 0x80
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80038e4:	4013      	ands	r3, r2
 80038e6:	602b      	str	r3, [r5, #0]
 80038e8:	682b      	ldr	r3, [r5, #0]
 80038ea:	4a8e      	ldr	r2, [pc, #568]	@ (8003b24 <HAL_RCC_OscConfig+0x328>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80038ec:	02bf      	lsls	r7, r7, #10
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80038ee:	4013      	ands	r3, r2
 80038f0:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80038f2:	f7ff f967 	bl	8002bc4 <HAL_GetTick>
 80038f6:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80038f8:	682b      	ldr	r3, [r5, #0]
 80038fa:	423b      	tst	r3, r7
 80038fc:	d089      	beq.n	8003812 <HAL_RCC_OscConfig+0x16>
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80038fe:	f7ff f961 	bl	8002bc4 <HAL_GetTick>
 8003902:	1b80      	subs	r0, r0, r6
 8003904:	2864      	cmp	r0, #100	@ 0x64
 8003906:	d9f7      	bls.n	80038f8 <HAL_RCC_OscConfig+0xfc>
 8003908:	e7e5      	b.n	80038d6 <HAL_RCC_OscConfig+0xda>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800390a:	2b05      	cmp	r3, #5
 800390c:	d105      	bne.n	800391a <HAL_RCC_OscConfig+0x11e>
 800390e:	2380      	movs	r3, #128	@ 0x80
 8003910:	682a      	ldr	r2, [r5, #0]
 8003912:	02db      	lsls	r3, r3, #11
 8003914:	4313      	orrs	r3, r2
 8003916:	602b      	str	r3, [r5, #0]
 8003918:	e7cb      	b.n	80038b2 <HAL_RCC_OscConfig+0xb6>
 800391a:	682b      	ldr	r3, [r5, #0]
 800391c:	4a80      	ldr	r2, [pc, #512]	@ (8003b20 <HAL_RCC_OscConfig+0x324>)
 800391e:	4013      	ands	r3, r2
 8003920:	602b      	str	r3, [r5, #0]
 8003922:	682b      	ldr	r3, [r5, #0]
 8003924:	4a7f      	ldr	r2, [pc, #508]	@ (8003b24 <HAL_RCC_OscConfig+0x328>)
 8003926:	4013      	ands	r3, r2
 8003928:	e7c7      	b.n	80038ba <HAL_RCC_OscConfig+0xbe>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 800392a:	220c      	movs	r2, #12
 800392c:	4d7b      	ldr	r5, [pc, #492]	@ (8003b1c <HAL_RCC_OscConfig+0x320>)
 800392e:	686b      	ldr	r3, [r5, #4]
 8003930:	4213      	tst	r3, r2
 8003932:	d00b      	beq.n	800394c <HAL_RCC_OscConfig+0x150>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI)))
 8003934:	686b      	ldr	r3, [r5, #4]
 8003936:	4013      	ands	r3, r2
 8003938:	2b08      	cmp	r3, #8
 800393a:	d116      	bne.n	800396a <HAL_RCC_OscConfig+0x16e>
 800393c:	22c0      	movs	r2, #192	@ 0xc0
 800393e:	686b      	ldr	r3, [r5, #4]
 8003940:	0252      	lsls	r2, r2, #9
 8003942:	4013      	ands	r3, r2
 8003944:	2280      	movs	r2, #128	@ 0x80
 8003946:	0212      	lsls	r2, r2, #8
 8003948:	4293      	cmp	r3, r2
 800394a:	d10e      	bne.n	800396a <HAL_RCC_OscConfig+0x16e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800394c:	682b      	ldr	r3, [r5, #0]
 800394e:	079b      	lsls	r3, r3, #30
 8003950:	d503      	bpl.n	800395a <HAL_RCC_OscConfig+0x15e>
 8003952:	68e3      	ldr	r3, [r4, #12]
 8003954:	2b01      	cmp	r3, #1
 8003956:	d000      	beq.n	800395a <HAL_RCC_OscConfig+0x15e>
 8003958:	e755      	b.n	8003806 <HAL_RCC_OscConfig+0xa>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800395a:	21f8      	movs	r1, #248	@ 0xf8
 800395c:	682a      	ldr	r2, [r5, #0]
 800395e:	6923      	ldr	r3, [r4, #16]
 8003960:	438a      	bics	r2, r1
 8003962:	00db      	lsls	r3, r3, #3
 8003964:	4313      	orrs	r3, r2
 8003966:	602b      	str	r3, [r5, #0]
 8003968:	e757      	b.n	800381a <HAL_RCC_OscConfig+0x1e>
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 800396a:	68e2      	ldr	r2, [r4, #12]
 800396c:	2301      	movs	r3, #1
 800396e:	2a00      	cmp	r2, #0
 8003970:	d00f      	beq.n	8003992 <HAL_RCC_OscConfig+0x196>
        __HAL_RCC_HSI_ENABLE();
 8003972:	682a      	ldr	r2, [r5, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8003974:	2702      	movs	r7, #2
        __HAL_RCC_HSI_ENABLE();
 8003976:	4313      	orrs	r3, r2
 8003978:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800397a:	f7ff f923 	bl	8002bc4 <HAL_GetTick>
 800397e:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8003980:	682b      	ldr	r3, [r5, #0]
 8003982:	423b      	tst	r3, r7
 8003984:	d1e9      	bne.n	800395a <HAL_RCC_OscConfig+0x15e>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8003986:	f7ff f91d 	bl	8002bc4 <HAL_GetTick>
 800398a:	1b80      	subs	r0, r0, r6
 800398c:	2802      	cmp	r0, #2
 800398e:	d9f7      	bls.n	8003980 <HAL_RCC_OscConfig+0x184>
 8003990:	e7a1      	b.n	80038d6 <HAL_RCC_OscConfig+0xda>
        __HAL_RCC_HSI_DISABLE();
 8003992:	682a      	ldr	r2, [r5, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8003994:	2702      	movs	r7, #2
        __HAL_RCC_HSI_DISABLE();
 8003996:	439a      	bics	r2, r3
 8003998:	602a      	str	r2, [r5, #0]
        tickstart = HAL_GetTick();
 800399a:	f7ff f913 	bl	8002bc4 <HAL_GetTick>
 800399e:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80039a0:	682b      	ldr	r3, [r5, #0]
 80039a2:	423b      	tst	r3, r7
 80039a4:	d100      	bne.n	80039a8 <HAL_RCC_OscConfig+0x1ac>
 80039a6:	e738      	b.n	800381a <HAL_RCC_OscConfig+0x1e>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80039a8:	f7ff f90c 	bl	8002bc4 <HAL_GetTick>
 80039ac:	1b80      	subs	r0, r0, r6
 80039ae:	2802      	cmp	r0, #2
 80039b0:	d9f6      	bls.n	80039a0 <HAL_RCC_OscConfig+0x1a4>
 80039b2:	e790      	b.n	80038d6 <HAL_RCC_OscConfig+0xda>
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 80039b4:	69e2      	ldr	r2, [r4, #28]
 80039b6:	2301      	movs	r3, #1
 80039b8:	4d58      	ldr	r5, [pc, #352]	@ (8003b1c <HAL_RCC_OscConfig+0x320>)
 80039ba:	2a00      	cmp	r2, #0
 80039bc:	d010      	beq.n	80039e0 <HAL_RCC_OscConfig+0x1e4>
      __HAL_RCC_LSI_ENABLE();
 80039be:	6a6a      	ldr	r2, [r5, #36]	@ 0x24
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80039c0:	2702      	movs	r7, #2
      __HAL_RCC_LSI_ENABLE();
 80039c2:	4313      	orrs	r3, r2
 80039c4:	626b      	str	r3, [r5, #36]	@ 0x24
      tickstart = HAL_GetTick();
 80039c6:	f7ff f8fd 	bl	8002bc4 <HAL_GetTick>
 80039ca:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80039cc:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 80039ce:	423b      	tst	r3, r7
 80039d0:	d000      	beq.n	80039d4 <HAL_RCC_OscConfig+0x1d8>
 80039d2:	e726      	b.n	8003822 <HAL_RCC_OscConfig+0x26>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80039d4:	f7ff f8f6 	bl	8002bc4 <HAL_GetTick>
 80039d8:	1b80      	subs	r0, r0, r6
 80039da:	2802      	cmp	r0, #2
 80039dc:	d9f6      	bls.n	80039cc <HAL_RCC_OscConfig+0x1d0>
 80039de:	e77a      	b.n	80038d6 <HAL_RCC_OscConfig+0xda>
      __HAL_RCC_LSI_DISABLE();
 80039e0:	6a6a      	ldr	r2, [r5, #36]	@ 0x24
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80039e2:	2702      	movs	r7, #2
      __HAL_RCC_LSI_DISABLE();
 80039e4:	439a      	bics	r2, r3
 80039e6:	626a      	str	r2, [r5, #36]	@ 0x24
      tickstart = HAL_GetTick();
 80039e8:	f7ff f8ec 	bl	8002bc4 <HAL_GetTick>
 80039ec:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80039ee:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 80039f0:	423b      	tst	r3, r7
 80039f2:	d100      	bne.n	80039f6 <HAL_RCC_OscConfig+0x1fa>
 80039f4:	e715      	b.n	8003822 <HAL_RCC_OscConfig+0x26>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80039f6:	f7ff f8e5 	bl	8002bc4 <HAL_GetTick>
 80039fa:	1b80      	subs	r0, r0, r6
 80039fc:	2802      	cmp	r0, #2
 80039fe:	d9f6      	bls.n	80039ee <HAL_RCC_OscConfig+0x1f2>
 8003a00:	e769      	b.n	80038d6 <HAL_RCC_OscConfig+0xda>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8003a02:	2280      	movs	r2, #128	@ 0x80
    FlagStatus       pwrclkchanged = RESET;
 8003a04:	2100      	movs	r1, #0
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8003a06:	4d45      	ldr	r5, [pc, #276]	@ (8003b1c <HAL_RCC_OscConfig+0x320>)
 8003a08:	0552      	lsls	r2, r2, #21
 8003a0a:	69eb      	ldr	r3, [r5, #28]
    FlagStatus       pwrclkchanged = RESET;
 8003a0c:	9100      	str	r1, [sp, #0]
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8003a0e:	4213      	tst	r3, r2
 8003a10:	d108      	bne.n	8003a24 <HAL_RCC_OscConfig+0x228>
      __HAL_RCC_PWR_CLK_ENABLE();
 8003a12:	69eb      	ldr	r3, [r5, #28]
 8003a14:	4313      	orrs	r3, r2
 8003a16:	61eb      	str	r3, [r5, #28]
 8003a18:	69eb      	ldr	r3, [r5, #28]
 8003a1a:	4013      	ands	r3, r2
 8003a1c:	9303      	str	r3, [sp, #12]
 8003a1e:	9b03      	ldr	r3, [sp, #12]
      pwrclkchanged = SET;
 8003a20:	2301      	movs	r3, #1
 8003a22:	9300      	str	r3, [sp, #0]
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8003a24:	2780      	movs	r7, #128	@ 0x80
 8003a26:	4e40      	ldr	r6, [pc, #256]	@ (8003b28 <HAL_RCC_OscConfig+0x32c>)
 8003a28:	007f      	lsls	r7, r7, #1
 8003a2a:	6833      	ldr	r3, [r6, #0]
 8003a2c:	423b      	tst	r3, r7
 8003a2e:	d015      	beq.n	8003a5c <HAL_RCC_OscConfig+0x260>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8003a30:	68a3      	ldr	r3, [r4, #8]
 8003a32:	2b01      	cmp	r3, #1
 8003a34:	d122      	bne.n	8003a7c <HAL_RCC_OscConfig+0x280>
 8003a36:	6a2a      	ldr	r2, [r5, #32]
 8003a38:	4313      	orrs	r3, r2
 8003a3a:	622b      	str	r3, [r5, #32]
      tickstart = HAL_GetTick();
 8003a3c:	f7ff f8c2 	bl	8002bc4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8003a40:	2702      	movs	r7, #2
      tickstart = HAL_GetTick();
 8003a42:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8003a44:	6a2b      	ldr	r3, [r5, #32]
 8003a46:	423b      	tst	r3, r7
 8003a48:	d03f      	beq.n	8003aca <HAL_RCC_OscConfig+0x2ce>
    if(pwrclkchanged == SET)
 8003a4a:	9b00      	ldr	r3, [sp, #0]
 8003a4c:	2b01      	cmp	r3, #1
 8003a4e:	d000      	beq.n	8003a52 <HAL_RCC_OscConfig+0x256>
 8003a50:	e6eb      	b.n	800382a <HAL_RCC_OscConfig+0x2e>
      __HAL_RCC_PWR_CLK_DISABLE();
 8003a52:	69eb      	ldr	r3, [r5, #28]
 8003a54:	4a35      	ldr	r2, [pc, #212]	@ (8003b2c <HAL_RCC_OscConfig+0x330>)
 8003a56:	4013      	ands	r3, r2
 8003a58:	61eb      	str	r3, [r5, #28]
 8003a5a:	e6e6      	b.n	800382a <HAL_RCC_OscConfig+0x2e>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8003a5c:	6833      	ldr	r3, [r6, #0]
 8003a5e:	433b      	orrs	r3, r7
 8003a60:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 8003a62:	f7ff f8af 	bl	8002bc4 <HAL_GetTick>
 8003a66:	9001      	str	r0, [sp, #4]
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8003a68:	6833      	ldr	r3, [r6, #0]
 8003a6a:	423b      	tst	r3, r7
 8003a6c:	d1e0      	bne.n	8003a30 <HAL_RCC_OscConfig+0x234>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8003a6e:	f7ff f8a9 	bl	8002bc4 <HAL_GetTick>
 8003a72:	9b01      	ldr	r3, [sp, #4]
 8003a74:	1ac0      	subs	r0, r0, r3
 8003a76:	2864      	cmp	r0, #100	@ 0x64
 8003a78:	d9f6      	bls.n	8003a68 <HAL_RCC_OscConfig+0x26c>
 8003a7a:	e72c      	b.n	80038d6 <HAL_RCC_OscConfig+0xda>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8003a7c:	2201      	movs	r2, #1
 8003a7e:	2b00      	cmp	r3, #0
 8003a80:	d114      	bne.n	8003aac <HAL_RCC_OscConfig+0x2b0>
 8003a82:	6a2b      	ldr	r3, [r5, #32]
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8003a84:	2702      	movs	r7, #2
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8003a86:	4393      	bics	r3, r2
 8003a88:	622b      	str	r3, [r5, #32]
 8003a8a:	6a2b      	ldr	r3, [r5, #32]
 8003a8c:	3203      	adds	r2, #3
 8003a8e:	4393      	bics	r3, r2
 8003a90:	622b      	str	r3, [r5, #32]
      tickstart = HAL_GetTick();
 8003a92:	f7ff f897 	bl	8002bc4 <HAL_GetTick>
 8003a96:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8003a98:	6a2b      	ldr	r3, [r5, #32]
 8003a9a:	423b      	tst	r3, r7
 8003a9c:	d0d5      	beq.n	8003a4a <HAL_RCC_OscConfig+0x24e>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8003a9e:	f7ff f891 	bl	8002bc4 <HAL_GetTick>
 8003aa2:	4b23      	ldr	r3, [pc, #140]	@ (8003b30 <HAL_RCC_OscConfig+0x334>)
 8003aa4:	1b80      	subs	r0, r0, r6
 8003aa6:	4298      	cmp	r0, r3
 8003aa8:	d9f6      	bls.n	8003a98 <HAL_RCC_OscConfig+0x29c>
 8003aaa:	e714      	b.n	80038d6 <HAL_RCC_OscConfig+0xda>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8003aac:	2b05      	cmp	r3, #5
 8003aae:	d105      	bne.n	8003abc <HAL_RCC_OscConfig+0x2c0>
 8003ab0:	6a29      	ldr	r1, [r5, #32]
 8003ab2:	3b01      	subs	r3, #1
 8003ab4:	430b      	orrs	r3, r1
 8003ab6:	622b      	str	r3, [r5, #32]
 8003ab8:	6a2b      	ldr	r3, [r5, #32]
 8003aba:	e7bd      	b.n	8003a38 <HAL_RCC_OscConfig+0x23c>
 8003abc:	6a2b      	ldr	r3, [r5, #32]
 8003abe:	4393      	bics	r3, r2
 8003ac0:	2204      	movs	r2, #4
 8003ac2:	622b      	str	r3, [r5, #32]
 8003ac4:	6a2b      	ldr	r3, [r5, #32]
 8003ac6:	4393      	bics	r3, r2
 8003ac8:	e7b7      	b.n	8003a3a <HAL_RCC_OscConfig+0x23e>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8003aca:	f7ff f87b 	bl	8002bc4 <HAL_GetTick>
 8003ace:	4b18      	ldr	r3, [pc, #96]	@ (8003b30 <HAL_RCC_OscConfig+0x334>)
 8003ad0:	1b80      	subs	r0, r0, r6
 8003ad2:	4298      	cmp	r0, r3
 8003ad4:	d9b6      	bls.n	8003a44 <HAL_RCC_OscConfig+0x248>
 8003ad6:	e6fe      	b.n	80038d6 <HAL_RCC_OscConfig+0xda>
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 8003ad8:	f7ff f874 	bl	8002bc4 <HAL_GetTick>
 8003adc:	1b80      	subs	r0, r0, r6
 8003ade:	2802      	cmp	r0, #2
 8003ae0:	d800      	bhi.n	8003ae4 <HAL_RCC_OscConfig+0x2e8>
 8003ae2:	e6b5      	b.n	8003850 <HAL_RCC_OscConfig+0x54>
 8003ae4:	e6f7      	b.n	80038d6 <HAL_RCC_OscConfig+0xda>
    else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 8003ae6:	3205      	adds	r2, #5
 8003ae8:	d103      	bne.n	8003af2 <HAL_RCC_OscConfig+0x2f6>
      __HAL_RCC_HSI14ADC_ENABLE();
 8003aea:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
 8003aec:	439a      	bics	r2, r3
 8003aee:	636a      	str	r2, [r5, #52]	@ 0x34
 8003af0:	e6b2      	b.n	8003858 <HAL_RCC_OscConfig+0x5c>
      __HAL_RCC_HSI14ADC_DISABLE();
 8003af2:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 8003af4:	2702      	movs	r7, #2
      __HAL_RCC_HSI14ADC_DISABLE();
 8003af6:	4313      	orrs	r3, r2
      __HAL_RCC_HSI14_DISABLE();
 8003af8:	2201      	movs	r2, #1
      __HAL_RCC_HSI14ADC_DISABLE();
 8003afa:	636b      	str	r3, [r5, #52]	@ 0x34
      __HAL_RCC_HSI14_DISABLE();
 8003afc:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8003afe:	4393      	bics	r3, r2
 8003b00:	636b      	str	r3, [r5, #52]	@ 0x34
      tickstart = HAL_GetTick();
 8003b02:	f7ff f85f 	bl	8002bc4 <HAL_GetTick>
 8003b06:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 8003b08:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8003b0a:	423b      	tst	r3, r7
 8003b0c:	d100      	bne.n	8003b10 <HAL_RCC_OscConfig+0x314>
 8003b0e:	e6aa      	b.n	8003866 <HAL_RCC_OscConfig+0x6a>
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 8003b10:	f7ff f858 	bl	8002bc4 <HAL_GetTick>
 8003b14:	1b80      	subs	r0, r0, r6
 8003b16:	2802      	cmp	r0, #2
 8003b18:	d9f6      	bls.n	8003b08 <HAL_RCC_OscConfig+0x30c>
 8003b1a:	e6dc      	b.n	80038d6 <HAL_RCC_OscConfig+0xda>
 8003b1c:	40021000 	.word	0x40021000
 8003b20:	fffeffff 	.word	0xfffeffff
 8003b24:	fffbffff 	.word	0xfffbffff
 8003b28:	40007000 	.word	0x40007000
 8003b2c:	efffffff 	.word	0xefffffff
 8003b30:	00001388 	.word	0x00001388
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI48) ||
 8003b34:	220c      	movs	r2, #12
 8003b36:	4d55      	ldr	r5, [pc, #340]	@ (8003c8c <HAL_RCC_OscConfig+0x490>)
 8003b38:	686b      	ldr	r3, [r5, #4]
 8003b3a:	4013      	ands	r3, r2
 8003b3c:	4293      	cmp	r3, r2
 8003b3e:	d009      	beq.n	8003b54 <HAL_RCC_OscConfig+0x358>
       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI48)))
 8003b40:	686b      	ldr	r3, [r5, #4]
 8003b42:	4013      	ands	r3, r2
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI48) ||
 8003b44:	2b08      	cmp	r3, #8
 8003b46:	d10e      	bne.n	8003b66 <HAL_RCC_OscConfig+0x36a>
       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI48)))
 8003b48:	22c0      	movs	r2, #192	@ 0xc0
 8003b4a:	686b      	ldr	r3, [r5, #4]
 8003b4c:	0252      	lsls	r2, r2, #9
 8003b4e:	4013      	ands	r3, r2
 8003b50:	4293      	cmp	r3, r2
 8003b52:	d108      	bne.n	8003b66 <HAL_RCC_OscConfig+0x36a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET) && (RCC_OscInitStruct->HSI48State != RCC_HSI48_ON))
 8003b54:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8003b56:	039b      	lsls	r3, r3, #14
 8003b58:	d400      	bmi.n	8003b5c <HAL_RCC_OscConfig+0x360>
 8003b5a:	e688      	b.n	800386e <HAL_RCC_OscConfig+0x72>
 8003b5c:	6a23      	ldr	r3, [r4, #32]
 8003b5e:	2b01      	cmp	r3, #1
 8003b60:	d000      	beq.n	8003b64 <HAL_RCC_OscConfig+0x368>
 8003b62:	e650      	b.n	8003806 <HAL_RCC_OscConfig+0xa>
 8003b64:	e683      	b.n	800386e <HAL_RCC_OscConfig+0x72>
      if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 8003b66:	6a23      	ldr	r3, [r4, #32]
 8003b68:	2b00      	cmp	r3, #0
 8003b6a:	d013      	beq.n	8003b94 <HAL_RCC_OscConfig+0x398>
        __HAL_RCC_HSI48_ENABLE();
 8003b6c:	2380      	movs	r3, #128	@ 0x80
 8003b6e:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
 8003b70:	025b      	lsls	r3, r3, #9
 8003b72:	4313      	orrs	r3, r2
 8003b74:	636b      	str	r3, [r5, #52]	@ 0x34
        tickstart = HAL_GetTick();
 8003b76:	f7ff f825 	bl	8002bc4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 8003b7a:	2780      	movs	r7, #128	@ 0x80
        tickstart = HAL_GetTick();
 8003b7c:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 8003b7e:	02bf      	lsls	r7, r7, #10
 8003b80:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8003b82:	423b      	tst	r3, r7
 8003b84:	d000      	beq.n	8003b88 <HAL_RCC_OscConfig+0x38c>
 8003b86:	e672      	b.n	800386e <HAL_RCC_OscConfig+0x72>
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8003b88:	f7ff f81c 	bl	8002bc4 <HAL_GetTick>
 8003b8c:	1b80      	subs	r0, r0, r6
 8003b8e:	2802      	cmp	r0, #2
 8003b90:	d9f6      	bls.n	8003b80 <HAL_RCC_OscConfig+0x384>
 8003b92:	e6a0      	b.n	80038d6 <HAL_RCC_OscConfig+0xda>
        __HAL_RCC_HSI48_DISABLE();
 8003b94:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8003b96:	4a3e      	ldr	r2, [pc, #248]	@ (8003c90 <HAL_RCC_OscConfig+0x494>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 8003b98:	2780      	movs	r7, #128	@ 0x80
        __HAL_RCC_HSI48_DISABLE();
 8003b9a:	4013      	ands	r3, r2
 8003b9c:	636b      	str	r3, [r5, #52]	@ 0x34
        tickstart = HAL_GetTick();
 8003b9e:	f7ff f811 	bl	8002bc4 <HAL_GetTick>
 8003ba2:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 8003ba4:	02bf      	lsls	r7, r7, #10
 8003ba6:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8003ba8:	423b      	tst	r3, r7
 8003baa:	d100      	bne.n	8003bae <HAL_RCC_OscConfig+0x3b2>
 8003bac:	e65f      	b.n	800386e <HAL_RCC_OscConfig+0x72>
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8003bae:	f7ff f809 	bl	8002bc4 <HAL_GetTick>
 8003bb2:	1b80      	subs	r0, r0, r6
 8003bb4:	2802      	cmp	r0, #2
 8003bb6:	d9f6      	bls.n	8003ba6 <HAL_RCC_OscConfig+0x3aa>
 8003bb8:	e68d      	b.n	80038d6 <HAL_RCC_OscConfig+0xda>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8003bba:	210c      	movs	r1, #12
 8003bbc:	4d33      	ldr	r5, [pc, #204]	@ (8003c8c <HAL_RCC_OscConfig+0x490>)
 8003bbe:	686a      	ldr	r2, [r5, #4]
 8003bc0:	400a      	ands	r2, r1
 8003bc2:	2a08      	cmp	r2, #8
 8003bc4:	d047      	beq.n	8003c56 <HAL_RCC_OscConfig+0x45a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8003bc6:	4a33      	ldr	r2, [pc, #204]	@ (8003c94 <HAL_RCC_OscConfig+0x498>)
 8003bc8:	2b02      	cmp	r3, #2
 8003bca:	d132      	bne.n	8003c32 <HAL_RCC_OscConfig+0x436>
        __HAL_RCC_PLL_DISABLE();
 8003bcc:	682b      	ldr	r3, [r5, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003bce:	2780      	movs	r7, #128	@ 0x80
        __HAL_RCC_PLL_DISABLE();
 8003bd0:	4013      	ands	r3, r2
 8003bd2:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8003bd4:	f7fe fff6 	bl	8002bc4 <HAL_GetTick>
 8003bd8:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003bda:	04bf      	lsls	r7, r7, #18
 8003bdc:	682b      	ldr	r3, [r5, #0]
 8003bde:	423b      	tst	r3, r7
 8003be0:	d121      	bne.n	8003c26 <HAL_RCC_OscConfig+0x42a>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8003be2:	220f      	movs	r2, #15
 8003be4:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8003be6:	2680      	movs	r6, #128	@ 0x80
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8003be8:	4393      	bics	r3, r2
 8003bea:	6b22      	ldr	r2, [r4, #48]	@ 0x30
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8003bec:	04b6      	lsls	r6, r6, #18
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8003bee:	4313      	orrs	r3, r2
 8003bf0:	62eb      	str	r3, [r5, #44]	@ 0x2c
 8003bf2:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 8003bf4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8003bf6:	686a      	ldr	r2, [r5, #4]
 8003bf8:	430b      	orrs	r3, r1
 8003bfa:	4927      	ldr	r1, [pc, #156]	@ (8003c98 <HAL_RCC_OscConfig+0x49c>)
 8003bfc:	400a      	ands	r2, r1
 8003bfe:	4313      	orrs	r3, r2
 8003c00:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8003c02:	2380      	movs	r3, #128	@ 0x80
 8003c04:	682a      	ldr	r2, [r5, #0]
 8003c06:	045b      	lsls	r3, r3, #17
 8003c08:	4313      	orrs	r3, r2
 8003c0a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8003c0c:	f7fe ffda 	bl	8002bc4 <HAL_GetTick>
 8003c10:	0004      	movs	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8003c12:	682b      	ldr	r3, [r5, #0]
 8003c14:	4233      	tst	r3, r6
 8003c16:	d000      	beq.n	8003c1a <HAL_RCC_OscConfig+0x41e>
 8003c18:	e62d      	b.n	8003876 <HAL_RCC_OscConfig+0x7a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003c1a:	f7fe ffd3 	bl	8002bc4 <HAL_GetTick>
 8003c1e:	1b00      	subs	r0, r0, r4
 8003c20:	2802      	cmp	r0, #2
 8003c22:	d9f6      	bls.n	8003c12 <HAL_RCC_OscConfig+0x416>
 8003c24:	e657      	b.n	80038d6 <HAL_RCC_OscConfig+0xda>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003c26:	f7fe ffcd 	bl	8002bc4 <HAL_GetTick>
 8003c2a:	1b80      	subs	r0, r0, r6
 8003c2c:	2802      	cmp	r0, #2
 8003c2e:	d9d5      	bls.n	8003bdc <HAL_RCC_OscConfig+0x3e0>
 8003c30:	e651      	b.n	80038d6 <HAL_RCC_OscConfig+0xda>
        __HAL_RCC_PLL_DISABLE();
 8003c32:	682b      	ldr	r3, [r5, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003c34:	2680      	movs	r6, #128	@ 0x80
        __HAL_RCC_PLL_DISABLE();
 8003c36:	4013      	ands	r3, r2
 8003c38:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8003c3a:	f7fe ffc3 	bl	8002bc4 <HAL_GetTick>
 8003c3e:	0004      	movs	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003c40:	04b6      	lsls	r6, r6, #18
 8003c42:	682b      	ldr	r3, [r5, #0]
 8003c44:	4233      	tst	r3, r6
 8003c46:	d100      	bne.n	8003c4a <HAL_RCC_OscConfig+0x44e>
 8003c48:	e615      	b.n	8003876 <HAL_RCC_OscConfig+0x7a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003c4a:	f7fe ffbb 	bl	8002bc4 <HAL_GetTick>
 8003c4e:	1b00      	subs	r0, r0, r4
 8003c50:	2802      	cmp	r0, #2
 8003c52:	d9f6      	bls.n	8003c42 <HAL_RCC_OscConfig+0x446>
 8003c54:	e63f      	b.n	80038d6 <HAL_RCC_OscConfig+0xda>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8003c56:	2b01      	cmp	r3, #1
 8003c58:	d100      	bne.n	8003c5c <HAL_RCC_OscConfig+0x460>
 8003c5a:	e5d4      	b.n	8003806 <HAL_RCC_OscConfig+0xa>
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8003c5c:	22c0      	movs	r2, #192	@ 0xc0
        pll_config  = RCC->CFGR;
 8003c5e:	6868      	ldr	r0, [r5, #4]
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8003c60:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 8003c62:	0252      	lsls	r2, r2, #9
        pll_config2 = RCC->CFGR2;
 8003c64:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8003c66:	4002      	ands	r2, r0
 8003c68:	428a      	cmp	r2, r1
 8003c6a:	d000      	beq.n	8003c6e <HAL_RCC_OscConfig+0x472>
 8003c6c:	e5cb      	b.n	8003806 <HAL_RCC_OscConfig+0xa>
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8003c6e:	220f      	movs	r2, #15
 8003c70:	4013      	ands	r3, r2
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8003c72:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8003c74:	4293      	cmp	r3, r2
 8003c76:	d000      	beq.n	8003c7a <HAL_RCC_OscConfig+0x47e>
 8003c78:	e5c5      	b.n	8003806 <HAL_RCC_OscConfig+0xa>
           (READ_BIT(pll_config,  RCC_CFGR_PLLMUL)  != RCC_OscInitStruct->PLL.PLLMUL))
 8003c7a:	23f0      	movs	r3, #240	@ 0xf0
 8003c7c:	039b      	lsls	r3, r3, #14
 8003c7e:	4018      	ands	r0, r3
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8003c80:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8003c82:	1ac0      	subs	r0, r0, r3
 8003c84:	1e43      	subs	r3, r0, #1
 8003c86:	4198      	sbcs	r0, r3
 8003c88:	b2c0      	uxtb	r0, r0
 8003c8a:	e5bd      	b.n	8003808 <HAL_RCC_OscConfig+0xc>
 8003c8c:	40021000 	.word	0x40021000
 8003c90:	fffeffff 	.word	0xfffeffff
 8003c94:	feffffff 	.word	0xfeffffff
 8003c98:	ffc27fff 	.word	0xffc27fff

08003c9c <HAL_RCC_GetSysClockFreq>:
  uint32_t sysclockfreq = 0U;
  
  tmpreg = RCC->CFGR;
  
  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8003c9c:	200c      	movs	r0, #12
{
 8003c9e:	b570      	push	{r4, r5, r6, lr}
  tmpreg = RCC->CFGR;
 8003ca0:	4d13      	ldr	r5, [pc, #76]	@ (8003cf0 <HAL_RCC_GetSysClockFreq+0x54>)
 8003ca2:	686b      	ldr	r3, [r5, #4]
  switch (tmpreg & RCC_CFGR_SWS)
 8003ca4:	4018      	ands	r0, r3
 8003ca6:	2808      	cmp	r0, #8
 8003ca8:	d008      	beq.n	8003cbc <HAL_RCC_GetSysClockFreq+0x20>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 8003caa:	380c      	subs	r0, #12
 8003cac:	4243      	negs	r3, r0
 8003cae:	4158      	adcs	r0, r3
 8003cb0:	4b10      	ldr	r3, [pc, #64]	@ (8003cf4 <HAL_RCC_GetSysClockFreq+0x58>)
 8003cb2:	4240      	negs	r0, r0
 8003cb4:	4018      	ands	r0, r3
 8003cb6:	4b10      	ldr	r3, [pc, #64]	@ (8003cf8 <HAL_RCC_GetSysClockFreq+0x5c>)
 8003cb8:	18c0      	adds	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8003cba:	bd70      	pop	{r4, r5, r6, pc}
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER];
 8003cbc:	200f      	movs	r0, #15
 8003cbe:	490f      	ldr	r1, [pc, #60]	@ (8003cfc <HAL_RCC_GetSysClockFreq+0x60>)
 8003cc0:	0c9a      	lsrs	r2, r3, #18
 8003cc2:	4002      	ands	r2, r0
 8003cc4:	5c8c      	ldrb	r4, [r1, r2]
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 8003cc6:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
 8003cc8:	490d      	ldr	r1, [pc, #52]	@ (8003d00 <HAL_RCC_GetSysClockFreq+0x64>)
 8003cca:	4002      	ands	r2, r0
 8003ccc:	5c89      	ldrb	r1, [r1, r2]
      if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 8003cce:	22c0      	movs	r2, #192	@ 0xc0
 8003cd0:	2080      	movs	r0, #128	@ 0x80
 8003cd2:	0252      	lsls	r2, r2, #9
 8003cd4:	4013      	ands	r3, r2
 8003cd6:	0240      	lsls	r0, r0, #9
 8003cd8:	4283      	cmp	r3, r0
 8003cda:	d101      	bne.n	8003ce0 <HAL_RCC_GetSysClockFreq+0x44>
        pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 8003cdc:	4806      	ldr	r0, [pc, #24]	@ (8003cf8 <HAL_RCC_GetSysClockFreq+0x5c>)
 8003cde:	e002      	b.n	8003ce6 <HAL_RCC_GetSysClockFreq+0x4a>
      else if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSI48)
 8003ce0:	4293      	cmp	r3, r2
 8003ce2:	d1fb      	bne.n	8003cdc <HAL_RCC_GetSysClockFreq+0x40>
        pllclk = (uint32_t)((uint64_t) HSI48_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 8003ce4:	4807      	ldr	r0, [pc, #28]	@ (8003d04 <HAL_RCC_GetSysClockFreq+0x68>)
        pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 8003ce6:	f7fc fa2b 	bl	8000140 <__udivsi3>
 8003cea:	4360      	muls	r0, r4
 8003cec:	e7e5      	b.n	8003cba <HAL_RCC_GetSysClockFreq+0x1e>
 8003cee:	46c0      	nop			@ (mov r8, r8)
 8003cf0:	40021000 	.word	0x40021000
 8003cf4:	02625a00 	.word	0x02625a00
 8003cf8:	007a1200 	.word	0x007a1200
 8003cfc:	08007379 	.word	0x08007379
 8003d00:	08007369 	.word	0x08007369
 8003d04:	02dc6c00 	.word	0x02dc6c00

08003d08 <HAL_RCC_ClockConfig>:
{
 8003d08:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003d0a:	0004      	movs	r4, r0
 8003d0c:	000f      	movs	r7, r1
  if(RCC_ClkInitStruct == NULL)
 8003d0e:	2800      	cmp	r0, #0
 8003d10:	d101      	bne.n	8003d16 <HAL_RCC_ClockConfig+0xe>
    return HAL_ERROR;
 8003d12:	2001      	movs	r0, #1
}
 8003d14:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8003d16:	2201      	movs	r2, #1
 8003d18:	4d3a      	ldr	r5, [pc, #232]	@ (8003e04 <HAL_RCC_ClockConfig+0xfc>)
 8003d1a:	682b      	ldr	r3, [r5, #0]
 8003d1c:	4013      	ands	r3, r2
 8003d1e:	428b      	cmp	r3, r1
 8003d20:	d31c      	bcc.n	8003d5c <HAL_RCC_ClockConfig+0x54>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8003d22:	6822      	ldr	r2, [r4, #0]
 8003d24:	0793      	lsls	r3, r2, #30
 8003d26:	d422      	bmi.n	8003d6e <HAL_RCC_ClockConfig+0x66>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8003d28:	07d2      	lsls	r2, r2, #31
 8003d2a:	d42f      	bmi.n	8003d8c <HAL_RCC_ClockConfig+0x84>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8003d2c:	2301      	movs	r3, #1
 8003d2e:	682a      	ldr	r2, [r5, #0]
 8003d30:	401a      	ands	r2, r3
 8003d32:	42ba      	cmp	r2, r7
 8003d34:	d857      	bhi.n	8003de6 <HAL_RCC_ClockConfig+0xde>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8003d36:	6823      	ldr	r3, [r4, #0]
 8003d38:	4d33      	ldr	r5, [pc, #204]	@ (8003e08 <HAL_RCC_ClockConfig+0x100>)
 8003d3a:	075b      	lsls	r3, r3, #29
 8003d3c:	d45a      	bmi.n	8003df4 <HAL_RCC_ClockConfig+0xec>
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_BITNUMBER];
 8003d3e:	f7ff ffad 	bl	8003c9c <HAL_RCC_GetSysClockFreq>
 8003d42:	686b      	ldr	r3, [r5, #4]
 8003d44:	4a31      	ldr	r2, [pc, #196]	@ (8003e0c <HAL_RCC_ClockConfig+0x104>)
 8003d46:	061b      	lsls	r3, r3, #24
 8003d48:	0f1b      	lsrs	r3, r3, #28
 8003d4a:	5cd3      	ldrb	r3, [r2, r3]
 8003d4c:	4930      	ldr	r1, [pc, #192]	@ (8003e10 <HAL_RCC_ClockConfig+0x108>)
 8003d4e:	40d8      	lsrs	r0, r3
 8003d50:	6008      	str	r0, [r1, #0]
  HAL_InitTick (TICK_INT_PRIORITY);
 8003d52:	2000      	movs	r0, #0
 8003d54:	f7fe fef6 	bl	8002b44 <HAL_InitTick>
  return HAL_OK;
 8003d58:	2000      	movs	r0, #0
 8003d5a:	e7db      	b.n	8003d14 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003d5c:	682b      	ldr	r3, [r5, #0]
 8003d5e:	4393      	bics	r3, r2
 8003d60:	430b      	orrs	r3, r1
 8003d62:	602b      	str	r3, [r5, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8003d64:	682b      	ldr	r3, [r5, #0]
 8003d66:	4013      	ands	r3, r2
 8003d68:	428b      	cmp	r3, r1
 8003d6a:	d1d2      	bne.n	8003d12 <HAL_RCC_ClockConfig+0xa>
 8003d6c:	e7d9      	b.n	8003d22 <HAL_RCC_ClockConfig+0x1a>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8003d6e:	4926      	ldr	r1, [pc, #152]	@ (8003e08 <HAL_RCC_ClockConfig+0x100>)
 8003d70:	0753      	lsls	r3, r2, #29
 8003d72:	d504      	bpl.n	8003d7e <HAL_RCC_ClockConfig+0x76>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 8003d74:	23e0      	movs	r3, #224	@ 0xe0
 8003d76:	6848      	ldr	r0, [r1, #4]
 8003d78:	00db      	lsls	r3, r3, #3
 8003d7a:	4303      	orrs	r3, r0
 8003d7c:	604b      	str	r3, [r1, #4]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8003d7e:	20f0      	movs	r0, #240	@ 0xf0
 8003d80:	684b      	ldr	r3, [r1, #4]
 8003d82:	4383      	bics	r3, r0
 8003d84:	68a0      	ldr	r0, [r4, #8]
 8003d86:	4303      	orrs	r3, r0
 8003d88:	604b      	str	r3, [r1, #4]
 8003d8a:	e7cd      	b.n	8003d28 <HAL_RCC_ClockConfig+0x20>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8003d8c:	6862      	ldr	r2, [r4, #4]
 8003d8e:	4e1e      	ldr	r6, [pc, #120]	@ (8003e08 <HAL_RCC_ClockConfig+0x100>)
 8003d90:	2a01      	cmp	r2, #1
 8003d92:	d103      	bne.n	8003d9c <HAL_RCC_ClockConfig+0x94>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8003d94:	6833      	ldr	r3, [r6, #0]
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 8003d96:	039b      	lsls	r3, r3, #14
 8003d98:	d405      	bmi.n	8003da6 <HAL_RCC_ClockConfig+0x9e>
 8003d9a:	e7ba      	b.n	8003d12 <HAL_RCC_ClockConfig+0xa>
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8003d9c:	2a02      	cmp	r2, #2
 8003d9e:	d11a      	bne.n	8003dd6 <HAL_RCC_ClockConfig+0xce>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8003da0:	6833      	ldr	r3, [r6, #0]
 8003da2:	019b      	lsls	r3, r3, #6
 8003da4:	d5b5      	bpl.n	8003d12 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8003da6:	2103      	movs	r1, #3
 8003da8:	6873      	ldr	r3, [r6, #4]
 8003daa:	438b      	bics	r3, r1
 8003dac:	4313      	orrs	r3, r2
 8003dae:	6073      	str	r3, [r6, #4]
    tickstart = HAL_GetTick();
 8003db0:	f7fe ff08 	bl	8002bc4 <HAL_GetTick>
 8003db4:	9001      	str	r0, [sp, #4]
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8003db6:	230c      	movs	r3, #12
 8003db8:	6872      	ldr	r2, [r6, #4]
 8003dba:	401a      	ands	r2, r3
 8003dbc:	6863      	ldr	r3, [r4, #4]
 8003dbe:	009b      	lsls	r3, r3, #2
 8003dc0:	429a      	cmp	r2, r3
 8003dc2:	d0b3      	beq.n	8003d2c <HAL_RCC_ClockConfig+0x24>
      if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003dc4:	f7fe fefe 	bl	8002bc4 <HAL_GetTick>
 8003dc8:	9b01      	ldr	r3, [sp, #4]
 8003dca:	1ac0      	subs	r0, r0, r3
 8003dcc:	4b11      	ldr	r3, [pc, #68]	@ (8003e14 <HAL_RCC_ClockConfig+0x10c>)
 8003dce:	4298      	cmp	r0, r3
 8003dd0:	d9f1      	bls.n	8003db6 <HAL_RCC_ClockConfig+0xae>
        return HAL_TIMEOUT;
 8003dd2:	2003      	movs	r0, #3
 8003dd4:	e79e      	b.n	8003d14 <HAL_RCC_ClockConfig+0xc>
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 8003dd6:	2a03      	cmp	r2, #3
 8003dd8:	d101      	bne.n	8003dde <HAL_RCC_ClockConfig+0xd6>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 8003dda:	6b73      	ldr	r3, [r6, #52]	@ 0x34
 8003ddc:	e7db      	b.n	8003d96 <HAL_RCC_ClockConfig+0x8e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8003dde:	6833      	ldr	r3, [r6, #0]
 8003de0:	079b      	lsls	r3, r3, #30
 8003de2:	d4e0      	bmi.n	8003da6 <HAL_RCC_ClockConfig+0x9e>
 8003de4:	e795      	b.n	8003d12 <HAL_RCC_ClockConfig+0xa>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003de6:	682a      	ldr	r2, [r5, #0]
 8003de8:	439a      	bics	r2, r3
 8003dea:	602a      	str	r2, [r5, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8003dec:	682a      	ldr	r2, [r5, #0]
 8003dee:	421a      	tst	r2, r3
 8003df0:	d0a1      	beq.n	8003d36 <HAL_RCC_ClockConfig+0x2e>
 8003df2:	e78e      	b.n	8003d12 <HAL_RCC_ClockConfig+0xa>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 8003df4:	686b      	ldr	r3, [r5, #4]
 8003df6:	4a08      	ldr	r2, [pc, #32]	@ (8003e18 <HAL_RCC_ClockConfig+0x110>)
 8003df8:	4013      	ands	r3, r2
 8003dfa:	68e2      	ldr	r2, [r4, #12]
 8003dfc:	4313      	orrs	r3, r2
 8003dfe:	606b      	str	r3, [r5, #4]
 8003e00:	e79d      	b.n	8003d3e <HAL_RCC_ClockConfig+0x36>
 8003e02:	46c0      	nop			@ (mov r8, r8)
 8003e04:	40022000 	.word	0x40022000
 8003e08:	40021000 	.word	0x40021000
 8003e0c:	08007359 	.word	0x08007359
 8003e10:	20000000 	.word	0x20000000
 8003e14:	00001388 	.word	0x00001388
 8003e18:	fffff8ff 	.word	0xfffff8ff

08003e1c <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE) >> RCC_CFGR_PPRE_BITNUMBER]);
 8003e1c:	4b04      	ldr	r3, [pc, #16]	@ (8003e30 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 8003e1e:	4a05      	ldr	r2, [pc, #20]	@ (8003e34 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE) >> RCC_CFGR_PPRE_BITNUMBER]);
 8003e20:	685b      	ldr	r3, [r3, #4]
 8003e22:	4905      	ldr	r1, [pc, #20]	@ (8003e38 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8003e24:	055b      	lsls	r3, r3, #21
 8003e26:	0f5b      	lsrs	r3, r3, #29
 8003e28:	5ccb      	ldrb	r3, [r1, r3]
 8003e2a:	6810      	ldr	r0, [r2, #0]
 8003e2c:	40d8      	lsrs	r0, r3
}    
 8003e2e:	4770      	bx	lr
 8003e30:	40021000 	.word	0x40021000
 8003e34:	20000000 	.word	0x20000000
 8003e38:	08007351 	.word	0x08007351

08003e3c <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8003e3c:	b5f0      	push	{r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));
  
  /*---------------------------- RTC configuration -------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8003e3e:	6803      	ldr	r3, [r0, #0]
{
 8003e40:	0005      	movs	r5, r0
 8003e42:	b085      	sub	sp, #20
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8003e44:	03db      	lsls	r3, r3, #15
 8003e46:	d52b      	bpl.n	8003ea0 <HAL_RCCEx_PeriphCLKConfig+0x64>
    FlagStatus       pwrclkchanged = RESET;

    /* As soon as function is called to change RTC clock source, activation of the 
       power domain is done. */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8003e48:	2280      	movs	r2, #128	@ 0x80
    FlagStatus       pwrclkchanged = RESET;
 8003e4a:	2100      	movs	r1, #0
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8003e4c:	4c41      	ldr	r4, [pc, #260]	@ (8003f54 <HAL_RCCEx_PeriphCLKConfig+0x118>)
 8003e4e:	0552      	lsls	r2, r2, #21
 8003e50:	69e3      	ldr	r3, [r4, #28]
    FlagStatus       pwrclkchanged = RESET;
 8003e52:	9100      	str	r1, [sp, #0]
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8003e54:	4213      	tst	r3, r2
 8003e56:	d108      	bne.n	8003e6a <HAL_RCCEx_PeriphCLKConfig+0x2e>
    {
    __HAL_RCC_PWR_CLK_ENABLE();
 8003e58:	69e3      	ldr	r3, [r4, #28]
 8003e5a:	4313      	orrs	r3, r2
 8003e5c:	61e3      	str	r3, [r4, #28]
 8003e5e:	69e3      	ldr	r3, [r4, #28]
 8003e60:	4013      	ands	r3, r2
 8003e62:	9303      	str	r3, [sp, #12]
 8003e64:	9b03      	ldr	r3, [sp, #12]
      pwrclkchanged = SET;
 8003e66:	2301      	movs	r3, #1
 8003e68:	9300      	str	r3, [sp, #0]
    }
    
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8003e6a:	2780      	movs	r7, #128	@ 0x80
 8003e6c:	4e3a      	ldr	r6, [pc, #232]	@ (8003f58 <HAL_RCCEx_PeriphCLKConfig+0x11c>)
 8003e6e:	007f      	lsls	r7, r7, #1
 8003e70:	6833      	ldr	r3, [r6, #0]
 8003e72:	423b      	tst	r3, r7
 8003e74:	d034      	beq.n	8003ee0 <HAL_RCCEx_PeriphCLKConfig+0xa4>
        }
      }
    }
    
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */ 
    temp_reg = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8003e76:	6a21      	ldr	r1, [r4, #32]
 8003e78:	22c0      	movs	r2, #192	@ 0xc0
 8003e7a:	0008      	movs	r0, r1
 8003e7c:	0092      	lsls	r2, r2, #2
    if((temp_reg != 0x00000000U) && (temp_reg != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8003e7e:	686b      	ldr	r3, [r5, #4]
 8003e80:	4e36      	ldr	r6, [pc, #216]	@ (8003f5c <HAL_RCCEx_PeriphCLKConfig+0x120>)
    temp_reg = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8003e82:	4010      	ands	r0, r2
    if((temp_reg != 0x00000000U) && (temp_reg != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8003e84:	4211      	tst	r1, r2
 8003e86:	d13d      	bne.n	8003f04 <HAL_RCCEx_PeriphCLKConfig+0xc8>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8003e88:	6a23      	ldr	r3, [r4, #32]
 8003e8a:	686a      	ldr	r2, [r5, #4]
 8003e8c:	4033      	ands	r3, r6
 8003e8e:	4313      	orrs	r3, r2
 8003e90:	6223      	str	r3, [r4, #32]

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 8003e92:	9b00      	ldr	r3, [sp, #0]
 8003e94:	2b01      	cmp	r3, #1
 8003e96:	d103      	bne.n	8003ea0 <HAL_RCCEx_PeriphCLKConfig+0x64>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8003e98:	69e3      	ldr	r3, [r4, #28]
 8003e9a:	4a31      	ldr	r2, [pc, #196]	@ (8003f60 <HAL_RCCEx_PeriphCLKConfig+0x124>)
 8003e9c:	4013      	ands	r3, r2
 8003e9e:	61e3      	str	r3, [r4, #28]
    }
  }

  /*------------------------------- USART1 Configuration ------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8003ea0:	682b      	ldr	r3, [r5, #0]
 8003ea2:	07da      	lsls	r2, r3, #31
 8003ea4:	d506      	bpl.n	8003eb4 <HAL_RCCEx_PeriphCLKConfig+0x78>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));
    
    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8003ea6:	2003      	movs	r0, #3
 8003ea8:	492a      	ldr	r1, [pc, #168]	@ (8003f54 <HAL_RCCEx_PeriphCLKConfig+0x118>)
 8003eaa:	6b0a      	ldr	r2, [r1, #48]	@ 0x30
 8003eac:	4382      	bics	r2, r0
 8003eae:	68a8      	ldr	r0, [r5, #8]
 8003eb0:	4302      	orrs	r2, r0
 8003eb2:	630a      	str	r2, [r1, #48]	@ 0x30
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
  }
#endif /* STM32F091xC || STM32F098xx */  

  /*------------------------------ I2C1 Configuration ------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8003eb4:	069a      	lsls	r2, r3, #26
 8003eb6:	d506      	bpl.n	8003ec6 <HAL_RCCEx_PeriphCLKConfig+0x8a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));
    
    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8003eb8:	2010      	movs	r0, #16
 8003eba:	4926      	ldr	r1, [pc, #152]	@ (8003f54 <HAL_RCCEx_PeriphCLKConfig+0x118>)
 8003ebc:	6b0a      	ldr	r2, [r1, #48]	@ 0x30
 8003ebe:	4382      	bics	r2, r0
 8003ec0:	68e8      	ldr	r0, [r5, #12]
 8003ec2:	4302      	orrs	r2, r0
 8003ec4:	630a      	str	r2, [r1, #48]	@ 0x30
  }

#if defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F072xB) || defined(STM32F078xx) || defined(STM32F070xB) || defined(STM32F070x6)
  /*------------------------------ USB Configuration ------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
 8003ec6:	039a      	lsls	r2, r3, #14
 8003ec8:	d506      	bpl.n	8003ed8 <HAL_RCCEx_PeriphCLKConfig+0x9c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USBCLKSOURCE(PeriphClkInit->UsbClockSelection));
    
    /* Configure the USB clock source */
    __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 8003eca:	2080      	movs	r0, #128	@ 0x80
 8003ecc:	4921      	ldr	r1, [pc, #132]	@ (8003f54 <HAL_RCCEx_PeriphCLKConfig+0x118>)
 8003ece:	6b0a      	ldr	r2, [r1, #48]	@ 0x30
 8003ed0:	4382      	bics	r2, r0
 8003ed2:	6968      	ldr	r0, [r5, #20]
 8003ed4:	4302      	orrs	r2, r0
 8003ed6:	630a      	str	r2, [r1, #48]	@ 0x30
#if defined(STM32F042x6) || defined(STM32F048xx)\
 || defined(STM32F051x8) || defined(STM32F058xx)\
 || defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx)\
 || defined(STM32F091xC) || defined(STM32F098xx)
  /*------------------------------ CEC clock Configuration -------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8003ed8:	055b      	lsls	r3, r3, #21
 8003eda:	d433      	bmi.n	8003f44 <HAL_RCCEx_PeriphCLKConfig+0x108>
#endif /* STM32F042x6 || STM32F048xx ||                */
       /* STM32F051x8 || STM32F058xx ||                */
       /* STM32F071xB || STM32F072xB || STM32F078xx || */
       /* STM32F091xC || STM32F098xx */
  
  return HAL_OK;
 8003edc:	2000      	movs	r0, #0
 8003ede:	e00f      	b.n	8003f00 <HAL_RCCEx_PeriphCLKConfig+0xc4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8003ee0:	6833      	ldr	r3, [r6, #0]
 8003ee2:	433b      	orrs	r3, r7
 8003ee4:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 8003ee6:	f7fe fe6d 	bl	8002bc4 <HAL_GetTick>
 8003eea:	9001      	str	r0, [sp, #4]
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8003eec:	6833      	ldr	r3, [r6, #0]
 8003eee:	423b      	tst	r3, r7
 8003ef0:	d1c1      	bne.n	8003e76 <HAL_RCCEx_PeriphCLKConfig+0x3a>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8003ef2:	f7fe fe67 	bl	8002bc4 <HAL_GetTick>
 8003ef6:	9b01      	ldr	r3, [sp, #4]
 8003ef8:	1ac0      	subs	r0, r0, r3
 8003efa:	2864      	cmp	r0, #100	@ 0x64
 8003efc:	d9f6      	bls.n	8003eec <HAL_RCCEx_PeriphCLKConfig+0xb0>
          return HAL_TIMEOUT;
 8003efe:	2003      	movs	r0, #3
}
 8003f00:	b005      	add	sp, #20
 8003f02:	bdf0      	pop	{r4, r5, r6, r7, pc}
    if((temp_reg != 0x00000000U) && (temp_reg != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8003f04:	4013      	ands	r3, r2
 8003f06:	4283      	cmp	r3, r0
 8003f08:	d0be      	beq.n	8003e88 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      __HAL_RCC_BACKUPRESET_FORCE();
 8003f0a:	2280      	movs	r2, #128	@ 0x80
      temp_reg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8003f0c:	6a23      	ldr	r3, [r4, #32]
      __HAL_RCC_BACKUPRESET_FORCE();
 8003f0e:	6a20      	ldr	r0, [r4, #32]
      temp_reg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8003f10:	0019      	movs	r1, r3
      __HAL_RCC_BACKUPRESET_FORCE();
 8003f12:	0252      	lsls	r2, r2, #9
 8003f14:	4302      	orrs	r2, r0
 8003f16:	6222      	str	r2, [r4, #32]
      __HAL_RCC_BACKUPRESET_RELEASE();
 8003f18:	6a22      	ldr	r2, [r4, #32]
 8003f1a:	4812      	ldr	r0, [pc, #72]	@ (8003f64 <HAL_RCCEx_PeriphCLKConfig+0x128>)
      temp_reg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8003f1c:	4031      	ands	r1, r6
      __HAL_RCC_BACKUPRESET_RELEASE();
 8003f1e:	4002      	ands	r2, r0
 8003f20:	6222      	str	r2, [r4, #32]
      RCC->BDCR = temp_reg;
 8003f22:	6221      	str	r1, [r4, #32]
      if (HAL_IS_BIT_SET(temp_reg, RCC_BDCR_LSEON))
 8003f24:	07db      	lsls	r3, r3, #31
 8003f26:	d5af      	bpl.n	8003e88 <HAL_RCCEx_PeriphCLKConfig+0x4c>
        tickstart = HAL_GetTick();
 8003f28:	f7fe fe4c 	bl	8002bc4 <HAL_GetTick>
 8003f2c:	0007      	movs	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8003f2e:	2202      	movs	r2, #2
 8003f30:	6a23      	ldr	r3, [r4, #32]
 8003f32:	4213      	tst	r3, r2
 8003f34:	d1a8      	bne.n	8003e88 <HAL_RCCEx_PeriphCLKConfig+0x4c>
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8003f36:	f7fe fe45 	bl	8002bc4 <HAL_GetTick>
 8003f3a:	4b0b      	ldr	r3, [pc, #44]	@ (8003f68 <HAL_RCCEx_PeriphCLKConfig+0x12c>)
 8003f3c:	1bc0      	subs	r0, r0, r7
 8003f3e:	4298      	cmp	r0, r3
 8003f40:	d9f5      	bls.n	8003f2e <HAL_RCCEx_PeriphCLKConfig+0xf2>
 8003f42:	e7dc      	b.n	8003efe <HAL_RCCEx_PeriphCLKConfig+0xc2>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8003f44:	2140      	movs	r1, #64	@ 0x40
 8003f46:	4a03      	ldr	r2, [pc, #12]	@ (8003f54 <HAL_RCCEx_PeriphCLKConfig+0x118>)
 8003f48:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 8003f4a:	438b      	bics	r3, r1
 8003f4c:	6929      	ldr	r1, [r5, #16]
 8003f4e:	430b      	orrs	r3, r1
 8003f50:	6313      	str	r3, [r2, #48]	@ 0x30
 8003f52:	e7c3      	b.n	8003edc <HAL_RCCEx_PeriphCLKConfig+0xa0>
 8003f54:	40021000 	.word	0x40021000
 8003f58:	40007000 	.word	0x40007000
 8003f5c:	fffffcff 	.word	0xfffffcff
 8003f60:	efffffff 	.word	0xefffffff
 8003f64:	fffeffff 	.word	0xfffeffff
 8003f68:	00001388 	.word	0x00001388

08003f6c <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 8003f6c:	b530      	push	{r4, r5, lr}
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003f6e:	f3ef 8410 	mrs	r4, PRIMASK
  \details Assigns the given value to the Priority Mask Register.
  \param [in]    priMask  Priority Mask
 */
__STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
{
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003f72:	2201      	movs	r2, #1
 8003f74:	f382 8810 	msr	PRIMASK, r2
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8003f78:	6801      	ldr	r1, [r0, #0]
 8003f7a:	4d12      	ldr	r5, [pc, #72]	@ (8003fc4 <UART_EndRxTransfer+0x58>)
 8003f7c:	680b      	ldr	r3, [r1, #0]
 8003f7e:	402b      	ands	r3, r5
 8003f80:	600b      	str	r3, [r1, #0]
 8003f82:	f384 8810 	msr	PRIMASK, r4
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003f86:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003f8a:	f382 8810 	msr	PRIMASK, r2
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8003f8e:	6801      	ldr	r1, [r0, #0]
 8003f90:	688b      	ldr	r3, [r1, #8]
 8003f92:	4393      	bics	r3, r2
 8003f94:	608b      	str	r3, [r1, #8]
 8003f96:	f384 8810 	msr	PRIMASK, r4

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8003f9a:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 8003f9c:	4293      	cmp	r3, r2
 8003f9e:	d10a      	bne.n	8003fb6 <UART_EndRxTransfer+0x4a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003fa0:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003fa4:	f383 8810 	msr	PRIMASK, r3
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8003fa8:	2410      	movs	r4, #16
 8003faa:	6802      	ldr	r2, [r0, #0]
 8003fac:	6813      	ldr	r3, [r2, #0]
 8003fae:	43a3      	bics	r3, r4
 8003fb0:	6013      	str	r3, [r2, #0]
 8003fb2:	f381 8810 	msr	PRIMASK, r1
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8003fb6:	2220      	movs	r2, #32
 8003fb8:	1d03      	adds	r3, r0, #4
 8003fba:	67da      	str	r2, [r3, #124]	@ 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003fbc:	2300      	movs	r3, #0
 8003fbe:	6603      	str	r3, [r0, #96]	@ 0x60

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 8003fc0:	6683      	str	r3, [r0, #104]	@ 0x68
}
 8003fc2:	bd30      	pop	{r4, r5, pc}
 8003fc4:	fffffedf 	.word	0xfffffedf

08003fc8 <UART_SetConfig>:
{
 8003fc8:	b570      	push	{r4, r5, r6, lr}
 8003fca:	0004      	movs	r4, r0
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8003fcc:	6925      	ldr	r5, [r4, #16]
 8003fce:	68a1      	ldr	r1, [r4, #8]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8003fd0:	6803      	ldr	r3, [r0, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8003fd2:	4329      	orrs	r1, r5
 8003fd4:	6965      	ldr	r5, [r4, #20]
 8003fd6:	69c2      	ldr	r2, [r0, #28]
 8003fd8:	4329      	orrs	r1, r5
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8003fda:	6818      	ldr	r0, [r3, #0]
 8003fdc:	4d3d      	ldr	r5, [pc, #244]	@ (80040d4 <UART_SetConfig+0x10c>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8003fde:	4311      	orrs	r1, r2
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8003fe0:	4028      	ands	r0, r5
 8003fe2:	4301      	orrs	r1, r0
 8003fe4:	6019      	str	r1, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8003fe6:	6859      	ldr	r1, [r3, #4]
 8003fe8:	483b      	ldr	r0, [pc, #236]	@ (80040d8 <UART_SetConfig+0x110>)
  tmpreg |= huart->Init.OneBitSampling;
 8003fea:	6a25      	ldr	r5, [r4, #32]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8003fec:	4001      	ands	r1, r0
 8003fee:	68e0      	ldr	r0, [r4, #12]
 8003ff0:	4301      	orrs	r1, r0
 8003ff2:	6059      	str	r1, [r3, #4]
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 8003ff4:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8003ff6:	6898      	ldr	r0, [r3, #8]
  tmpreg |= huart->Init.OneBitSampling;
 8003ff8:	4329      	orrs	r1, r5
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8003ffa:	4d38      	ldr	r5, [pc, #224]	@ (80040dc <UART_SetConfig+0x114>)
 8003ffc:	4028      	ands	r0, r5
 8003ffe:	4301      	orrs	r1, r0
 8004000:	6099      	str	r1, [r3, #8]
  UART_GETCLOCKSOURCE(huart, clocksource);
 8004002:	4937      	ldr	r1, [pc, #220]	@ (80040e0 <UART_SetConfig+0x118>)
 8004004:	428b      	cmp	r3, r1
 8004006:	d115      	bne.n	8004034 <UART_SetConfig+0x6c>
 8004008:	2103      	movs	r1, #3
 800400a:	4b36      	ldr	r3, [pc, #216]	@ (80040e4 <UART_SetConfig+0x11c>)
 800400c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800400e:	400b      	ands	r3, r1
 8004010:	3b01      	subs	r3, #1
 8004012:	2b02      	cmp	r3, #2
 8004014:	d851      	bhi.n	80040ba <UART_SetConfig+0xf2>
 8004016:	4934      	ldr	r1, [pc, #208]	@ (80040e8 <UART_SetConfig+0x120>)
 8004018:	5cc8      	ldrb	r0, [r1, r3]
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800401a:	2380      	movs	r3, #128	@ 0x80
 800401c:	021b      	lsls	r3, r3, #8
 800401e:	429a      	cmp	r2, r3
 8004020:	d127      	bne.n	8004072 <UART_SetConfig+0xaa>
    switch (clocksource)
 8004022:	2808      	cmp	r0, #8
 8004024:	d847      	bhi.n	80040b6 <UART_SetConfig+0xee>
 8004026:	f7fc f877 	bl	8000118 <__gnu_thumb1_case_uqi>
 800402a:	464c      	.short	0x464c
 800402c:	460b460e 	.word	0x460b460e
 8004030:	4646      	.short	0x4646
 8004032:	0f          	.byte	0x0f
 8004033:	00          	.byte	0x00
  UART_GETCLOCKSOURCE(huart, clocksource);
 8004034:	492d      	ldr	r1, [pc, #180]	@ (80040ec <UART_SetConfig+0x124>)
 8004036:	185b      	adds	r3, r3, r1
 8004038:	1e59      	subs	r1, r3, #1
 800403a:	418b      	sbcs	r3, r1
 800403c:	0118      	lsls	r0, r3, #4
 800403e:	e7ec      	b.n	800401a <UART_SetConfig+0x52>
        pclk = HAL_RCC_GetSysClockFreq();
 8004040:	f7ff fe2c 	bl	8003c9c <HAL_RCC_GetSysClockFreq>
 8004044:	e03f      	b.n	80040c6 <UART_SetConfig+0xfe>
    switch (clocksource)
 8004046:	4a2a      	ldr	r2, [pc, #168]	@ (80040f0 <UART_SetConfig+0x128>)
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8004048:	6861      	ldr	r1, [r4, #4]
 800404a:	0052      	lsls	r2, r2, #1
 800404c:	0848      	lsrs	r0, r1, #1
 800404e:	1810      	adds	r0, r2, r0
 8004050:	f7fc f876 	bl	8000140 <__udivsi3>
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8004054:	0002      	movs	r2, r0
 8004056:	4b27      	ldr	r3, [pc, #156]	@ (80040f4 <UART_SetConfig+0x12c>)
 8004058:	3a10      	subs	r2, #16
 800405a:	429a      	cmp	r2, r3
 800405c:	d82b      	bhi.n	80040b6 <UART_SetConfig+0xee>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 800405e:	230f      	movs	r3, #15
 8004060:	0002      	movs	r2, r0
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8004062:	0700      	lsls	r0, r0, #28
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8004064:	439a      	bics	r2, r3
 8004066:	b293      	uxth	r3, r2
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8004068:	0f40      	lsrs	r0, r0, #29
        huart->Instance->BRR = brrtemp;
 800406a:	6822      	ldr	r2, [r4, #0]
 800406c:	4303      	orrs	r3, r0
 800406e:	60d3      	str	r3, [r2, #12]
 8004070:	e02b      	b.n	80040ca <UART_SetConfig+0x102>
    switch (clocksource)
 8004072:	2808      	cmp	r0, #8
 8004074:	d81f      	bhi.n	80040b6 <UART_SetConfig+0xee>
 8004076:	f7fc f84f 	bl	8000118 <__gnu_thumb1_case_uqi>
 800407a:	1e13      	.short	0x1e13
 800407c:	1e181e05 	.word	0x1e181e05
 8004080:	1e1e      	.short	0x1e1e
 8004082:	1b          	.byte	0x1b
 8004083:	00          	.byte	0x00
        pclk = (uint32_t) HSI_VALUE;
 8004084:	481a      	ldr	r0, [pc, #104]	@ (80040f0 <UART_SetConfig+0x128>)
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 8004086:	6861      	ldr	r1, [r4, #4]
 8004088:	084b      	lsrs	r3, r1, #1
 800408a:	1818      	adds	r0, r3, r0
 800408c:	f7fc f858 	bl	8000140 <__udivsi3>
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8004090:	0002      	movs	r2, r0
 8004092:	4b18      	ldr	r3, [pc, #96]	@ (80040f4 <UART_SetConfig+0x12c>)
 8004094:	3a10      	subs	r2, #16
 8004096:	429a      	cmp	r2, r3
 8004098:	d80d      	bhi.n	80040b6 <UART_SetConfig+0xee>
        huart->Instance->BRR = (uint16_t)usartdiv;
 800409a:	6823      	ldr	r3, [r4, #0]
 800409c:	60d8      	str	r0, [r3, #12]
 800409e:	e014      	b.n	80040ca <UART_SetConfig+0x102>
        pclk = HAL_RCC_GetPCLK1Freq();
 80040a0:	f7ff febc 	bl	8003e1c <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 80040a4:	2800      	cmp	r0, #0
 80040a6:	d010      	beq.n	80040ca <UART_SetConfig+0x102>
 80040a8:	e7ed      	b.n	8004086 <UART_SetConfig+0xbe>
        pclk = HAL_RCC_GetSysClockFreq();
 80040aa:	f7ff fdf7 	bl	8003c9c <HAL_RCC_GetSysClockFreq>
        break;
 80040ae:	e7f9      	b.n	80040a4 <UART_SetConfig+0xdc>
    switch (clocksource)
 80040b0:	2080      	movs	r0, #128	@ 0x80
 80040b2:	0200      	lsls	r0, r0, #8
 80040b4:	e7e7      	b.n	8004086 <UART_SetConfig+0xbe>
        ret = HAL_ERROR;
 80040b6:	2001      	movs	r0, #1
 80040b8:	e008      	b.n	80040cc <UART_SetConfig+0x104>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80040ba:	2380      	movs	r3, #128	@ 0x80
 80040bc:	021b      	lsls	r3, r3, #8
 80040be:	429a      	cmp	r2, r3
 80040c0:	d1ee      	bne.n	80040a0 <UART_SetConfig+0xd8>
        pclk = HAL_RCC_GetPCLK1Freq();
 80040c2:	f7ff feab 	bl	8003e1c <HAL_RCC_GetPCLK1Freq>
        pclk = HAL_RCC_GetSysClockFreq();
 80040c6:	1e02      	subs	r2, r0, #0
    if (pclk != 0U)
 80040c8:	d1be      	bne.n	8004048 <UART_SetConfig+0x80>
        pclk = (uint32_t) HSI_VALUE;
 80040ca:	2000      	movs	r0, #0
  huart->RxISR = NULL;
 80040cc:	2300      	movs	r3, #0
 80040ce:	66a3      	str	r3, [r4, #104]	@ 0x68
  huart->TxISR = NULL;
 80040d0:	66e3      	str	r3, [r4, #108]	@ 0x6c
}
 80040d2:	bd70      	pop	{r4, r5, r6, pc}
 80040d4:	efff69f3 	.word	0xefff69f3
 80040d8:	ffffcfff 	.word	0xffffcfff
 80040dc:	fffff4ff 	.word	0xfffff4ff
 80040e0:	40013800 	.word	0x40013800
 80040e4:	40021000 	.word	0x40021000
 80040e8:	08007389 	.word	0x08007389
 80040ec:	bfffbc00 	.word	0xbfffbc00
 80040f0:	007a1200 	.word	0x007a1200
 80040f4:	0000ffef 	.word	0x0000ffef

080040f8 <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 80040f8:	6a43      	ldr	r3, [r0, #36]	@ 0x24
{
 80040fa:	b530      	push	{r4, r5, lr}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 80040fc:	071a      	lsls	r2, r3, #28
 80040fe:	d506      	bpl.n	800410e <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8004100:	6801      	ldr	r1, [r0, #0]
 8004102:	4c28      	ldr	r4, [pc, #160]	@ (80041a4 <UART_AdvFeatureConfig+0xac>)
 8004104:	684a      	ldr	r2, [r1, #4]
 8004106:	4022      	ands	r2, r4
 8004108:	6b44      	ldr	r4, [r0, #52]	@ 0x34
 800410a:	4322      	orrs	r2, r4
 800410c:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 800410e:	07da      	lsls	r2, r3, #31
 8004110:	d506      	bpl.n	8004120 <UART_AdvFeatureConfig+0x28>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8004112:	6801      	ldr	r1, [r0, #0]
 8004114:	4c24      	ldr	r4, [pc, #144]	@ (80041a8 <UART_AdvFeatureConfig+0xb0>)
 8004116:	684a      	ldr	r2, [r1, #4]
 8004118:	4022      	ands	r2, r4
 800411a:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800411c:	4322      	orrs	r2, r4
 800411e:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8004120:	079a      	lsls	r2, r3, #30
 8004122:	d506      	bpl.n	8004132 <UART_AdvFeatureConfig+0x3a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8004124:	6801      	ldr	r1, [r0, #0]
 8004126:	4c21      	ldr	r4, [pc, #132]	@ (80041ac <UART_AdvFeatureConfig+0xb4>)
 8004128:	684a      	ldr	r2, [r1, #4]
 800412a:	4022      	ands	r2, r4
 800412c:	6ac4      	ldr	r4, [r0, #44]	@ 0x2c
 800412e:	4322      	orrs	r2, r4
 8004130:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8004132:	075a      	lsls	r2, r3, #29
 8004134:	d506      	bpl.n	8004144 <UART_AdvFeatureConfig+0x4c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8004136:	6801      	ldr	r1, [r0, #0]
 8004138:	4c1d      	ldr	r4, [pc, #116]	@ (80041b0 <UART_AdvFeatureConfig+0xb8>)
 800413a:	684a      	ldr	r2, [r1, #4]
 800413c:	4022      	ands	r2, r4
 800413e:	6b04      	ldr	r4, [r0, #48]	@ 0x30
 8004140:	4322      	orrs	r2, r4
 8004142:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8004144:	06da      	lsls	r2, r3, #27
 8004146:	d506      	bpl.n	8004156 <UART_AdvFeatureConfig+0x5e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8004148:	6801      	ldr	r1, [r0, #0]
 800414a:	4c1a      	ldr	r4, [pc, #104]	@ (80041b4 <UART_AdvFeatureConfig+0xbc>)
 800414c:	688a      	ldr	r2, [r1, #8]
 800414e:	4022      	ands	r2, r4
 8004150:	6b84      	ldr	r4, [r0, #56]	@ 0x38
 8004152:	4322      	orrs	r2, r4
 8004154:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8004156:	069a      	lsls	r2, r3, #26
 8004158:	d506      	bpl.n	8004168 <UART_AdvFeatureConfig+0x70>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 800415a:	6801      	ldr	r1, [r0, #0]
 800415c:	4c16      	ldr	r4, [pc, #88]	@ (80041b8 <UART_AdvFeatureConfig+0xc0>)
 800415e:	688a      	ldr	r2, [r1, #8]
 8004160:	4022      	ands	r2, r4
 8004162:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 8004164:	4322      	orrs	r2, r4
 8004166:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8004168:	065a      	lsls	r2, r3, #25
 800416a:	d510      	bpl.n	800418e <UART_AdvFeatureConfig+0x96>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 800416c:	6801      	ldr	r1, [r0, #0]
 800416e:	4d13      	ldr	r5, [pc, #76]	@ (80041bc <UART_AdvFeatureConfig+0xc4>)
 8004170:	684a      	ldr	r2, [r1, #4]
 8004172:	6c04      	ldr	r4, [r0, #64]	@ 0x40
 8004174:	402a      	ands	r2, r5
 8004176:	4322      	orrs	r2, r4
 8004178:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 800417a:	2280      	movs	r2, #128	@ 0x80
 800417c:	0352      	lsls	r2, r2, #13
 800417e:	4294      	cmp	r4, r2
 8004180:	d105      	bne.n	800418e <UART_AdvFeatureConfig+0x96>
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8004182:	684a      	ldr	r2, [r1, #4]
 8004184:	4c0e      	ldr	r4, [pc, #56]	@ (80041c0 <UART_AdvFeatureConfig+0xc8>)
 8004186:	4022      	ands	r2, r4
 8004188:	6c44      	ldr	r4, [r0, #68]	@ 0x44
 800418a:	4322      	orrs	r2, r4
 800418c:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 800418e:	061b      	lsls	r3, r3, #24
 8004190:	d506      	bpl.n	80041a0 <UART_AdvFeatureConfig+0xa8>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8004192:	6802      	ldr	r2, [r0, #0]
 8004194:	490b      	ldr	r1, [pc, #44]	@ (80041c4 <UART_AdvFeatureConfig+0xcc>)
 8004196:	6853      	ldr	r3, [r2, #4]
 8004198:	400b      	ands	r3, r1
 800419a:	6c81      	ldr	r1, [r0, #72]	@ 0x48
 800419c:	430b      	orrs	r3, r1
 800419e:	6053      	str	r3, [r2, #4]
}
 80041a0:	bd30      	pop	{r4, r5, pc}
 80041a2:	46c0      	nop			@ (mov r8, r8)
 80041a4:	ffff7fff 	.word	0xffff7fff
 80041a8:	fffdffff 	.word	0xfffdffff
 80041ac:	fffeffff 	.word	0xfffeffff
 80041b0:	fffbffff 	.word	0xfffbffff
 80041b4:	ffffefff 	.word	0xffffefff
 80041b8:	ffffdfff 	.word	0xffffdfff
 80041bc:	ffefffff 	.word	0xffefffff
 80041c0:	ff9fffff 	.word	0xff9fffff
 80041c4:	fff7ffff 	.word	0xfff7ffff

080041c8 <UART_WaitOnFlagUntilTimeout>:
{
 80041c8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80041ca:	0004      	movs	r4, r0
 80041cc:	000d      	movs	r5, r1
 80041ce:	0017      	movs	r7, r2
 80041d0:	9300      	str	r3, [sp, #0]
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80041d2:	6822      	ldr	r2, [r4, #0]
 80041d4:	69d3      	ldr	r3, [r2, #28]
 80041d6:	402b      	ands	r3, r5
 80041d8:	1b5b      	subs	r3, r3, r5
 80041da:	4259      	negs	r1, r3
 80041dc:	414b      	adcs	r3, r1
 80041de:	42bb      	cmp	r3, r7
 80041e0:	d001      	beq.n	80041e6 <UART_WaitOnFlagUntilTimeout+0x1e>
  return HAL_OK;
 80041e2:	2000      	movs	r0, #0
 80041e4:	e025      	b.n	8004232 <UART_WaitOnFlagUntilTimeout+0x6a>
    if (Timeout != HAL_MAX_DELAY)
 80041e6:	9b08      	ldr	r3, [sp, #32]
 80041e8:	3301      	adds	r3, #1
 80041ea:	d0f3      	beq.n	80041d4 <UART_WaitOnFlagUntilTimeout+0xc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80041ec:	f7fe fcea 	bl	8002bc4 <HAL_GetTick>
 80041f0:	9b00      	ldr	r3, [sp, #0]
 80041f2:	1ac0      	subs	r0, r0, r3
 80041f4:	9b08      	ldr	r3, [sp, #32]
 80041f6:	4298      	cmp	r0, r3
 80041f8:	d82c      	bhi.n	8004254 <UART_WaitOnFlagUntilTimeout+0x8c>
 80041fa:	2b00      	cmp	r3, #0
 80041fc:	d02a      	beq.n	8004254 <UART_WaitOnFlagUntilTimeout+0x8c>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
 80041fe:	6823      	ldr	r3, [r4, #0]
 8004200:	681a      	ldr	r2, [r3, #0]
 8004202:	0752      	lsls	r2, r2, #29
 8004204:	d5e5      	bpl.n	80041d2 <UART_WaitOnFlagUntilTimeout+0xa>
 8004206:	002a      	movs	r2, r5
 8004208:	2140      	movs	r1, #64	@ 0x40
 800420a:	3a40      	subs	r2, #64	@ 0x40
 800420c:	438a      	bics	r2, r1
 800420e:	d0e0      	beq.n	80041d2 <UART_WaitOnFlagUntilTimeout+0xa>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 8004210:	69da      	ldr	r2, [r3, #28]
 8004212:	2608      	movs	r6, #8
 8004214:	0011      	movs	r1, r2
 8004216:	4031      	ands	r1, r6
 8004218:	9101      	str	r1, [sp, #4]
 800421a:	4232      	tst	r2, r6
 800421c:	d00a      	beq.n	8004234 <UART_WaitOnFlagUntilTimeout+0x6c>
          UART_EndRxTransfer(huart);
 800421e:	0020      	movs	r0, r4
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 8004220:	621e      	str	r6, [r3, #32]
          UART_EndRxTransfer(huart);
 8004222:	f7ff fea3 	bl	8003f6c <UART_EndRxTransfer>
          huart->ErrorCode = HAL_UART_ERROR_ORE;
 8004226:	19a3      	adds	r3, r4, r6
 8004228:	67de      	str	r6, [r3, #124]	@ 0x7c
          __HAL_UNLOCK(huart);
 800422a:	2300      	movs	r3, #0
          return HAL_ERROR;
 800422c:	2001      	movs	r0, #1
          __HAL_UNLOCK(huart);
 800422e:	3478      	adds	r4, #120	@ 0x78
 8004230:	7023      	strb	r3, [r4, #0]
}
 8004232:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8004234:	2280      	movs	r2, #128	@ 0x80
 8004236:	69d9      	ldr	r1, [r3, #28]
 8004238:	0112      	lsls	r2, r2, #4
 800423a:	4211      	tst	r1, r2
 800423c:	d0c9      	beq.n	80041d2 <UART_WaitOnFlagUntilTimeout+0xa>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 800423e:	621a      	str	r2, [r3, #32]
          UART_EndRxTransfer(huart);
 8004240:	0020      	movs	r0, r4
 8004242:	f7ff fe93 	bl	8003f6c <UART_EndRxTransfer>
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8004246:	0023      	movs	r3, r4
 8004248:	2220      	movs	r2, #32
 800424a:	3308      	adds	r3, #8
 800424c:	67da      	str	r2, [r3, #124]	@ 0x7c
          __HAL_UNLOCK(huart);
 800424e:	9b01      	ldr	r3, [sp, #4]
 8004250:	3478      	adds	r4, #120	@ 0x78
 8004252:	7023      	strb	r3, [r4, #0]
        return HAL_TIMEOUT;
 8004254:	2003      	movs	r0, #3
 8004256:	e7ec      	b.n	8004232 <UART_WaitOnFlagUntilTimeout+0x6a>

08004258 <HAL_UART_Transmit>:
{
 8004258:	b5f0      	push	{r4, r5, r6, r7, lr}
 800425a:	b087      	sub	sp, #28
 800425c:	9305      	str	r3, [sp, #20]
  if (huart->gState == HAL_UART_STATE_READY)
 800425e:	6fc3      	ldr	r3, [r0, #124]	@ 0x7c
{
 8004260:	0004      	movs	r4, r0
 8004262:	000d      	movs	r5, r1
 8004264:	0017      	movs	r7, r2
    return HAL_BUSY;
 8004266:	2002      	movs	r0, #2
  if (huart->gState == HAL_UART_STATE_READY)
 8004268:	2b20      	cmp	r3, #32
 800426a:	d138      	bne.n	80042de <HAL_UART_Transmit+0x86>
      return  HAL_ERROR;
 800426c:	3801      	subs	r0, #1
    if ((pData == NULL) || (Size == 0U))
 800426e:	2900      	cmp	r1, #0
 8004270:	d035      	beq.n	80042de <HAL_UART_Transmit+0x86>
 8004272:	2a00      	cmp	r2, #0
 8004274:	d033      	beq.n	80042de <HAL_UART_Transmit+0x86>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8004276:	2380      	movs	r3, #128	@ 0x80
 8004278:	68a2      	ldr	r2, [r4, #8]
 800427a:	015b      	lsls	r3, r3, #5
 800427c:	429a      	cmp	r2, r3
 800427e:	d104      	bne.n	800428a <HAL_UART_Transmit+0x32>
 8004280:	6923      	ldr	r3, [r4, #16]
 8004282:	2b00      	cmp	r3, #0
 8004284:	d101      	bne.n	800428a <HAL_UART_Transmit+0x32>
      if ((((uint32_t)pData) & 1U) != 0U)
 8004286:	4201      	tst	r1, r0
 8004288:	d129      	bne.n	80042de <HAL_UART_Transmit+0x86>
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800428a:	0023      	movs	r3, r4
 800428c:	2600      	movs	r6, #0
 800428e:	3308      	adds	r3, #8
 8004290:	67de      	str	r6, [r3, #124]	@ 0x7c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8004292:	2321      	movs	r3, #33	@ 0x21
 8004294:	67e3      	str	r3, [r4, #124]	@ 0x7c
    tickstart = HAL_GetTick();
 8004296:	f7fe fc95 	bl	8002bc4 <HAL_GetTick>
    huart->TxXferSize  = Size;
 800429a:	0023      	movs	r3, r4
 800429c:	3350      	adds	r3, #80	@ 0x50
 800429e:	801f      	strh	r7, [r3, #0]
    huart->TxXferCount = Size;
 80042a0:	3302      	adds	r3, #2
 80042a2:	9303      	str	r3, [sp, #12]
 80042a4:	801f      	strh	r7, [r3, #0]
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80042a6:	2380      	movs	r3, #128	@ 0x80
 80042a8:	68a2      	ldr	r2, [r4, #8]
    tickstart = HAL_GetTick();
 80042aa:	9004      	str	r0, [sp, #16]
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80042ac:	015b      	lsls	r3, r3, #5
 80042ae:	429a      	cmp	r2, r3
 80042b0:	d104      	bne.n	80042bc <HAL_UART_Transmit+0x64>
 80042b2:	6923      	ldr	r3, [r4, #16]
 80042b4:	42b3      	cmp	r3, r6
 80042b6:	d101      	bne.n	80042bc <HAL_UART_Transmit+0x64>
 80042b8:	002e      	movs	r6, r5
      pdata8bits  = NULL;
 80042ba:	001d      	movs	r5, r3
    while (huart->TxXferCount > 0U)
 80042bc:	0023      	movs	r3, r4
 80042be:	3352      	adds	r3, #82	@ 0x52
 80042c0:	881b      	ldrh	r3, [r3, #0]
 80042c2:	b29a      	uxth	r2, r3
 80042c4:	2b00      	cmp	r3, #0
 80042c6:	d10c      	bne.n	80042e2 <HAL_UART_Transmit+0x8a>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 80042c8:	9b05      	ldr	r3, [sp, #20]
 80042ca:	2140      	movs	r1, #64	@ 0x40
 80042cc:	9300      	str	r3, [sp, #0]
 80042ce:	0020      	movs	r0, r4
 80042d0:	9b04      	ldr	r3, [sp, #16]
 80042d2:	f7ff ff79 	bl	80041c8 <UART_WaitOnFlagUntilTimeout>
 80042d6:	2320      	movs	r3, #32
      huart->gState = HAL_UART_STATE_READY;
 80042d8:	67e3      	str	r3, [r4, #124]	@ 0x7c
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 80042da:	2800      	cmp	r0, #0
 80042dc:	d10d      	bne.n	80042fa <HAL_UART_Transmit+0xa2>
}
 80042de:	b007      	add	sp, #28
 80042e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80042e2:	9b05      	ldr	r3, [sp, #20]
 80042e4:	2200      	movs	r2, #0
 80042e6:	9300      	str	r3, [sp, #0]
 80042e8:	2180      	movs	r1, #128	@ 0x80
 80042ea:	0020      	movs	r0, r4
 80042ec:	9b04      	ldr	r3, [sp, #16]
 80042ee:	f7ff ff6b 	bl	80041c8 <UART_WaitOnFlagUntilTimeout>
 80042f2:	2800      	cmp	r0, #0
 80042f4:	d003      	beq.n	80042fe <HAL_UART_Transmit+0xa6>
        huart->gState = HAL_UART_STATE_READY;
 80042f6:	2320      	movs	r3, #32
 80042f8:	67e3      	str	r3, [r4, #124]	@ 0x7c
        return HAL_TIMEOUT;
 80042fa:	2003      	movs	r0, #3
 80042fc:	e7ef      	b.n	80042de <HAL_UART_Transmit+0x86>
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 80042fe:	6822      	ldr	r2, [r4, #0]
      if (pdata8bits == NULL)
 8004300:	2d00      	cmp	r5, #0
 8004302:	d10b      	bne.n	800431c <HAL_UART_Transmit+0xc4>
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8004304:	8833      	ldrh	r3, [r6, #0]
        pdata16bits++;
 8004306:	3602      	adds	r6, #2
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8004308:	05db      	lsls	r3, r3, #23
 800430a:	0ddb      	lsrs	r3, r3, #23
 800430c:	8513      	strh	r3, [r2, #40]	@ 0x28
      huart->TxXferCount--;
 800430e:	9b03      	ldr	r3, [sp, #12]
 8004310:	9a03      	ldr	r2, [sp, #12]
 8004312:	881b      	ldrh	r3, [r3, #0]
 8004314:	3b01      	subs	r3, #1
 8004316:	b29b      	uxth	r3, r3
 8004318:	8013      	strh	r3, [r2, #0]
 800431a:	e7cf      	b.n	80042bc <HAL_UART_Transmit+0x64>
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 800431c:	782b      	ldrb	r3, [r5, #0]
        pdata8bits++;
 800431e:	3501      	adds	r5, #1
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8004320:	8513      	strh	r3, [r2, #40]	@ 0x28
        pdata8bits++;
 8004322:	e7f4      	b.n	800430e <HAL_UART_Transmit+0xb6>

08004324 <UART_CheckIdleState>:
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8004324:	0003      	movs	r3, r0
{
 8004326:	b573      	push	{r0, r1, r4, r5, r6, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8004328:	2500      	movs	r5, #0
{
 800432a:	0004      	movs	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800432c:	3308      	adds	r3, #8
 800432e:	67dd      	str	r5, [r3, #124]	@ 0x7c
  tickstart = HAL_GetTick();
 8004330:	f7fe fc48 	bl	8002bc4 <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8004334:	6823      	ldr	r3, [r4, #0]
  tickstart = HAL_GetTick();
 8004336:	0006      	movs	r6, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8004338:	681b      	ldr	r3, [r3, #0]
 800433a:	071b      	lsls	r3, r3, #28
 800433c:	d51d      	bpl.n	800437a <UART_CheckIdleState+0x56>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 800433e:	2180      	movs	r1, #128	@ 0x80
 8004340:	4b26      	ldr	r3, [pc, #152]	@ (80043dc <UART_CheckIdleState+0xb8>)
 8004342:	002a      	movs	r2, r5
 8004344:	9300      	str	r3, [sp, #0]
 8004346:	0389      	lsls	r1, r1, #14
 8004348:	0003      	movs	r3, r0
 800434a:	0020      	movs	r0, r4
 800434c:	f7ff ff3c 	bl	80041c8 <UART_WaitOnFlagUntilTimeout>
 8004350:	42a8      	cmp	r0, r5
 8004352:	d012      	beq.n	800437a <UART_CheckIdleState+0x56>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8004354:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8004358:	2301      	movs	r3, #1
 800435a:	f383 8810 	msr	PRIMASK, r3
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE));
 800435e:	2080      	movs	r0, #128	@ 0x80
 8004360:	6822      	ldr	r2, [r4, #0]
 8004362:	6813      	ldr	r3, [r2, #0]
 8004364:	4383      	bics	r3, r0
 8004366:	6013      	str	r3, [r2, #0]
 8004368:	f381 8810 	msr	PRIMASK, r1
      huart->gState = HAL_UART_STATE_READY;
 800436c:	2320      	movs	r3, #32
 800436e:	67e3      	str	r3, [r4, #124]	@ 0x7c
      return HAL_TIMEOUT;
 8004370:	2003      	movs	r0, #3
      __HAL_UNLOCK(huart);
 8004372:	2300      	movs	r3, #0
 8004374:	3478      	adds	r4, #120	@ 0x78
 8004376:	7023      	strb	r3, [r4, #0]
}
 8004378:	bd76      	pop	{r1, r2, r4, r5, r6, pc}
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 800437a:	0025      	movs	r5, r4
 800437c:	cd08      	ldmia	r5!, {r3}
 800437e:	681b      	ldr	r3, [r3, #0]
 8004380:	075b      	lsls	r3, r3, #29
 8004382:	d523      	bpl.n	80043cc <UART_CheckIdleState+0xa8>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8004384:	2180      	movs	r1, #128	@ 0x80
 8004386:	4b15      	ldr	r3, [pc, #84]	@ (80043dc <UART_CheckIdleState+0xb8>)
 8004388:	2200      	movs	r2, #0
 800438a:	9300      	str	r3, [sp, #0]
 800438c:	0020      	movs	r0, r4
 800438e:	0033      	movs	r3, r6
 8004390:	03c9      	lsls	r1, r1, #15
 8004392:	f7ff ff19 	bl	80041c8 <UART_WaitOnFlagUntilTimeout>
 8004396:	2800      	cmp	r0, #0
 8004398:	d018      	beq.n	80043cc <UART_CheckIdleState+0xa8>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800439a:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800439e:	2201      	movs	r2, #1
 80043a0:	f382 8810 	msr	PRIMASK, r2
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80043a4:	6821      	ldr	r1, [r4, #0]
 80043a6:	4e0e      	ldr	r6, [pc, #56]	@ (80043e0 <UART_CheckIdleState+0xbc>)
 80043a8:	680b      	ldr	r3, [r1, #0]
 80043aa:	4033      	ands	r3, r6
 80043ac:	600b      	str	r3, [r1, #0]
 80043ae:	f380 8810 	msr	PRIMASK, r0
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80043b2:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80043b6:	f382 8810 	msr	PRIMASK, r2
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80043ba:	6821      	ldr	r1, [r4, #0]
 80043bc:	688b      	ldr	r3, [r1, #8]
 80043be:	4393      	bics	r3, r2
 80043c0:	608b      	str	r3, [r1, #8]
 80043c2:	f380 8810 	msr	PRIMASK, r0
      huart->RxState = HAL_UART_STATE_READY;
 80043c6:	2320      	movs	r3, #32
 80043c8:	67eb      	str	r3, [r5, #124]	@ 0x7c
      return HAL_TIMEOUT;
 80043ca:	e7d1      	b.n	8004370 <UART_CheckIdleState+0x4c>
  huart->gState = HAL_UART_STATE_READY;
 80043cc:	2320      	movs	r3, #32
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80043ce:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 80043d0:	67e3      	str	r3, [r4, #124]	@ 0x7c
  huart->RxState = HAL_UART_STATE_READY;
 80043d2:	67eb      	str	r3, [r5, #124]	@ 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80043d4:	6620      	str	r0, [r4, #96]	@ 0x60
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 80043d6:	6660      	str	r0, [r4, #100]	@ 0x64
  return HAL_OK;
 80043d8:	e7cb      	b.n	8004372 <UART_CheckIdleState+0x4e>
 80043da:	46c0      	nop			@ (mov r8, r8)
 80043dc:	01ffffff 	.word	0x01ffffff
 80043e0:	fffffedf 	.word	0xfffffedf

080043e4 <HAL_UART_Init>:
{
 80043e4:	b510      	push	{r4, lr}
 80043e6:	1e04      	subs	r4, r0, #0
  if (huart == NULL)
 80043e8:	d101      	bne.n	80043ee <HAL_UART_Init+0xa>
    return HAL_ERROR;
 80043ea:	2001      	movs	r0, #1
}
 80043ec:	bd10      	pop	{r4, pc}
  if (huart->gState == HAL_UART_STATE_RESET)
 80043ee:	6fc3      	ldr	r3, [r0, #124]	@ 0x7c
 80043f0:	2b00      	cmp	r3, #0
 80043f2:	d104      	bne.n	80043fe <HAL_UART_Init+0x1a>
    huart->Lock = HAL_UNLOCKED;
 80043f4:	0002      	movs	r2, r0
 80043f6:	3278      	adds	r2, #120	@ 0x78
 80043f8:	7013      	strb	r3, [r2, #0]
    HAL_UART_MspInit(huart);
 80043fa:	f7fe fac9 	bl	8002990 <HAL_UART_MspInit>
  huart->gState = HAL_UART_STATE_BUSY;
 80043fe:	2324      	movs	r3, #36	@ 0x24
  __HAL_UART_DISABLE(huart);
 8004400:	2101      	movs	r1, #1
 8004402:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8004404:	67e3      	str	r3, [r4, #124]	@ 0x7c
  __HAL_UART_DISABLE(huart);
 8004406:	6813      	ldr	r3, [r2, #0]
 8004408:	438b      	bics	r3, r1
 800440a:	6013      	str	r3, [r2, #0]
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 800440c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800440e:	2b00      	cmp	r3, #0
 8004410:	d002      	beq.n	8004418 <HAL_UART_Init+0x34>
    UART_AdvFeatureConfig(huart);
 8004412:	0020      	movs	r0, r4
 8004414:	f7ff fe70 	bl	80040f8 <UART_AdvFeatureConfig>
  if (UART_SetConfig(huart) == HAL_ERROR)
 8004418:	0020      	movs	r0, r4
 800441a:	f7ff fdd5 	bl	8003fc8 <UART_SetConfig>
 800441e:	2801      	cmp	r0, #1
 8004420:	d0e3      	beq.n	80043ea <HAL_UART_Init+0x6>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8004422:	6823      	ldr	r3, [r4, #0]
 8004424:	4907      	ldr	r1, [pc, #28]	@ (8004444 <HAL_UART_Init+0x60>)
 8004426:	685a      	ldr	r2, [r3, #4]
  return (UART_CheckIdleState(huart));
 8004428:	0020      	movs	r0, r4
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800442a:	400a      	ands	r2, r1
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800442c:	212a      	movs	r1, #42	@ 0x2a
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800442e:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8004430:	689a      	ldr	r2, [r3, #8]
 8004432:	438a      	bics	r2, r1
 8004434:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
 8004436:	2201      	movs	r2, #1
 8004438:	6819      	ldr	r1, [r3, #0]
 800443a:	430a      	orrs	r2, r1
 800443c:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
 800443e:	f7ff ff71 	bl	8004324 <UART_CheckIdleState>
 8004442:	e7d3      	b.n	80043ec <HAL_UART_Init+0x8>
 8004444:	ffffb7ff 	.word	0xffffb7ff

08004448 <__cvt>:
 8004448:	b5f0      	push	{r4, r5, r6, r7, lr}
 800444a:	001f      	movs	r7, r3
 800444c:	2300      	movs	r3, #0
 800444e:	0016      	movs	r6, r2
 8004450:	b08b      	sub	sp, #44	@ 0x2c
 8004452:	429f      	cmp	r7, r3
 8004454:	da04      	bge.n	8004460 <__cvt+0x18>
 8004456:	2180      	movs	r1, #128	@ 0x80
 8004458:	0609      	lsls	r1, r1, #24
 800445a:	187b      	adds	r3, r7, r1
 800445c:	001f      	movs	r7, r3
 800445e:	232d      	movs	r3, #45	@ 0x2d
 8004460:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8004462:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8004464:	7013      	strb	r3, [r2, #0]
 8004466:	2320      	movs	r3, #32
 8004468:	2203      	movs	r2, #3
 800446a:	439d      	bics	r5, r3
 800446c:	2d46      	cmp	r5, #70	@ 0x46
 800446e:	d007      	beq.n	8004480 <__cvt+0x38>
 8004470:	002b      	movs	r3, r5
 8004472:	3b45      	subs	r3, #69	@ 0x45
 8004474:	4259      	negs	r1, r3
 8004476:	414b      	adcs	r3, r1
 8004478:	9910      	ldr	r1, [sp, #64]	@ 0x40
 800447a:	3a01      	subs	r2, #1
 800447c:	18cb      	adds	r3, r1, r3
 800447e:	9310      	str	r3, [sp, #64]	@ 0x40
 8004480:	ab09      	add	r3, sp, #36	@ 0x24
 8004482:	9304      	str	r3, [sp, #16]
 8004484:	ab08      	add	r3, sp, #32
 8004486:	9303      	str	r3, [sp, #12]
 8004488:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800448a:	9200      	str	r2, [sp, #0]
 800448c:	9302      	str	r3, [sp, #8]
 800448e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8004490:	0032      	movs	r2, r6
 8004492:	9301      	str	r3, [sp, #4]
 8004494:	003b      	movs	r3, r7
 8004496:	f000 fdf9 	bl	800508c <_dtoa_r>
 800449a:	0004      	movs	r4, r0
 800449c:	2d47      	cmp	r5, #71	@ 0x47
 800449e:	d11b      	bne.n	80044d8 <__cvt+0x90>
 80044a0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80044a2:	07db      	lsls	r3, r3, #31
 80044a4:	d511      	bpl.n	80044ca <__cvt+0x82>
 80044a6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80044a8:	18c3      	adds	r3, r0, r3
 80044aa:	9307      	str	r3, [sp, #28]
 80044ac:	2200      	movs	r2, #0
 80044ae:	2300      	movs	r3, #0
 80044b0:	0030      	movs	r0, r6
 80044b2:	0039      	movs	r1, r7
 80044b4:	f7fb ffca 	bl	800044c <__aeabi_dcmpeq>
 80044b8:	2800      	cmp	r0, #0
 80044ba:	d001      	beq.n	80044c0 <__cvt+0x78>
 80044bc:	9b07      	ldr	r3, [sp, #28]
 80044be:	9309      	str	r3, [sp, #36]	@ 0x24
 80044c0:	2230      	movs	r2, #48	@ 0x30
 80044c2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80044c4:	9907      	ldr	r1, [sp, #28]
 80044c6:	428b      	cmp	r3, r1
 80044c8:	d320      	bcc.n	800450c <__cvt+0xc4>
 80044ca:	0020      	movs	r0, r4
 80044cc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80044ce:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80044d0:	1b1b      	subs	r3, r3, r4
 80044d2:	6013      	str	r3, [r2, #0]
 80044d4:	b00b      	add	sp, #44	@ 0x2c
 80044d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80044d8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80044da:	18c3      	adds	r3, r0, r3
 80044dc:	9307      	str	r3, [sp, #28]
 80044de:	2d46      	cmp	r5, #70	@ 0x46
 80044e0:	d1e4      	bne.n	80044ac <__cvt+0x64>
 80044e2:	7803      	ldrb	r3, [r0, #0]
 80044e4:	2b30      	cmp	r3, #48	@ 0x30
 80044e6:	d10c      	bne.n	8004502 <__cvt+0xba>
 80044e8:	2200      	movs	r2, #0
 80044ea:	2300      	movs	r3, #0
 80044ec:	0030      	movs	r0, r6
 80044ee:	0039      	movs	r1, r7
 80044f0:	f7fb ffac 	bl	800044c <__aeabi_dcmpeq>
 80044f4:	2800      	cmp	r0, #0
 80044f6:	d104      	bne.n	8004502 <__cvt+0xba>
 80044f8:	2301      	movs	r3, #1
 80044fa:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80044fc:	1a9b      	subs	r3, r3, r2
 80044fe:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8004500:	6013      	str	r3, [r2, #0]
 8004502:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8004504:	9a07      	ldr	r2, [sp, #28]
 8004506:	681b      	ldr	r3, [r3, #0]
 8004508:	18d3      	adds	r3, r2, r3
 800450a:	e7ce      	b.n	80044aa <__cvt+0x62>
 800450c:	1c59      	adds	r1, r3, #1
 800450e:	9109      	str	r1, [sp, #36]	@ 0x24
 8004510:	701a      	strb	r2, [r3, #0]
 8004512:	e7d6      	b.n	80044c2 <__cvt+0x7a>

08004514 <__exponent>:
 8004514:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004516:	232b      	movs	r3, #43	@ 0x2b
 8004518:	0005      	movs	r5, r0
 800451a:	000c      	movs	r4, r1
 800451c:	b085      	sub	sp, #20
 800451e:	7002      	strb	r2, [r0, #0]
 8004520:	2900      	cmp	r1, #0
 8004522:	da01      	bge.n	8004528 <__exponent+0x14>
 8004524:	424c      	negs	r4, r1
 8004526:	3302      	adds	r3, #2
 8004528:	706b      	strb	r3, [r5, #1]
 800452a:	2c09      	cmp	r4, #9
 800452c:	dd2c      	ble.n	8004588 <__exponent+0x74>
 800452e:	ab02      	add	r3, sp, #8
 8004530:	1dde      	adds	r6, r3, #7
 8004532:	0020      	movs	r0, r4
 8004534:	210a      	movs	r1, #10
 8004536:	f7fb ff73 	bl	8000420 <__aeabi_idivmod>
 800453a:	0037      	movs	r7, r6
 800453c:	3130      	adds	r1, #48	@ 0x30
 800453e:	3e01      	subs	r6, #1
 8004540:	0020      	movs	r0, r4
 8004542:	7031      	strb	r1, [r6, #0]
 8004544:	210a      	movs	r1, #10
 8004546:	9401      	str	r4, [sp, #4]
 8004548:	f7fb fe84 	bl	8000254 <__divsi3>
 800454c:	9b01      	ldr	r3, [sp, #4]
 800454e:	0004      	movs	r4, r0
 8004550:	2b63      	cmp	r3, #99	@ 0x63
 8004552:	dcee      	bgt.n	8004532 <__exponent+0x1e>
 8004554:	1eba      	subs	r2, r7, #2
 8004556:	1ca8      	adds	r0, r5, #2
 8004558:	0001      	movs	r1, r0
 800455a:	0013      	movs	r3, r2
 800455c:	3430      	adds	r4, #48	@ 0x30
 800455e:	7014      	strb	r4, [r2, #0]
 8004560:	ac02      	add	r4, sp, #8
 8004562:	3407      	adds	r4, #7
 8004564:	429c      	cmp	r4, r3
 8004566:	d80a      	bhi.n	800457e <__exponent+0x6a>
 8004568:	2300      	movs	r3, #0
 800456a:	42a2      	cmp	r2, r4
 800456c:	d803      	bhi.n	8004576 <__exponent+0x62>
 800456e:	3309      	adds	r3, #9
 8004570:	aa02      	add	r2, sp, #8
 8004572:	189b      	adds	r3, r3, r2
 8004574:	1bdb      	subs	r3, r3, r7
 8004576:	18c0      	adds	r0, r0, r3
 8004578:	1b40      	subs	r0, r0, r5
 800457a:	b005      	add	sp, #20
 800457c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800457e:	781c      	ldrb	r4, [r3, #0]
 8004580:	3301      	adds	r3, #1
 8004582:	700c      	strb	r4, [r1, #0]
 8004584:	3101      	adds	r1, #1
 8004586:	e7eb      	b.n	8004560 <__exponent+0x4c>
 8004588:	2330      	movs	r3, #48	@ 0x30
 800458a:	18e4      	adds	r4, r4, r3
 800458c:	70ab      	strb	r3, [r5, #2]
 800458e:	1d28      	adds	r0, r5, #4
 8004590:	70ec      	strb	r4, [r5, #3]
 8004592:	e7f1      	b.n	8004578 <__exponent+0x64>

08004594 <_printf_float>:
 8004594:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004596:	b097      	sub	sp, #92	@ 0x5c
 8004598:	000d      	movs	r5, r1
 800459a:	920a      	str	r2, [sp, #40]	@ 0x28
 800459c:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 800459e:	930b      	str	r3, [sp, #44]	@ 0x2c
 80045a0:	9009      	str	r0, [sp, #36]	@ 0x24
 80045a2:	f000 fc9f 	bl	8004ee4 <_localeconv_r>
 80045a6:	6803      	ldr	r3, [r0, #0]
 80045a8:	0018      	movs	r0, r3
 80045aa:	930d      	str	r3, [sp, #52]	@ 0x34
 80045ac:	f7fb fdac 	bl	8000108 <strlen>
 80045b0:	2300      	movs	r3, #0
 80045b2:	900f      	str	r0, [sp, #60]	@ 0x3c
 80045b4:	9314      	str	r3, [sp, #80]	@ 0x50
 80045b6:	7e2b      	ldrb	r3, [r5, #24]
 80045b8:	2207      	movs	r2, #7
 80045ba:	930c      	str	r3, [sp, #48]	@ 0x30
 80045bc:	682b      	ldr	r3, [r5, #0]
 80045be:	930e      	str	r3, [sp, #56]	@ 0x38
 80045c0:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80045c2:	6823      	ldr	r3, [r4, #0]
 80045c4:	05c9      	lsls	r1, r1, #23
 80045c6:	d545      	bpl.n	8004654 <_printf_float+0xc0>
 80045c8:	189b      	adds	r3, r3, r2
 80045ca:	4393      	bics	r3, r2
 80045cc:	001a      	movs	r2, r3
 80045ce:	3208      	adds	r2, #8
 80045d0:	6022      	str	r2, [r4, #0]
 80045d2:	2201      	movs	r2, #1
 80045d4:	681e      	ldr	r6, [r3, #0]
 80045d6:	685f      	ldr	r7, [r3, #4]
 80045d8:	007b      	lsls	r3, r7, #1
 80045da:	085b      	lsrs	r3, r3, #1
 80045dc:	9311      	str	r3, [sp, #68]	@ 0x44
 80045de:	9610      	str	r6, [sp, #64]	@ 0x40
 80045e0:	64ae      	str	r6, [r5, #72]	@ 0x48
 80045e2:	64ef      	str	r7, [r5, #76]	@ 0x4c
 80045e4:	9810      	ldr	r0, [sp, #64]	@ 0x40
 80045e6:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80045e8:	4ba7      	ldr	r3, [pc, #668]	@ (8004888 <_printf_float+0x2f4>)
 80045ea:	4252      	negs	r2, r2
 80045ec:	f7fd fd68 	bl	80020c0 <__aeabi_dcmpun>
 80045f0:	2800      	cmp	r0, #0
 80045f2:	d131      	bne.n	8004658 <_printf_float+0xc4>
 80045f4:	9810      	ldr	r0, [sp, #64]	@ 0x40
 80045f6:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80045f8:	2201      	movs	r2, #1
 80045fa:	4ba3      	ldr	r3, [pc, #652]	@ (8004888 <_printf_float+0x2f4>)
 80045fc:	4252      	negs	r2, r2
 80045fe:	f7fb ff35 	bl	800046c <__aeabi_dcmple>
 8004602:	2800      	cmp	r0, #0
 8004604:	d128      	bne.n	8004658 <_printf_float+0xc4>
 8004606:	2200      	movs	r2, #0
 8004608:	2300      	movs	r3, #0
 800460a:	0030      	movs	r0, r6
 800460c:	0039      	movs	r1, r7
 800460e:	f7fb ff23 	bl	8000458 <__aeabi_dcmplt>
 8004612:	2800      	cmp	r0, #0
 8004614:	d003      	beq.n	800461e <_printf_float+0x8a>
 8004616:	002b      	movs	r3, r5
 8004618:	222d      	movs	r2, #45	@ 0x2d
 800461a:	3343      	adds	r3, #67	@ 0x43
 800461c:	701a      	strb	r2, [r3, #0]
 800461e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004620:	4f9a      	ldr	r7, [pc, #616]	@ (800488c <_printf_float+0x2f8>)
 8004622:	2b47      	cmp	r3, #71	@ 0x47
 8004624:	d900      	bls.n	8004628 <_printf_float+0x94>
 8004626:	4f9a      	ldr	r7, [pc, #616]	@ (8004890 <_printf_float+0x2fc>)
 8004628:	2303      	movs	r3, #3
 800462a:	2400      	movs	r4, #0
 800462c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800462e:	612b      	str	r3, [r5, #16]
 8004630:	3301      	adds	r3, #1
 8004632:	439a      	bics	r2, r3
 8004634:	602a      	str	r2, [r5, #0]
 8004636:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004638:	0029      	movs	r1, r5
 800463a:	9300      	str	r3, [sp, #0]
 800463c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800463e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004640:	aa15      	add	r2, sp, #84	@ 0x54
 8004642:	f000 f9e5 	bl	8004a10 <_printf_common>
 8004646:	3001      	adds	r0, #1
 8004648:	d000      	beq.n	800464c <_printf_float+0xb8>
 800464a:	e09f      	b.n	800478c <_printf_float+0x1f8>
 800464c:	2001      	movs	r0, #1
 800464e:	4240      	negs	r0, r0
 8004650:	b017      	add	sp, #92	@ 0x5c
 8004652:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004654:	3307      	adds	r3, #7
 8004656:	e7b8      	b.n	80045ca <_printf_float+0x36>
 8004658:	0032      	movs	r2, r6
 800465a:	003b      	movs	r3, r7
 800465c:	0030      	movs	r0, r6
 800465e:	0039      	movs	r1, r7
 8004660:	f7fd fd2e 	bl	80020c0 <__aeabi_dcmpun>
 8004664:	2800      	cmp	r0, #0
 8004666:	d00b      	beq.n	8004680 <_printf_float+0xec>
 8004668:	2f00      	cmp	r7, #0
 800466a:	da03      	bge.n	8004674 <_printf_float+0xe0>
 800466c:	002b      	movs	r3, r5
 800466e:	222d      	movs	r2, #45	@ 0x2d
 8004670:	3343      	adds	r3, #67	@ 0x43
 8004672:	701a      	strb	r2, [r3, #0]
 8004674:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004676:	4f87      	ldr	r7, [pc, #540]	@ (8004894 <_printf_float+0x300>)
 8004678:	2b47      	cmp	r3, #71	@ 0x47
 800467a:	d9d5      	bls.n	8004628 <_printf_float+0x94>
 800467c:	4f86      	ldr	r7, [pc, #536]	@ (8004898 <_printf_float+0x304>)
 800467e:	e7d3      	b.n	8004628 <_printf_float+0x94>
 8004680:	2220      	movs	r2, #32
 8004682:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8004684:	686b      	ldr	r3, [r5, #4]
 8004686:	4394      	bics	r4, r2
 8004688:	1c5a      	adds	r2, r3, #1
 800468a:	d146      	bne.n	800471a <_printf_float+0x186>
 800468c:	3307      	adds	r3, #7
 800468e:	606b      	str	r3, [r5, #4]
 8004690:	2380      	movs	r3, #128	@ 0x80
 8004692:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8004694:	00db      	lsls	r3, r3, #3
 8004696:	4313      	orrs	r3, r2
 8004698:	2200      	movs	r2, #0
 800469a:	602b      	str	r3, [r5, #0]
 800469c:	9206      	str	r2, [sp, #24]
 800469e:	aa14      	add	r2, sp, #80	@ 0x50
 80046a0:	9205      	str	r2, [sp, #20]
 80046a2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80046a4:	a90a      	add	r1, sp, #40	@ 0x28
 80046a6:	9204      	str	r2, [sp, #16]
 80046a8:	aa13      	add	r2, sp, #76	@ 0x4c
 80046aa:	9203      	str	r2, [sp, #12]
 80046ac:	2223      	movs	r2, #35	@ 0x23
 80046ae:	1852      	adds	r2, r2, r1
 80046b0:	9202      	str	r2, [sp, #8]
 80046b2:	9301      	str	r3, [sp, #4]
 80046b4:	686b      	ldr	r3, [r5, #4]
 80046b6:	0032      	movs	r2, r6
 80046b8:	9300      	str	r3, [sp, #0]
 80046ba:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80046bc:	003b      	movs	r3, r7
 80046be:	f7ff fec3 	bl	8004448 <__cvt>
 80046c2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80046c4:	0007      	movs	r7, r0
 80046c6:	2c47      	cmp	r4, #71	@ 0x47
 80046c8:	d12d      	bne.n	8004726 <_printf_float+0x192>
 80046ca:	1cd3      	adds	r3, r2, #3
 80046cc:	db02      	blt.n	80046d4 <_printf_float+0x140>
 80046ce:	686b      	ldr	r3, [r5, #4]
 80046d0:	429a      	cmp	r2, r3
 80046d2:	dd48      	ble.n	8004766 <_printf_float+0x1d2>
 80046d4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80046d6:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80046d8:	3b02      	subs	r3, #2
 80046da:	b2db      	uxtb	r3, r3
 80046dc:	930c      	str	r3, [sp, #48]	@ 0x30
 80046de:	0028      	movs	r0, r5
 80046e0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80046e2:	3901      	subs	r1, #1
 80046e4:	3050      	adds	r0, #80	@ 0x50
 80046e6:	9113      	str	r1, [sp, #76]	@ 0x4c
 80046e8:	f7ff ff14 	bl	8004514 <__exponent>
 80046ec:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80046ee:	0004      	movs	r4, r0
 80046f0:	1813      	adds	r3, r2, r0
 80046f2:	612b      	str	r3, [r5, #16]
 80046f4:	2a01      	cmp	r2, #1
 80046f6:	dc02      	bgt.n	80046fe <_printf_float+0x16a>
 80046f8:	682a      	ldr	r2, [r5, #0]
 80046fa:	07d2      	lsls	r2, r2, #31
 80046fc:	d501      	bpl.n	8004702 <_printf_float+0x16e>
 80046fe:	3301      	adds	r3, #1
 8004700:	612b      	str	r3, [r5, #16]
 8004702:	2323      	movs	r3, #35	@ 0x23
 8004704:	aa0a      	add	r2, sp, #40	@ 0x28
 8004706:	189b      	adds	r3, r3, r2
 8004708:	781b      	ldrb	r3, [r3, #0]
 800470a:	2b00      	cmp	r3, #0
 800470c:	d100      	bne.n	8004710 <_printf_float+0x17c>
 800470e:	e792      	b.n	8004636 <_printf_float+0xa2>
 8004710:	002b      	movs	r3, r5
 8004712:	222d      	movs	r2, #45	@ 0x2d
 8004714:	3343      	adds	r3, #67	@ 0x43
 8004716:	701a      	strb	r2, [r3, #0]
 8004718:	e78d      	b.n	8004636 <_printf_float+0xa2>
 800471a:	2c47      	cmp	r4, #71	@ 0x47
 800471c:	d1b8      	bne.n	8004690 <_printf_float+0xfc>
 800471e:	2b00      	cmp	r3, #0
 8004720:	d1b6      	bne.n	8004690 <_printf_float+0xfc>
 8004722:	3301      	adds	r3, #1
 8004724:	e7b3      	b.n	800468e <_printf_float+0xfa>
 8004726:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004728:	0011      	movs	r1, r2
 800472a:	2b65      	cmp	r3, #101	@ 0x65
 800472c:	d9d7      	bls.n	80046de <_printf_float+0x14a>
 800472e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004730:	2b66      	cmp	r3, #102	@ 0x66
 8004732:	d11a      	bne.n	800476a <_printf_float+0x1d6>
 8004734:	686b      	ldr	r3, [r5, #4]
 8004736:	2a00      	cmp	r2, #0
 8004738:	dd09      	ble.n	800474e <_printf_float+0x1ba>
 800473a:	612a      	str	r2, [r5, #16]
 800473c:	2b00      	cmp	r3, #0
 800473e:	d102      	bne.n	8004746 <_printf_float+0x1b2>
 8004740:	6829      	ldr	r1, [r5, #0]
 8004742:	07c9      	lsls	r1, r1, #31
 8004744:	d50b      	bpl.n	800475e <_printf_float+0x1ca>
 8004746:	3301      	adds	r3, #1
 8004748:	189b      	adds	r3, r3, r2
 800474a:	612b      	str	r3, [r5, #16]
 800474c:	e007      	b.n	800475e <_printf_float+0x1ca>
 800474e:	2b00      	cmp	r3, #0
 8004750:	d103      	bne.n	800475a <_printf_float+0x1c6>
 8004752:	2201      	movs	r2, #1
 8004754:	6829      	ldr	r1, [r5, #0]
 8004756:	4211      	tst	r1, r2
 8004758:	d000      	beq.n	800475c <_printf_float+0x1c8>
 800475a:	1c9a      	adds	r2, r3, #2
 800475c:	612a      	str	r2, [r5, #16]
 800475e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8004760:	2400      	movs	r4, #0
 8004762:	65ab      	str	r3, [r5, #88]	@ 0x58
 8004764:	e7cd      	b.n	8004702 <_printf_float+0x16e>
 8004766:	2367      	movs	r3, #103	@ 0x67
 8004768:	930c      	str	r3, [sp, #48]	@ 0x30
 800476a:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 800476c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800476e:	4299      	cmp	r1, r3
 8004770:	db06      	blt.n	8004780 <_printf_float+0x1ec>
 8004772:	682b      	ldr	r3, [r5, #0]
 8004774:	6129      	str	r1, [r5, #16]
 8004776:	07db      	lsls	r3, r3, #31
 8004778:	d5f1      	bpl.n	800475e <_printf_float+0x1ca>
 800477a:	3101      	adds	r1, #1
 800477c:	6129      	str	r1, [r5, #16]
 800477e:	e7ee      	b.n	800475e <_printf_float+0x1ca>
 8004780:	2201      	movs	r2, #1
 8004782:	2900      	cmp	r1, #0
 8004784:	dce0      	bgt.n	8004748 <_printf_float+0x1b4>
 8004786:	1892      	adds	r2, r2, r2
 8004788:	1a52      	subs	r2, r2, r1
 800478a:	e7dd      	b.n	8004748 <_printf_float+0x1b4>
 800478c:	682a      	ldr	r2, [r5, #0]
 800478e:	0553      	lsls	r3, r2, #21
 8004790:	d408      	bmi.n	80047a4 <_printf_float+0x210>
 8004792:	692b      	ldr	r3, [r5, #16]
 8004794:	003a      	movs	r2, r7
 8004796:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004798:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800479a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 800479c:	47a0      	blx	r4
 800479e:	3001      	adds	r0, #1
 80047a0:	d129      	bne.n	80047f6 <_printf_float+0x262>
 80047a2:	e753      	b.n	800464c <_printf_float+0xb8>
 80047a4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80047a6:	2b65      	cmp	r3, #101	@ 0x65
 80047a8:	d800      	bhi.n	80047ac <_printf_float+0x218>
 80047aa:	e0da      	b.n	8004962 <_printf_float+0x3ce>
 80047ac:	6ca8      	ldr	r0, [r5, #72]	@ 0x48
 80047ae:	6ce9      	ldr	r1, [r5, #76]	@ 0x4c
 80047b0:	2200      	movs	r2, #0
 80047b2:	2300      	movs	r3, #0
 80047b4:	f7fb fe4a 	bl	800044c <__aeabi_dcmpeq>
 80047b8:	2800      	cmp	r0, #0
 80047ba:	d033      	beq.n	8004824 <_printf_float+0x290>
 80047bc:	2301      	movs	r3, #1
 80047be:	4a37      	ldr	r2, [pc, #220]	@ (800489c <_printf_float+0x308>)
 80047c0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80047c2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80047c4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80047c6:	47a0      	blx	r4
 80047c8:	3001      	adds	r0, #1
 80047ca:	d100      	bne.n	80047ce <_printf_float+0x23a>
 80047cc:	e73e      	b.n	800464c <_printf_float+0xb8>
 80047ce:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 80047d0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80047d2:	42b3      	cmp	r3, r6
 80047d4:	db02      	blt.n	80047dc <_printf_float+0x248>
 80047d6:	682b      	ldr	r3, [r5, #0]
 80047d8:	07db      	lsls	r3, r3, #31
 80047da:	d50c      	bpl.n	80047f6 <_printf_float+0x262>
 80047dc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80047de:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80047e0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80047e2:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80047e4:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80047e6:	47a0      	blx	r4
 80047e8:	2400      	movs	r4, #0
 80047ea:	3001      	adds	r0, #1
 80047ec:	d100      	bne.n	80047f0 <_printf_float+0x25c>
 80047ee:	e72d      	b.n	800464c <_printf_float+0xb8>
 80047f0:	1e73      	subs	r3, r6, #1
 80047f2:	42a3      	cmp	r3, r4
 80047f4:	dc0a      	bgt.n	800480c <_printf_float+0x278>
 80047f6:	682b      	ldr	r3, [r5, #0]
 80047f8:	079b      	lsls	r3, r3, #30
 80047fa:	d500      	bpl.n	80047fe <_printf_float+0x26a>
 80047fc:	e105      	b.n	8004a0a <_printf_float+0x476>
 80047fe:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8004800:	68e8      	ldr	r0, [r5, #12]
 8004802:	4298      	cmp	r0, r3
 8004804:	db00      	blt.n	8004808 <_printf_float+0x274>
 8004806:	e723      	b.n	8004650 <_printf_float+0xbc>
 8004808:	0018      	movs	r0, r3
 800480a:	e721      	b.n	8004650 <_printf_float+0xbc>
 800480c:	002a      	movs	r2, r5
 800480e:	2301      	movs	r3, #1
 8004810:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004812:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004814:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8004816:	321a      	adds	r2, #26
 8004818:	47b8      	blx	r7
 800481a:	3001      	adds	r0, #1
 800481c:	d100      	bne.n	8004820 <_printf_float+0x28c>
 800481e:	e715      	b.n	800464c <_printf_float+0xb8>
 8004820:	3401      	adds	r4, #1
 8004822:	e7e5      	b.n	80047f0 <_printf_float+0x25c>
 8004824:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8004826:	2b00      	cmp	r3, #0
 8004828:	dc3a      	bgt.n	80048a0 <_printf_float+0x30c>
 800482a:	2301      	movs	r3, #1
 800482c:	4a1b      	ldr	r2, [pc, #108]	@ (800489c <_printf_float+0x308>)
 800482e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004830:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004832:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8004834:	47a0      	blx	r4
 8004836:	3001      	adds	r0, #1
 8004838:	d100      	bne.n	800483c <_printf_float+0x2a8>
 800483a:	e707      	b.n	800464c <_printf_float+0xb8>
 800483c:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 800483e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8004840:	4333      	orrs	r3, r6
 8004842:	d102      	bne.n	800484a <_printf_float+0x2b6>
 8004844:	682b      	ldr	r3, [r5, #0]
 8004846:	07db      	lsls	r3, r3, #31
 8004848:	d5d5      	bpl.n	80047f6 <_printf_float+0x262>
 800484a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800484c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800484e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004850:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004852:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8004854:	47a0      	blx	r4
 8004856:	2300      	movs	r3, #0
 8004858:	3001      	adds	r0, #1
 800485a:	d100      	bne.n	800485e <_printf_float+0x2ca>
 800485c:	e6f6      	b.n	800464c <_printf_float+0xb8>
 800485e:	930c      	str	r3, [sp, #48]	@ 0x30
 8004860:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8004862:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8004864:	425b      	negs	r3, r3
 8004866:	4293      	cmp	r3, r2
 8004868:	dc01      	bgt.n	800486e <_printf_float+0x2da>
 800486a:	0033      	movs	r3, r6
 800486c:	e792      	b.n	8004794 <_printf_float+0x200>
 800486e:	002a      	movs	r2, r5
 8004870:	2301      	movs	r3, #1
 8004872:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004874:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004876:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8004878:	321a      	adds	r2, #26
 800487a:	47a0      	blx	r4
 800487c:	3001      	adds	r0, #1
 800487e:	d100      	bne.n	8004882 <_printf_float+0x2ee>
 8004880:	e6e4      	b.n	800464c <_printf_float+0xb8>
 8004882:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004884:	3301      	adds	r3, #1
 8004886:	e7ea      	b.n	800485e <_printf_float+0x2ca>
 8004888:	7fefffff 	.word	0x7fefffff
 800488c:	0800738c 	.word	0x0800738c
 8004890:	08007390 	.word	0x08007390
 8004894:	08007394 	.word	0x08007394
 8004898:	08007398 	.word	0x08007398
 800489c:	0800739c 	.word	0x0800739c
 80048a0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80048a2:	6dae      	ldr	r6, [r5, #88]	@ 0x58
 80048a4:	930c      	str	r3, [sp, #48]	@ 0x30
 80048a6:	429e      	cmp	r6, r3
 80048a8:	dd00      	ble.n	80048ac <_printf_float+0x318>
 80048aa:	001e      	movs	r6, r3
 80048ac:	2e00      	cmp	r6, #0
 80048ae:	dc31      	bgt.n	8004914 <_printf_float+0x380>
 80048b0:	43f3      	mvns	r3, r6
 80048b2:	2400      	movs	r4, #0
 80048b4:	17db      	asrs	r3, r3, #31
 80048b6:	4033      	ands	r3, r6
 80048b8:	930e      	str	r3, [sp, #56]	@ 0x38
 80048ba:	6dae      	ldr	r6, [r5, #88]	@ 0x58
 80048bc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80048be:	1af3      	subs	r3, r6, r3
 80048c0:	42a3      	cmp	r3, r4
 80048c2:	dc30      	bgt.n	8004926 <_printf_float+0x392>
 80048c4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80048c6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80048c8:	429a      	cmp	r2, r3
 80048ca:	dc38      	bgt.n	800493e <_printf_float+0x3aa>
 80048cc:	682b      	ldr	r3, [r5, #0]
 80048ce:	07db      	lsls	r3, r3, #31
 80048d0:	d435      	bmi.n	800493e <_printf_float+0x3aa>
 80048d2:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80048d4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80048d6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80048d8:	1b9b      	subs	r3, r3, r6
 80048da:	1b14      	subs	r4, r2, r4
 80048dc:	429c      	cmp	r4, r3
 80048de:	dd00      	ble.n	80048e2 <_printf_float+0x34e>
 80048e0:	001c      	movs	r4, r3
 80048e2:	2c00      	cmp	r4, #0
 80048e4:	dc34      	bgt.n	8004950 <_printf_float+0x3bc>
 80048e6:	43e3      	mvns	r3, r4
 80048e8:	2600      	movs	r6, #0
 80048ea:	17db      	asrs	r3, r3, #31
 80048ec:	401c      	ands	r4, r3
 80048ee:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80048f0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80048f2:	1ad3      	subs	r3, r2, r3
 80048f4:	1b1b      	subs	r3, r3, r4
 80048f6:	42b3      	cmp	r3, r6
 80048f8:	dc00      	bgt.n	80048fc <_printf_float+0x368>
 80048fa:	e77c      	b.n	80047f6 <_printf_float+0x262>
 80048fc:	002a      	movs	r2, r5
 80048fe:	2301      	movs	r3, #1
 8004900:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004902:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004904:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8004906:	321a      	adds	r2, #26
 8004908:	47b8      	blx	r7
 800490a:	3001      	adds	r0, #1
 800490c:	d100      	bne.n	8004910 <_printf_float+0x37c>
 800490e:	e69d      	b.n	800464c <_printf_float+0xb8>
 8004910:	3601      	adds	r6, #1
 8004912:	e7ec      	b.n	80048ee <_printf_float+0x35a>
 8004914:	0033      	movs	r3, r6
 8004916:	003a      	movs	r2, r7
 8004918:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800491a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800491c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 800491e:	47a0      	blx	r4
 8004920:	3001      	adds	r0, #1
 8004922:	d1c5      	bne.n	80048b0 <_printf_float+0x31c>
 8004924:	e692      	b.n	800464c <_printf_float+0xb8>
 8004926:	002a      	movs	r2, r5
 8004928:	2301      	movs	r3, #1
 800492a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800492c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800492e:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8004930:	321a      	adds	r2, #26
 8004932:	47b0      	blx	r6
 8004934:	3001      	adds	r0, #1
 8004936:	d100      	bne.n	800493a <_printf_float+0x3a6>
 8004938:	e688      	b.n	800464c <_printf_float+0xb8>
 800493a:	3401      	adds	r4, #1
 800493c:	e7bd      	b.n	80048ba <_printf_float+0x326>
 800493e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004940:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8004942:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004944:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004946:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8004948:	47a0      	blx	r4
 800494a:	3001      	adds	r0, #1
 800494c:	d1c1      	bne.n	80048d2 <_printf_float+0x33e>
 800494e:	e67d      	b.n	800464c <_printf_float+0xb8>
 8004950:	19ba      	adds	r2, r7, r6
 8004952:	0023      	movs	r3, r4
 8004954:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004956:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004958:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 800495a:	47b0      	blx	r6
 800495c:	3001      	adds	r0, #1
 800495e:	d1c2      	bne.n	80048e6 <_printf_float+0x352>
 8004960:	e674      	b.n	800464c <_printf_float+0xb8>
 8004962:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8004964:	930c      	str	r3, [sp, #48]	@ 0x30
 8004966:	2b01      	cmp	r3, #1
 8004968:	dc02      	bgt.n	8004970 <_printf_float+0x3dc>
 800496a:	2301      	movs	r3, #1
 800496c:	421a      	tst	r2, r3
 800496e:	d039      	beq.n	80049e4 <_printf_float+0x450>
 8004970:	2301      	movs	r3, #1
 8004972:	003a      	movs	r2, r7
 8004974:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004976:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004978:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 800497a:	47b0      	blx	r6
 800497c:	3001      	adds	r0, #1
 800497e:	d100      	bne.n	8004982 <_printf_float+0x3ee>
 8004980:	e664      	b.n	800464c <_printf_float+0xb8>
 8004982:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004984:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8004986:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004988:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800498a:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 800498c:	47b0      	blx	r6
 800498e:	3001      	adds	r0, #1
 8004990:	d100      	bne.n	8004994 <_printf_float+0x400>
 8004992:	e65b      	b.n	800464c <_printf_float+0xb8>
 8004994:	6ca8      	ldr	r0, [r5, #72]	@ 0x48
 8004996:	6ce9      	ldr	r1, [r5, #76]	@ 0x4c
 8004998:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800499a:	2200      	movs	r2, #0
 800499c:	3b01      	subs	r3, #1
 800499e:	930c      	str	r3, [sp, #48]	@ 0x30
 80049a0:	2300      	movs	r3, #0
 80049a2:	f7fb fd53 	bl	800044c <__aeabi_dcmpeq>
 80049a6:	2800      	cmp	r0, #0
 80049a8:	d11a      	bne.n	80049e0 <_printf_float+0x44c>
 80049aa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80049ac:	1c7a      	adds	r2, r7, #1
 80049ae:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80049b0:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80049b2:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 80049b4:	47b0      	blx	r6
 80049b6:	3001      	adds	r0, #1
 80049b8:	d10e      	bne.n	80049d8 <_printf_float+0x444>
 80049ba:	e647      	b.n	800464c <_printf_float+0xb8>
 80049bc:	002a      	movs	r2, r5
 80049be:	2301      	movs	r3, #1
 80049c0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80049c2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80049c4:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80049c6:	321a      	adds	r2, #26
 80049c8:	47b8      	blx	r7
 80049ca:	3001      	adds	r0, #1
 80049cc:	d100      	bne.n	80049d0 <_printf_float+0x43c>
 80049ce:	e63d      	b.n	800464c <_printf_float+0xb8>
 80049d0:	3601      	adds	r6, #1
 80049d2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80049d4:	429e      	cmp	r6, r3
 80049d6:	dbf1      	blt.n	80049bc <_printf_float+0x428>
 80049d8:	002a      	movs	r2, r5
 80049da:	0023      	movs	r3, r4
 80049dc:	3250      	adds	r2, #80	@ 0x50
 80049de:	e6da      	b.n	8004796 <_printf_float+0x202>
 80049e0:	2600      	movs	r6, #0
 80049e2:	e7f6      	b.n	80049d2 <_printf_float+0x43e>
 80049e4:	003a      	movs	r2, r7
 80049e6:	e7e2      	b.n	80049ae <_printf_float+0x41a>
 80049e8:	002a      	movs	r2, r5
 80049ea:	2301      	movs	r3, #1
 80049ec:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80049ee:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80049f0:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 80049f2:	3219      	adds	r2, #25
 80049f4:	47b0      	blx	r6
 80049f6:	3001      	adds	r0, #1
 80049f8:	d100      	bne.n	80049fc <_printf_float+0x468>
 80049fa:	e627      	b.n	800464c <_printf_float+0xb8>
 80049fc:	3401      	adds	r4, #1
 80049fe:	68eb      	ldr	r3, [r5, #12]
 8004a00:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8004a02:	1a9b      	subs	r3, r3, r2
 8004a04:	42a3      	cmp	r3, r4
 8004a06:	dcef      	bgt.n	80049e8 <_printf_float+0x454>
 8004a08:	e6f9      	b.n	80047fe <_printf_float+0x26a>
 8004a0a:	2400      	movs	r4, #0
 8004a0c:	e7f7      	b.n	80049fe <_printf_float+0x46a>
 8004a0e:	46c0      	nop			@ (mov r8, r8)

08004a10 <_printf_common>:
 8004a10:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004a12:	0016      	movs	r6, r2
 8004a14:	9301      	str	r3, [sp, #4]
 8004a16:	688a      	ldr	r2, [r1, #8]
 8004a18:	690b      	ldr	r3, [r1, #16]
 8004a1a:	000c      	movs	r4, r1
 8004a1c:	9000      	str	r0, [sp, #0]
 8004a1e:	4293      	cmp	r3, r2
 8004a20:	da00      	bge.n	8004a24 <_printf_common+0x14>
 8004a22:	0013      	movs	r3, r2
 8004a24:	0022      	movs	r2, r4
 8004a26:	6033      	str	r3, [r6, #0]
 8004a28:	3243      	adds	r2, #67	@ 0x43
 8004a2a:	7812      	ldrb	r2, [r2, #0]
 8004a2c:	2a00      	cmp	r2, #0
 8004a2e:	d001      	beq.n	8004a34 <_printf_common+0x24>
 8004a30:	3301      	adds	r3, #1
 8004a32:	6033      	str	r3, [r6, #0]
 8004a34:	6823      	ldr	r3, [r4, #0]
 8004a36:	069b      	lsls	r3, r3, #26
 8004a38:	d502      	bpl.n	8004a40 <_printf_common+0x30>
 8004a3a:	6833      	ldr	r3, [r6, #0]
 8004a3c:	3302      	adds	r3, #2
 8004a3e:	6033      	str	r3, [r6, #0]
 8004a40:	6822      	ldr	r2, [r4, #0]
 8004a42:	2306      	movs	r3, #6
 8004a44:	0015      	movs	r5, r2
 8004a46:	401d      	ands	r5, r3
 8004a48:	421a      	tst	r2, r3
 8004a4a:	d027      	beq.n	8004a9c <_printf_common+0x8c>
 8004a4c:	0023      	movs	r3, r4
 8004a4e:	3343      	adds	r3, #67	@ 0x43
 8004a50:	781b      	ldrb	r3, [r3, #0]
 8004a52:	1e5a      	subs	r2, r3, #1
 8004a54:	4193      	sbcs	r3, r2
 8004a56:	6822      	ldr	r2, [r4, #0]
 8004a58:	0692      	lsls	r2, r2, #26
 8004a5a:	d430      	bmi.n	8004abe <_printf_common+0xae>
 8004a5c:	0022      	movs	r2, r4
 8004a5e:	9901      	ldr	r1, [sp, #4]
 8004a60:	9800      	ldr	r0, [sp, #0]
 8004a62:	9d08      	ldr	r5, [sp, #32]
 8004a64:	3243      	adds	r2, #67	@ 0x43
 8004a66:	47a8      	blx	r5
 8004a68:	3001      	adds	r0, #1
 8004a6a:	d025      	beq.n	8004ab8 <_printf_common+0xa8>
 8004a6c:	2206      	movs	r2, #6
 8004a6e:	6823      	ldr	r3, [r4, #0]
 8004a70:	2500      	movs	r5, #0
 8004a72:	4013      	ands	r3, r2
 8004a74:	2b04      	cmp	r3, #4
 8004a76:	d105      	bne.n	8004a84 <_printf_common+0x74>
 8004a78:	6833      	ldr	r3, [r6, #0]
 8004a7a:	68e5      	ldr	r5, [r4, #12]
 8004a7c:	1aed      	subs	r5, r5, r3
 8004a7e:	43eb      	mvns	r3, r5
 8004a80:	17db      	asrs	r3, r3, #31
 8004a82:	401d      	ands	r5, r3
 8004a84:	68a3      	ldr	r3, [r4, #8]
 8004a86:	6922      	ldr	r2, [r4, #16]
 8004a88:	4293      	cmp	r3, r2
 8004a8a:	dd01      	ble.n	8004a90 <_printf_common+0x80>
 8004a8c:	1a9b      	subs	r3, r3, r2
 8004a8e:	18ed      	adds	r5, r5, r3
 8004a90:	2600      	movs	r6, #0
 8004a92:	42b5      	cmp	r5, r6
 8004a94:	d120      	bne.n	8004ad8 <_printf_common+0xc8>
 8004a96:	2000      	movs	r0, #0
 8004a98:	e010      	b.n	8004abc <_printf_common+0xac>
 8004a9a:	3501      	adds	r5, #1
 8004a9c:	68e3      	ldr	r3, [r4, #12]
 8004a9e:	6832      	ldr	r2, [r6, #0]
 8004aa0:	1a9b      	subs	r3, r3, r2
 8004aa2:	42ab      	cmp	r3, r5
 8004aa4:	ddd2      	ble.n	8004a4c <_printf_common+0x3c>
 8004aa6:	0022      	movs	r2, r4
 8004aa8:	2301      	movs	r3, #1
 8004aaa:	9901      	ldr	r1, [sp, #4]
 8004aac:	9800      	ldr	r0, [sp, #0]
 8004aae:	9f08      	ldr	r7, [sp, #32]
 8004ab0:	3219      	adds	r2, #25
 8004ab2:	47b8      	blx	r7
 8004ab4:	3001      	adds	r0, #1
 8004ab6:	d1f0      	bne.n	8004a9a <_printf_common+0x8a>
 8004ab8:	2001      	movs	r0, #1
 8004aba:	4240      	negs	r0, r0
 8004abc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8004abe:	2030      	movs	r0, #48	@ 0x30
 8004ac0:	18e1      	adds	r1, r4, r3
 8004ac2:	3143      	adds	r1, #67	@ 0x43
 8004ac4:	7008      	strb	r0, [r1, #0]
 8004ac6:	0021      	movs	r1, r4
 8004ac8:	1c5a      	adds	r2, r3, #1
 8004aca:	3145      	adds	r1, #69	@ 0x45
 8004acc:	7809      	ldrb	r1, [r1, #0]
 8004ace:	18a2      	adds	r2, r4, r2
 8004ad0:	3243      	adds	r2, #67	@ 0x43
 8004ad2:	3302      	adds	r3, #2
 8004ad4:	7011      	strb	r1, [r2, #0]
 8004ad6:	e7c1      	b.n	8004a5c <_printf_common+0x4c>
 8004ad8:	0022      	movs	r2, r4
 8004ada:	2301      	movs	r3, #1
 8004adc:	9901      	ldr	r1, [sp, #4]
 8004ade:	9800      	ldr	r0, [sp, #0]
 8004ae0:	9f08      	ldr	r7, [sp, #32]
 8004ae2:	321a      	adds	r2, #26
 8004ae4:	47b8      	blx	r7
 8004ae6:	3001      	adds	r0, #1
 8004ae8:	d0e6      	beq.n	8004ab8 <_printf_common+0xa8>
 8004aea:	3601      	adds	r6, #1
 8004aec:	e7d1      	b.n	8004a92 <_printf_common+0x82>
	...

08004af0 <_printf_i>:
 8004af0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004af2:	b08b      	sub	sp, #44	@ 0x2c
 8004af4:	9206      	str	r2, [sp, #24]
 8004af6:	000a      	movs	r2, r1
 8004af8:	3243      	adds	r2, #67	@ 0x43
 8004afa:	9307      	str	r3, [sp, #28]
 8004afc:	9005      	str	r0, [sp, #20]
 8004afe:	9203      	str	r2, [sp, #12]
 8004b00:	7e0a      	ldrb	r2, [r1, #24]
 8004b02:	000c      	movs	r4, r1
 8004b04:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8004b06:	2a78      	cmp	r2, #120	@ 0x78
 8004b08:	d809      	bhi.n	8004b1e <_printf_i+0x2e>
 8004b0a:	2a62      	cmp	r2, #98	@ 0x62
 8004b0c:	d80b      	bhi.n	8004b26 <_printf_i+0x36>
 8004b0e:	2a00      	cmp	r2, #0
 8004b10:	d100      	bne.n	8004b14 <_printf_i+0x24>
 8004b12:	e0bc      	b.n	8004c8e <_printf_i+0x19e>
 8004b14:	497b      	ldr	r1, [pc, #492]	@ (8004d04 <_printf_i+0x214>)
 8004b16:	9104      	str	r1, [sp, #16]
 8004b18:	2a58      	cmp	r2, #88	@ 0x58
 8004b1a:	d100      	bne.n	8004b1e <_printf_i+0x2e>
 8004b1c:	e090      	b.n	8004c40 <_printf_i+0x150>
 8004b1e:	0025      	movs	r5, r4
 8004b20:	3542      	adds	r5, #66	@ 0x42
 8004b22:	702a      	strb	r2, [r5, #0]
 8004b24:	e022      	b.n	8004b6c <_printf_i+0x7c>
 8004b26:	0010      	movs	r0, r2
 8004b28:	3863      	subs	r0, #99	@ 0x63
 8004b2a:	2815      	cmp	r0, #21
 8004b2c:	d8f7      	bhi.n	8004b1e <_printf_i+0x2e>
 8004b2e:	f7fb fafd 	bl	800012c <__gnu_thumb1_case_shi>
 8004b32:	0016      	.short	0x0016
 8004b34:	fff6001f 	.word	0xfff6001f
 8004b38:	fff6fff6 	.word	0xfff6fff6
 8004b3c:	001ffff6 	.word	0x001ffff6
 8004b40:	fff6fff6 	.word	0xfff6fff6
 8004b44:	fff6fff6 	.word	0xfff6fff6
 8004b48:	003600a1 	.word	0x003600a1
 8004b4c:	fff60080 	.word	0xfff60080
 8004b50:	00b2fff6 	.word	0x00b2fff6
 8004b54:	0036fff6 	.word	0x0036fff6
 8004b58:	fff6fff6 	.word	0xfff6fff6
 8004b5c:	0084      	.short	0x0084
 8004b5e:	0025      	movs	r5, r4
 8004b60:	681a      	ldr	r2, [r3, #0]
 8004b62:	3542      	adds	r5, #66	@ 0x42
 8004b64:	1d11      	adds	r1, r2, #4
 8004b66:	6019      	str	r1, [r3, #0]
 8004b68:	6813      	ldr	r3, [r2, #0]
 8004b6a:	702b      	strb	r3, [r5, #0]
 8004b6c:	2301      	movs	r3, #1
 8004b6e:	e0a0      	b.n	8004cb2 <_printf_i+0x1c2>
 8004b70:	6818      	ldr	r0, [r3, #0]
 8004b72:	6809      	ldr	r1, [r1, #0]
 8004b74:	1d02      	adds	r2, r0, #4
 8004b76:	060d      	lsls	r5, r1, #24
 8004b78:	d50b      	bpl.n	8004b92 <_printf_i+0xa2>
 8004b7a:	6806      	ldr	r6, [r0, #0]
 8004b7c:	601a      	str	r2, [r3, #0]
 8004b7e:	2e00      	cmp	r6, #0
 8004b80:	da03      	bge.n	8004b8a <_printf_i+0x9a>
 8004b82:	232d      	movs	r3, #45	@ 0x2d
 8004b84:	9a03      	ldr	r2, [sp, #12]
 8004b86:	4276      	negs	r6, r6
 8004b88:	7013      	strb	r3, [r2, #0]
 8004b8a:	4b5e      	ldr	r3, [pc, #376]	@ (8004d04 <_printf_i+0x214>)
 8004b8c:	270a      	movs	r7, #10
 8004b8e:	9304      	str	r3, [sp, #16]
 8004b90:	e018      	b.n	8004bc4 <_printf_i+0xd4>
 8004b92:	6806      	ldr	r6, [r0, #0]
 8004b94:	601a      	str	r2, [r3, #0]
 8004b96:	0649      	lsls	r1, r1, #25
 8004b98:	d5f1      	bpl.n	8004b7e <_printf_i+0x8e>
 8004b9a:	b236      	sxth	r6, r6
 8004b9c:	e7ef      	b.n	8004b7e <_printf_i+0x8e>
 8004b9e:	6808      	ldr	r0, [r1, #0]
 8004ba0:	6819      	ldr	r1, [r3, #0]
 8004ba2:	c940      	ldmia	r1!, {r6}
 8004ba4:	0605      	lsls	r5, r0, #24
 8004ba6:	d402      	bmi.n	8004bae <_printf_i+0xbe>
 8004ba8:	0640      	lsls	r0, r0, #25
 8004baa:	d500      	bpl.n	8004bae <_printf_i+0xbe>
 8004bac:	b2b6      	uxth	r6, r6
 8004bae:	6019      	str	r1, [r3, #0]
 8004bb0:	4b54      	ldr	r3, [pc, #336]	@ (8004d04 <_printf_i+0x214>)
 8004bb2:	270a      	movs	r7, #10
 8004bb4:	9304      	str	r3, [sp, #16]
 8004bb6:	2a6f      	cmp	r2, #111	@ 0x6f
 8004bb8:	d100      	bne.n	8004bbc <_printf_i+0xcc>
 8004bba:	3f02      	subs	r7, #2
 8004bbc:	0023      	movs	r3, r4
 8004bbe:	2200      	movs	r2, #0
 8004bc0:	3343      	adds	r3, #67	@ 0x43
 8004bc2:	701a      	strb	r2, [r3, #0]
 8004bc4:	6863      	ldr	r3, [r4, #4]
 8004bc6:	60a3      	str	r3, [r4, #8]
 8004bc8:	2b00      	cmp	r3, #0
 8004bca:	db03      	blt.n	8004bd4 <_printf_i+0xe4>
 8004bcc:	2104      	movs	r1, #4
 8004bce:	6822      	ldr	r2, [r4, #0]
 8004bd0:	438a      	bics	r2, r1
 8004bd2:	6022      	str	r2, [r4, #0]
 8004bd4:	2e00      	cmp	r6, #0
 8004bd6:	d102      	bne.n	8004bde <_printf_i+0xee>
 8004bd8:	9d03      	ldr	r5, [sp, #12]
 8004bda:	2b00      	cmp	r3, #0
 8004bdc:	d00c      	beq.n	8004bf8 <_printf_i+0x108>
 8004bde:	9d03      	ldr	r5, [sp, #12]
 8004be0:	0030      	movs	r0, r6
 8004be2:	0039      	movs	r1, r7
 8004be4:	f7fb fb32 	bl	800024c <__aeabi_uidivmod>
 8004be8:	9b04      	ldr	r3, [sp, #16]
 8004bea:	3d01      	subs	r5, #1
 8004bec:	5c5b      	ldrb	r3, [r3, r1]
 8004bee:	702b      	strb	r3, [r5, #0]
 8004bf0:	0033      	movs	r3, r6
 8004bf2:	0006      	movs	r6, r0
 8004bf4:	429f      	cmp	r7, r3
 8004bf6:	d9f3      	bls.n	8004be0 <_printf_i+0xf0>
 8004bf8:	2f08      	cmp	r7, #8
 8004bfa:	d109      	bne.n	8004c10 <_printf_i+0x120>
 8004bfc:	6823      	ldr	r3, [r4, #0]
 8004bfe:	07db      	lsls	r3, r3, #31
 8004c00:	d506      	bpl.n	8004c10 <_printf_i+0x120>
 8004c02:	6862      	ldr	r2, [r4, #4]
 8004c04:	6923      	ldr	r3, [r4, #16]
 8004c06:	429a      	cmp	r2, r3
 8004c08:	dc02      	bgt.n	8004c10 <_printf_i+0x120>
 8004c0a:	2330      	movs	r3, #48	@ 0x30
 8004c0c:	3d01      	subs	r5, #1
 8004c0e:	702b      	strb	r3, [r5, #0]
 8004c10:	9b03      	ldr	r3, [sp, #12]
 8004c12:	1b5b      	subs	r3, r3, r5
 8004c14:	6123      	str	r3, [r4, #16]
 8004c16:	9b07      	ldr	r3, [sp, #28]
 8004c18:	0021      	movs	r1, r4
 8004c1a:	9300      	str	r3, [sp, #0]
 8004c1c:	9805      	ldr	r0, [sp, #20]
 8004c1e:	9b06      	ldr	r3, [sp, #24]
 8004c20:	aa09      	add	r2, sp, #36	@ 0x24
 8004c22:	f7ff fef5 	bl	8004a10 <_printf_common>
 8004c26:	3001      	adds	r0, #1
 8004c28:	d148      	bne.n	8004cbc <_printf_i+0x1cc>
 8004c2a:	2001      	movs	r0, #1
 8004c2c:	4240      	negs	r0, r0
 8004c2e:	b00b      	add	sp, #44	@ 0x2c
 8004c30:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004c32:	2220      	movs	r2, #32
 8004c34:	6809      	ldr	r1, [r1, #0]
 8004c36:	430a      	orrs	r2, r1
 8004c38:	6022      	str	r2, [r4, #0]
 8004c3a:	2278      	movs	r2, #120	@ 0x78
 8004c3c:	4932      	ldr	r1, [pc, #200]	@ (8004d08 <_printf_i+0x218>)
 8004c3e:	9104      	str	r1, [sp, #16]
 8004c40:	0021      	movs	r1, r4
 8004c42:	3145      	adds	r1, #69	@ 0x45
 8004c44:	700a      	strb	r2, [r1, #0]
 8004c46:	6819      	ldr	r1, [r3, #0]
 8004c48:	6822      	ldr	r2, [r4, #0]
 8004c4a:	c940      	ldmia	r1!, {r6}
 8004c4c:	0610      	lsls	r0, r2, #24
 8004c4e:	d402      	bmi.n	8004c56 <_printf_i+0x166>
 8004c50:	0650      	lsls	r0, r2, #25
 8004c52:	d500      	bpl.n	8004c56 <_printf_i+0x166>
 8004c54:	b2b6      	uxth	r6, r6
 8004c56:	6019      	str	r1, [r3, #0]
 8004c58:	07d3      	lsls	r3, r2, #31
 8004c5a:	d502      	bpl.n	8004c62 <_printf_i+0x172>
 8004c5c:	2320      	movs	r3, #32
 8004c5e:	4313      	orrs	r3, r2
 8004c60:	6023      	str	r3, [r4, #0]
 8004c62:	2e00      	cmp	r6, #0
 8004c64:	d001      	beq.n	8004c6a <_printf_i+0x17a>
 8004c66:	2710      	movs	r7, #16
 8004c68:	e7a8      	b.n	8004bbc <_printf_i+0xcc>
 8004c6a:	2220      	movs	r2, #32
 8004c6c:	6823      	ldr	r3, [r4, #0]
 8004c6e:	4393      	bics	r3, r2
 8004c70:	6023      	str	r3, [r4, #0]
 8004c72:	e7f8      	b.n	8004c66 <_printf_i+0x176>
 8004c74:	681a      	ldr	r2, [r3, #0]
 8004c76:	680d      	ldr	r5, [r1, #0]
 8004c78:	1d10      	adds	r0, r2, #4
 8004c7a:	6949      	ldr	r1, [r1, #20]
 8004c7c:	6018      	str	r0, [r3, #0]
 8004c7e:	6813      	ldr	r3, [r2, #0]
 8004c80:	062e      	lsls	r6, r5, #24
 8004c82:	d501      	bpl.n	8004c88 <_printf_i+0x198>
 8004c84:	6019      	str	r1, [r3, #0]
 8004c86:	e002      	b.n	8004c8e <_printf_i+0x19e>
 8004c88:	066d      	lsls	r5, r5, #25
 8004c8a:	d5fb      	bpl.n	8004c84 <_printf_i+0x194>
 8004c8c:	8019      	strh	r1, [r3, #0]
 8004c8e:	2300      	movs	r3, #0
 8004c90:	9d03      	ldr	r5, [sp, #12]
 8004c92:	6123      	str	r3, [r4, #16]
 8004c94:	e7bf      	b.n	8004c16 <_printf_i+0x126>
 8004c96:	681a      	ldr	r2, [r3, #0]
 8004c98:	1d11      	adds	r1, r2, #4
 8004c9a:	6019      	str	r1, [r3, #0]
 8004c9c:	6815      	ldr	r5, [r2, #0]
 8004c9e:	2100      	movs	r1, #0
 8004ca0:	0028      	movs	r0, r5
 8004ca2:	6862      	ldr	r2, [r4, #4]
 8004ca4:	f000 f94f 	bl	8004f46 <memchr>
 8004ca8:	2800      	cmp	r0, #0
 8004caa:	d001      	beq.n	8004cb0 <_printf_i+0x1c0>
 8004cac:	1b40      	subs	r0, r0, r5
 8004cae:	6060      	str	r0, [r4, #4]
 8004cb0:	6863      	ldr	r3, [r4, #4]
 8004cb2:	6123      	str	r3, [r4, #16]
 8004cb4:	2300      	movs	r3, #0
 8004cb6:	9a03      	ldr	r2, [sp, #12]
 8004cb8:	7013      	strb	r3, [r2, #0]
 8004cba:	e7ac      	b.n	8004c16 <_printf_i+0x126>
 8004cbc:	002a      	movs	r2, r5
 8004cbe:	6923      	ldr	r3, [r4, #16]
 8004cc0:	9906      	ldr	r1, [sp, #24]
 8004cc2:	9805      	ldr	r0, [sp, #20]
 8004cc4:	9d07      	ldr	r5, [sp, #28]
 8004cc6:	47a8      	blx	r5
 8004cc8:	3001      	adds	r0, #1
 8004cca:	d0ae      	beq.n	8004c2a <_printf_i+0x13a>
 8004ccc:	6823      	ldr	r3, [r4, #0]
 8004cce:	079b      	lsls	r3, r3, #30
 8004cd0:	d415      	bmi.n	8004cfe <_printf_i+0x20e>
 8004cd2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004cd4:	68e0      	ldr	r0, [r4, #12]
 8004cd6:	4298      	cmp	r0, r3
 8004cd8:	daa9      	bge.n	8004c2e <_printf_i+0x13e>
 8004cda:	0018      	movs	r0, r3
 8004cdc:	e7a7      	b.n	8004c2e <_printf_i+0x13e>
 8004cde:	0022      	movs	r2, r4
 8004ce0:	2301      	movs	r3, #1
 8004ce2:	9906      	ldr	r1, [sp, #24]
 8004ce4:	9805      	ldr	r0, [sp, #20]
 8004ce6:	9e07      	ldr	r6, [sp, #28]
 8004ce8:	3219      	adds	r2, #25
 8004cea:	47b0      	blx	r6
 8004cec:	3001      	adds	r0, #1
 8004cee:	d09c      	beq.n	8004c2a <_printf_i+0x13a>
 8004cf0:	3501      	adds	r5, #1
 8004cf2:	68e3      	ldr	r3, [r4, #12]
 8004cf4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004cf6:	1a9b      	subs	r3, r3, r2
 8004cf8:	42ab      	cmp	r3, r5
 8004cfa:	dcf0      	bgt.n	8004cde <_printf_i+0x1ee>
 8004cfc:	e7e9      	b.n	8004cd2 <_printf_i+0x1e2>
 8004cfe:	2500      	movs	r5, #0
 8004d00:	e7f7      	b.n	8004cf2 <_printf_i+0x202>
 8004d02:	46c0      	nop			@ (mov r8, r8)
 8004d04:	0800739e 	.word	0x0800739e
 8004d08:	080073af 	.word	0x080073af

08004d0c <siprintf>:
 8004d0c:	b40e      	push	{r1, r2, r3}
 8004d0e:	b500      	push	{lr}
 8004d10:	490b      	ldr	r1, [pc, #44]	@ (8004d40 <siprintf+0x34>)
 8004d12:	b09c      	sub	sp, #112	@ 0x70
 8004d14:	ab1d      	add	r3, sp, #116	@ 0x74
 8004d16:	9002      	str	r0, [sp, #8]
 8004d18:	9006      	str	r0, [sp, #24]
 8004d1a:	9107      	str	r1, [sp, #28]
 8004d1c:	9104      	str	r1, [sp, #16]
 8004d1e:	4809      	ldr	r0, [pc, #36]	@ (8004d44 <siprintf+0x38>)
 8004d20:	4909      	ldr	r1, [pc, #36]	@ (8004d48 <siprintf+0x3c>)
 8004d22:	cb04      	ldmia	r3!, {r2}
 8004d24:	9105      	str	r1, [sp, #20]
 8004d26:	6800      	ldr	r0, [r0, #0]
 8004d28:	a902      	add	r1, sp, #8
 8004d2a:	9301      	str	r3, [sp, #4]
 8004d2c:	f001 f802 	bl	8005d34 <_svfiprintf_r>
 8004d30:	2200      	movs	r2, #0
 8004d32:	9b02      	ldr	r3, [sp, #8]
 8004d34:	701a      	strb	r2, [r3, #0]
 8004d36:	b01c      	add	sp, #112	@ 0x70
 8004d38:	bc08      	pop	{r3}
 8004d3a:	b003      	add	sp, #12
 8004d3c:	4718      	bx	r3
 8004d3e:	46c0      	nop			@ (mov r8, r8)
 8004d40:	7fffffff 	.word	0x7fffffff
 8004d44:	20000018 	.word	0x20000018
 8004d48:	ffff0208 	.word	0xffff0208

08004d4c <std>:
 8004d4c:	2300      	movs	r3, #0
 8004d4e:	b510      	push	{r4, lr}
 8004d50:	0004      	movs	r4, r0
 8004d52:	6003      	str	r3, [r0, #0]
 8004d54:	6043      	str	r3, [r0, #4]
 8004d56:	6083      	str	r3, [r0, #8]
 8004d58:	8181      	strh	r1, [r0, #12]
 8004d5a:	6643      	str	r3, [r0, #100]	@ 0x64
 8004d5c:	81c2      	strh	r2, [r0, #14]
 8004d5e:	6103      	str	r3, [r0, #16]
 8004d60:	6143      	str	r3, [r0, #20]
 8004d62:	6183      	str	r3, [r0, #24]
 8004d64:	0019      	movs	r1, r3
 8004d66:	2208      	movs	r2, #8
 8004d68:	305c      	adds	r0, #92	@ 0x5c
 8004d6a:	f000 f8b3 	bl	8004ed4 <memset>
 8004d6e:	4b0b      	ldr	r3, [pc, #44]	@ (8004d9c <std+0x50>)
 8004d70:	6224      	str	r4, [r4, #32]
 8004d72:	6263      	str	r3, [r4, #36]	@ 0x24
 8004d74:	4b0a      	ldr	r3, [pc, #40]	@ (8004da0 <std+0x54>)
 8004d76:	62a3      	str	r3, [r4, #40]	@ 0x28
 8004d78:	4b0a      	ldr	r3, [pc, #40]	@ (8004da4 <std+0x58>)
 8004d7a:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8004d7c:	4b0a      	ldr	r3, [pc, #40]	@ (8004da8 <std+0x5c>)
 8004d7e:	6323      	str	r3, [r4, #48]	@ 0x30
 8004d80:	4b0a      	ldr	r3, [pc, #40]	@ (8004dac <std+0x60>)
 8004d82:	429c      	cmp	r4, r3
 8004d84:	d005      	beq.n	8004d92 <std+0x46>
 8004d86:	4b0a      	ldr	r3, [pc, #40]	@ (8004db0 <std+0x64>)
 8004d88:	429c      	cmp	r4, r3
 8004d8a:	d002      	beq.n	8004d92 <std+0x46>
 8004d8c:	4b09      	ldr	r3, [pc, #36]	@ (8004db4 <std+0x68>)
 8004d8e:	429c      	cmp	r4, r3
 8004d90:	d103      	bne.n	8004d9a <std+0x4e>
 8004d92:	0020      	movs	r0, r4
 8004d94:	3058      	adds	r0, #88	@ 0x58
 8004d96:	f000 f8d3 	bl	8004f40 <__retarget_lock_init_recursive>
 8004d9a:	bd10      	pop	{r4, pc}
 8004d9c:	08006955 	.word	0x08006955
 8004da0:	0800697d 	.word	0x0800697d
 8004da4:	080069b5 	.word	0x080069b5
 8004da8:	080069e1 	.word	0x080069e1
 8004dac:	20000428 	.word	0x20000428
 8004db0:	20000490 	.word	0x20000490
 8004db4:	200004f8 	.word	0x200004f8

08004db8 <stdio_exit_handler>:
 8004db8:	b510      	push	{r4, lr}
 8004dba:	4a03      	ldr	r2, [pc, #12]	@ (8004dc8 <stdio_exit_handler+0x10>)
 8004dbc:	4903      	ldr	r1, [pc, #12]	@ (8004dcc <stdio_exit_handler+0x14>)
 8004dbe:	4804      	ldr	r0, [pc, #16]	@ (8004dd0 <stdio_exit_handler+0x18>)
 8004dc0:	f000 f86c 	bl	8004e9c <_fwalk_sglue>
 8004dc4:	bd10      	pop	{r4, pc}
 8004dc6:	46c0      	nop			@ (mov r8, r8)
 8004dc8:	2000000c 	.word	0x2000000c
 8004dcc:	08006195 	.word	0x08006195
 8004dd0:	2000001c 	.word	0x2000001c

08004dd4 <cleanup_stdio>:
 8004dd4:	6841      	ldr	r1, [r0, #4]
 8004dd6:	4b0b      	ldr	r3, [pc, #44]	@ (8004e04 <cleanup_stdio+0x30>)
 8004dd8:	b510      	push	{r4, lr}
 8004dda:	0004      	movs	r4, r0
 8004ddc:	4299      	cmp	r1, r3
 8004dde:	d001      	beq.n	8004de4 <cleanup_stdio+0x10>
 8004de0:	f001 f9d8 	bl	8006194 <_fflush_r>
 8004de4:	68a1      	ldr	r1, [r4, #8]
 8004de6:	4b08      	ldr	r3, [pc, #32]	@ (8004e08 <cleanup_stdio+0x34>)
 8004de8:	4299      	cmp	r1, r3
 8004dea:	d002      	beq.n	8004df2 <cleanup_stdio+0x1e>
 8004dec:	0020      	movs	r0, r4
 8004dee:	f001 f9d1 	bl	8006194 <_fflush_r>
 8004df2:	68e1      	ldr	r1, [r4, #12]
 8004df4:	4b05      	ldr	r3, [pc, #20]	@ (8004e0c <cleanup_stdio+0x38>)
 8004df6:	4299      	cmp	r1, r3
 8004df8:	d002      	beq.n	8004e00 <cleanup_stdio+0x2c>
 8004dfa:	0020      	movs	r0, r4
 8004dfc:	f001 f9ca 	bl	8006194 <_fflush_r>
 8004e00:	bd10      	pop	{r4, pc}
 8004e02:	46c0      	nop			@ (mov r8, r8)
 8004e04:	20000428 	.word	0x20000428
 8004e08:	20000490 	.word	0x20000490
 8004e0c:	200004f8 	.word	0x200004f8

08004e10 <global_stdio_init.part.0>:
 8004e10:	b510      	push	{r4, lr}
 8004e12:	4b09      	ldr	r3, [pc, #36]	@ (8004e38 <global_stdio_init.part.0+0x28>)
 8004e14:	4a09      	ldr	r2, [pc, #36]	@ (8004e3c <global_stdio_init.part.0+0x2c>)
 8004e16:	2104      	movs	r1, #4
 8004e18:	601a      	str	r2, [r3, #0]
 8004e1a:	4809      	ldr	r0, [pc, #36]	@ (8004e40 <global_stdio_init.part.0+0x30>)
 8004e1c:	2200      	movs	r2, #0
 8004e1e:	f7ff ff95 	bl	8004d4c <std>
 8004e22:	2201      	movs	r2, #1
 8004e24:	2109      	movs	r1, #9
 8004e26:	4807      	ldr	r0, [pc, #28]	@ (8004e44 <global_stdio_init.part.0+0x34>)
 8004e28:	f7ff ff90 	bl	8004d4c <std>
 8004e2c:	2202      	movs	r2, #2
 8004e2e:	2112      	movs	r1, #18
 8004e30:	4805      	ldr	r0, [pc, #20]	@ (8004e48 <global_stdio_init.part.0+0x38>)
 8004e32:	f7ff ff8b 	bl	8004d4c <std>
 8004e36:	bd10      	pop	{r4, pc}
 8004e38:	20000560 	.word	0x20000560
 8004e3c:	08004db9 	.word	0x08004db9
 8004e40:	20000428 	.word	0x20000428
 8004e44:	20000490 	.word	0x20000490
 8004e48:	200004f8 	.word	0x200004f8

08004e4c <__sfp_lock_acquire>:
 8004e4c:	b510      	push	{r4, lr}
 8004e4e:	4802      	ldr	r0, [pc, #8]	@ (8004e58 <__sfp_lock_acquire+0xc>)
 8004e50:	f000 f877 	bl	8004f42 <__retarget_lock_acquire_recursive>
 8004e54:	bd10      	pop	{r4, pc}
 8004e56:	46c0      	nop			@ (mov r8, r8)
 8004e58:	20000565 	.word	0x20000565

08004e5c <__sfp_lock_release>:
 8004e5c:	b510      	push	{r4, lr}
 8004e5e:	4802      	ldr	r0, [pc, #8]	@ (8004e68 <__sfp_lock_release+0xc>)
 8004e60:	f000 f870 	bl	8004f44 <__retarget_lock_release_recursive>
 8004e64:	bd10      	pop	{r4, pc}
 8004e66:	46c0      	nop			@ (mov r8, r8)
 8004e68:	20000565 	.word	0x20000565

08004e6c <__sinit>:
 8004e6c:	b510      	push	{r4, lr}
 8004e6e:	0004      	movs	r4, r0
 8004e70:	f7ff ffec 	bl	8004e4c <__sfp_lock_acquire>
 8004e74:	6a23      	ldr	r3, [r4, #32]
 8004e76:	2b00      	cmp	r3, #0
 8004e78:	d002      	beq.n	8004e80 <__sinit+0x14>
 8004e7a:	f7ff ffef 	bl	8004e5c <__sfp_lock_release>
 8004e7e:	bd10      	pop	{r4, pc}
 8004e80:	4b04      	ldr	r3, [pc, #16]	@ (8004e94 <__sinit+0x28>)
 8004e82:	6223      	str	r3, [r4, #32]
 8004e84:	4b04      	ldr	r3, [pc, #16]	@ (8004e98 <__sinit+0x2c>)
 8004e86:	681b      	ldr	r3, [r3, #0]
 8004e88:	2b00      	cmp	r3, #0
 8004e8a:	d1f6      	bne.n	8004e7a <__sinit+0xe>
 8004e8c:	f7ff ffc0 	bl	8004e10 <global_stdio_init.part.0>
 8004e90:	e7f3      	b.n	8004e7a <__sinit+0xe>
 8004e92:	46c0      	nop			@ (mov r8, r8)
 8004e94:	08004dd5 	.word	0x08004dd5
 8004e98:	20000560 	.word	0x20000560

08004e9c <_fwalk_sglue>:
 8004e9c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004e9e:	0014      	movs	r4, r2
 8004ea0:	2600      	movs	r6, #0
 8004ea2:	9000      	str	r0, [sp, #0]
 8004ea4:	9101      	str	r1, [sp, #4]
 8004ea6:	68a5      	ldr	r5, [r4, #8]
 8004ea8:	6867      	ldr	r7, [r4, #4]
 8004eaa:	3f01      	subs	r7, #1
 8004eac:	d504      	bpl.n	8004eb8 <_fwalk_sglue+0x1c>
 8004eae:	6824      	ldr	r4, [r4, #0]
 8004eb0:	2c00      	cmp	r4, #0
 8004eb2:	d1f8      	bne.n	8004ea6 <_fwalk_sglue+0xa>
 8004eb4:	0030      	movs	r0, r6
 8004eb6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8004eb8:	89ab      	ldrh	r3, [r5, #12]
 8004eba:	2b01      	cmp	r3, #1
 8004ebc:	d908      	bls.n	8004ed0 <_fwalk_sglue+0x34>
 8004ebe:	220e      	movs	r2, #14
 8004ec0:	5eab      	ldrsh	r3, [r5, r2]
 8004ec2:	3301      	adds	r3, #1
 8004ec4:	d004      	beq.n	8004ed0 <_fwalk_sglue+0x34>
 8004ec6:	0029      	movs	r1, r5
 8004ec8:	9800      	ldr	r0, [sp, #0]
 8004eca:	9b01      	ldr	r3, [sp, #4]
 8004ecc:	4798      	blx	r3
 8004ece:	4306      	orrs	r6, r0
 8004ed0:	3568      	adds	r5, #104	@ 0x68
 8004ed2:	e7ea      	b.n	8004eaa <_fwalk_sglue+0xe>

08004ed4 <memset>:
 8004ed4:	0003      	movs	r3, r0
 8004ed6:	1882      	adds	r2, r0, r2
 8004ed8:	4293      	cmp	r3, r2
 8004eda:	d100      	bne.n	8004ede <memset+0xa>
 8004edc:	4770      	bx	lr
 8004ede:	7019      	strb	r1, [r3, #0]
 8004ee0:	3301      	adds	r3, #1
 8004ee2:	e7f9      	b.n	8004ed8 <memset+0x4>

08004ee4 <_localeconv_r>:
 8004ee4:	4800      	ldr	r0, [pc, #0]	@ (8004ee8 <_localeconv_r+0x4>)
 8004ee6:	4770      	bx	lr
 8004ee8:	20000158 	.word	0x20000158

08004eec <__errno>:
 8004eec:	4b01      	ldr	r3, [pc, #4]	@ (8004ef4 <__errno+0x8>)
 8004eee:	6818      	ldr	r0, [r3, #0]
 8004ef0:	4770      	bx	lr
 8004ef2:	46c0      	nop			@ (mov r8, r8)
 8004ef4:	20000018 	.word	0x20000018

08004ef8 <__libc_init_array>:
 8004ef8:	b570      	push	{r4, r5, r6, lr}
 8004efa:	2600      	movs	r6, #0
 8004efc:	4c0c      	ldr	r4, [pc, #48]	@ (8004f30 <__libc_init_array+0x38>)
 8004efe:	4d0d      	ldr	r5, [pc, #52]	@ (8004f34 <__libc_init_array+0x3c>)
 8004f00:	1b64      	subs	r4, r4, r5
 8004f02:	10a4      	asrs	r4, r4, #2
 8004f04:	42a6      	cmp	r6, r4
 8004f06:	d109      	bne.n	8004f1c <__libc_init_array+0x24>
 8004f08:	2600      	movs	r6, #0
 8004f0a:	f002 f9a3 	bl	8007254 <_init>
 8004f0e:	4c0a      	ldr	r4, [pc, #40]	@ (8004f38 <__libc_init_array+0x40>)
 8004f10:	4d0a      	ldr	r5, [pc, #40]	@ (8004f3c <__libc_init_array+0x44>)
 8004f12:	1b64      	subs	r4, r4, r5
 8004f14:	10a4      	asrs	r4, r4, #2
 8004f16:	42a6      	cmp	r6, r4
 8004f18:	d105      	bne.n	8004f26 <__libc_init_array+0x2e>
 8004f1a:	bd70      	pop	{r4, r5, r6, pc}
 8004f1c:	00b3      	lsls	r3, r6, #2
 8004f1e:	58eb      	ldr	r3, [r5, r3]
 8004f20:	4798      	blx	r3
 8004f22:	3601      	adds	r6, #1
 8004f24:	e7ee      	b.n	8004f04 <__libc_init_array+0xc>
 8004f26:	00b3      	lsls	r3, r6, #2
 8004f28:	58eb      	ldr	r3, [r5, r3]
 8004f2a:	4798      	blx	r3
 8004f2c:	3601      	adds	r6, #1
 8004f2e:	e7f2      	b.n	8004f16 <__libc_init_array+0x1e>
 8004f30:	08007700 	.word	0x08007700
 8004f34:	08007700 	.word	0x08007700
 8004f38:	08007704 	.word	0x08007704
 8004f3c:	08007700 	.word	0x08007700

08004f40 <__retarget_lock_init_recursive>:
 8004f40:	4770      	bx	lr

08004f42 <__retarget_lock_acquire_recursive>:
 8004f42:	4770      	bx	lr

08004f44 <__retarget_lock_release_recursive>:
 8004f44:	4770      	bx	lr

08004f46 <memchr>:
 8004f46:	b2c9      	uxtb	r1, r1
 8004f48:	1882      	adds	r2, r0, r2
 8004f4a:	4290      	cmp	r0, r2
 8004f4c:	d101      	bne.n	8004f52 <memchr+0xc>
 8004f4e:	2000      	movs	r0, #0
 8004f50:	4770      	bx	lr
 8004f52:	7803      	ldrb	r3, [r0, #0]
 8004f54:	428b      	cmp	r3, r1
 8004f56:	d0fb      	beq.n	8004f50 <memchr+0xa>
 8004f58:	3001      	adds	r0, #1
 8004f5a:	e7f6      	b.n	8004f4a <memchr+0x4>

08004f5c <memcpy>:
 8004f5c:	2300      	movs	r3, #0
 8004f5e:	b510      	push	{r4, lr}
 8004f60:	429a      	cmp	r2, r3
 8004f62:	d100      	bne.n	8004f66 <memcpy+0xa>
 8004f64:	bd10      	pop	{r4, pc}
 8004f66:	5ccc      	ldrb	r4, [r1, r3]
 8004f68:	54c4      	strb	r4, [r0, r3]
 8004f6a:	3301      	adds	r3, #1
 8004f6c:	e7f8      	b.n	8004f60 <memcpy+0x4>

08004f6e <quorem>:
 8004f6e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004f70:	6902      	ldr	r2, [r0, #16]
 8004f72:	690f      	ldr	r7, [r1, #16]
 8004f74:	b087      	sub	sp, #28
 8004f76:	0006      	movs	r6, r0
 8004f78:	000b      	movs	r3, r1
 8004f7a:	2000      	movs	r0, #0
 8004f7c:	9102      	str	r1, [sp, #8]
 8004f7e:	42ba      	cmp	r2, r7
 8004f80:	db6d      	blt.n	800505e <quorem+0xf0>
 8004f82:	3f01      	subs	r7, #1
 8004f84:	00bc      	lsls	r4, r7, #2
 8004f86:	3314      	adds	r3, #20
 8004f88:	9305      	str	r3, [sp, #20]
 8004f8a:	191b      	adds	r3, r3, r4
 8004f8c:	9303      	str	r3, [sp, #12]
 8004f8e:	0033      	movs	r3, r6
 8004f90:	3314      	adds	r3, #20
 8004f92:	191c      	adds	r4, r3, r4
 8004f94:	9301      	str	r3, [sp, #4]
 8004f96:	6823      	ldr	r3, [r4, #0]
 8004f98:	9304      	str	r3, [sp, #16]
 8004f9a:	9b03      	ldr	r3, [sp, #12]
 8004f9c:	9804      	ldr	r0, [sp, #16]
 8004f9e:	681d      	ldr	r5, [r3, #0]
 8004fa0:	3501      	adds	r5, #1
 8004fa2:	0029      	movs	r1, r5
 8004fa4:	f7fb f8cc 	bl	8000140 <__udivsi3>
 8004fa8:	9b04      	ldr	r3, [sp, #16]
 8004faa:	9000      	str	r0, [sp, #0]
 8004fac:	42ab      	cmp	r3, r5
 8004fae:	d32b      	bcc.n	8005008 <quorem+0x9a>
 8004fb0:	9b05      	ldr	r3, [sp, #20]
 8004fb2:	9d01      	ldr	r5, [sp, #4]
 8004fb4:	469c      	mov	ip, r3
 8004fb6:	2300      	movs	r3, #0
 8004fb8:	9305      	str	r3, [sp, #20]
 8004fba:	9304      	str	r3, [sp, #16]
 8004fbc:	4662      	mov	r2, ip
 8004fbe:	ca08      	ldmia	r2!, {r3}
 8004fc0:	6828      	ldr	r0, [r5, #0]
 8004fc2:	4694      	mov	ip, r2
 8004fc4:	9a00      	ldr	r2, [sp, #0]
 8004fc6:	b299      	uxth	r1, r3
 8004fc8:	4351      	muls	r1, r2
 8004fca:	9a05      	ldr	r2, [sp, #20]
 8004fcc:	0c1b      	lsrs	r3, r3, #16
 8004fce:	1889      	adds	r1, r1, r2
 8004fd0:	9a00      	ldr	r2, [sp, #0]
 8004fd2:	4353      	muls	r3, r2
 8004fd4:	0c0a      	lsrs	r2, r1, #16
 8004fd6:	189b      	adds	r3, r3, r2
 8004fd8:	0c1a      	lsrs	r2, r3, #16
 8004fda:	b289      	uxth	r1, r1
 8004fdc:	9205      	str	r2, [sp, #20]
 8004fde:	b282      	uxth	r2, r0
 8004fe0:	1a52      	subs	r2, r2, r1
 8004fe2:	9904      	ldr	r1, [sp, #16]
 8004fe4:	0c00      	lsrs	r0, r0, #16
 8004fe6:	1852      	adds	r2, r2, r1
 8004fe8:	b29b      	uxth	r3, r3
 8004fea:	1411      	asrs	r1, r2, #16
 8004fec:	1ac3      	subs	r3, r0, r3
 8004fee:	185b      	adds	r3, r3, r1
 8004ff0:	1419      	asrs	r1, r3, #16
 8004ff2:	b292      	uxth	r2, r2
 8004ff4:	041b      	lsls	r3, r3, #16
 8004ff6:	431a      	orrs	r2, r3
 8004ff8:	9b03      	ldr	r3, [sp, #12]
 8004ffa:	9104      	str	r1, [sp, #16]
 8004ffc:	c504      	stmia	r5!, {r2}
 8004ffe:	4563      	cmp	r3, ip
 8005000:	d2dc      	bcs.n	8004fbc <quorem+0x4e>
 8005002:	6823      	ldr	r3, [r4, #0]
 8005004:	2b00      	cmp	r3, #0
 8005006:	d030      	beq.n	800506a <quorem+0xfc>
 8005008:	0030      	movs	r0, r6
 800500a:	9902      	ldr	r1, [sp, #8]
 800500c:	f001 fb8c 	bl	8006728 <__mcmp>
 8005010:	2800      	cmp	r0, #0
 8005012:	db23      	blt.n	800505c <quorem+0xee>
 8005014:	0034      	movs	r4, r6
 8005016:	2500      	movs	r5, #0
 8005018:	9902      	ldr	r1, [sp, #8]
 800501a:	3414      	adds	r4, #20
 800501c:	3114      	adds	r1, #20
 800501e:	6823      	ldr	r3, [r4, #0]
 8005020:	c901      	ldmia	r1!, {r0}
 8005022:	9302      	str	r3, [sp, #8]
 8005024:	466b      	mov	r3, sp
 8005026:	891b      	ldrh	r3, [r3, #8]
 8005028:	b282      	uxth	r2, r0
 800502a:	1a9a      	subs	r2, r3, r2
 800502c:	9b02      	ldr	r3, [sp, #8]
 800502e:	1952      	adds	r2, r2, r5
 8005030:	0c00      	lsrs	r0, r0, #16
 8005032:	0c1b      	lsrs	r3, r3, #16
 8005034:	1a1b      	subs	r3, r3, r0
 8005036:	1410      	asrs	r0, r2, #16
 8005038:	181b      	adds	r3, r3, r0
 800503a:	141d      	asrs	r5, r3, #16
 800503c:	b292      	uxth	r2, r2
 800503e:	041b      	lsls	r3, r3, #16
 8005040:	431a      	orrs	r2, r3
 8005042:	9b03      	ldr	r3, [sp, #12]
 8005044:	c404      	stmia	r4!, {r2}
 8005046:	428b      	cmp	r3, r1
 8005048:	d2e9      	bcs.n	800501e <quorem+0xb0>
 800504a:	9a01      	ldr	r2, [sp, #4]
 800504c:	00bb      	lsls	r3, r7, #2
 800504e:	18d3      	adds	r3, r2, r3
 8005050:	681a      	ldr	r2, [r3, #0]
 8005052:	2a00      	cmp	r2, #0
 8005054:	d013      	beq.n	800507e <quorem+0x110>
 8005056:	9b00      	ldr	r3, [sp, #0]
 8005058:	3301      	adds	r3, #1
 800505a:	9300      	str	r3, [sp, #0]
 800505c:	9800      	ldr	r0, [sp, #0]
 800505e:	b007      	add	sp, #28
 8005060:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005062:	6823      	ldr	r3, [r4, #0]
 8005064:	2b00      	cmp	r3, #0
 8005066:	d104      	bne.n	8005072 <quorem+0x104>
 8005068:	3f01      	subs	r7, #1
 800506a:	9b01      	ldr	r3, [sp, #4]
 800506c:	3c04      	subs	r4, #4
 800506e:	42a3      	cmp	r3, r4
 8005070:	d3f7      	bcc.n	8005062 <quorem+0xf4>
 8005072:	6137      	str	r7, [r6, #16]
 8005074:	e7c8      	b.n	8005008 <quorem+0x9a>
 8005076:	681a      	ldr	r2, [r3, #0]
 8005078:	2a00      	cmp	r2, #0
 800507a:	d104      	bne.n	8005086 <quorem+0x118>
 800507c:	3f01      	subs	r7, #1
 800507e:	9a01      	ldr	r2, [sp, #4]
 8005080:	3b04      	subs	r3, #4
 8005082:	429a      	cmp	r2, r3
 8005084:	d3f7      	bcc.n	8005076 <quorem+0x108>
 8005086:	6137      	str	r7, [r6, #16]
 8005088:	e7e5      	b.n	8005056 <quorem+0xe8>
	...

0800508c <_dtoa_r>:
 800508c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800508e:	0014      	movs	r4, r2
 8005090:	001d      	movs	r5, r3
 8005092:	69c6      	ldr	r6, [r0, #28]
 8005094:	b09d      	sub	sp, #116	@ 0x74
 8005096:	940a      	str	r4, [sp, #40]	@ 0x28
 8005098:	950b      	str	r5, [sp, #44]	@ 0x2c
 800509a:	9f25      	ldr	r7, [sp, #148]	@ 0x94
 800509c:	9003      	str	r0, [sp, #12]
 800509e:	2e00      	cmp	r6, #0
 80050a0:	d10f      	bne.n	80050c2 <_dtoa_r+0x36>
 80050a2:	2010      	movs	r0, #16
 80050a4:	f000 ff44 	bl	8005f30 <malloc>
 80050a8:	9b03      	ldr	r3, [sp, #12]
 80050aa:	1e02      	subs	r2, r0, #0
 80050ac:	61d8      	str	r0, [r3, #28]
 80050ae:	d104      	bne.n	80050ba <_dtoa_r+0x2e>
 80050b0:	21ef      	movs	r1, #239	@ 0xef
 80050b2:	4bc7      	ldr	r3, [pc, #796]	@ (80053d0 <_dtoa_r+0x344>)
 80050b4:	48c7      	ldr	r0, [pc, #796]	@ (80053d4 <_dtoa_r+0x348>)
 80050b6:	f001 fd3b 	bl	8006b30 <__assert_func>
 80050ba:	6046      	str	r6, [r0, #4]
 80050bc:	6086      	str	r6, [r0, #8]
 80050be:	6006      	str	r6, [r0, #0]
 80050c0:	60c6      	str	r6, [r0, #12]
 80050c2:	9b03      	ldr	r3, [sp, #12]
 80050c4:	69db      	ldr	r3, [r3, #28]
 80050c6:	6819      	ldr	r1, [r3, #0]
 80050c8:	2900      	cmp	r1, #0
 80050ca:	d00b      	beq.n	80050e4 <_dtoa_r+0x58>
 80050cc:	685a      	ldr	r2, [r3, #4]
 80050ce:	2301      	movs	r3, #1
 80050d0:	4093      	lsls	r3, r2
 80050d2:	604a      	str	r2, [r1, #4]
 80050d4:	608b      	str	r3, [r1, #8]
 80050d6:	9803      	ldr	r0, [sp, #12]
 80050d8:	f001 f8dc 	bl	8006294 <_Bfree>
 80050dc:	2200      	movs	r2, #0
 80050de:	9b03      	ldr	r3, [sp, #12]
 80050e0:	69db      	ldr	r3, [r3, #28]
 80050e2:	601a      	str	r2, [r3, #0]
 80050e4:	2d00      	cmp	r5, #0
 80050e6:	da1e      	bge.n	8005126 <_dtoa_r+0x9a>
 80050e8:	2301      	movs	r3, #1
 80050ea:	603b      	str	r3, [r7, #0]
 80050ec:	006b      	lsls	r3, r5, #1
 80050ee:	085b      	lsrs	r3, r3, #1
 80050f0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80050f2:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80050f4:	4bb8      	ldr	r3, [pc, #736]	@ (80053d8 <_dtoa_r+0x34c>)
 80050f6:	4ab8      	ldr	r2, [pc, #736]	@ (80053d8 <_dtoa_r+0x34c>)
 80050f8:	403b      	ands	r3, r7
 80050fa:	4293      	cmp	r3, r2
 80050fc:	d116      	bne.n	800512c <_dtoa_r+0xa0>
 80050fe:	4bb7      	ldr	r3, [pc, #732]	@ (80053dc <_dtoa_r+0x350>)
 8005100:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8005102:	6013      	str	r3, [r2, #0]
 8005104:	033b      	lsls	r3, r7, #12
 8005106:	0b1b      	lsrs	r3, r3, #12
 8005108:	4323      	orrs	r3, r4
 800510a:	d101      	bne.n	8005110 <_dtoa_r+0x84>
 800510c:	f000 fd83 	bl	8005c16 <_dtoa_r+0xb8a>
 8005110:	4bb3      	ldr	r3, [pc, #716]	@ (80053e0 <_dtoa_r+0x354>)
 8005112:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8005114:	9308      	str	r3, [sp, #32]
 8005116:	2a00      	cmp	r2, #0
 8005118:	d002      	beq.n	8005120 <_dtoa_r+0x94>
 800511a:	4bb2      	ldr	r3, [pc, #712]	@ (80053e4 <_dtoa_r+0x358>)
 800511c:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 800511e:	6013      	str	r3, [r2, #0]
 8005120:	9808      	ldr	r0, [sp, #32]
 8005122:	b01d      	add	sp, #116	@ 0x74
 8005124:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005126:	2300      	movs	r3, #0
 8005128:	603b      	str	r3, [r7, #0]
 800512a:	e7e2      	b.n	80050f2 <_dtoa_r+0x66>
 800512c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800512e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8005130:	9212      	str	r2, [sp, #72]	@ 0x48
 8005132:	9313      	str	r3, [sp, #76]	@ 0x4c
 8005134:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8005136:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8005138:	2200      	movs	r2, #0
 800513a:	2300      	movs	r3, #0
 800513c:	f7fb f986 	bl	800044c <__aeabi_dcmpeq>
 8005140:	1e06      	subs	r6, r0, #0
 8005142:	d00b      	beq.n	800515c <_dtoa_r+0xd0>
 8005144:	2301      	movs	r3, #1
 8005146:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8005148:	6013      	str	r3, [r2, #0]
 800514a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 800514c:	2b00      	cmp	r3, #0
 800514e:	d002      	beq.n	8005156 <_dtoa_r+0xca>
 8005150:	4ba5      	ldr	r3, [pc, #660]	@ (80053e8 <_dtoa_r+0x35c>)
 8005152:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8005154:	6013      	str	r3, [r2, #0]
 8005156:	4ba5      	ldr	r3, [pc, #660]	@ (80053ec <_dtoa_r+0x360>)
 8005158:	9308      	str	r3, [sp, #32]
 800515a:	e7e1      	b.n	8005120 <_dtoa_r+0x94>
 800515c:	ab1a      	add	r3, sp, #104	@ 0x68
 800515e:	9301      	str	r3, [sp, #4]
 8005160:	ab1b      	add	r3, sp, #108	@ 0x6c
 8005162:	9300      	str	r3, [sp, #0]
 8005164:	9803      	ldr	r0, [sp, #12]
 8005166:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8005168:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800516a:	f001 fb93 	bl	8006894 <__d2b>
 800516e:	007a      	lsls	r2, r7, #1
 8005170:	9005      	str	r0, [sp, #20]
 8005172:	0d52      	lsrs	r2, r2, #21
 8005174:	d100      	bne.n	8005178 <_dtoa_r+0xec>
 8005176:	e07b      	b.n	8005270 <_dtoa_r+0x1e4>
 8005178:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800517a:	9618      	str	r6, [sp, #96]	@ 0x60
 800517c:	0319      	lsls	r1, r3, #12
 800517e:	4b9c      	ldr	r3, [pc, #624]	@ (80053f0 <_dtoa_r+0x364>)
 8005180:	0b09      	lsrs	r1, r1, #12
 8005182:	430b      	orrs	r3, r1
 8005184:	499b      	ldr	r1, [pc, #620]	@ (80053f4 <_dtoa_r+0x368>)
 8005186:	1857      	adds	r7, r2, r1
 8005188:	9812      	ldr	r0, [sp, #72]	@ 0x48
 800518a:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 800518c:	0019      	movs	r1, r3
 800518e:	2200      	movs	r2, #0
 8005190:	4b99      	ldr	r3, [pc, #612]	@ (80053f8 <_dtoa_r+0x36c>)
 8005192:	f7fc fbf9 	bl	8001988 <__aeabi_dsub>
 8005196:	4a99      	ldr	r2, [pc, #612]	@ (80053fc <_dtoa_r+0x370>)
 8005198:	4b99      	ldr	r3, [pc, #612]	@ (8005400 <_dtoa_r+0x374>)
 800519a:	f7fc f92d 	bl	80013f8 <__aeabi_dmul>
 800519e:	4a99      	ldr	r2, [pc, #612]	@ (8005404 <_dtoa_r+0x378>)
 80051a0:	4b99      	ldr	r3, [pc, #612]	@ (8005408 <_dtoa_r+0x37c>)
 80051a2:	f7fb f981 	bl	80004a8 <__aeabi_dadd>
 80051a6:	0004      	movs	r4, r0
 80051a8:	0038      	movs	r0, r7
 80051aa:	000d      	movs	r5, r1
 80051ac:	f7fc ffe6 	bl	800217c <__aeabi_i2d>
 80051b0:	4a96      	ldr	r2, [pc, #600]	@ (800540c <_dtoa_r+0x380>)
 80051b2:	4b97      	ldr	r3, [pc, #604]	@ (8005410 <_dtoa_r+0x384>)
 80051b4:	f7fc f920 	bl	80013f8 <__aeabi_dmul>
 80051b8:	0002      	movs	r2, r0
 80051ba:	000b      	movs	r3, r1
 80051bc:	0020      	movs	r0, r4
 80051be:	0029      	movs	r1, r5
 80051c0:	f7fb f972 	bl	80004a8 <__aeabi_dadd>
 80051c4:	0004      	movs	r4, r0
 80051c6:	000d      	movs	r5, r1
 80051c8:	f7fc ff9c 	bl	8002104 <__aeabi_d2iz>
 80051cc:	2200      	movs	r2, #0
 80051ce:	9004      	str	r0, [sp, #16]
 80051d0:	2300      	movs	r3, #0
 80051d2:	0020      	movs	r0, r4
 80051d4:	0029      	movs	r1, r5
 80051d6:	f7fb f93f 	bl	8000458 <__aeabi_dcmplt>
 80051da:	2800      	cmp	r0, #0
 80051dc:	d00b      	beq.n	80051f6 <_dtoa_r+0x16a>
 80051de:	9804      	ldr	r0, [sp, #16]
 80051e0:	f7fc ffcc 	bl	800217c <__aeabi_i2d>
 80051e4:	002b      	movs	r3, r5
 80051e6:	0022      	movs	r2, r4
 80051e8:	f7fb f930 	bl	800044c <__aeabi_dcmpeq>
 80051ec:	4243      	negs	r3, r0
 80051ee:	4158      	adcs	r0, r3
 80051f0:	9b04      	ldr	r3, [sp, #16]
 80051f2:	1a1b      	subs	r3, r3, r0
 80051f4:	9304      	str	r3, [sp, #16]
 80051f6:	2301      	movs	r3, #1
 80051f8:	9315      	str	r3, [sp, #84]	@ 0x54
 80051fa:	9b04      	ldr	r3, [sp, #16]
 80051fc:	2b16      	cmp	r3, #22
 80051fe:	d810      	bhi.n	8005222 <_dtoa_r+0x196>
 8005200:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8005202:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8005204:	9a04      	ldr	r2, [sp, #16]
 8005206:	4b83      	ldr	r3, [pc, #524]	@ (8005414 <_dtoa_r+0x388>)
 8005208:	00d2      	lsls	r2, r2, #3
 800520a:	189b      	adds	r3, r3, r2
 800520c:	681a      	ldr	r2, [r3, #0]
 800520e:	685b      	ldr	r3, [r3, #4]
 8005210:	f7fb f922 	bl	8000458 <__aeabi_dcmplt>
 8005214:	2800      	cmp	r0, #0
 8005216:	d047      	beq.n	80052a8 <_dtoa_r+0x21c>
 8005218:	9b04      	ldr	r3, [sp, #16]
 800521a:	3b01      	subs	r3, #1
 800521c:	9304      	str	r3, [sp, #16]
 800521e:	2300      	movs	r3, #0
 8005220:	9315      	str	r3, [sp, #84]	@ 0x54
 8005222:	2200      	movs	r2, #0
 8005224:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8005226:	9206      	str	r2, [sp, #24]
 8005228:	1bdb      	subs	r3, r3, r7
 800522a:	1e5a      	subs	r2, r3, #1
 800522c:	d53e      	bpl.n	80052ac <_dtoa_r+0x220>
 800522e:	2201      	movs	r2, #1
 8005230:	1ad3      	subs	r3, r2, r3
 8005232:	9306      	str	r3, [sp, #24]
 8005234:	2300      	movs	r3, #0
 8005236:	930d      	str	r3, [sp, #52]	@ 0x34
 8005238:	9b04      	ldr	r3, [sp, #16]
 800523a:	2b00      	cmp	r3, #0
 800523c:	db38      	blt.n	80052b0 <_dtoa_r+0x224>
 800523e:	9a04      	ldr	r2, [sp, #16]
 8005240:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8005242:	4694      	mov	ip, r2
 8005244:	4463      	add	r3, ip
 8005246:	930d      	str	r3, [sp, #52]	@ 0x34
 8005248:	2300      	movs	r3, #0
 800524a:	9214      	str	r2, [sp, #80]	@ 0x50
 800524c:	930f      	str	r3, [sp, #60]	@ 0x3c
 800524e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8005250:	2401      	movs	r4, #1
 8005252:	2b09      	cmp	r3, #9
 8005254:	d867      	bhi.n	8005326 <_dtoa_r+0x29a>
 8005256:	2b05      	cmp	r3, #5
 8005258:	dd02      	ble.n	8005260 <_dtoa_r+0x1d4>
 800525a:	2400      	movs	r4, #0
 800525c:	3b04      	subs	r3, #4
 800525e:	9322      	str	r3, [sp, #136]	@ 0x88
 8005260:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8005262:	1e98      	subs	r0, r3, #2
 8005264:	2803      	cmp	r0, #3
 8005266:	d867      	bhi.n	8005338 <_dtoa_r+0x2ac>
 8005268:	f7fa ff56 	bl	8000118 <__gnu_thumb1_case_uqi>
 800526c:	5b383a2b 	.word	0x5b383a2b
 8005270:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8005272:	9e1a      	ldr	r6, [sp, #104]	@ 0x68
 8005274:	18f6      	adds	r6, r6, r3
 8005276:	4b68      	ldr	r3, [pc, #416]	@ (8005418 <_dtoa_r+0x38c>)
 8005278:	18f2      	adds	r2, r6, r3
 800527a:	2a20      	cmp	r2, #32
 800527c:	dd0f      	ble.n	800529e <_dtoa_r+0x212>
 800527e:	2340      	movs	r3, #64	@ 0x40
 8005280:	1a9b      	subs	r3, r3, r2
 8005282:	409f      	lsls	r7, r3
 8005284:	4b65      	ldr	r3, [pc, #404]	@ (800541c <_dtoa_r+0x390>)
 8005286:	0038      	movs	r0, r7
 8005288:	18f3      	adds	r3, r6, r3
 800528a:	40dc      	lsrs	r4, r3
 800528c:	4320      	orrs	r0, r4
 800528e:	f7fc ffa3 	bl	80021d8 <__aeabi_ui2d>
 8005292:	2201      	movs	r2, #1
 8005294:	4b62      	ldr	r3, [pc, #392]	@ (8005420 <_dtoa_r+0x394>)
 8005296:	1e77      	subs	r7, r6, #1
 8005298:	18cb      	adds	r3, r1, r3
 800529a:	9218      	str	r2, [sp, #96]	@ 0x60
 800529c:	e776      	b.n	800518c <_dtoa_r+0x100>
 800529e:	2320      	movs	r3, #32
 80052a0:	0020      	movs	r0, r4
 80052a2:	1a9b      	subs	r3, r3, r2
 80052a4:	4098      	lsls	r0, r3
 80052a6:	e7f2      	b.n	800528e <_dtoa_r+0x202>
 80052a8:	9015      	str	r0, [sp, #84]	@ 0x54
 80052aa:	e7ba      	b.n	8005222 <_dtoa_r+0x196>
 80052ac:	920d      	str	r2, [sp, #52]	@ 0x34
 80052ae:	e7c3      	b.n	8005238 <_dtoa_r+0x1ac>
 80052b0:	9b06      	ldr	r3, [sp, #24]
 80052b2:	9a04      	ldr	r2, [sp, #16]
 80052b4:	1a9b      	subs	r3, r3, r2
 80052b6:	9306      	str	r3, [sp, #24]
 80052b8:	4253      	negs	r3, r2
 80052ba:	930f      	str	r3, [sp, #60]	@ 0x3c
 80052bc:	2300      	movs	r3, #0
 80052be:	9314      	str	r3, [sp, #80]	@ 0x50
 80052c0:	e7c5      	b.n	800524e <_dtoa_r+0x1c2>
 80052c2:	2300      	movs	r3, #0
 80052c4:	9310      	str	r3, [sp, #64]	@ 0x40
 80052c6:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80052c8:	930e      	str	r3, [sp, #56]	@ 0x38
 80052ca:	9309      	str	r3, [sp, #36]	@ 0x24
 80052cc:	2b00      	cmp	r3, #0
 80052ce:	dc13      	bgt.n	80052f8 <_dtoa_r+0x26c>
 80052d0:	2301      	movs	r3, #1
 80052d2:	001a      	movs	r2, r3
 80052d4:	930e      	str	r3, [sp, #56]	@ 0x38
 80052d6:	9309      	str	r3, [sp, #36]	@ 0x24
 80052d8:	9223      	str	r2, [sp, #140]	@ 0x8c
 80052da:	e00d      	b.n	80052f8 <_dtoa_r+0x26c>
 80052dc:	2301      	movs	r3, #1
 80052de:	e7f1      	b.n	80052c4 <_dtoa_r+0x238>
 80052e0:	2300      	movs	r3, #0
 80052e2:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80052e4:	9310      	str	r3, [sp, #64]	@ 0x40
 80052e6:	4694      	mov	ip, r2
 80052e8:	9b04      	ldr	r3, [sp, #16]
 80052ea:	4463      	add	r3, ip
 80052ec:	930e      	str	r3, [sp, #56]	@ 0x38
 80052ee:	3301      	adds	r3, #1
 80052f0:	9309      	str	r3, [sp, #36]	@ 0x24
 80052f2:	2b00      	cmp	r3, #0
 80052f4:	dc00      	bgt.n	80052f8 <_dtoa_r+0x26c>
 80052f6:	2301      	movs	r3, #1
 80052f8:	9a03      	ldr	r2, [sp, #12]
 80052fa:	2100      	movs	r1, #0
 80052fc:	69d0      	ldr	r0, [r2, #28]
 80052fe:	2204      	movs	r2, #4
 8005300:	0015      	movs	r5, r2
 8005302:	3514      	adds	r5, #20
 8005304:	429d      	cmp	r5, r3
 8005306:	d91b      	bls.n	8005340 <_dtoa_r+0x2b4>
 8005308:	6041      	str	r1, [r0, #4]
 800530a:	9803      	ldr	r0, [sp, #12]
 800530c:	f000 ff7e 	bl	800620c <_Balloc>
 8005310:	9008      	str	r0, [sp, #32]
 8005312:	2800      	cmp	r0, #0
 8005314:	d117      	bne.n	8005346 <_dtoa_r+0x2ba>
 8005316:	21b0      	movs	r1, #176	@ 0xb0
 8005318:	4b42      	ldr	r3, [pc, #264]	@ (8005424 <_dtoa_r+0x398>)
 800531a:	482e      	ldr	r0, [pc, #184]	@ (80053d4 <_dtoa_r+0x348>)
 800531c:	9a08      	ldr	r2, [sp, #32]
 800531e:	31ff      	adds	r1, #255	@ 0xff
 8005320:	e6c9      	b.n	80050b6 <_dtoa_r+0x2a>
 8005322:	2301      	movs	r3, #1
 8005324:	e7dd      	b.n	80052e2 <_dtoa_r+0x256>
 8005326:	2300      	movs	r3, #0
 8005328:	9410      	str	r4, [sp, #64]	@ 0x40
 800532a:	9322      	str	r3, [sp, #136]	@ 0x88
 800532c:	3b01      	subs	r3, #1
 800532e:	930e      	str	r3, [sp, #56]	@ 0x38
 8005330:	9309      	str	r3, [sp, #36]	@ 0x24
 8005332:	2200      	movs	r2, #0
 8005334:	3313      	adds	r3, #19
 8005336:	e7cf      	b.n	80052d8 <_dtoa_r+0x24c>
 8005338:	2301      	movs	r3, #1
 800533a:	9310      	str	r3, [sp, #64]	@ 0x40
 800533c:	3b02      	subs	r3, #2
 800533e:	e7f6      	b.n	800532e <_dtoa_r+0x2a2>
 8005340:	3101      	adds	r1, #1
 8005342:	0052      	lsls	r2, r2, #1
 8005344:	e7dc      	b.n	8005300 <_dtoa_r+0x274>
 8005346:	9b03      	ldr	r3, [sp, #12]
 8005348:	9a08      	ldr	r2, [sp, #32]
 800534a:	69db      	ldr	r3, [r3, #28]
 800534c:	601a      	str	r2, [r3, #0]
 800534e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005350:	2b0e      	cmp	r3, #14
 8005352:	d900      	bls.n	8005356 <_dtoa_r+0x2ca>
 8005354:	e0d9      	b.n	800550a <_dtoa_r+0x47e>
 8005356:	2c00      	cmp	r4, #0
 8005358:	d100      	bne.n	800535c <_dtoa_r+0x2d0>
 800535a:	e0d6      	b.n	800550a <_dtoa_r+0x47e>
 800535c:	9b04      	ldr	r3, [sp, #16]
 800535e:	2b00      	cmp	r3, #0
 8005360:	dd64      	ble.n	800542c <_dtoa_r+0x3a0>
 8005362:	210f      	movs	r1, #15
 8005364:	9a04      	ldr	r2, [sp, #16]
 8005366:	4b2b      	ldr	r3, [pc, #172]	@ (8005414 <_dtoa_r+0x388>)
 8005368:	400a      	ands	r2, r1
 800536a:	00d2      	lsls	r2, r2, #3
 800536c:	189b      	adds	r3, r3, r2
 800536e:	681e      	ldr	r6, [r3, #0]
 8005370:	685f      	ldr	r7, [r3, #4]
 8005372:	9b04      	ldr	r3, [sp, #16]
 8005374:	2402      	movs	r4, #2
 8005376:	111d      	asrs	r5, r3, #4
 8005378:	05db      	lsls	r3, r3, #23
 800537a:	d50a      	bpl.n	8005392 <_dtoa_r+0x306>
 800537c:	4b2a      	ldr	r3, [pc, #168]	@ (8005428 <_dtoa_r+0x39c>)
 800537e:	400d      	ands	r5, r1
 8005380:	6a1a      	ldr	r2, [r3, #32]
 8005382:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005384:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8005386:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8005388:	f7fb fbf2 	bl	8000b70 <__aeabi_ddiv>
 800538c:	900a      	str	r0, [sp, #40]	@ 0x28
 800538e:	910b      	str	r1, [sp, #44]	@ 0x2c
 8005390:	3401      	adds	r4, #1
 8005392:	4b25      	ldr	r3, [pc, #148]	@ (8005428 <_dtoa_r+0x39c>)
 8005394:	930c      	str	r3, [sp, #48]	@ 0x30
 8005396:	2d00      	cmp	r5, #0
 8005398:	d108      	bne.n	80053ac <_dtoa_r+0x320>
 800539a:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800539c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800539e:	0032      	movs	r2, r6
 80053a0:	003b      	movs	r3, r7
 80053a2:	f7fb fbe5 	bl	8000b70 <__aeabi_ddiv>
 80053a6:	900a      	str	r0, [sp, #40]	@ 0x28
 80053a8:	910b      	str	r1, [sp, #44]	@ 0x2c
 80053aa:	e05a      	b.n	8005462 <_dtoa_r+0x3d6>
 80053ac:	2301      	movs	r3, #1
 80053ae:	421d      	tst	r5, r3
 80053b0:	d009      	beq.n	80053c6 <_dtoa_r+0x33a>
 80053b2:	18e4      	adds	r4, r4, r3
 80053b4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80053b6:	0030      	movs	r0, r6
 80053b8:	681a      	ldr	r2, [r3, #0]
 80053ba:	685b      	ldr	r3, [r3, #4]
 80053bc:	0039      	movs	r1, r7
 80053be:	f7fc f81b 	bl	80013f8 <__aeabi_dmul>
 80053c2:	0006      	movs	r6, r0
 80053c4:	000f      	movs	r7, r1
 80053c6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80053c8:	106d      	asrs	r5, r5, #1
 80053ca:	3308      	adds	r3, #8
 80053cc:	e7e2      	b.n	8005394 <_dtoa_r+0x308>
 80053ce:	46c0      	nop			@ (mov r8, r8)
 80053d0:	080073cd 	.word	0x080073cd
 80053d4:	080073e4 	.word	0x080073e4
 80053d8:	7ff00000 	.word	0x7ff00000
 80053dc:	0000270f 	.word	0x0000270f
 80053e0:	080073c9 	.word	0x080073c9
 80053e4:	080073cc 	.word	0x080073cc
 80053e8:	0800739d 	.word	0x0800739d
 80053ec:	0800739c 	.word	0x0800739c
 80053f0:	3ff00000 	.word	0x3ff00000
 80053f4:	fffffc01 	.word	0xfffffc01
 80053f8:	3ff80000 	.word	0x3ff80000
 80053fc:	636f4361 	.word	0x636f4361
 8005400:	3fd287a7 	.word	0x3fd287a7
 8005404:	8b60c8b3 	.word	0x8b60c8b3
 8005408:	3fc68a28 	.word	0x3fc68a28
 800540c:	509f79fb 	.word	0x509f79fb
 8005410:	3fd34413 	.word	0x3fd34413
 8005414:	080074f0 	.word	0x080074f0
 8005418:	00000432 	.word	0x00000432
 800541c:	00000412 	.word	0x00000412
 8005420:	fe100000 	.word	0xfe100000
 8005424:	0800743c 	.word	0x0800743c
 8005428:	080074c8 	.word	0x080074c8
 800542c:	9b04      	ldr	r3, [sp, #16]
 800542e:	2402      	movs	r4, #2
 8005430:	2b00      	cmp	r3, #0
 8005432:	d016      	beq.n	8005462 <_dtoa_r+0x3d6>
 8005434:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8005436:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8005438:	220f      	movs	r2, #15
 800543a:	425d      	negs	r5, r3
 800543c:	402a      	ands	r2, r5
 800543e:	4bd7      	ldr	r3, [pc, #860]	@ (800579c <_dtoa_r+0x710>)
 8005440:	00d2      	lsls	r2, r2, #3
 8005442:	189b      	adds	r3, r3, r2
 8005444:	681a      	ldr	r2, [r3, #0]
 8005446:	685b      	ldr	r3, [r3, #4]
 8005448:	f7fb ffd6 	bl	80013f8 <__aeabi_dmul>
 800544c:	2701      	movs	r7, #1
 800544e:	2300      	movs	r3, #0
 8005450:	900a      	str	r0, [sp, #40]	@ 0x28
 8005452:	910b      	str	r1, [sp, #44]	@ 0x2c
 8005454:	4ed2      	ldr	r6, [pc, #840]	@ (80057a0 <_dtoa_r+0x714>)
 8005456:	112d      	asrs	r5, r5, #4
 8005458:	2d00      	cmp	r5, #0
 800545a:	d000      	beq.n	800545e <_dtoa_r+0x3d2>
 800545c:	e0ba      	b.n	80055d4 <_dtoa_r+0x548>
 800545e:	2b00      	cmp	r3, #0
 8005460:	d1a1      	bne.n	80053a6 <_dtoa_r+0x31a>
 8005462:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8005464:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8005466:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8005468:	2b00      	cmp	r3, #0
 800546a:	d100      	bne.n	800546e <_dtoa_r+0x3e2>
 800546c:	e0bd      	b.n	80055ea <_dtoa_r+0x55e>
 800546e:	2200      	movs	r2, #0
 8005470:	0030      	movs	r0, r6
 8005472:	0039      	movs	r1, r7
 8005474:	4bcb      	ldr	r3, [pc, #812]	@ (80057a4 <_dtoa_r+0x718>)
 8005476:	f7fa ffef 	bl	8000458 <__aeabi_dcmplt>
 800547a:	2800      	cmp	r0, #0
 800547c:	d100      	bne.n	8005480 <_dtoa_r+0x3f4>
 800547e:	e0b4      	b.n	80055ea <_dtoa_r+0x55e>
 8005480:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005482:	2b00      	cmp	r3, #0
 8005484:	d100      	bne.n	8005488 <_dtoa_r+0x3fc>
 8005486:	e0b0      	b.n	80055ea <_dtoa_r+0x55e>
 8005488:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800548a:	2b00      	cmp	r3, #0
 800548c:	dd39      	ble.n	8005502 <_dtoa_r+0x476>
 800548e:	9b04      	ldr	r3, [sp, #16]
 8005490:	2200      	movs	r2, #0
 8005492:	3b01      	subs	r3, #1
 8005494:	930c      	str	r3, [sp, #48]	@ 0x30
 8005496:	0030      	movs	r0, r6
 8005498:	4bc3      	ldr	r3, [pc, #780]	@ (80057a8 <_dtoa_r+0x71c>)
 800549a:	0039      	movs	r1, r7
 800549c:	f7fb ffac 	bl	80013f8 <__aeabi_dmul>
 80054a0:	900a      	str	r0, [sp, #40]	@ 0x28
 80054a2:	910b      	str	r1, [sp, #44]	@ 0x2c
 80054a4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80054a6:	3401      	adds	r4, #1
 80054a8:	0020      	movs	r0, r4
 80054aa:	9311      	str	r3, [sp, #68]	@ 0x44
 80054ac:	f7fc fe66 	bl	800217c <__aeabi_i2d>
 80054b0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80054b2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80054b4:	f7fb ffa0 	bl	80013f8 <__aeabi_dmul>
 80054b8:	4bbc      	ldr	r3, [pc, #752]	@ (80057ac <_dtoa_r+0x720>)
 80054ba:	2200      	movs	r2, #0
 80054bc:	f7fa fff4 	bl	80004a8 <__aeabi_dadd>
 80054c0:	4bbb      	ldr	r3, [pc, #748]	@ (80057b0 <_dtoa_r+0x724>)
 80054c2:	0006      	movs	r6, r0
 80054c4:	18cf      	adds	r7, r1, r3
 80054c6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80054c8:	2b00      	cmp	r3, #0
 80054ca:	d000      	beq.n	80054ce <_dtoa_r+0x442>
 80054cc:	e091      	b.n	80055f2 <_dtoa_r+0x566>
 80054ce:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80054d0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80054d2:	2200      	movs	r2, #0
 80054d4:	4bb7      	ldr	r3, [pc, #732]	@ (80057b4 <_dtoa_r+0x728>)
 80054d6:	f7fc fa57 	bl	8001988 <__aeabi_dsub>
 80054da:	0032      	movs	r2, r6
 80054dc:	003b      	movs	r3, r7
 80054de:	0004      	movs	r4, r0
 80054e0:	000d      	movs	r5, r1
 80054e2:	f7fa ffcd 	bl	8000480 <__aeabi_dcmpgt>
 80054e6:	2800      	cmp	r0, #0
 80054e8:	d000      	beq.n	80054ec <_dtoa_r+0x460>
 80054ea:	e29d      	b.n	8005a28 <_dtoa_r+0x99c>
 80054ec:	2180      	movs	r1, #128	@ 0x80
 80054ee:	0609      	lsls	r1, r1, #24
 80054f0:	187b      	adds	r3, r7, r1
 80054f2:	0032      	movs	r2, r6
 80054f4:	0020      	movs	r0, r4
 80054f6:	0029      	movs	r1, r5
 80054f8:	f7fa ffae 	bl	8000458 <__aeabi_dcmplt>
 80054fc:	2800      	cmp	r0, #0
 80054fe:	d000      	beq.n	8005502 <_dtoa_r+0x476>
 8005500:	e130      	b.n	8005764 <_dtoa_r+0x6d8>
 8005502:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8005504:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8005506:	930a      	str	r3, [sp, #40]	@ 0x28
 8005508:	940b      	str	r4, [sp, #44]	@ 0x2c
 800550a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 800550c:	2b00      	cmp	r3, #0
 800550e:	da00      	bge.n	8005512 <_dtoa_r+0x486>
 8005510:	e177      	b.n	8005802 <_dtoa_r+0x776>
 8005512:	9a04      	ldr	r2, [sp, #16]
 8005514:	2a0e      	cmp	r2, #14
 8005516:	dd00      	ble.n	800551a <_dtoa_r+0x48e>
 8005518:	e173      	b.n	8005802 <_dtoa_r+0x776>
 800551a:	4ba0      	ldr	r3, [pc, #640]	@ (800579c <_dtoa_r+0x710>)
 800551c:	00d2      	lsls	r2, r2, #3
 800551e:	189b      	adds	r3, r3, r2
 8005520:	685c      	ldr	r4, [r3, #4]
 8005522:	681b      	ldr	r3, [r3, #0]
 8005524:	9306      	str	r3, [sp, #24]
 8005526:	9407      	str	r4, [sp, #28]
 8005528:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800552a:	2b00      	cmp	r3, #0
 800552c:	da03      	bge.n	8005536 <_dtoa_r+0x4aa>
 800552e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005530:	2b00      	cmp	r3, #0
 8005532:	dc00      	bgt.n	8005536 <_dtoa_r+0x4aa>
 8005534:	e106      	b.n	8005744 <_dtoa_r+0x6b8>
 8005536:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8005538:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 800553a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800553c:	9d08      	ldr	r5, [sp, #32]
 800553e:	3b01      	subs	r3, #1
 8005540:	195b      	adds	r3, r3, r5
 8005542:	930a      	str	r3, [sp, #40]	@ 0x28
 8005544:	9a06      	ldr	r2, [sp, #24]
 8005546:	9b07      	ldr	r3, [sp, #28]
 8005548:	0030      	movs	r0, r6
 800554a:	0039      	movs	r1, r7
 800554c:	f7fb fb10 	bl	8000b70 <__aeabi_ddiv>
 8005550:	f7fc fdd8 	bl	8002104 <__aeabi_d2iz>
 8005554:	9009      	str	r0, [sp, #36]	@ 0x24
 8005556:	f7fc fe11 	bl	800217c <__aeabi_i2d>
 800555a:	9a06      	ldr	r2, [sp, #24]
 800555c:	9b07      	ldr	r3, [sp, #28]
 800555e:	f7fb ff4b 	bl	80013f8 <__aeabi_dmul>
 8005562:	0002      	movs	r2, r0
 8005564:	000b      	movs	r3, r1
 8005566:	0030      	movs	r0, r6
 8005568:	0039      	movs	r1, r7
 800556a:	f7fc fa0d 	bl	8001988 <__aeabi_dsub>
 800556e:	002b      	movs	r3, r5
 8005570:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005572:	3501      	adds	r5, #1
 8005574:	3230      	adds	r2, #48	@ 0x30
 8005576:	701a      	strb	r2, [r3, #0]
 8005578:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800557a:	002c      	movs	r4, r5
 800557c:	429a      	cmp	r2, r3
 800557e:	d000      	beq.n	8005582 <_dtoa_r+0x4f6>
 8005580:	e131      	b.n	80057e6 <_dtoa_r+0x75a>
 8005582:	0002      	movs	r2, r0
 8005584:	000b      	movs	r3, r1
 8005586:	f7fa ff8f 	bl	80004a8 <__aeabi_dadd>
 800558a:	9a06      	ldr	r2, [sp, #24]
 800558c:	9b07      	ldr	r3, [sp, #28]
 800558e:	0006      	movs	r6, r0
 8005590:	000f      	movs	r7, r1
 8005592:	f7fa ff75 	bl	8000480 <__aeabi_dcmpgt>
 8005596:	2800      	cmp	r0, #0
 8005598:	d000      	beq.n	800559c <_dtoa_r+0x510>
 800559a:	e10f      	b.n	80057bc <_dtoa_r+0x730>
 800559c:	9a06      	ldr	r2, [sp, #24]
 800559e:	9b07      	ldr	r3, [sp, #28]
 80055a0:	0030      	movs	r0, r6
 80055a2:	0039      	movs	r1, r7
 80055a4:	f7fa ff52 	bl	800044c <__aeabi_dcmpeq>
 80055a8:	2800      	cmp	r0, #0
 80055aa:	d003      	beq.n	80055b4 <_dtoa_r+0x528>
 80055ac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80055ae:	07dd      	lsls	r5, r3, #31
 80055b0:	d500      	bpl.n	80055b4 <_dtoa_r+0x528>
 80055b2:	e103      	b.n	80057bc <_dtoa_r+0x730>
 80055b4:	9905      	ldr	r1, [sp, #20]
 80055b6:	9803      	ldr	r0, [sp, #12]
 80055b8:	f000 fe6c 	bl	8006294 <_Bfree>
 80055bc:	2300      	movs	r3, #0
 80055be:	7023      	strb	r3, [r4, #0]
 80055c0:	9b04      	ldr	r3, [sp, #16]
 80055c2:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80055c4:	3301      	adds	r3, #1
 80055c6:	6013      	str	r3, [r2, #0]
 80055c8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80055ca:	2b00      	cmp	r3, #0
 80055cc:	d100      	bne.n	80055d0 <_dtoa_r+0x544>
 80055ce:	e5a7      	b.n	8005120 <_dtoa_r+0x94>
 80055d0:	601c      	str	r4, [r3, #0]
 80055d2:	e5a5      	b.n	8005120 <_dtoa_r+0x94>
 80055d4:	423d      	tst	r5, r7
 80055d6:	d005      	beq.n	80055e4 <_dtoa_r+0x558>
 80055d8:	6832      	ldr	r2, [r6, #0]
 80055da:	6873      	ldr	r3, [r6, #4]
 80055dc:	f7fb ff0c 	bl	80013f8 <__aeabi_dmul>
 80055e0:	003b      	movs	r3, r7
 80055e2:	3401      	adds	r4, #1
 80055e4:	106d      	asrs	r5, r5, #1
 80055e6:	3608      	adds	r6, #8
 80055e8:	e736      	b.n	8005458 <_dtoa_r+0x3cc>
 80055ea:	9b04      	ldr	r3, [sp, #16]
 80055ec:	930c      	str	r3, [sp, #48]	@ 0x30
 80055ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80055f0:	e75a      	b.n	80054a8 <_dtoa_r+0x41c>
 80055f2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80055f4:	4b69      	ldr	r3, [pc, #420]	@ (800579c <_dtoa_r+0x710>)
 80055f6:	3a01      	subs	r2, #1
 80055f8:	00d2      	lsls	r2, r2, #3
 80055fa:	9910      	ldr	r1, [sp, #64]	@ 0x40
 80055fc:	189b      	adds	r3, r3, r2
 80055fe:	681a      	ldr	r2, [r3, #0]
 8005600:	685b      	ldr	r3, [r3, #4]
 8005602:	2900      	cmp	r1, #0
 8005604:	d04c      	beq.n	80056a0 <_dtoa_r+0x614>
 8005606:	2000      	movs	r0, #0
 8005608:	496b      	ldr	r1, [pc, #428]	@ (80057b8 <_dtoa_r+0x72c>)
 800560a:	f7fb fab1 	bl	8000b70 <__aeabi_ddiv>
 800560e:	0032      	movs	r2, r6
 8005610:	003b      	movs	r3, r7
 8005612:	f7fc f9b9 	bl	8001988 <__aeabi_dsub>
 8005616:	9a08      	ldr	r2, [sp, #32]
 8005618:	0006      	movs	r6, r0
 800561a:	4694      	mov	ip, r2
 800561c:	000f      	movs	r7, r1
 800561e:	9b08      	ldr	r3, [sp, #32]
 8005620:	9316      	str	r3, [sp, #88]	@ 0x58
 8005622:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8005624:	4463      	add	r3, ip
 8005626:	9311      	str	r3, [sp, #68]	@ 0x44
 8005628:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800562a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800562c:	f7fc fd6a 	bl	8002104 <__aeabi_d2iz>
 8005630:	0005      	movs	r5, r0
 8005632:	f7fc fda3 	bl	800217c <__aeabi_i2d>
 8005636:	0002      	movs	r2, r0
 8005638:	000b      	movs	r3, r1
 800563a:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800563c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800563e:	f7fc f9a3 	bl	8001988 <__aeabi_dsub>
 8005642:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8005644:	3530      	adds	r5, #48	@ 0x30
 8005646:	1c5c      	adds	r4, r3, #1
 8005648:	701d      	strb	r5, [r3, #0]
 800564a:	0032      	movs	r2, r6
 800564c:	003b      	movs	r3, r7
 800564e:	900a      	str	r0, [sp, #40]	@ 0x28
 8005650:	910b      	str	r1, [sp, #44]	@ 0x2c
 8005652:	f7fa ff01 	bl	8000458 <__aeabi_dcmplt>
 8005656:	2800      	cmp	r0, #0
 8005658:	d16a      	bne.n	8005730 <_dtoa_r+0x6a4>
 800565a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800565c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800565e:	2000      	movs	r0, #0
 8005660:	4950      	ldr	r1, [pc, #320]	@ (80057a4 <_dtoa_r+0x718>)
 8005662:	f7fc f991 	bl	8001988 <__aeabi_dsub>
 8005666:	0032      	movs	r2, r6
 8005668:	003b      	movs	r3, r7
 800566a:	f7fa fef5 	bl	8000458 <__aeabi_dcmplt>
 800566e:	2800      	cmp	r0, #0
 8005670:	d000      	beq.n	8005674 <_dtoa_r+0x5e8>
 8005672:	e0a5      	b.n	80057c0 <_dtoa_r+0x734>
 8005674:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8005676:	42a3      	cmp	r3, r4
 8005678:	d100      	bne.n	800567c <_dtoa_r+0x5f0>
 800567a:	e742      	b.n	8005502 <_dtoa_r+0x476>
 800567c:	2200      	movs	r2, #0
 800567e:	0030      	movs	r0, r6
 8005680:	0039      	movs	r1, r7
 8005682:	4b49      	ldr	r3, [pc, #292]	@ (80057a8 <_dtoa_r+0x71c>)
 8005684:	f7fb feb8 	bl	80013f8 <__aeabi_dmul>
 8005688:	2200      	movs	r2, #0
 800568a:	0006      	movs	r6, r0
 800568c:	000f      	movs	r7, r1
 800568e:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8005690:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8005692:	4b45      	ldr	r3, [pc, #276]	@ (80057a8 <_dtoa_r+0x71c>)
 8005694:	f7fb feb0 	bl	80013f8 <__aeabi_dmul>
 8005698:	9416      	str	r4, [sp, #88]	@ 0x58
 800569a:	900a      	str	r0, [sp, #40]	@ 0x28
 800569c:	910b      	str	r1, [sp, #44]	@ 0x2c
 800569e:	e7c3      	b.n	8005628 <_dtoa_r+0x59c>
 80056a0:	0030      	movs	r0, r6
 80056a2:	0039      	movs	r1, r7
 80056a4:	f7fb fea8 	bl	80013f8 <__aeabi_dmul>
 80056a8:	9d08      	ldr	r5, [sp, #32]
 80056aa:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80056ac:	002b      	movs	r3, r5
 80056ae:	4694      	mov	ip, r2
 80056b0:	9016      	str	r0, [sp, #88]	@ 0x58
 80056b2:	9117      	str	r1, [sp, #92]	@ 0x5c
 80056b4:	4463      	add	r3, ip
 80056b6:	9319      	str	r3, [sp, #100]	@ 0x64
 80056b8:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80056ba:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80056bc:	f7fc fd22 	bl	8002104 <__aeabi_d2iz>
 80056c0:	0004      	movs	r4, r0
 80056c2:	f7fc fd5b 	bl	800217c <__aeabi_i2d>
 80056c6:	000b      	movs	r3, r1
 80056c8:	0002      	movs	r2, r0
 80056ca:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80056cc:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80056ce:	f7fc f95b 	bl	8001988 <__aeabi_dsub>
 80056d2:	3430      	adds	r4, #48	@ 0x30
 80056d4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80056d6:	702c      	strb	r4, [r5, #0]
 80056d8:	3501      	adds	r5, #1
 80056da:	0006      	movs	r6, r0
 80056dc:	000f      	movs	r7, r1
 80056de:	42ab      	cmp	r3, r5
 80056e0:	d129      	bne.n	8005736 <_dtoa_r+0x6aa>
 80056e2:	9816      	ldr	r0, [sp, #88]	@ 0x58
 80056e4:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 80056e6:	9b08      	ldr	r3, [sp, #32]
 80056e8:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80056ea:	469c      	mov	ip, r3
 80056ec:	2200      	movs	r2, #0
 80056ee:	4b32      	ldr	r3, [pc, #200]	@ (80057b8 <_dtoa_r+0x72c>)
 80056f0:	4464      	add	r4, ip
 80056f2:	f7fa fed9 	bl	80004a8 <__aeabi_dadd>
 80056f6:	0002      	movs	r2, r0
 80056f8:	000b      	movs	r3, r1
 80056fa:	0030      	movs	r0, r6
 80056fc:	0039      	movs	r1, r7
 80056fe:	f7fa febf 	bl	8000480 <__aeabi_dcmpgt>
 8005702:	2800      	cmp	r0, #0
 8005704:	d15c      	bne.n	80057c0 <_dtoa_r+0x734>
 8005706:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8005708:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800570a:	2000      	movs	r0, #0
 800570c:	492a      	ldr	r1, [pc, #168]	@ (80057b8 <_dtoa_r+0x72c>)
 800570e:	f7fc f93b 	bl	8001988 <__aeabi_dsub>
 8005712:	0002      	movs	r2, r0
 8005714:	000b      	movs	r3, r1
 8005716:	0030      	movs	r0, r6
 8005718:	0039      	movs	r1, r7
 800571a:	f7fa fe9d 	bl	8000458 <__aeabi_dcmplt>
 800571e:	2800      	cmp	r0, #0
 8005720:	d100      	bne.n	8005724 <_dtoa_r+0x698>
 8005722:	e6ee      	b.n	8005502 <_dtoa_r+0x476>
 8005724:	0023      	movs	r3, r4
 8005726:	3c01      	subs	r4, #1
 8005728:	7822      	ldrb	r2, [r4, #0]
 800572a:	2a30      	cmp	r2, #48	@ 0x30
 800572c:	d0fa      	beq.n	8005724 <_dtoa_r+0x698>
 800572e:	001c      	movs	r4, r3
 8005730:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005732:	9304      	str	r3, [sp, #16]
 8005734:	e73e      	b.n	80055b4 <_dtoa_r+0x528>
 8005736:	2200      	movs	r2, #0
 8005738:	4b1b      	ldr	r3, [pc, #108]	@ (80057a8 <_dtoa_r+0x71c>)
 800573a:	f7fb fe5d 	bl	80013f8 <__aeabi_dmul>
 800573e:	900a      	str	r0, [sp, #40]	@ 0x28
 8005740:	910b      	str	r1, [sp, #44]	@ 0x2c
 8005742:	e7b9      	b.n	80056b8 <_dtoa_r+0x62c>
 8005744:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005746:	2b00      	cmp	r3, #0
 8005748:	d10c      	bne.n	8005764 <_dtoa_r+0x6d8>
 800574a:	9806      	ldr	r0, [sp, #24]
 800574c:	9907      	ldr	r1, [sp, #28]
 800574e:	2200      	movs	r2, #0
 8005750:	4b18      	ldr	r3, [pc, #96]	@ (80057b4 <_dtoa_r+0x728>)
 8005752:	f7fb fe51 	bl	80013f8 <__aeabi_dmul>
 8005756:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8005758:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800575a:	f7fa fe9b 	bl	8000494 <__aeabi_dcmpge>
 800575e:	2800      	cmp	r0, #0
 8005760:	d100      	bne.n	8005764 <_dtoa_r+0x6d8>
 8005762:	e164      	b.n	8005a2e <_dtoa_r+0x9a2>
 8005764:	2600      	movs	r6, #0
 8005766:	0037      	movs	r7, r6
 8005768:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800576a:	9c08      	ldr	r4, [sp, #32]
 800576c:	43db      	mvns	r3, r3
 800576e:	930c      	str	r3, [sp, #48]	@ 0x30
 8005770:	2300      	movs	r3, #0
 8005772:	9304      	str	r3, [sp, #16]
 8005774:	0031      	movs	r1, r6
 8005776:	9803      	ldr	r0, [sp, #12]
 8005778:	f000 fd8c 	bl	8006294 <_Bfree>
 800577c:	2f00      	cmp	r7, #0
 800577e:	d0d7      	beq.n	8005730 <_dtoa_r+0x6a4>
 8005780:	9b04      	ldr	r3, [sp, #16]
 8005782:	2b00      	cmp	r3, #0
 8005784:	d005      	beq.n	8005792 <_dtoa_r+0x706>
 8005786:	42bb      	cmp	r3, r7
 8005788:	d003      	beq.n	8005792 <_dtoa_r+0x706>
 800578a:	0019      	movs	r1, r3
 800578c:	9803      	ldr	r0, [sp, #12]
 800578e:	f000 fd81 	bl	8006294 <_Bfree>
 8005792:	0039      	movs	r1, r7
 8005794:	9803      	ldr	r0, [sp, #12]
 8005796:	f000 fd7d 	bl	8006294 <_Bfree>
 800579a:	e7c9      	b.n	8005730 <_dtoa_r+0x6a4>
 800579c:	080074f0 	.word	0x080074f0
 80057a0:	080074c8 	.word	0x080074c8
 80057a4:	3ff00000 	.word	0x3ff00000
 80057a8:	40240000 	.word	0x40240000
 80057ac:	401c0000 	.word	0x401c0000
 80057b0:	fcc00000 	.word	0xfcc00000
 80057b4:	40140000 	.word	0x40140000
 80057b8:	3fe00000 	.word	0x3fe00000
 80057bc:	9b04      	ldr	r3, [sp, #16]
 80057be:	930c      	str	r3, [sp, #48]	@ 0x30
 80057c0:	0023      	movs	r3, r4
 80057c2:	001c      	movs	r4, r3
 80057c4:	3b01      	subs	r3, #1
 80057c6:	781a      	ldrb	r2, [r3, #0]
 80057c8:	2a39      	cmp	r2, #57	@ 0x39
 80057ca:	d108      	bne.n	80057de <_dtoa_r+0x752>
 80057cc:	9a08      	ldr	r2, [sp, #32]
 80057ce:	429a      	cmp	r2, r3
 80057d0:	d1f7      	bne.n	80057c2 <_dtoa_r+0x736>
 80057d2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80057d4:	9908      	ldr	r1, [sp, #32]
 80057d6:	3201      	adds	r2, #1
 80057d8:	920c      	str	r2, [sp, #48]	@ 0x30
 80057da:	2230      	movs	r2, #48	@ 0x30
 80057dc:	700a      	strb	r2, [r1, #0]
 80057de:	781a      	ldrb	r2, [r3, #0]
 80057e0:	3201      	adds	r2, #1
 80057e2:	701a      	strb	r2, [r3, #0]
 80057e4:	e7a4      	b.n	8005730 <_dtoa_r+0x6a4>
 80057e6:	2200      	movs	r2, #0
 80057e8:	4bc6      	ldr	r3, [pc, #792]	@ (8005b04 <_dtoa_r+0xa78>)
 80057ea:	f7fb fe05 	bl	80013f8 <__aeabi_dmul>
 80057ee:	2200      	movs	r2, #0
 80057f0:	2300      	movs	r3, #0
 80057f2:	0006      	movs	r6, r0
 80057f4:	000f      	movs	r7, r1
 80057f6:	f7fa fe29 	bl	800044c <__aeabi_dcmpeq>
 80057fa:	2800      	cmp	r0, #0
 80057fc:	d100      	bne.n	8005800 <_dtoa_r+0x774>
 80057fe:	e6a1      	b.n	8005544 <_dtoa_r+0x4b8>
 8005800:	e6d8      	b.n	80055b4 <_dtoa_r+0x528>
 8005802:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 8005804:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8005806:	9c06      	ldr	r4, [sp, #24]
 8005808:	2f00      	cmp	r7, #0
 800580a:	d014      	beq.n	8005836 <_dtoa_r+0x7aa>
 800580c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 800580e:	2a01      	cmp	r2, #1
 8005810:	dd00      	ble.n	8005814 <_dtoa_r+0x788>
 8005812:	e0c8      	b.n	80059a6 <_dtoa_r+0x91a>
 8005814:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8005816:	2a00      	cmp	r2, #0
 8005818:	d100      	bne.n	800581c <_dtoa_r+0x790>
 800581a:	e0be      	b.n	800599a <_dtoa_r+0x90e>
 800581c:	4aba      	ldr	r2, [pc, #744]	@ (8005b08 <_dtoa_r+0xa7c>)
 800581e:	189b      	adds	r3, r3, r2
 8005820:	9a06      	ldr	r2, [sp, #24]
 8005822:	2101      	movs	r1, #1
 8005824:	18d2      	adds	r2, r2, r3
 8005826:	9206      	str	r2, [sp, #24]
 8005828:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800582a:	9803      	ldr	r0, [sp, #12]
 800582c:	18d3      	adds	r3, r2, r3
 800582e:	930d      	str	r3, [sp, #52]	@ 0x34
 8005830:	f000 fde8 	bl	8006404 <__i2b>
 8005834:	0007      	movs	r7, r0
 8005836:	2c00      	cmp	r4, #0
 8005838:	d00e      	beq.n	8005858 <_dtoa_r+0x7cc>
 800583a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800583c:	2b00      	cmp	r3, #0
 800583e:	dd0b      	ble.n	8005858 <_dtoa_r+0x7cc>
 8005840:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8005842:	0023      	movs	r3, r4
 8005844:	4294      	cmp	r4, r2
 8005846:	dd00      	ble.n	800584a <_dtoa_r+0x7be>
 8005848:	0013      	movs	r3, r2
 800584a:	9a06      	ldr	r2, [sp, #24]
 800584c:	1ae4      	subs	r4, r4, r3
 800584e:	1ad2      	subs	r2, r2, r3
 8005850:	9206      	str	r2, [sp, #24]
 8005852:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8005854:	1ad3      	subs	r3, r2, r3
 8005856:	930d      	str	r3, [sp, #52]	@ 0x34
 8005858:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800585a:	2b00      	cmp	r3, #0
 800585c:	d01f      	beq.n	800589e <_dtoa_r+0x812>
 800585e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8005860:	2b00      	cmp	r3, #0
 8005862:	d100      	bne.n	8005866 <_dtoa_r+0x7da>
 8005864:	e0b5      	b.n	80059d2 <_dtoa_r+0x946>
 8005866:	2d00      	cmp	r5, #0
 8005868:	d010      	beq.n	800588c <_dtoa_r+0x800>
 800586a:	0039      	movs	r1, r7
 800586c:	002a      	movs	r2, r5
 800586e:	9803      	ldr	r0, [sp, #12]
 8005870:	f000 fe92 	bl	8006598 <__pow5mult>
 8005874:	9a05      	ldr	r2, [sp, #20]
 8005876:	0001      	movs	r1, r0
 8005878:	0007      	movs	r7, r0
 800587a:	9803      	ldr	r0, [sp, #12]
 800587c:	f000 fdda 	bl	8006434 <__multiply>
 8005880:	0006      	movs	r6, r0
 8005882:	9905      	ldr	r1, [sp, #20]
 8005884:	9803      	ldr	r0, [sp, #12]
 8005886:	f000 fd05 	bl	8006294 <_Bfree>
 800588a:	9605      	str	r6, [sp, #20]
 800588c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800588e:	1b5a      	subs	r2, r3, r5
 8005890:	42ab      	cmp	r3, r5
 8005892:	d004      	beq.n	800589e <_dtoa_r+0x812>
 8005894:	9905      	ldr	r1, [sp, #20]
 8005896:	9803      	ldr	r0, [sp, #12]
 8005898:	f000 fe7e 	bl	8006598 <__pow5mult>
 800589c:	9005      	str	r0, [sp, #20]
 800589e:	2101      	movs	r1, #1
 80058a0:	9803      	ldr	r0, [sp, #12]
 80058a2:	f000 fdaf 	bl	8006404 <__i2b>
 80058a6:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80058a8:	0006      	movs	r6, r0
 80058aa:	2b00      	cmp	r3, #0
 80058ac:	d100      	bne.n	80058b0 <_dtoa_r+0x824>
 80058ae:	e1bc      	b.n	8005c2a <_dtoa_r+0xb9e>
 80058b0:	001a      	movs	r2, r3
 80058b2:	0001      	movs	r1, r0
 80058b4:	9803      	ldr	r0, [sp, #12]
 80058b6:	f000 fe6f 	bl	8006598 <__pow5mult>
 80058ba:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80058bc:	0006      	movs	r6, r0
 80058be:	2500      	movs	r5, #0
 80058c0:	2b01      	cmp	r3, #1
 80058c2:	dc16      	bgt.n	80058f2 <_dtoa_r+0x866>
 80058c4:	2500      	movs	r5, #0
 80058c6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80058c8:	42ab      	cmp	r3, r5
 80058ca:	d10e      	bne.n	80058ea <_dtoa_r+0x85e>
 80058cc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80058ce:	031b      	lsls	r3, r3, #12
 80058d0:	42ab      	cmp	r3, r5
 80058d2:	d10a      	bne.n	80058ea <_dtoa_r+0x85e>
 80058d4:	4b8d      	ldr	r3, [pc, #564]	@ (8005b0c <_dtoa_r+0xa80>)
 80058d6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80058d8:	4213      	tst	r3, r2
 80058da:	d006      	beq.n	80058ea <_dtoa_r+0x85e>
 80058dc:	9b06      	ldr	r3, [sp, #24]
 80058de:	3501      	adds	r5, #1
 80058e0:	3301      	adds	r3, #1
 80058e2:	9306      	str	r3, [sp, #24]
 80058e4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80058e6:	3301      	adds	r3, #1
 80058e8:	930d      	str	r3, [sp, #52]	@ 0x34
 80058ea:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80058ec:	2001      	movs	r0, #1
 80058ee:	2b00      	cmp	r3, #0
 80058f0:	d008      	beq.n	8005904 <_dtoa_r+0x878>
 80058f2:	6933      	ldr	r3, [r6, #16]
 80058f4:	3303      	adds	r3, #3
 80058f6:	009b      	lsls	r3, r3, #2
 80058f8:	18f3      	adds	r3, r6, r3
 80058fa:	6858      	ldr	r0, [r3, #4]
 80058fc:	f000 fd32 	bl	8006364 <__hi0bits>
 8005900:	2320      	movs	r3, #32
 8005902:	1a18      	subs	r0, r3, r0
 8005904:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8005906:	1818      	adds	r0, r3, r0
 8005908:	0002      	movs	r2, r0
 800590a:	231f      	movs	r3, #31
 800590c:	401a      	ands	r2, r3
 800590e:	4218      	tst	r0, r3
 8005910:	d065      	beq.n	80059de <_dtoa_r+0x952>
 8005912:	3301      	adds	r3, #1
 8005914:	1a9b      	subs	r3, r3, r2
 8005916:	2b04      	cmp	r3, #4
 8005918:	dd5d      	ble.n	80059d6 <_dtoa_r+0x94a>
 800591a:	231c      	movs	r3, #28
 800591c:	1a9b      	subs	r3, r3, r2
 800591e:	9a06      	ldr	r2, [sp, #24]
 8005920:	18e4      	adds	r4, r4, r3
 8005922:	18d2      	adds	r2, r2, r3
 8005924:	9206      	str	r2, [sp, #24]
 8005926:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8005928:	18d3      	adds	r3, r2, r3
 800592a:	930d      	str	r3, [sp, #52]	@ 0x34
 800592c:	9b06      	ldr	r3, [sp, #24]
 800592e:	2b00      	cmp	r3, #0
 8005930:	dd05      	ble.n	800593e <_dtoa_r+0x8b2>
 8005932:	001a      	movs	r2, r3
 8005934:	9905      	ldr	r1, [sp, #20]
 8005936:	9803      	ldr	r0, [sp, #12]
 8005938:	f000 fe8a 	bl	8006650 <__lshift>
 800593c:	9005      	str	r0, [sp, #20]
 800593e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8005940:	2b00      	cmp	r3, #0
 8005942:	dd05      	ble.n	8005950 <_dtoa_r+0x8c4>
 8005944:	0031      	movs	r1, r6
 8005946:	001a      	movs	r2, r3
 8005948:	9803      	ldr	r0, [sp, #12]
 800594a:	f000 fe81 	bl	8006650 <__lshift>
 800594e:	0006      	movs	r6, r0
 8005950:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8005952:	2b00      	cmp	r3, #0
 8005954:	d045      	beq.n	80059e2 <_dtoa_r+0x956>
 8005956:	0031      	movs	r1, r6
 8005958:	9805      	ldr	r0, [sp, #20]
 800595a:	f000 fee5 	bl	8006728 <__mcmp>
 800595e:	2800      	cmp	r0, #0
 8005960:	da3f      	bge.n	80059e2 <_dtoa_r+0x956>
 8005962:	9b04      	ldr	r3, [sp, #16]
 8005964:	220a      	movs	r2, #10
 8005966:	3b01      	subs	r3, #1
 8005968:	930c      	str	r3, [sp, #48]	@ 0x30
 800596a:	9905      	ldr	r1, [sp, #20]
 800596c:	2300      	movs	r3, #0
 800596e:	9803      	ldr	r0, [sp, #12]
 8005970:	f000 fcb4 	bl	80062dc <__multadd>
 8005974:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8005976:	9005      	str	r0, [sp, #20]
 8005978:	2b00      	cmp	r3, #0
 800597a:	d100      	bne.n	800597e <_dtoa_r+0x8f2>
 800597c:	e15c      	b.n	8005c38 <_dtoa_r+0xbac>
 800597e:	2300      	movs	r3, #0
 8005980:	0039      	movs	r1, r7
 8005982:	220a      	movs	r2, #10
 8005984:	9803      	ldr	r0, [sp, #12]
 8005986:	f000 fca9 	bl	80062dc <__multadd>
 800598a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800598c:	0007      	movs	r7, r0
 800598e:	2b00      	cmp	r3, #0
 8005990:	dc55      	bgt.n	8005a3e <_dtoa_r+0x9b2>
 8005992:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8005994:	2b02      	cmp	r3, #2
 8005996:	dc2d      	bgt.n	80059f4 <_dtoa_r+0x968>
 8005998:	e051      	b.n	8005a3e <_dtoa_r+0x9b2>
 800599a:	2336      	movs	r3, #54	@ 0x36
 800599c:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 800599e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80059a0:	9c06      	ldr	r4, [sp, #24]
 80059a2:	1a9b      	subs	r3, r3, r2
 80059a4:	e73c      	b.n	8005820 <_dtoa_r+0x794>
 80059a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80059a8:	1e5d      	subs	r5, r3, #1
 80059aa:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80059ac:	42ab      	cmp	r3, r5
 80059ae:	db08      	blt.n	80059c2 <_dtoa_r+0x936>
 80059b0:	1b5d      	subs	r5, r3, r5
 80059b2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80059b4:	9c06      	ldr	r4, [sp, #24]
 80059b6:	2b00      	cmp	r3, #0
 80059b8:	db00      	blt.n	80059bc <_dtoa_r+0x930>
 80059ba:	e731      	b.n	8005820 <_dtoa_r+0x794>
 80059bc:	1ae4      	subs	r4, r4, r3
 80059be:	2300      	movs	r3, #0
 80059c0:	e72e      	b.n	8005820 <_dtoa_r+0x794>
 80059c2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80059c4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80059c6:	1aeb      	subs	r3, r5, r3
 80059c8:	18d3      	adds	r3, r2, r3
 80059ca:	950f      	str	r5, [sp, #60]	@ 0x3c
 80059cc:	9314      	str	r3, [sp, #80]	@ 0x50
 80059ce:	2500      	movs	r5, #0
 80059d0:	e7ef      	b.n	80059b2 <_dtoa_r+0x926>
 80059d2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80059d4:	e75e      	b.n	8005894 <_dtoa_r+0x808>
 80059d6:	2b04      	cmp	r3, #4
 80059d8:	d0a8      	beq.n	800592c <_dtoa_r+0x8a0>
 80059da:	331c      	adds	r3, #28
 80059dc:	e79f      	b.n	800591e <_dtoa_r+0x892>
 80059de:	0013      	movs	r3, r2
 80059e0:	e7fb      	b.n	80059da <_dtoa_r+0x94e>
 80059e2:	9b04      	ldr	r3, [sp, #16]
 80059e4:	930c      	str	r3, [sp, #48]	@ 0x30
 80059e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80059e8:	930e      	str	r3, [sp, #56]	@ 0x38
 80059ea:	2b00      	cmp	r3, #0
 80059ec:	dc23      	bgt.n	8005a36 <_dtoa_r+0x9aa>
 80059ee:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80059f0:	2b02      	cmp	r3, #2
 80059f2:	dd20      	ble.n	8005a36 <_dtoa_r+0x9aa>
 80059f4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80059f6:	2b00      	cmp	r3, #0
 80059f8:	d000      	beq.n	80059fc <_dtoa_r+0x970>
 80059fa:	e6b5      	b.n	8005768 <_dtoa_r+0x6dc>
 80059fc:	0031      	movs	r1, r6
 80059fe:	2205      	movs	r2, #5
 8005a00:	9803      	ldr	r0, [sp, #12]
 8005a02:	f000 fc6b 	bl	80062dc <__multadd>
 8005a06:	0006      	movs	r6, r0
 8005a08:	0001      	movs	r1, r0
 8005a0a:	9805      	ldr	r0, [sp, #20]
 8005a0c:	f000 fe8c 	bl	8006728 <__mcmp>
 8005a10:	2800      	cmp	r0, #0
 8005a12:	dc00      	bgt.n	8005a16 <_dtoa_r+0x98a>
 8005a14:	e6a8      	b.n	8005768 <_dtoa_r+0x6dc>
 8005a16:	9b08      	ldr	r3, [sp, #32]
 8005a18:	9a08      	ldr	r2, [sp, #32]
 8005a1a:	1c5c      	adds	r4, r3, #1
 8005a1c:	2331      	movs	r3, #49	@ 0x31
 8005a1e:	7013      	strb	r3, [r2, #0]
 8005a20:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005a22:	3301      	adds	r3, #1
 8005a24:	930c      	str	r3, [sp, #48]	@ 0x30
 8005a26:	e6a3      	b.n	8005770 <_dtoa_r+0x6e4>
 8005a28:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8005a2a:	0037      	movs	r7, r6
 8005a2c:	e7f3      	b.n	8005a16 <_dtoa_r+0x98a>
 8005a2e:	9b04      	ldr	r3, [sp, #16]
 8005a30:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 8005a32:	930c      	str	r3, [sp, #48]	@ 0x30
 8005a34:	e7f9      	b.n	8005a2a <_dtoa_r+0x99e>
 8005a36:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8005a38:	2b00      	cmp	r3, #0
 8005a3a:	d100      	bne.n	8005a3e <_dtoa_r+0x9b2>
 8005a3c:	e100      	b.n	8005c40 <_dtoa_r+0xbb4>
 8005a3e:	2c00      	cmp	r4, #0
 8005a40:	dd05      	ble.n	8005a4e <_dtoa_r+0x9c2>
 8005a42:	0039      	movs	r1, r7
 8005a44:	0022      	movs	r2, r4
 8005a46:	9803      	ldr	r0, [sp, #12]
 8005a48:	f000 fe02 	bl	8006650 <__lshift>
 8005a4c:	0007      	movs	r7, r0
 8005a4e:	0038      	movs	r0, r7
 8005a50:	2d00      	cmp	r5, #0
 8005a52:	d018      	beq.n	8005a86 <_dtoa_r+0x9fa>
 8005a54:	6879      	ldr	r1, [r7, #4]
 8005a56:	9803      	ldr	r0, [sp, #12]
 8005a58:	f000 fbd8 	bl	800620c <_Balloc>
 8005a5c:	1e04      	subs	r4, r0, #0
 8005a5e:	d105      	bne.n	8005a6c <_dtoa_r+0x9e0>
 8005a60:	0022      	movs	r2, r4
 8005a62:	4b2b      	ldr	r3, [pc, #172]	@ (8005b10 <_dtoa_r+0xa84>)
 8005a64:	482b      	ldr	r0, [pc, #172]	@ (8005b14 <_dtoa_r+0xa88>)
 8005a66:	492c      	ldr	r1, [pc, #176]	@ (8005b18 <_dtoa_r+0xa8c>)
 8005a68:	f7ff fb25 	bl	80050b6 <_dtoa_r+0x2a>
 8005a6c:	0039      	movs	r1, r7
 8005a6e:	693a      	ldr	r2, [r7, #16]
 8005a70:	310c      	adds	r1, #12
 8005a72:	3202      	adds	r2, #2
 8005a74:	0092      	lsls	r2, r2, #2
 8005a76:	300c      	adds	r0, #12
 8005a78:	f7ff fa70 	bl	8004f5c <memcpy>
 8005a7c:	2201      	movs	r2, #1
 8005a7e:	0021      	movs	r1, r4
 8005a80:	9803      	ldr	r0, [sp, #12]
 8005a82:	f000 fde5 	bl	8006650 <__lshift>
 8005a86:	9b08      	ldr	r3, [sp, #32]
 8005a88:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8005a8a:	9306      	str	r3, [sp, #24]
 8005a8c:	3b01      	subs	r3, #1
 8005a8e:	189b      	adds	r3, r3, r2
 8005a90:	2201      	movs	r2, #1
 8005a92:	9704      	str	r7, [sp, #16]
 8005a94:	0007      	movs	r7, r0
 8005a96:	930f      	str	r3, [sp, #60]	@ 0x3c
 8005a98:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005a9a:	4013      	ands	r3, r2
 8005a9c:	930e      	str	r3, [sp, #56]	@ 0x38
 8005a9e:	0031      	movs	r1, r6
 8005aa0:	9805      	ldr	r0, [sp, #20]
 8005aa2:	f7ff fa64 	bl	8004f6e <quorem>
 8005aa6:	9904      	ldr	r1, [sp, #16]
 8005aa8:	0005      	movs	r5, r0
 8005aaa:	900a      	str	r0, [sp, #40]	@ 0x28
 8005aac:	9805      	ldr	r0, [sp, #20]
 8005aae:	f000 fe3b 	bl	8006728 <__mcmp>
 8005ab2:	003a      	movs	r2, r7
 8005ab4:	900d      	str	r0, [sp, #52]	@ 0x34
 8005ab6:	0031      	movs	r1, r6
 8005ab8:	9803      	ldr	r0, [sp, #12]
 8005aba:	f000 fe51 	bl	8006760 <__mdiff>
 8005abe:	2201      	movs	r2, #1
 8005ac0:	68c3      	ldr	r3, [r0, #12]
 8005ac2:	0004      	movs	r4, r0
 8005ac4:	3530      	adds	r5, #48	@ 0x30
 8005ac6:	9209      	str	r2, [sp, #36]	@ 0x24
 8005ac8:	2b00      	cmp	r3, #0
 8005aca:	d104      	bne.n	8005ad6 <_dtoa_r+0xa4a>
 8005acc:	0001      	movs	r1, r0
 8005ace:	9805      	ldr	r0, [sp, #20]
 8005ad0:	f000 fe2a 	bl	8006728 <__mcmp>
 8005ad4:	9009      	str	r0, [sp, #36]	@ 0x24
 8005ad6:	0021      	movs	r1, r4
 8005ad8:	9803      	ldr	r0, [sp, #12]
 8005ada:	f000 fbdb 	bl	8006294 <_Bfree>
 8005ade:	9b06      	ldr	r3, [sp, #24]
 8005ae0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005ae2:	1c5c      	adds	r4, r3, #1
 8005ae4:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8005ae6:	4313      	orrs	r3, r2
 8005ae8:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8005aea:	4313      	orrs	r3, r2
 8005aec:	d116      	bne.n	8005b1c <_dtoa_r+0xa90>
 8005aee:	2d39      	cmp	r5, #57	@ 0x39
 8005af0:	d02f      	beq.n	8005b52 <_dtoa_r+0xac6>
 8005af2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8005af4:	2b00      	cmp	r3, #0
 8005af6:	dd01      	ble.n	8005afc <_dtoa_r+0xa70>
 8005af8:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8005afa:	3531      	adds	r5, #49	@ 0x31
 8005afc:	9b06      	ldr	r3, [sp, #24]
 8005afe:	701d      	strb	r5, [r3, #0]
 8005b00:	e638      	b.n	8005774 <_dtoa_r+0x6e8>
 8005b02:	46c0      	nop			@ (mov r8, r8)
 8005b04:	40240000 	.word	0x40240000
 8005b08:	00000433 	.word	0x00000433
 8005b0c:	7ff00000 	.word	0x7ff00000
 8005b10:	0800743c 	.word	0x0800743c
 8005b14:	080073e4 	.word	0x080073e4
 8005b18:	000002ef 	.word	0x000002ef
 8005b1c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8005b1e:	2b00      	cmp	r3, #0
 8005b20:	db04      	blt.n	8005b2c <_dtoa_r+0xaa0>
 8005b22:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8005b24:	4313      	orrs	r3, r2
 8005b26:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8005b28:	4313      	orrs	r3, r2
 8005b2a:	d11e      	bne.n	8005b6a <_dtoa_r+0xade>
 8005b2c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005b2e:	2b00      	cmp	r3, #0
 8005b30:	dde4      	ble.n	8005afc <_dtoa_r+0xa70>
 8005b32:	9905      	ldr	r1, [sp, #20]
 8005b34:	2201      	movs	r2, #1
 8005b36:	9803      	ldr	r0, [sp, #12]
 8005b38:	f000 fd8a 	bl	8006650 <__lshift>
 8005b3c:	0031      	movs	r1, r6
 8005b3e:	9005      	str	r0, [sp, #20]
 8005b40:	f000 fdf2 	bl	8006728 <__mcmp>
 8005b44:	2800      	cmp	r0, #0
 8005b46:	dc02      	bgt.n	8005b4e <_dtoa_r+0xac2>
 8005b48:	d1d8      	bne.n	8005afc <_dtoa_r+0xa70>
 8005b4a:	07eb      	lsls	r3, r5, #31
 8005b4c:	d5d6      	bpl.n	8005afc <_dtoa_r+0xa70>
 8005b4e:	2d39      	cmp	r5, #57	@ 0x39
 8005b50:	d1d2      	bne.n	8005af8 <_dtoa_r+0xa6c>
 8005b52:	2339      	movs	r3, #57	@ 0x39
 8005b54:	9a06      	ldr	r2, [sp, #24]
 8005b56:	7013      	strb	r3, [r2, #0]
 8005b58:	0023      	movs	r3, r4
 8005b5a:	001c      	movs	r4, r3
 8005b5c:	3b01      	subs	r3, #1
 8005b5e:	781a      	ldrb	r2, [r3, #0]
 8005b60:	2a39      	cmp	r2, #57	@ 0x39
 8005b62:	d04f      	beq.n	8005c04 <_dtoa_r+0xb78>
 8005b64:	3201      	adds	r2, #1
 8005b66:	701a      	strb	r2, [r3, #0]
 8005b68:	e604      	b.n	8005774 <_dtoa_r+0x6e8>
 8005b6a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005b6c:	2b00      	cmp	r3, #0
 8005b6e:	dd03      	ble.n	8005b78 <_dtoa_r+0xaec>
 8005b70:	2d39      	cmp	r5, #57	@ 0x39
 8005b72:	d0ee      	beq.n	8005b52 <_dtoa_r+0xac6>
 8005b74:	3501      	adds	r5, #1
 8005b76:	e7c1      	b.n	8005afc <_dtoa_r+0xa70>
 8005b78:	9b06      	ldr	r3, [sp, #24]
 8005b7a:	9a06      	ldr	r2, [sp, #24]
 8005b7c:	701d      	strb	r5, [r3, #0]
 8005b7e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005b80:	4293      	cmp	r3, r2
 8005b82:	d02a      	beq.n	8005bda <_dtoa_r+0xb4e>
 8005b84:	2300      	movs	r3, #0
 8005b86:	220a      	movs	r2, #10
 8005b88:	9905      	ldr	r1, [sp, #20]
 8005b8a:	9803      	ldr	r0, [sp, #12]
 8005b8c:	f000 fba6 	bl	80062dc <__multadd>
 8005b90:	9b04      	ldr	r3, [sp, #16]
 8005b92:	9005      	str	r0, [sp, #20]
 8005b94:	42bb      	cmp	r3, r7
 8005b96:	d109      	bne.n	8005bac <_dtoa_r+0xb20>
 8005b98:	2300      	movs	r3, #0
 8005b9a:	220a      	movs	r2, #10
 8005b9c:	9904      	ldr	r1, [sp, #16]
 8005b9e:	9803      	ldr	r0, [sp, #12]
 8005ba0:	f000 fb9c 	bl	80062dc <__multadd>
 8005ba4:	9004      	str	r0, [sp, #16]
 8005ba6:	0007      	movs	r7, r0
 8005ba8:	9406      	str	r4, [sp, #24]
 8005baa:	e778      	b.n	8005a9e <_dtoa_r+0xa12>
 8005bac:	9904      	ldr	r1, [sp, #16]
 8005bae:	2300      	movs	r3, #0
 8005bb0:	220a      	movs	r2, #10
 8005bb2:	9803      	ldr	r0, [sp, #12]
 8005bb4:	f000 fb92 	bl	80062dc <__multadd>
 8005bb8:	2300      	movs	r3, #0
 8005bba:	9004      	str	r0, [sp, #16]
 8005bbc:	220a      	movs	r2, #10
 8005bbe:	0039      	movs	r1, r7
 8005bc0:	9803      	ldr	r0, [sp, #12]
 8005bc2:	f000 fb8b 	bl	80062dc <__multadd>
 8005bc6:	e7ee      	b.n	8005ba6 <_dtoa_r+0xb1a>
 8005bc8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005bca:	2401      	movs	r4, #1
 8005bcc:	2b00      	cmp	r3, #0
 8005bce:	dd00      	ble.n	8005bd2 <_dtoa_r+0xb46>
 8005bd0:	001c      	movs	r4, r3
 8005bd2:	9b08      	ldr	r3, [sp, #32]
 8005bd4:	191c      	adds	r4, r3, r4
 8005bd6:	2300      	movs	r3, #0
 8005bd8:	9304      	str	r3, [sp, #16]
 8005bda:	9905      	ldr	r1, [sp, #20]
 8005bdc:	2201      	movs	r2, #1
 8005bde:	9803      	ldr	r0, [sp, #12]
 8005be0:	f000 fd36 	bl	8006650 <__lshift>
 8005be4:	0031      	movs	r1, r6
 8005be6:	9005      	str	r0, [sp, #20]
 8005be8:	f000 fd9e 	bl	8006728 <__mcmp>
 8005bec:	2800      	cmp	r0, #0
 8005bee:	dcb3      	bgt.n	8005b58 <_dtoa_r+0xacc>
 8005bf0:	d101      	bne.n	8005bf6 <_dtoa_r+0xb6a>
 8005bf2:	07ed      	lsls	r5, r5, #31
 8005bf4:	d4b0      	bmi.n	8005b58 <_dtoa_r+0xacc>
 8005bf6:	0023      	movs	r3, r4
 8005bf8:	001c      	movs	r4, r3
 8005bfa:	3b01      	subs	r3, #1
 8005bfc:	781a      	ldrb	r2, [r3, #0]
 8005bfe:	2a30      	cmp	r2, #48	@ 0x30
 8005c00:	d0fa      	beq.n	8005bf8 <_dtoa_r+0xb6c>
 8005c02:	e5b7      	b.n	8005774 <_dtoa_r+0x6e8>
 8005c04:	9a08      	ldr	r2, [sp, #32]
 8005c06:	429a      	cmp	r2, r3
 8005c08:	d1a7      	bne.n	8005b5a <_dtoa_r+0xace>
 8005c0a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005c0c:	3301      	adds	r3, #1
 8005c0e:	930c      	str	r3, [sp, #48]	@ 0x30
 8005c10:	2331      	movs	r3, #49	@ 0x31
 8005c12:	7013      	strb	r3, [r2, #0]
 8005c14:	e5ae      	b.n	8005774 <_dtoa_r+0x6e8>
 8005c16:	4b15      	ldr	r3, [pc, #84]	@ (8005c6c <_dtoa_r+0xbe0>)
 8005c18:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8005c1a:	9308      	str	r3, [sp, #32]
 8005c1c:	4b14      	ldr	r3, [pc, #80]	@ (8005c70 <_dtoa_r+0xbe4>)
 8005c1e:	2a00      	cmp	r2, #0
 8005c20:	d001      	beq.n	8005c26 <_dtoa_r+0xb9a>
 8005c22:	f7ff fa7b 	bl	800511c <_dtoa_r+0x90>
 8005c26:	f7ff fa7b 	bl	8005120 <_dtoa_r+0x94>
 8005c2a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8005c2c:	2b01      	cmp	r3, #1
 8005c2e:	dc00      	bgt.n	8005c32 <_dtoa_r+0xba6>
 8005c30:	e648      	b.n	80058c4 <_dtoa_r+0x838>
 8005c32:	2001      	movs	r0, #1
 8005c34:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8005c36:	e665      	b.n	8005904 <_dtoa_r+0x878>
 8005c38:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005c3a:	2b00      	cmp	r3, #0
 8005c3c:	dc00      	bgt.n	8005c40 <_dtoa_r+0xbb4>
 8005c3e:	e6d6      	b.n	80059ee <_dtoa_r+0x962>
 8005c40:	2400      	movs	r4, #0
 8005c42:	0031      	movs	r1, r6
 8005c44:	9805      	ldr	r0, [sp, #20]
 8005c46:	f7ff f992 	bl	8004f6e <quorem>
 8005c4a:	9b08      	ldr	r3, [sp, #32]
 8005c4c:	3030      	adds	r0, #48	@ 0x30
 8005c4e:	5518      	strb	r0, [r3, r4]
 8005c50:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005c52:	3401      	adds	r4, #1
 8005c54:	0005      	movs	r5, r0
 8005c56:	429c      	cmp	r4, r3
 8005c58:	dab6      	bge.n	8005bc8 <_dtoa_r+0xb3c>
 8005c5a:	2300      	movs	r3, #0
 8005c5c:	220a      	movs	r2, #10
 8005c5e:	9905      	ldr	r1, [sp, #20]
 8005c60:	9803      	ldr	r0, [sp, #12]
 8005c62:	f000 fb3b 	bl	80062dc <__multadd>
 8005c66:	9005      	str	r0, [sp, #20]
 8005c68:	e7eb      	b.n	8005c42 <_dtoa_r+0xbb6>
 8005c6a:	46c0      	nop			@ (mov r8, r8)
 8005c6c:	080073c0 	.word	0x080073c0
 8005c70:	080073c8 	.word	0x080073c8

08005c74 <__ssputs_r>:
 8005c74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005c76:	688e      	ldr	r6, [r1, #8]
 8005c78:	b085      	sub	sp, #20
 8005c7a:	001f      	movs	r7, r3
 8005c7c:	000c      	movs	r4, r1
 8005c7e:	680b      	ldr	r3, [r1, #0]
 8005c80:	9002      	str	r0, [sp, #8]
 8005c82:	9203      	str	r2, [sp, #12]
 8005c84:	42be      	cmp	r6, r7
 8005c86:	d830      	bhi.n	8005cea <__ssputs_r+0x76>
 8005c88:	210c      	movs	r1, #12
 8005c8a:	5e62      	ldrsh	r2, [r4, r1]
 8005c8c:	2190      	movs	r1, #144	@ 0x90
 8005c8e:	00c9      	lsls	r1, r1, #3
 8005c90:	420a      	tst	r2, r1
 8005c92:	d028      	beq.n	8005ce6 <__ssputs_r+0x72>
 8005c94:	2003      	movs	r0, #3
 8005c96:	6921      	ldr	r1, [r4, #16]
 8005c98:	1a5b      	subs	r3, r3, r1
 8005c9a:	9301      	str	r3, [sp, #4]
 8005c9c:	6963      	ldr	r3, [r4, #20]
 8005c9e:	4343      	muls	r3, r0
 8005ca0:	9801      	ldr	r0, [sp, #4]
 8005ca2:	0fdd      	lsrs	r5, r3, #31
 8005ca4:	18ed      	adds	r5, r5, r3
 8005ca6:	1c7b      	adds	r3, r7, #1
 8005ca8:	181b      	adds	r3, r3, r0
 8005caa:	106d      	asrs	r5, r5, #1
 8005cac:	42ab      	cmp	r3, r5
 8005cae:	d900      	bls.n	8005cb2 <__ssputs_r+0x3e>
 8005cb0:	001d      	movs	r5, r3
 8005cb2:	0552      	lsls	r2, r2, #21
 8005cb4:	d528      	bpl.n	8005d08 <__ssputs_r+0x94>
 8005cb6:	0029      	movs	r1, r5
 8005cb8:	9802      	ldr	r0, [sp, #8]
 8005cba:	f000 f965 	bl	8005f88 <_malloc_r>
 8005cbe:	1e06      	subs	r6, r0, #0
 8005cc0:	d02c      	beq.n	8005d1c <__ssputs_r+0xa8>
 8005cc2:	9a01      	ldr	r2, [sp, #4]
 8005cc4:	6921      	ldr	r1, [r4, #16]
 8005cc6:	f7ff f949 	bl	8004f5c <memcpy>
 8005cca:	89a2      	ldrh	r2, [r4, #12]
 8005ccc:	4b18      	ldr	r3, [pc, #96]	@ (8005d30 <__ssputs_r+0xbc>)
 8005cce:	401a      	ands	r2, r3
 8005cd0:	2380      	movs	r3, #128	@ 0x80
 8005cd2:	4313      	orrs	r3, r2
 8005cd4:	81a3      	strh	r3, [r4, #12]
 8005cd6:	9b01      	ldr	r3, [sp, #4]
 8005cd8:	6126      	str	r6, [r4, #16]
 8005cda:	18f6      	adds	r6, r6, r3
 8005cdc:	6026      	str	r6, [r4, #0]
 8005cde:	003e      	movs	r6, r7
 8005ce0:	6165      	str	r5, [r4, #20]
 8005ce2:	1aed      	subs	r5, r5, r3
 8005ce4:	60a5      	str	r5, [r4, #8]
 8005ce6:	42be      	cmp	r6, r7
 8005ce8:	d900      	bls.n	8005cec <__ssputs_r+0x78>
 8005cea:	003e      	movs	r6, r7
 8005cec:	0032      	movs	r2, r6
 8005cee:	9903      	ldr	r1, [sp, #12]
 8005cf0:	6820      	ldr	r0, [r4, #0]
 8005cf2:	f000 feaa 	bl	8006a4a <memmove>
 8005cf6:	2000      	movs	r0, #0
 8005cf8:	68a3      	ldr	r3, [r4, #8]
 8005cfa:	1b9b      	subs	r3, r3, r6
 8005cfc:	60a3      	str	r3, [r4, #8]
 8005cfe:	6823      	ldr	r3, [r4, #0]
 8005d00:	199b      	adds	r3, r3, r6
 8005d02:	6023      	str	r3, [r4, #0]
 8005d04:	b005      	add	sp, #20
 8005d06:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005d08:	002a      	movs	r2, r5
 8005d0a:	9802      	ldr	r0, [sp, #8]
 8005d0c:	f000 fe6e 	bl	80069ec <_realloc_r>
 8005d10:	1e06      	subs	r6, r0, #0
 8005d12:	d1e0      	bne.n	8005cd6 <__ssputs_r+0x62>
 8005d14:	6921      	ldr	r1, [r4, #16]
 8005d16:	9802      	ldr	r0, [sp, #8]
 8005d18:	f000 ff56 	bl	8006bc8 <_free_r>
 8005d1c:	230c      	movs	r3, #12
 8005d1e:	2001      	movs	r0, #1
 8005d20:	9a02      	ldr	r2, [sp, #8]
 8005d22:	4240      	negs	r0, r0
 8005d24:	6013      	str	r3, [r2, #0]
 8005d26:	89a2      	ldrh	r2, [r4, #12]
 8005d28:	3334      	adds	r3, #52	@ 0x34
 8005d2a:	4313      	orrs	r3, r2
 8005d2c:	81a3      	strh	r3, [r4, #12]
 8005d2e:	e7e9      	b.n	8005d04 <__ssputs_r+0x90>
 8005d30:	fffffb7f 	.word	0xfffffb7f

08005d34 <_svfiprintf_r>:
 8005d34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005d36:	b0a1      	sub	sp, #132	@ 0x84
 8005d38:	9003      	str	r0, [sp, #12]
 8005d3a:	001d      	movs	r5, r3
 8005d3c:	898b      	ldrh	r3, [r1, #12]
 8005d3e:	000f      	movs	r7, r1
 8005d40:	0016      	movs	r6, r2
 8005d42:	061b      	lsls	r3, r3, #24
 8005d44:	d511      	bpl.n	8005d6a <_svfiprintf_r+0x36>
 8005d46:	690b      	ldr	r3, [r1, #16]
 8005d48:	2b00      	cmp	r3, #0
 8005d4a:	d10e      	bne.n	8005d6a <_svfiprintf_r+0x36>
 8005d4c:	2140      	movs	r1, #64	@ 0x40
 8005d4e:	f000 f91b 	bl	8005f88 <_malloc_r>
 8005d52:	6038      	str	r0, [r7, #0]
 8005d54:	6138      	str	r0, [r7, #16]
 8005d56:	2800      	cmp	r0, #0
 8005d58:	d105      	bne.n	8005d66 <_svfiprintf_r+0x32>
 8005d5a:	230c      	movs	r3, #12
 8005d5c:	9a03      	ldr	r2, [sp, #12]
 8005d5e:	6013      	str	r3, [r2, #0]
 8005d60:	2001      	movs	r0, #1
 8005d62:	4240      	negs	r0, r0
 8005d64:	e0cf      	b.n	8005f06 <_svfiprintf_r+0x1d2>
 8005d66:	2340      	movs	r3, #64	@ 0x40
 8005d68:	617b      	str	r3, [r7, #20]
 8005d6a:	2300      	movs	r3, #0
 8005d6c:	ac08      	add	r4, sp, #32
 8005d6e:	6163      	str	r3, [r4, #20]
 8005d70:	3320      	adds	r3, #32
 8005d72:	7663      	strb	r3, [r4, #25]
 8005d74:	3310      	adds	r3, #16
 8005d76:	76a3      	strb	r3, [r4, #26]
 8005d78:	9507      	str	r5, [sp, #28]
 8005d7a:	0035      	movs	r5, r6
 8005d7c:	782b      	ldrb	r3, [r5, #0]
 8005d7e:	2b00      	cmp	r3, #0
 8005d80:	d001      	beq.n	8005d86 <_svfiprintf_r+0x52>
 8005d82:	2b25      	cmp	r3, #37	@ 0x25
 8005d84:	d148      	bne.n	8005e18 <_svfiprintf_r+0xe4>
 8005d86:	1bab      	subs	r3, r5, r6
 8005d88:	9305      	str	r3, [sp, #20]
 8005d8a:	42b5      	cmp	r5, r6
 8005d8c:	d00b      	beq.n	8005da6 <_svfiprintf_r+0x72>
 8005d8e:	0032      	movs	r2, r6
 8005d90:	0039      	movs	r1, r7
 8005d92:	9803      	ldr	r0, [sp, #12]
 8005d94:	f7ff ff6e 	bl	8005c74 <__ssputs_r>
 8005d98:	3001      	adds	r0, #1
 8005d9a:	d100      	bne.n	8005d9e <_svfiprintf_r+0x6a>
 8005d9c:	e0ae      	b.n	8005efc <_svfiprintf_r+0x1c8>
 8005d9e:	6963      	ldr	r3, [r4, #20]
 8005da0:	9a05      	ldr	r2, [sp, #20]
 8005da2:	189b      	adds	r3, r3, r2
 8005da4:	6163      	str	r3, [r4, #20]
 8005da6:	782b      	ldrb	r3, [r5, #0]
 8005da8:	2b00      	cmp	r3, #0
 8005daa:	d100      	bne.n	8005dae <_svfiprintf_r+0x7a>
 8005dac:	e0a6      	b.n	8005efc <_svfiprintf_r+0x1c8>
 8005dae:	2201      	movs	r2, #1
 8005db0:	2300      	movs	r3, #0
 8005db2:	4252      	negs	r2, r2
 8005db4:	6062      	str	r2, [r4, #4]
 8005db6:	a904      	add	r1, sp, #16
 8005db8:	3254      	adds	r2, #84	@ 0x54
 8005dba:	1852      	adds	r2, r2, r1
 8005dbc:	1c6e      	adds	r6, r5, #1
 8005dbe:	6023      	str	r3, [r4, #0]
 8005dc0:	60e3      	str	r3, [r4, #12]
 8005dc2:	60a3      	str	r3, [r4, #8]
 8005dc4:	7013      	strb	r3, [r2, #0]
 8005dc6:	65a3      	str	r3, [r4, #88]	@ 0x58
 8005dc8:	4b54      	ldr	r3, [pc, #336]	@ (8005f1c <_svfiprintf_r+0x1e8>)
 8005dca:	2205      	movs	r2, #5
 8005dcc:	0018      	movs	r0, r3
 8005dce:	7831      	ldrb	r1, [r6, #0]
 8005dd0:	9305      	str	r3, [sp, #20]
 8005dd2:	f7ff f8b8 	bl	8004f46 <memchr>
 8005dd6:	1c75      	adds	r5, r6, #1
 8005dd8:	2800      	cmp	r0, #0
 8005dda:	d11f      	bne.n	8005e1c <_svfiprintf_r+0xe8>
 8005ddc:	6822      	ldr	r2, [r4, #0]
 8005dde:	06d3      	lsls	r3, r2, #27
 8005de0:	d504      	bpl.n	8005dec <_svfiprintf_r+0xb8>
 8005de2:	2353      	movs	r3, #83	@ 0x53
 8005de4:	a904      	add	r1, sp, #16
 8005de6:	185b      	adds	r3, r3, r1
 8005de8:	2120      	movs	r1, #32
 8005dea:	7019      	strb	r1, [r3, #0]
 8005dec:	0713      	lsls	r3, r2, #28
 8005dee:	d504      	bpl.n	8005dfa <_svfiprintf_r+0xc6>
 8005df0:	2353      	movs	r3, #83	@ 0x53
 8005df2:	a904      	add	r1, sp, #16
 8005df4:	185b      	adds	r3, r3, r1
 8005df6:	212b      	movs	r1, #43	@ 0x2b
 8005df8:	7019      	strb	r1, [r3, #0]
 8005dfa:	7833      	ldrb	r3, [r6, #0]
 8005dfc:	2b2a      	cmp	r3, #42	@ 0x2a
 8005dfe:	d016      	beq.n	8005e2e <_svfiprintf_r+0xfa>
 8005e00:	0035      	movs	r5, r6
 8005e02:	2100      	movs	r1, #0
 8005e04:	200a      	movs	r0, #10
 8005e06:	68e3      	ldr	r3, [r4, #12]
 8005e08:	782a      	ldrb	r2, [r5, #0]
 8005e0a:	1c6e      	adds	r6, r5, #1
 8005e0c:	3a30      	subs	r2, #48	@ 0x30
 8005e0e:	2a09      	cmp	r2, #9
 8005e10:	d950      	bls.n	8005eb4 <_svfiprintf_r+0x180>
 8005e12:	2900      	cmp	r1, #0
 8005e14:	d111      	bne.n	8005e3a <_svfiprintf_r+0x106>
 8005e16:	e017      	b.n	8005e48 <_svfiprintf_r+0x114>
 8005e18:	3501      	adds	r5, #1
 8005e1a:	e7af      	b.n	8005d7c <_svfiprintf_r+0x48>
 8005e1c:	9b05      	ldr	r3, [sp, #20]
 8005e1e:	6822      	ldr	r2, [r4, #0]
 8005e20:	1ac0      	subs	r0, r0, r3
 8005e22:	2301      	movs	r3, #1
 8005e24:	4083      	lsls	r3, r0
 8005e26:	4313      	orrs	r3, r2
 8005e28:	002e      	movs	r6, r5
 8005e2a:	6023      	str	r3, [r4, #0]
 8005e2c:	e7cc      	b.n	8005dc8 <_svfiprintf_r+0x94>
 8005e2e:	9b07      	ldr	r3, [sp, #28]
 8005e30:	1d19      	adds	r1, r3, #4
 8005e32:	681b      	ldr	r3, [r3, #0]
 8005e34:	9107      	str	r1, [sp, #28]
 8005e36:	2b00      	cmp	r3, #0
 8005e38:	db01      	blt.n	8005e3e <_svfiprintf_r+0x10a>
 8005e3a:	930b      	str	r3, [sp, #44]	@ 0x2c
 8005e3c:	e004      	b.n	8005e48 <_svfiprintf_r+0x114>
 8005e3e:	425b      	negs	r3, r3
 8005e40:	60e3      	str	r3, [r4, #12]
 8005e42:	2302      	movs	r3, #2
 8005e44:	4313      	orrs	r3, r2
 8005e46:	6023      	str	r3, [r4, #0]
 8005e48:	782b      	ldrb	r3, [r5, #0]
 8005e4a:	2b2e      	cmp	r3, #46	@ 0x2e
 8005e4c:	d10c      	bne.n	8005e68 <_svfiprintf_r+0x134>
 8005e4e:	786b      	ldrb	r3, [r5, #1]
 8005e50:	2b2a      	cmp	r3, #42	@ 0x2a
 8005e52:	d134      	bne.n	8005ebe <_svfiprintf_r+0x18a>
 8005e54:	9b07      	ldr	r3, [sp, #28]
 8005e56:	3502      	adds	r5, #2
 8005e58:	1d1a      	adds	r2, r3, #4
 8005e5a:	681b      	ldr	r3, [r3, #0]
 8005e5c:	9207      	str	r2, [sp, #28]
 8005e5e:	2b00      	cmp	r3, #0
 8005e60:	da01      	bge.n	8005e66 <_svfiprintf_r+0x132>
 8005e62:	2301      	movs	r3, #1
 8005e64:	425b      	negs	r3, r3
 8005e66:	9309      	str	r3, [sp, #36]	@ 0x24
 8005e68:	4e2d      	ldr	r6, [pc, #180]	@ (8005f20 <_svfiprintf_r+0x1ec>)
 8005e6a:	2203      	movs	r2, #3
 8005e6c:	0030      	movs	r0, r6
 8005e6e:	7829      	ldrb	r1, [r5, #0]
 8005e70:	f7ff f869 	bl	8004f46 <memchr>
 8005e74:	2800      	cmp	r0, #0
 8005e76:	d006      	beq.n	8005e86 <_svfiprintf_r+0x152>
 8005e78:	2340      	movs	r3, #64	@ 0x40
 8005e7a:	1b80      	subs	r0, r0, r6
 8005e7c:	4083      	lsls	r3, r0
 8005e7e:	6822      	ldr	r2, [r4, #0]
 8005e80:	3501      	adds	r5, #1
 8005e82:	4313      	orrs	r3, r2
 8005e84:	6023      	str	r3, [r4, #0]
 8005e86:	7829      	ldrb	r1, [r5, #0]
 8005e88:	2206      	movs	r2, #6
 8005e8a:	4826      	ldr	r0, [pc, #152]	@ (8005f24 <_svfiprintf_r+0x1f0>)
 8005e8c:	1c6e      	adds	r6, r5, #1
 8005e8e:	7621      	strb	r1, [r4, #24]
 8005e90:	f7ff f859 	bl	8004f46 <memchr>
 8005e94:	2800      	cmp	r0, #0
 8005e96:	d038      	beq.n	8005f0a <_svfiprintf_r+0x1d6>
 8005e98:	4b23      	ldr	r3, [pc, #140]	@ (8005f28 <_svfiprintf_r+0x1f4>)
 8005e9a:	2b00      	cmp	r3, #0
 8005e9c:	d122      	bne.n	8005ee4 <_svfiprintf_r+0x1b0>
 8005e9e:	2207      	movs	r2, #7
 8005ea0:	9b07      	ldr	r3, [sp, #28]
 8005ea2:	3307      	adds	r3, #7
 8005ea4:	4393      	bics	r3, r2
 8005ea6:	3308      	adds	r3, #8
 8005ea8:	9307      	str	r3, [sp, #28]
 8005eaa:	6963      	ldr	r3, [r4, #20]
 8005eac:	9a04      	ldr	r2, [sp, #16]
 8005eae:	189b      	adds	r3, r3, r2
 8005eb0:	6163      	str	r3, [r4, #20]
 8005eb2:	e762      	b.n	8005d7a <_svfiprintf_r+0x46>
 8005eb4:	4343      	muls	r3, r0
 8005eb6:	0035      	movs	r5, r6
 8005eb8:	2101      	movs	r1, #1
 8005eba:	189b      	adds	r3, r3, r2
 8005ebc:	e7a4      	b.n	8005e08 <_svfiprintf_r+0xd4>
 8005ebe:	2300      	movs	r3, #0
 8005ec0:	200a      	movs	r0, #10
 8005ec2:	0019      	movs	r1, r3
 8005ec4:	3501      	adds	r5, #1
 8005ec6:	6063      	str	r3, [r4, #4]
 8005ec8:	782a      	ldrb	r2, [r5, #0]
 8005eca:	1c6e      	adds	r6, r5, #1
 8005ecc:	3a30      	subs	r2, #48	@ 0x30
 8005ece:	2a09      	cmp	r2, #9
 8005ed0:	d903      	bls.n	8005eda <_svfiprintf_r+0x1a6>
 8005ed2:	2b00      	cmp	r3, #0
 8005ed4:	d0c8      	beq.n	8005e68 <_svfiprintf_r+0x134>
 8005ed6:	9109      	str	r1, [sp, #36]	@ 0x24
 8005ed8:	e7c6      	b.n	8005e68 <_svfiprintf_r+0x134>
 8005eda:	4341      	muls	r1, r0
 8005edc:	0035      	movs	r5, r6
 8005ede:	2301      	movs	r3, #1
 8005ee0:	1889      	adds	r1, r1, r2
 8005ee2:	e7f1      	b.n	8005ec8 <_svfiprintf_r+0x194>
 8005ee4:	aa07      	add	r2, sp, #28
 8005ee6:	9200      	str	r2, [sp, #0]
 8005ee8:	0021      	movs	r1, r4
 8005eea:	003a      	movs	r2, r7
 8005eec:	4b0f      	ldr	r3, [pc, #60]	@ (8005f2c <_svfiprintf_r+0x1f8>)
 8005eee:	9803      	ldr	r0, [sp, #12]
 8005ef0:	f7fe fb50 	bl	8004594 <_printf_float>
 8005ef4:	9004      	str	r0, [sp, #16]
 8005ef6:	9b04      	ldr	r3, [sp, #16]
 8005ef8:	3301      	adds	r3, #1
 8005efa:	d1d6      	bne.n	8005eaa <_svfiprintf_r+0x176>
 8005efc:	89bb      	ldrh	r3, [r7, #12]
 8005efe:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8005f00:	065b      	lsls	r3, r3, #25
 8005f02:	d500      	bpl.n	8005f06 <_svfiprintf_r+0x1d2>
 8005f04:	e72c      	b.n	8005d60 <_svfiprintf_r+0x2c>
 8005f06:	b021      	add	sp, #132	@ 0x84
 8005f08:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005f0a:	aa07      	add	r2, sp, #28
 8005f0c:	9200      	str	r2, [sp, #0]
 8005f0e:	0021      	movs	r1, r4
 8005f10:	003a      	movs	r2, r7
 8005f12:	4b06      	ldr	r3, [pc, #24]	@ (8005f2c <_svfiprintf_r+0x1f8>)
 8005f14:	9803      	ldr	r0, [sp, #12]
 8005f16:	f7fe fdeb 	bl	8004af0 <_printf_i>
 8005f1a:	e7eb      	b.n	8005ef4 <_svfiprintf_r+0x1c0>
 8005f1c:	0800744d 	.word	0x0800744d
 8005f20:	08007453 	.word	0x08007453
 8005f24:	08007457 	.word	0x08007457
 8005f28:	08004595 	.word	0x08004595
 8005f2c:	08005c75 	.word	0x08005c75

08005f30 <malloc>:
 8005f30:	b510      	push	{r4, lr}
 8005f32:	4b03      	ldr	r3, [pc, #12]	@ (8005f40 <malloc+0x10>)
 8005f34:	0001      	movs	r1, r0
 8005f36:	6818      	ldr	r0, [r3, #0]
 8005f38:	f000 f826 	bl	8005f88 <_malloc_r>
 8005f3c:	bd10      	pop	{r4, pc}
 8005f3e:	46c0      	nop			@ (mov r8, r8)
 8005f40:	20000018 	.word	0x20000018

08005f44 <sbrk_aligned>:
 8005f44:	b570      	push	{r4, r5, r6, lr}
 8005f46:	4e0f      	ldr	r6, [pc, #60]	@ (8005f84 <sbrk_aligned+0x40>)
 8005f48:	000d      	movs	r5, r1
 8005f4a:	6831      	ldr	r1, [r6, #0]
 8005f4c:	0004      	movs	r4, r0
 8005f4e:	2900      	cmp	r1, #0
 8005f50:	d102      	bne.n	8005f58 <sbrk_aligned+0x14>
 8005f52:	f000 fdc7 	bl	8006ae4 <_sbrk_r>
 8005f56:	6030      	str	r0, [r6, #0]
 8005f58:	0029      	movs	r1, r5
 8005f5a:	0020      	movs	r0, r4
 8005f5c:	f000 fdc2 	bl	8006ae4 <_sbrk_r>
 8005f60:	1c43      	adds	r3, r0, #1
 8005f62:	d103      	bne.n	8005f6c <sbrk_aligned+0x28>
 8005f64:	2501      	movs	r5, #1
 8005f66:	426d      	negs	r5, r5
 8005f68:	0028      	movs	r0, r5
 8005f6a:	bd70      	pop	{r4, r5, r6, pc}
 8005f6c:	2303      	movs	r3, #3
 8005f6e:	1cc5      	adds	r5, r0, #3
 8005f70:	439d      	bics	r5, r3
 8005f72:	42a8      	cmp	r0, r5
 8005f74:	d0f8      	beq.n	8005f68 <sbrk_aligned+0x24>
 8005f76:	1a29      	subs	r1, r5, r0
 8005f78:	0020      	movs	r0, r4
 8005f7a:	f000 fdb3 	bl	8006ae4 <_sbrk_r>
 8005f7e:	3001      	adds	r0, #1
 8005f80:	d1f2      	bne.n	8005f68 <sbrk_aligned+0x24>
 8005f82:	e7ef      	b.n	8005f64 <sbrk_aligned+0x20>
 8005f84:	20000568 	.word	0x20000568

08005f88 <_malloc_r>:
 8005f88:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005f8a:	2203      	movs	r2, #3
 8005f8c:	1ccb      	adds	r3, r1, #3
 8005f8e:	4393      	bics	r3, r2
 8005f90:	3308      	adds	r3, #8
 8005f92:	0005      	movs	r5, r0
 8005f94:	001f      	movs	r7, r3
 8005f96:	2b0c      	cmp	r3, #12
 8005f98:	d234      	bcs.n	8006004 <_malloc_r+0x7c>
 8005f9a:	270c      	movs	r7, #12
 8005f9c:	42b9      	cmp	r1, r7
 8005f9e:	d833      	bhi.n	8006008 <_malloc_r+0x80>
 8005fa0:	0028      	movs	r0, r5
 8005fa2:	f000 f923 	bl	80061ec <__malloc_lock>
 8005fa6:	4e37      	ldr	r6, [pc, #220]	@ (8006084 <_malloc_r+0xfc>)
 8005fa8:	6833      	ldr	r3, [r6, #0]
 8005faa:	001c      	movs	r4, r3
 8005fac:	2c00      	cmp	r4, #0
 8005fae:	d12f      	bne.n	8006010 <_malloc_r+0x88>
 8005fb0:	0039      	movs	r1, r7
 8005fb2:	0028      	movs	r0, r5
 8005fb4:	f7ff ffc6 	bl	8005f44 <sbrk_aligned>
 8005fb8:	0004      	movs	r4, r0
 8005fba:	1c43      	adds	r3, r0, #1
 8005fbc:	d15f      	bne.n	800607e <_malloc_r+0xf6>
 8005fbe:	6834      	ldr	r4, [r6, #0]
 8005fc0:	9400      	str	r4, [sp, #0]
 8005fc2:	9b00      	ldr	r3, [sp, #0]
 8005fc4:	2b00      	cmp	r3, #0
 8005fc6:	d14a      	bne.n	800605e <_malloc_r+0xd6>
 8005fc8:	2c00      	cmp	r4, #0
 8005fca:	d052      	beq.n	8006072 <_malloc_r+0xea>
 8005fcc:	6823      	ldr	r3, [r4, #0]
 8005fce:	0028      	movs	r0, r5
 8005fd0:	18e3      	adds	r3, r4, r3
 8005fd2:	9900      	ldr	r1, [sp, #0]
 8005fd4:	9301      	str	r3, [sp, #4]
 8005fd6:	f000 fd85 	bl	8006ae4 <_sbrk_r>
 8005fda:	9b01      	ldr	r3, [sp, #4]
 8005fdc:	4283      	cmp	r3, r0
 8005fde:	d148      	bne.n	8006072 <_malloc_r+0xea>
 8005fe0:	6823      	ldr	r3, [r4, #0]
 8005fe2:	0028      	movs	r0, r5
 8005fe4:	1aff      	subs	r7, r7, r3
 8005fe6:	0039      	movs	r1, r7
 8005fe8:	f7ff ffac 	bl	8005f44 <sbrk_aligned>
 8005fec:	3001      	adds	r0, #1
 8005fee:	d040      	beq.n	8006072 <_malloc_r+0xea>
 8005ff0:	6823      	ldr	r3, [r4, #0]
 8005ff2:	19db      	adds	r3, r3, r7
 8005ff4:	6023      	str	r3, [r4, #0]
 8005ff6:	6833      	ldr	r3, [r6, #0]
 8005ff8:	685a      	ldr	r2, [r3, #4]
 8005ffa:	2a00      	cmp	r2, #0
 8005ffc:	d133      	bne.n	8006066 <_malloc_r+0xde>
 8005ffe:	9b00      	ldr	r3, [sp, #0]
 8006000:	6033      	str	r3, [r6, #0]
 8006002:	e019      	b.n	8006038 <_malloc_r+0xb0>
 8006004:	2b00      	cmp	r3, #0
 8006006:	dac9      	bge.n	8005f9c <_malloc_r+0x14>
 8006008:	230c      	movs	r3, #12
 800600a:	602b      	str	r3, [r5, #0]
 800600c:	2000      	movs	r0, #0
 800600e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006010:	6821      	ldr	r1, [r4, #0]
 8006012:	1bc9      	subs	r1, r1, r7
 8006014:	d420      	bmi.n	8006058 <_malloc_r+0xd0>
 8006016:	290b      	cmp	r1, #11
 8006018:	d90a      	bls.n	8006030 <_malloc_r+0xa8>
 800601a:	19e2      	adds	r2, r4, r7
 800601c:	6027      	str	r7, [r4, #0]
 800601e:	42a3      	cmp	r3, r4
 8006020:	d104      	bne.n	800602c <_malloc_r+0xa4>
 8006022:	6032      	str	r2, [r6, #0]
 8006024:	6863      	ldr	r3, [r4, #4]
 8006026:	6011      	str	r1, [r2, #0]
 8006028:	6053      	str	r3, [r2, #4]
 800602a:	e005      	b.n	8006038 <_malloc_r+0xb0>
 800602c:	605a      	str	r2, [r3, #4]
 800602e:	e7f9      	b.n	8006024 <_malloc_r+0x9c>
 8006030:	6862      	ldr	r2, [r4, #4]
 8006032:	42a3      	cmp	r3, r4
 8006034:	d10e      	bne.n	8006054 <_malloc_r+0xcc>
 8006036:	6032      	str	r2, [r6, #0]
 8006038:	0028      	movs	r0, r5
 800603a:	f000 f8df 	bl	80061fc <__malloc_unlock>
 800603e:	0020      	movs	r0, r4
 8006040:	2207      	movs	r2, #7
 8006042:	300b      	adds	r0, #11
 8006044:	1d23      	adds	r3, r4, #4
 8006046:	4390      	bics	r0, r2
 8006048:	1ac2      	subs	r2, r0, r3
 800604a:	4298      	cmp	r0, r3
 800604c:	d0df      	beq.n	800600e <_malloc_r+0x86>
 800604e:	1a1b      	subs	r3, r3, r0
 8006050:	50a3      	str	r3, [r4, r2]
 8006052:	e7dc      	b.n	800600e <_malloc_r+0x86>
 8006054:	605a      	str	r2, [r3, #4]
 8006056:	e7ef      	b.n	8006038 <_malloc_r+0xb0>
 8006058:	0023      	movs	r3, r4
 800605a:	6864      	ldr	r4, [r4, #4]
 800605c:	e7a6      	b.n	8005fac <_malloc_r+0x24>
 800605e:	9c00      	ldr	r4, [sp, #0]
 8006060:	6863      	ldr	r3, [r4, #4]
 8006062:	9300      	str	r3, [sp, #0]
 8006064:	e7ad      	b.n	8005fc2 <_malloc_r+0x3a>
 8006066:	001a      	movs	r2, r3
 8006068:	685b      	ldr	r3, [r3, #4]
 800606a:	42a3      	cmp	r3, r4
 800606c:	d1fb      	bne.n	8006066 <_malloc_r+0xde>
 800606e:	2300      	movs	r3, #0
 8006070:	e7da      	b.n	8006028 <_malloc_r+0xa0>
 8006072:	230c      	movs	r3, #12
 8006074:	0028      	movs	r0, r5
 8006076:	602b      	str	r3, [r5, #0]
 8006078:	f000 f8c0 	bl	80061fc <__malloc_unlock>
 800607c:	e7c6      	b.n	800600c <_malloc_r+0x84>
 800607e:	6007      	str	r7, [r0, #0]
 8006080:	e7da      	b.n	8006038 <_malloc_r+0xb0>
 8006082:	46c0      	nop			@ (mov r8, r8)
 8006084:	2000056c 	.word	0x2000056c

08006088 <__sflush_r>:
 8006088:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800608a:	220c      	movs	r2, #12
 800608c:	5e8b      	ldrsh	r3, [r1, r2]
 800608e:	0005      	movs	r5, r0
 8006090:	000c      	movs	r4, r1
 8006092:	071a      	lsls	r2, r3, #28
 8006094:	d456      	bmi.n	8006144 <__sflush_r+0xbc>
 8006096:	684a      	ldr	r2, [r1, #4]
 8006098:	2a00      	cmp	r2, #0
 800609a:	dc02      	bgt.n	80060a2 <__sflush_r+0x1a>
 800609c:	6c0a      	ldr	r2, [r1, #64]	@ 0x40
 800609e:	2a00      	cmp	r2, #0
 80060a0:	dd4e      	ble.n	8006140 <__sflush_r+0xb8>
 80060a2:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 80060a4:	2f00      	cmp	r7, #0
 80060a6:	d04b      	beq.n	8006140 <__sflush_r+0xb8>
 80060a8:	2200      	movs	r2, #0
 80060aa:	2080      	movs	r0, #128	@ 0x80
 80060ac:	682e      	ldr	r6, [r5, #0]
 80060ae:	602a      	str	r2, [r5, #0]
 80060b0:	001a      	movs	r2, r3
 80060b2:	0140      	lsls	r0, r0, #5
 80060b4:	6a21      	ldr	r1, [r4, #32]
 80060b6:	4002      	ands	r2, r0
 80060b8:	4203      	tst	r3, r0
 80060ba:	d033      	beq.n	8006124 <__sflush_r+0x9c>
 80060bc:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80060be:	89a3      	ldrh	r3, [r4, #12]
 80060c0:	075b      	lsls	r3, r3, #29
 80060c2:	d506      	bpl.n	80060d2 <__sflush_r+0x4a>
 80060c4:	6863      	ldr	r3, [r4, #4]
 80060c6:	1ad2      	subs	r2, r2, r3
 80060c8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80060ca:	2b00      	cmp	r3, #0
 80060cc:	d001      	beq.n	80060d2 <__sflush_r+0x4a>
 80060ce:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80060d0:	1ad2      	subs	r2, r2, r3
 80060d2:	2300      	movs	r3, #0
 80060d4:	0028      	movs	r0, r5
 80060d6:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 80060d8:	6a21      	ldr	r1, [r4, #32]
 80060da:	47b8      	blx	r7
 80060dc:	89a2      	ldrh	r2, [r4, #12]
 80060de:	1c43      	adds	r3, r0, #1
 80060e0:	d106      	bne.n	80060f0 <__sflush_r+0x68>
 80060e2:	6829      	ldr	r1, [r5, #0]
 80060e4:	291d      	cmp	r1, #29
 80060e6:	d846      	bhi.n	8006176 <__sflush_r+0xee>
 80060e8:	4b29      	ldr	r3, [pc, #164]	@ (8006190 <__sflush_r+0x108>)
 80060ea:	410b      	asrs	r3, r1
 80060ec:	07db      	lsls	r3, r3, #31
 80060ee:	d442      	bmi.n	8006176 <__sflush_r+0xee>
 80060f0:	2300      	movs	r3, #0
 80060f2:	6063      	str	r3, [r4, #4]
 80060f4:	6923      	ldr	r3, [r4, #16]
 80060f6:	6023      	str	r3, [r4, #0]
 80060f8:	04d2      	lsls	r2, r2, #19
 80060fa:	d505      	bpl.n	8006108 <__sflush_r+0x80>
 80060fc:	1c43      	adds	r3, r0, #1
 80060fe:	d102      	bne.n	8006106 <__sflush_r+0x7e>
 8006100:	682b      	ldr	r3, [r5, #0]
 8006102:	2b00      	cmp	r3, #0
 8006104:	d100      	bne.n	8006108 <__sflush_r+0x80>
 8006106:	6560      	str	r0, [r4, #84]	@ 0x54
 8006108:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800610a:	602e      	str	r6, [r5, #0]
 800610c:	2900      	cmp	r1, #0
 800610e:	d017      	beq.n	8006140 <__sflush_r+0xb8>
 8006110:	0023      	movs	r3, r4
 8006112:	3344      	adds	r3, #68	@ 0x44
 8006114:	4299      	cmp	r1, r3
 8006116:	d002      	beq.n	800611e <__sflush_r+0x96>
 8006118:	0028      	movs	r0, r5
 800611a:	f000 fd55 	bl	8006bc8 <_free_r>
 800611e:	2300      	movs	r3, #0
 8006120:	6363      	str	r3, [r4, #52]	@ 0x34
 8006122:	e00d      	b.n	8006140 <__sflush_r+0xb8>
 8006124:	2301      	movs	r3, #1
 8006126:	0028      	movs	r0, r5
 8006128:	47b8      	blx	r7
 800612a:	0002      	movs	r2, r0
 800612c:	1c43      	adds	r3, r0, #1
 800612e:	d1c6      	bne.n	80060be <__sflush_r+0x36>
 8006130:	682b      	ldr	r3, [r5, #0]
 8006132:	2b00      	cmp	r3, #0
 8006134:	d0c3      	beq.n	80060be <__sflush_r+0x36>
 8006136:	2b1d      	cmp	r3, #29
 8006138:	d001      	beq.n	800613e <__sflush_r+0xb6>
 800613a:	2b16      	cmp	r3, #22
 800613c:	d11a      	bne.n	8006174 <__sflush_r+0xec>
 800613e:	602e      	str	r6, [r5, #0]
 8006140:	2000      	movs	r0, #0
 8006142:	e01e      	b.n	8006182 <__sflush_r+0xfa>
 8006144:	690e      	ldr	r6, [r1, #16]
 8006146:	2e00      	cmp	r6, #0
 8006148:	d0fa      	beq.n	8006140 <__sflush_r+0xb8>
 800614a:	680f      	ldr	r7, [r1, #0]
 800614c:	600e      	str	r6, [r1, #0]
 800614e:	1bba      	subs	r2, r7, r6
 8006150:	9201      	str	r2, [sp, #4]
 8006152:	2200      	movs	r2, #0
 8006154:	079b      	lsls	r3, r3, #30
 8006156:	d100      	bne.n	800615a <__sflush_r+0xd2>
 8006158:	694a      	ldr	r2, [r1, #20]
 800615a:	60a2      	str	r2, [r4, #8]
 800615c:	9b01      	ldr	r3, [sp, #4]
 800615e:	2b00      	cmp	r3, #0
 8006160:	ddee      	ble.n	8006140 <__sflush_r+0xb8>
 8006162:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8006164:	0032      	movs	r2, r6
 8006166:	001f      	movs	r7, r3
 8006168:	0028      	movs	r0, r5
 800616a:	9b01      	ldr	r3, [sp, #4]
 800616c:	6a21      	ldr	r1, [r4, #32]
 800616e:	47b8      	blx	r7
 8006170:	2800      	cmp	r0, #0
 8006172:	dc07      	bgt.n	8006184 <__sflush_r+0xfc>
 8006174:	89a2      	ldrh	r2, [r4, #12]
 8006176:	2340      	movs	r3, #64	@ 0x40
 8006178:	2001      	movs	r0, #1
 800617a:	4313      	orrs	r3, r2
 800617c:	b21b      	sxth	r3, r3
 800617e:	81a3      	strh	r3, [r4, #12]
 8006180:	4240      	negs	r0, r0
 8006182:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006184:	9b01      	ldr	r3, [sp, #4]
 8006186:	1836      	adds	r6, r6, r0
 8006188:	1a1b      	subs	r3, r3, r0
 800618a:	9301      	str	r3, [sp, #4]
 800618c:	e7e6      	b.n	800615c <__sflush_r+0xd4>
 800618e:	46c0      	nop			@ (mov r8, r8)
 8006190:	dfbffffe 	.word	0xdfbffffe

08006194 <_fflush_r>:
 8006194:	690b      	ldr	r3, [r1, #16]
 8006196:	b570      	push	{r4, r5, r6, lr}
 8006198:	0005      	movs	r5, r0
 800619a:	000c      	movs	r4, r1
 800619c:	2b00      	cmp	r3, #0
 800619e:	d102      	bne.n	80061a6 <_fflush_r+0x12>
 80061a0:	2500      	movs	r5, #0
 80061a2:	0028      	movs	r0, r5
 80061a4:	bd70      	pop	{r4, r5, r6, pc}
 80061a6:	2800      	cmp	r0, #0
 80061a8:	d004      	beq.n	80061b4 <_fflush_r+0x20>
 80061aa:	6a03      	ldr	r3, [r0, #32]
 80061ac:	2b00      	cmp	r3, #0
 80061ae:	d101      	bne.n	80061b4 <_fflush_r+0x20>
 80061b0:	f7fe fe5c 	bl	8004e6c <__sinit>
 80061b4:	220c      	movs	r2, #12
 80061b6:	5ea3      	ldrsh	r3, [r4, r2]
 80061b8:	2b00      	cmp	r3, #0
 80061ba:	d0f1      	beq.n	80061a0 <_fflush_r+0xc>
 80061bc:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80061be:	07d2      	lsls	r2, r2, #31
 80061c0:	d404      	bmi.n	80061cc <_fflush_r+0x38>
 80061c2:	059b      	lsls	r3, r3, #22
 80061c4:	d402      	bmi.n	80061cc <_fflush_r+0x38>
 80061c6:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80061c8:	f7fe febb 	bl	8004f42 <__retarget_lock_acquire_recursive>
 80061cc:	0028      	movs	r0, r5
 80061ce:	0021      	movs	r1, r4
 80061d0:	f7ff ff5a 	bl	8006088 <__sflush_r>
 80061d4:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80061d6:	0005      	movs	r5, r0
 80061d8:	07db      	lsls	r3, r3, #31
 80061da:	d4e2      	bmi.n	80061a2 <_fflush_r+0xe>
 80061dc:	89a3      	ldrh	r3, [r4, #12]
 80061de:	059b      	lsls	r3, r3, #22
 80061e0:	d4df      	bmi.n	80061a2 <_fflush_r+0xe>
 80061e2:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80061e4:	f7fe feae 	bl	8004f44 <__retarget_lock_release_recursive>
 80061e8:	e7db      	b.n	80061a2 <_fflush_r+0xe>
	...

080061ec <__malloc_lock>:
 80061ec:	b510      	push	{r4, lr}
 80061ee:	4802      	ldr	r0, [pc, #8]	@ (80061f8 <__malloc_lock+0xc>)
 80061f0:	f7fe fea7 	bl	8004f42 <__retarget_lock_acquire_recursive>
 80061f4:	bd10      	pop	{r4, pc}
 80061f6:	46c0      	nop			@ (mov r8, r8)
 80061f8:	20000564 	.word	0x20000564

080061fc <__malloc_unlock>:
 80061fc:	b510      	push	{r4, lr}
 80061fe:	4802      	ldr	r0, [pc, #8]	@ (8006208 <__malloc_unlock+0xc>)
 8006200:	f7fe fea0 	bl	8004f44 <__retarget_lock_release_recursive>
 8006204:	bd10      	pop	{r4, pc}
 8006206:	46c0      	nop			@ (mov r8, r8)
 8006208:	20000564 	.word	0x20000564

0800620c <_Balloc>:
 800620c:	b570      	push	{r4, r5, r6, lr}
 800620e:	69c5      	ldr	r5, [r0, #28]
 8006210:	0006      	movs	r6, r0
 8006212:	000c      	movs	r4, r1
 8006214:	2d00      	cmp	r5, #0
 8006216:	d10e      	bne.n	8006236 <_Balloc+0x2a>
 8006218:	2010      	movs	r0, #16
 800621a:	f7ff fe89 	bl	8005f30 <malloc>
 800621e:	1e02      	subs	r2, r0, #0
 8006220:	61f0      	str	r0, [r6, #28]
 8006222:	d104      	bne.n	800622e <_Balloc+0x22>
 8006224:	216b      	movs	r1, #107	@ 0x6b
 8006226:	4b19      	ldr	r3, [pc, #100]	@ (800628c <_Balloc+0x80>)
 8006228:	4819      	ldr	r0, [pc, #100]	@ (8006290 <_Balloc+0x84>)
 800622a:	f000 fc81 	bl	8006b30 <__assert_func>
 800622e:	6045      	str	r5, [r0, #4]
 8006230:	6085      	str	r5, [r0, #8]
 8006232:	6005      	str	r5, [r0, #0]
 8006234:	60c5      	str	r5, [r0, #12]
 8006236:	69f5      	ldr	r5, [r6, #28]
 8006238:	68eb      	ldr	r3, [r5, #12]
 800623a:	2b00      	cmp	r3, #0
 800623c:	d013      	beq.n	8006266 <_Balloc+0x5a>
 800623e:	69f3      	ldr	r3, [r6, #28]
 8006240:	00a2      	lsls	r2, r4, #2
 8006242:	68db      	ldr	r3, [r3, #12]
 8006244:	189b      	adds	r3, r3, r2
 8006246:	6818      	ldr	r0, [r3, #0]
 8006248:	2800      	cmp	r0, #0
 800624a:	d118      	bne.n	800627e <_Balloc+0x72>
 800624c:	2101      	movs	r1, #1
 800624e:	000d      	movs	r5, r1
 8006250:	40a5      	lsls	r5, r4
 8006252:	1d6a      	adds	r2, r5, #5
 8006254:	0030      	movs	r0, r6
 8006256:	0092      	lsls	r2, r2, #2
 8006258:	f000 fc88 	bl	8006b6c <_calloc_r>
 800625c:	2800      	cmp	r0, #0
 800625e:	d00c      	beq.n	800627a <_Balloc+0x6e>
 8006260:	6044      	str	r4, [r0, #4]
 8006262:	6085      	str	r5, [r0, #8]
 8006264:	e00d      	b.n	8006282 <_Balloc+0x76>
 8006266:	2221      	movs	r2, #33	@ 0x21
 8006268:	2104      	movs	r1, #4
 800626a:	0030      	movs	r0, r6
 800626c:	f000 fc7e 	bl	8006b6c <_calloc_r>
 8006270:	69f3      	ldr	r3, [r6, #28]
 8006272:	60e8      	str	r0, [r5, #12]
 8006274:	68db      	ldr	r3, [r3, #12]
 8006276:	2b00      	cmp	r3, #0
 8006278:	d1e1      	bne.n	800623e <_Balloc+0x32>
 800627a:	2000      	movs	r0, #0
 800627c:	bd70      	pop	{r4, r5, r6, pc}
 800627e:	6802      	ldr	r2, [r0, #0]
 8006280:	601a      	str	r2, [r3, #0]
 8006282:	2300      	movs	r3, #0
 8006284:	6103      	str	r3, [r0, #16]
 8006286:	60c3      	str	r3, [r0, #12]
 8006288:	e7f8      	b.n	800627c <_Balloc+0x70>
 800628a:	46c0      	nop			@ (mov r8, r8)
 800628c:	080073cd 	.word	0x080073cd
 8006290:	0800745e 	.word	0x0800745e

08006294 <_Bfree>:
 8006294:	b570      	push	{r4, r5, r6, lr}
 8006296:	69c6      	ldr	r6, [r0, #28]
 8006298:	0005      	movs	r5, r0
 800629a:	000c      	movs	r4, r1
 800629c:	2e00      	cmp	r6, #0
 800629e:	d10e      	bne.n	80062be <_Bfree+0x2a>
 80062a0:	2010      	movs	r0, #16
 80062a2:	f7ff fe45 	bl	8005f30 <malloc>
 80062a6:	1e02      	subs	r2, r0, #0
 80062a8:	61e8      	str	r0, [r5, #28]
 80062aa:	d104      	bne.n	80062b6 <_Bfree+0x22>
 80062ac:	218f      	movs	r1, #143	@ 0x8f
 80062ae:	4b09      	ldr	r3, [pc, #36]	@ (80062d4 <_Bfree+0x40>)
 80062b0:	4809      	ldr	r0, [pc, #36]	@ (80062d8 <_Bfree+0x44>)
 80062b2:	f000 fc3d 	bl	8006b30 <__assert_func>
 80062b6:	6046      	str	r6, [r0, #4]
 80062b8:	6086      	str	r6, [r0, #8]
 80062ba:	6006      	str	r6, [r0, #0]
 80062bc:	60c6      	str	r6, [r0, #12]
 80062be:	2c00      	cmp	r4, #0
 80062c0:	d007      	beq.n	80062d2 <_Bfree+0x3e>
 80062c2:	69eb      	ldr	r3, [r5, #28]
 80062c4:	6862      	ldr	r2, [r4, #4]
 80062c6:	68db      	ldr	r3, [r3, #12]
 80062c8:	0092      	lsls	r2, r2, #2
 80062ca:	189b      	adds	r3, r3, r2
 80062cc:	681a      	ldr	r2, [r3, #0]
 80062ce:	6022      	str	r2, [r4, #0]
 80062d0:	601c      	str	r4, [r3, #0]
 80062d2:	bd70      	pop	{r4, r5, r6, pc}
 80062d4:	080073cd 	.word	0x080073cd
 80062d8:	0800745e 	.word	0x0800745e

080062dc <__multadd>:
 80062dc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80062de:	000f      	movs	r7, r1
 80062e0:	9001      	str	r0, [sp, #4]
 80062e2:	000c      	movs	r4, r1
 80062e4:	001e      	movs	r6, r3
 80062e6:	2000      	movs	r0, #0
 80062e8:	690d      	ldr	r5, [r1, #16]
 80062ea:	3714      	adds	r7, #20
 80062ec:	683b      	ldr	r3, [r7, #0]
 80062ee:	3001      	adds	r0, #1
 80062f0:	b299      	uxth	r1, r3
 80062f2:	4351      	muls	r1, r2
 80062f4:	0c1b      	lsrs	r3, r3, #16
 80062f6:	4353      	muls	r3, r2
 80062f8:	1989      	adds	r1, r1, r6
 80062fa:	0c0e      	lsrs	r6, r1, #16
 80062fc:	199b      	adds	r3, r3, r6
 80062fe:	0c1e      	lsrs	r6, r3, #16
 8006300:	b289      	uxth	r1, r1
 8006302:	041b      	lsls	r3, r3, #16
 8006304:	185b      	adds	r3, r3, r1
 8006306:	c708      	stmia	r7!, {r3}
 8006308:	4285      	cmp	r5, r0
 800630a:	dcef      	bgt.n	80062ec <__multadd+0x10>
 800630c:	2e00      	cmp	r6, #0
 800630e:	d022      	beq.n	8006356 <__multadd+0x7a>
 8006310:	68a3      	ldr	r3, [r4, #8]
 8006312:	42ab      	cmp	r3, r5
 8006314:	dc19      	bgt.n	800634a <__multadd+0x6e>
 8006316:	6861      	ldr	r1, [r4, #4]
 8006318:	9801      	ldr	r0, [sp, #4]
 800631a:	3101      	adds	r1, #1
 800631c:	f7ff ff76 	bl	800620c <_Balloc>
 8006320:	1e07      	subs	r7, r0, #0
 8006322:	d105      	bne.n	8006330 <__multadd+0x54>
 8006324:	003a      	movs	r2, r7
 8006326:	21ba      	movs	r1, #186	@ 0xba
 8006328:	4b0c      	ldr	r3, [pc, #48]	@ (800635c <__multadd+0x80>)
 800632a:	480d      	ldr	r0, [pc, #52]	@ (8006360 <__multadd+0x84>)
 800632c:	f000 fc00 	bl	8006b30 <__assert_func>
 8006330:	0021      	movs	r1, r4
 8006332:	6922      	ldr	r2, [r4, #16]
 8006334:	310c      	adds	r1, #12
 8006336:	3202      	adds	r2, #2
 8006338:	0092      	lsls	r2, r2, #2
 800633a:	300c      	adds	r0, #12
 800633c:	f7fe fe0e 	bl	8004f5c <memcpy>
 8006340:	0021      	movs	r1, r4
 8006342:	9801      	ldr	r0, [sp, #4]
 8006344:	f7ff ffa6 	bl	8006294 <_Bfree>
 8006348:	003c      	movs	r4, r7
 800634a:	1d2b      	adds	r3, r5, #4
 800634c:	009b      	lsls	r3, r3, #2
 800634e:	18e3      	adds	r3, r4, r3
 8006350:	3501      	adds	r5, #1
 8006352:	605e      	str	r6, [r3, #4]
 8006354:	6125      	str	r5, [r4, #16]
 8006356:	0020      	movs	r0, r4
 8006358:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800635a:	46c0      	nop			@ (mov r8, r8)
 800635c:	0800743c 	.word	0x0800743c
 8006360:	0800745e 	.word	0x0800745e

08006364 <__hi0bits>:
 8006364:	2280      	movs	r2, #128	@ 0x80
 8006366:	0003      	movs	r3, r0
 8006368:	0252      	lsls	r2, r2, #9
 800636a:	2000      	movs	r0, #0
 800636c:	4293      	cmp	r3, r2
 800636e:	d201      	bcs.n	8006374 <__hi0bits+0x10>
 8006370:	041b      	lsls	r3, r3, #16
 8006372:	3010      	adds	r0, #16
 8006374:	2280      	movs	r2, #128	@ 0x80
 8006376:	0452      	lsls	r2, r2, #17
 8006378:	4293      	cmp	r3, r2
 800637a:	d201      	bcs.n	8006380 <__hi0bits+0x1c>
 800637c:	3008      	adds	r0, #8
 800637e:	021b      	lsls	r3, r3, #8
 8006380:	2280      	movs	r2, #128	@ 0x80
 8006382:	0552      	lsls	r2, r2, #21
 8006384:	4293      	cmp	r3, r2
 8006386:	d201      	bcs.n	800638c <__hi0bits+0x28>
 8006388:	3004      	adds	r0, #4
 800638a:	011b      	lsls	r3, r3, #4
 800638c:	2280      	movs	r2, #128	@ 0x80
 800638e:	05d2      	lsls	r2, r2, #23
 8006390:	4293      	cmp	r3, r2
 8006392:	d201      	bcs.n	8006398 <__hi0bits+0x34>
 8006394:	3002      	adds	r0, #2
 8006396:	009b      	lsls	r3, r3, #2
 8006398:	2b00      	cmp	r3, #0
 800639a:	db03      	blt.n	80063a4 <__hi0bits+0x40>
 800639c:	3001      	adds	r0, #1
 800639e:	4213      	tst	r3, r2
 80063a0:	d100      	bne.n	80063a4 <__hi0bits+0x40>
 80063a2:	2020      	movs	r0, #32
 80063a4:	4770      	bx	lr

080063a6 <__lo0bits>:
 80063a6:	6803      	ldr	r3, [r0, #0]
 80063a8:	0001      	movs	r1, r0
 80063aa:	2207      	movs	r2, #7
 80063ac:	0018      	movs	r0, r3
 80063ae:	4010      	ands	r0, r2
 80063b0:	4213      	tst	r3, r2
 80063b2:	d00d      	beq.n	80063d0 <__lo0bits+0x2a>
 80063b4:	3a06      	subs	r2, #6
 80063b6:	2000      	movs	r0, #0
 80063b8:	4213      	tst	r3, r2
 80063ba:	d105      	bne.n	80063c8 <__lo0bits+0x22>
 80063bc:	3002      	adds	r0, #2
 80063be:	4203      	tst	r3, r0
 80063c0:	d003      	beq.n	80063ca <__lo0bits+0x24>
 80063c2:	40d3      	lsrs	r3, r2
 80063c4:	0010      	movs	r0, r2
 80063c6:	600b      	str	r3, [r1, #0]
 80063c8:	4770      	bx	lr
 80063ca:	089b      	lsrs	r3, r3, #2
 80063cc:	600b      	str	r3, [r1, #0]
 80063ce:	e7fb      	b.n	80063c8 <__lo0bits+0x22>
 80063d0:	b29a      	uxth	r2, r3
 80063d2:	2a00      	cmp	r2, #0
 80063d4:	d101      	bne.n	80063da <__lo0bits+0x34>
 80063d6:	2010      	movs	r0, #16
 80063d8:	0c1b      	lsrs	r3, r3, #16
 80063da:	b2da      	uxtb	r2, r3
 80063dc:	2a00      	cmp	r2, #0
 80063de:	d101      	bne.n	80063e4 <__lo0bits+0x3e>
 80063e0:	3008      	adds	r0, #8
 80063e2:	0a1b      	lsrs	r3, r3, #8
 80063e4:	071a      	lsls	r2, r3, #28
 80063e6:	d101      	bne.n	80063ec <__lo0bits+0x46>
 80063e8:	3004      	adds	r0, #4
 80063ea:	091b      	lsrs	r3, r3, #4
 80063ec:	079a      	lsls	r2, r3, #30
 80063ee:	d101      	bne.n	80063f4 <__lo0bits+0x4e>
 80063f0:	3002      	adds	r0, #2
 80063f2:	089b      	lsrs	r3, r3, #2
 80063f4:	07da      	lsls	r2, r3, #31
 80063f6:	d4e9      	bmi.n	80063cc <__lo0bits+0x26>
 80063f8:	3001      	adds	r0, #1
 80063fa:	085b      	lsrs	r3, r3, #1
 80063fc:	d1e6      	bne.n	80063cc <__lo0bits+0x26>
 80063fe:	2020      	movs	r0, #32
 8006400:	e7e2      	b.n	80063c8 <__lo0bits+0x22>
	...

08006404 <__i2b>:
 8006404:	b510      	push	{r4, lr}
 8006406:	000c      	movs	r4, r1
 8006408:	2101      	movs	r1, #1
 800640a:	f7ff feff 	bl	800620c <_Balloc>
 800640e:	2800      	cmp	r0, #0
 8006410:	d107      	bne.n	8006422 <__i2b+0x1e>
 8006412:	2146      	movs	r1, #70	@ 0x46
 8006414:	4c05      	ldr	r4, [pc, #20]	@ (800642c <__i2b+0x28>)
 8006416:	0002      	movs	r2, r0
 8006418:	4b05      	ldr	r3, [pc, #20]	@ (8006430 <__i2b+0x2c>)
 800641a:	0020      	movs	r0, r4
 800641c:	31ff      	adds	r1, #255	@ 0xff
 800641e:	f000 fb87 	bl	8006b30 <__assert_func>
 8006422:	2301      	movs	r3, #1
 8006424:	6144      	str	r4, [r0, #20]
 8006426:	6103      	str	r3, [r0, #16]
 8006428:	bd10      	pop	{r4, pc}
 800642a:	46c0      	nop			@ (mov r8, r8)
 800642c:	0800745e 	.word	0x0800745e
 8006430:	0800743c 	.word	0x0800743c

08006434 <__multiply>:
 8006434:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006436:	0014      	movs	r4, r2
 8006438:	690a      	ldr	r2, [r1, #16]
 800643a:	6923      	ldr	r3, [r4, #16]
 800643c:	000d      	movs	r5, r1
 800643e:	b08b      	sub	sp, #44	@ 0x2c
 8006440:	429a      	cmp	r2, r3
 8006442:	db02      	blt.n	800644a <__multiply+0x16>
 8006444:	0023      	movs	r3, r4
 8006446:	000c      	movs	r4, r1
 8006448:	001d      	movs	r5, r3
 800644a:	6927      	ldr	r7, [r4, #16]
 800644c:	692e      	ldr	r6, [r5, #16]
 800644e:	6861      	ldr	r1, [r4, #4]
 8006450:	19bb      	adds	r3, r7, r6
 8006452:	9303      	str	r3, [sp, #12]
 8006454:	68a3      	ldr	r3, [r4, #8]
 8006456:	19ba      	adds	r2, r7, r6
 8006458:	4293      	cmp	r3, r2
 800645a:	da00      	bge.n	800645e <__multiply+0x2a>
 800645c:	3101      	adds	r1, #1
 800645e:	f7ff fed5 	bl	800620c <_Balloc>
 8006462:	9002      	str	r0, [sp, #8]
 8006464:	2800      	cmp	r0, #0
 8006466:	d106      	bne.n	8006476 <__multiply+0x42>
 8006468:	21b1      	movs	r1, #177	@ 0xb1
 800646a:	4b49      	ldr	r3, [pc, #292]	@ (8006590 <__multiply+0x15c>)
 800646c:	4849      	ldr	r0, [pc, #292]	@ (8006594 <__multiply+0x160>)
 800646e:	9a02      	ldr	r2, [sp, #8]
 8006470:	0049      	lsls	r1, r1, #1
 8006472:	f000 fb5d 	bl	8006b30 <__assert_func>
 8006476:	9b02      	ldr	r3, [sp, #8]
 8006478:	2200      	movs	r2, #0
 800647a:	3314      	adds	r3, #20
 800647c:	469c      	mov	ip, r3
 800647e:	19bb      	adds	r3, r7, r6
 8006480:	009b      	lsls	r3, r3, #2
 8006482:	4463      	add	r3, ip
 8006484:	9304      	str	r3, [sp, #16]
 8006486:	4663      	mov	r3, ip
 8006488:	9904      	ldr	r1, [sp, #16]
 800648a:	428b      	cmp	r3, r1
 800648c:	d32a      	bcc.n	80064e4 <__multiply+0xb0>
 800648e:	0023      	movs	r3, r4
 8006490:	00bf      	lsls	r7, r7, #2
 8006492:	3314      	adds	r3, #20
 8006494:	3514      	adds	r5, #20
 8006496:	9308      	str	r3, [sp, #32]
 8006498:	00b6      	lsls	r6, r6, #2
 800649a:	19db      	adds	r3, r3, r7
 800649c:	9305      	str	r3, [sp, #20]
 800649e:	19ab      	adds	r3, r5, r6
 80064a0:	9309      	str	r3, [sp, #36]	@ 0x24
 80064a2:	2304      	movs	r3, #4
 80064a4:	9306      	str	r3, [sp, #24]
 80064a6:	0023      	movs	r3, r4
 80064a8:	9a05      	ldr	r2, [sp, #20]
 80064aa:	3315      	adds	r3, #21
 80064ac:	9501      	str	r5, [sp, #4]
 80064ae:	429a      	cmp	r2, r3
 80064b0:	d305      	bcc.n	80064be <__multiply+0x8a>
 80064b2:	1b13      	subs	r3, r2, r4
 80064b4:	3b15      	subs	r3, #21
 80064b6:	089b      	lsrs	r3, r3, #2
 80064b8:	3301      	adds	r3, #1
 80064ba:	009b      	lsls	r3, r3, #2
 80064bc:	9306      	str	r3, [sp, #24]
 80064be:	9b01      	ldr	r3, [sp, #4]
 80064c0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80064c2:	4293      	cmp	r3, r2
 80064c4:	d310      	bcc.n	80064e8 <__multiply+0xb4>
 80064c6:	9b03      	ldr	r3, [sp, #12]
 80064c8:	2b00      	cmp	r3, #0
 80064ca:	dd05      	ble.n	80064d8 <__multiply+0xa4>
 80064cc:	9b04      	ldr	r3, [sp, #16]
 80064ce:	3b04      	subs	r3, #4
 80064d0:	9304      	str	r3, [sp, #16]
 80064d2:	681b      	ldr	r3, [r3, #0]
 80064d4:	2b00      	cmp	r3, #0
 80064d6:	d056      	beq.n	8006586 <__multiply+0x152>
 80064d8:	9b02      	ldr	r3, [sp, #8]
 80064da:	9a03      	ldr	r2, [sp, #12]
 80064dc:	0018      	movs	r0, r3
 80064de:	611a      	str	r2, [r3, #16]
 80064e0:	b00b      	add	sp, #44	@ 0x2c
 80064e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80064e4:	c304      	stmia	r3!, {r2}
 80064e6:	e7cf      	b.n	8006488 <__multiply+0x54>
 80064e8:	9b01      	ldr	r3, [sp, #4]
 80064ea:	6818      	ldr	r0, [r3, #0]
 80064ec:	b280      	uxth	r0, r0
 80064ee:	2800      	cmp	r0, #0
 80064f0:	d01e      	beq.n	8006530 <__multiply+0xfc>
 80064f2:	4667      	mov	r7, ip
 80064f4:	2500      	movs	r5, #0
 80064f6:	9e08      	ldr	r6, [sp, #32]
 80064f8:	ce02      	ldmia	r6!, {r1}
 80064fa:	683b      	ldr	r3, [r7, #0]
 80064fc:	9307      	str	r3, [sp, #28]
 80064fe:	b28b      	uxth	r3, r1
 8006500:	4343      	muls	r3, r0
 8006502:	001a      	movs	r2, r3
 8006504:	466b      	mov	r3, sp
 8006506:	0c09      	lsrs	r1, r1, #16
 8006508:	8b9b      	ldrh	r3, [r3, #28]
 800650a:	4341      	muls	r1, r0
 800650c:	18d3      	adds	r3, r2, r3
 800650e:	9a07      	ldr	r2, [sp, #28]
 8006510:	195b      	adds	r3, r3, r5
 8006512:	0c12      	lsrs	r2, r2, #16
 8006514:	1889      	adds	r1, r1, r2
 8006516:	0c1a      	lsrs	r2, r3, #16
 8006518:	188a      	adds	r2, r1, r2
 800651a:	b29b      	uxth	r3, r3
 800651c:	0c15      	lsrs	r5, r2, #16
 800651e:	0412      	lsls	r2, r2, #16
 8006520:	431a      	orrs	r2, r3
 8006522:	9b05      	ldr	r3, [sp, #20]
 8006524:	c704      	stmia	r7!, {r2}
 8006526:	42b3      	cmp	r3, r6
 8006528:	d8e6      	bhi.n	80064f8 <__multiply+0xc4>
 800652a:	4663      	mov	r3, ip
 800652c:	9a06      	ldr	r2, [sp, #24]
 800652e:	509d      	str	r5, [r3, r2]
 8006530:	9b01      	ldr	r3, [sp, #4]
 8006532:	6818      	ldr	r0, [r3, #0]
 8006534:	0c00      	lsrs	r0, r0, #16
 8006536:	d020      	beq.n	800657a <__multiply+0x146>
 8006538:	4663      	mov	r3, ip
 800653a:	0025      	movs	r5, r4
 800653c:	4661      	mov	r1, ip
 800653e:	2700      	movs	r7, #0
 8006540:	681b      	ldr	r3, [r3, #0]
 8006542:	3514      	adds	r5, #20
 8006544:	682a      	ldr	r2, [r5, #0]
 8006546:	680e      	ldr	r6, [r1, #0]
 8006548:	b292      	uxth	r2, r2
 800654a:	4342      	muls	r2, r0
 800654c:	0c36      	lsrs	r6, r6, #16
 800654e:	1992      	adds	r2, r2, r6
 8006550:	19d2      	adds	r2, r2, r7
 8006552:	0416      	lsls	r6, r2, #16
 8006554:	b29b      	uxth	r3, r3
 8006556:	431e      	orrs	r6, r3
 8006558:	600e      	str	r6, [r1, #0]
 800655a:	cd40      	ldmia	r5!, {r6}
 800655c:	684b      	ldr	r3, [r1, #4]
 800655e:	0c36      	lsrs	r6, r6, #16
 8006560:	4346      	muls	r6, r0
 8006562:	b29b      	uxth	r3, r3
 8006564:	0c12      	lsrs	r2, r2, #16
 8006566:	18f3      	adds	r3, r6, r3
 8006568:	189b      	adds	r3, r3, r2
 800656a:	9a05      	ldr	r2, [sp, #20]
 800656c:	0c1f      	lsrs	r7, r3, #16
 800656e:	3104      	adds	r1, #4
 8006570:	42aa      	cmp	r2, r5
 8006572:	d8e7      	bhi.n	8006544 <__multiply+0x110>
 8006574:	4662      	mov	r2, ip
 8006576:	9906      	ldr	r1, [sp, #24]
 8006578:	5053      	str	r3, [r2, r1]
 800657a:	9b01      	ldr	r3, [sp, #4]
 800657c:	3304      	adds	r3, #4
 800657e:	9301      	str	r3, [sp, #4]
 8006580:	2304      	movs	r3, #4
 8006582:	449c      	add	ip, r3
 8006584:	e79b      	b.n	80064be <__multiply+0x8a>
 8006586:	9b03      	ldr	r3, [sp, #12]
 8006588:	3b01      	subs	r3, #1
 800658a:	9303      	str	r3, [sp, #12]
 800658c:	e79b      	b.n	80064c6 <__multiply+0x92>
 800658e:	46c0      	nop			@ (mov r8, r8)
 8006590:	0800743c 	.word	0x0800743c
 8006594:	0800745e 	.word	0x0800745e

08006598 <__pow5mult>:
 8006598:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800659a:	2303      	movs	r3, #3
 800659c:	0015      	movs	r5, r2
 800659e:	0007      	movs	r7, r0
 80065a0:	000e      	movs	r6, r1
 80065a2:	401a      	ands	r2, r3
 80065a4:	421d      	tst	r5, r3
 80065a6:	d008      	beq.n	80065ba <__pow5mult+0x22>
 80065a8:	4925      	ldr	r1, [pc, #148]	@ (8006640 <__pow5mult+0xa8>)
 80065aa:	3a01      	subs	r2, #1
 80065ac:	0092      	lsls	r2, r2, #2
 80065ae:	5852      	ldr	r2, [r2, r1]
 80065b0:	2300      	movs	r3, #0
 80065b2:	0031      	movs	r1, r6
 80065b4:	f7ff fe92 	bl	80062dc <__multadd>
 80065b8:	0006      	movs	r6, r0
 80065ba:	10ad      	asrs	r5, r5, #2
 80065bc:	d03d      	beq.n	800663a <__pow5mult+0xa2>
 80065be:	69fc      	ldr	r4, [r7, #28]
 80065c0:	2c00      	cmp	r4, #0
 80065c2:	d10f      	bne.n	80065e4 <__pow5mult+0x4c>
 80065c4:	2010      	movs	r0, #16
 80065c6:	f7ff fcb3 	bl	8005f30 <malloc>
 80065ca:	1e02      	subs	r2, r0, #0
 80065cc:	61f8      	str	r0, [r7, #28]
 80065ce:	d105      	bne.n	80065dc <__pow5mult+0x44>
 80065d0:	21b4      	movs	r1, #180	@ 0xb4
 80065d2:	4b1c      	ldr	r3, [pc, #112]	@ (8006644 <__pow5mult+0xac>)
 80065d4:	481c      	ldr	r0, [pc, #112]	@ (8006648 <__pow5mult+0xb0>)
 80065d6:	31ff      	adds	r1, #255	@ 0xff
 80065d8:	f000 faaa 	bl	8006b30 <__assert_func>
 80065dc:	6044      	str	r4, [r0, #4]
 80065de:	6084      	str	r4, [r0, #8]
 80065e0:	6004      	str	r4, [r0, #0]
 80065e2:	60c4      	str	r4, [r0, #12]
 80065e4:	69fb      	ldr	r3, [r7, #28]
 80065e6:	689c      	ldr	r4, [r3, #8]
 80065e8:	9301      	str	r3, [sp, #4]
 80065ea:	2c00      	cmp	r4, #0
 80065ec:	d108      	bne.n	8006600 <__pow5mult+0x68>
 80065ee:	0038      	movs	r0, r7
 80065f0:	4916      	ldr	r1, [pc, #88]	@ (800664c <__pow5mult+0xb4>)
 80065f2:	f7ff ff07 	bl	8006404 <__i2b>
 80065f6:	9b01      	ldr	r3, [sp, #4]
 80065f8:	0004      	movs	r4, r0
 80065fa:	6098      	str	r0, [r3, #8]
 80065fc:	2300      	movs	r3, #0
 80065fe:	6003      	str	r3, [r0, #0]
 8006600:	2301      	movs	r3, #1
 8006602:	421d      	tst	r5, r3
 8006604:	d00a      	beq.n	800661c <__pow5mult+0x84>
 8006606:	0031      	movs	r1, r6
 8006608:	0022      	movs	r2, r4
 800660a:	0038      	movs	r0, r7
 800660c:	f7ff ff12 	bl	8006434 <__multiply>
 8006610:	0031      	movs	r1, r6
 8006612:	9001      	str	r0, [sp, #4]
 8006614:	0038      	movs	r0, r7
 8006616:	f7ff fe3d 	bl	8006294 <_Bfree>
 800661a:	9e01      	ldr	r6, [sp, #4]
 800661c:	106d      	asrs	r5, r5, #1
 800661e:	d00c      	beq.n	800663a <__pow5mult+0xa2>
 8006620:	6820      	ldr	r0, [r4, #0]
 8006622:	2800      	cmp	r0, #0
 8006624:	d107      	bne.n	8006636 <__pow5mult+0x9e>
 8006626:	0022      	movs	r2, r4
 8006628:	0021      	movs	r1, r4
 800662a:	0038      	movs	r0, r7
 800662c:	f7ff ff02 	bl	8006434 <__multiply>
 8006630:	2300      	movs	r3, #0
 8006632:	6020      	str	r0, [r4, #0]
 8006634:	6003      	str	r3, [r0, #0]
 8006636:	0004      	movs	r4, r0
 8006638:	e7e2      	b.n	8006600 <__pow5mult+0x68>
 800663a:	0030      	movs	r0, r6
 800663c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800663e:	46c0      	nop			@ (mov r8, r8)
 8006640:	080074b8 	.word	0x080074b8
 8006644:	080073cd 	.word	0x080073cd
 8006648:	0800745e 	.word	0x0800745e
 800664c:	00000271 	.word	0x00000271

08006650 <__lshift>:
 8006650:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006652:	000c      	movs	r4, r1
 8006654:	0016      	movs	r6, r2
 8006656:	6923      	ldr	r3, [r4, #16]
 8006658:	1157      	asrs	r7, r2, #5
 800665a:	b085      	sub	sp, #20
 800665c:	18fb      	adds	r3, r7, r3
 800665e:	9301      	str	r3, [sp, #4]
 8006660:	3301      	adds	r3, #1
 8006662:	9300      	str	r3, [sp, #0]
 8006664:	6849      	ldr	r1, [r1, #4]
 8006666:	68a3      	ldr	r3, [r4, #8]
 8006668:	9002      	str	r0, [sp, #8]
 800666a:	9a00      	ldr	r2, [sp, #0]
 800666c:	4293      	cmp	r3, r2
 800666e:	db10      	blt.n	8006692 <__lshift+0x42>
 8006670:	9802      	ldr	r0, [sp, #8]
 8006672:	f7ff fdcb 	bl	800620c <_Balloc>
 8006676:	2300      	movs	r3, #0
 8006678:	0001      	movs	r1, r0
 800667a:	0005      	movs	r5, r0
 800667c:	001a      	movs	r2, r3
 800667e:	3114      	adds	r1, #20
 8006680:	4298      	cmp	r0, r3
 8006682:	d10c      	bne.n	800669e <__lshift+0x4e>
 8006684:	21ef      	movs	r1, #239	@ 0xef
 8006686:	002a      	movs	r2, r5
 8006688:	4b25      	ldr	r3, [pc, #148]	@ (8006720 <__lshift+0xd0>)
 800668a:	4826      	ldr	r0, [pc, #152]	@ (8006724 <__lshift+0xd4>)
 800668c:	0049      	lsls	r1, r1, #1
 800668e:	f000 fa4f 	bl	8006b30 <__assert_func>
 8006692:	3101      	adds	r1, #1
 8006694:	005b      	lsls	r3, r3, #1
 8006696:	e7e8      	b.n	800666a <__lshift+0x1a>
 8006698:	0098      	lsls	r0, r3, #2
 800669a:	500a      	str	r2, [r1, r0]
 800669c:	3301      	adds	r3, #1
 800669e:	42bb      	cmp	r3, r7
 80066a0:	dbfa      	blt.n	8006698 <__lshift+0x48>
 80066a2:	43fb      	mvns	r3, r7
 80066a4:	17db      	asrs	r3, r3, #31
 80066a6:	401f      	ands	r7, r3
 80066a8:	00bf      	lsls	r7, r7, #2
 80066aa:	0023      	movs	r3, r4
 80066ac:	201f      	movs	r0, #31
 80066ae:	19c9      	adds	r1, r1, r7
 80066b0:	0037      	movs	r7, r6
 80066b2:	6922      	ldr	r2, [r4, #16]
 80066b4:	3314      	adds	r3, #20
 80066b6:	0092      	lsls	r2, r2, #2
 80066b8:	189a      	adds	r2, r3, r2
 80066ba:	4007      	ands	r7, r0
 80066bc:	4206      	tst	r6, r0
 80066be:	d029      	beq.n	8006714 <__lshift+0xc4>
 80066c0:	3001      	adds	r0, #1
 80066c2:	1bc0      	subs	r0, r0, r7
 80066c4:	9003      	str	r0, [sp, #12]
 80066c6:	468c      	mov	ip, r1
 80066c8:	2000      	movs	r0, #0
 80066ca:	681e      	ldr	r6, [r3, #0]
 80066cc:	40be      	lsls	r6, r7
 80066ce:	4306      	orrs	r6, r0
 80066d0:	4660      	mov	r0, ip
 80066d2:	c040      	stmia	r0!, {r6}
 80066d4:	4684      	mov	ip, r0
 80066d6:	9e03      	ldr	r6, [sp, #12]
 80066d8:	cb01      	ldmia	r3!, {r0}
 80066da:	40f0      	lsrs	r0, r6
 80066dc:	429a      	cmp	r2, r3
 80066de:	d8f4      	bhi.n	80066ca <__lshift+0x7a>
 80066e0:	0026      	movs	r6, r4
 80066e2:	3615      	adds	r6, #21
 80066e4:	2304      	movs	r3, #4
 80066e6:	42b2      	cmp	r2, r6
 80066e8:	d304      	bcc.n	80066f4 <__lshift+0xa4>
 80066ea:	1b13      	subs	r3, r2, r4
 80066ec:	3b15      	subs	r3, #21
 80066ee:	089b      	lsrs	r3, r3, #2
 80066f0:	3301      	adds	r3, #1
 80066f2:	009b      	lsls	r3, r3, #2
 80066f4:	50c8      	str	r0, [r1, r3]
 80066f6:	2800      	cmp	r0, #0
 80066f8:	d002      	beq.n	8006700 <__lshift+0xb0>
 80066fa:	9b01      	ldr	r3, [sp, #4]
 80066fc:	3302      	adds	r3, #2
 80066fe:	9300      	str	r3, [sp, #0]
 8006700:	9b00      	ldr	r3, [sp, #0]
 8006702:	9802      	ldr	r0, [sp, #8]
 8006704:	3b01      	subs	r3, #1
 8006706:	0021      	movs	r1, r4
 8006708:	612b      	str	r3, [r5, #16]
 800670a:	f7ff fdc3 	bl	8006294 <_Bfree>
 800670e:	0028      	movs	r0, r5
 8006710:	b005      	add	sp, #20
 8006712:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006714:	cb01      	ldmia	r3!, {r0}
 8006716:	c101      	stmia	r1!, {r0}
 8006718:	429a      	cmp	r2, r3
 800671a:	d8fb      	bhi.n	8006714 <__lshift+0xc4>
 800671c:	e7f0      	b.n	8006700 <__lshift+0xb0>
 800671e:	46c0      	nop			@ (mov r8, r8)
 8006720:	0800743c 	.word	0x0800743c
 8006724:	0800745e 	.word	0x0800745e

08006728 <__mcmp>:
 8006728:	b530      	push	{r4, r5, lr}
 800672a:	690b      	ldr	r3, [r1, #16]
 800672c:	6904      	ldr	r4, [r0, #16]
 800672e:	0002      	movs	r2, r0
 8006730:	1ae0      	subs	r0, r4, r3
 8006732:	429c      	cmp	r4, r3
 8006734:	d10f      	bne.n	8006756 <__mcmp+0x2e>
 8006736:	3214      	adds	r2, #20
 8006738:	009b      	lsls	r3, r3, #2
 800673a:	3114      	adds	r1, #20
 800673c:	0014      	movs	r4, r2
 800673e:	18c9      	adds	r1, r1, r3
 8006740:	18d2      	adds	r2, r2, r3
 8006742:	3a04      	subs	r2, #4
 8006744:	3904      	subs	r1, #4
 8006746:	6815      	ldr	r5, [r2, #0]
 8006748:	680b      	ldr	r3, [r1, #0]
 800674a:	429d      	cmp	r5, r3
 800674c:	d004      	beq.n	8006758 <__mcmp+0x30>
 800674e:	2001      	movs	r0, #1
 8006750:	429d      	cmp	r5, r3
 8006752:	d200      	bcs.n	8006756 <__mcmp+0x2e>
 8006754:	3802      	subs	r0, #2
 8006756:	bd30      	pop	{r4, r5, pc}
 8006758:	4294      	cmp	r4, r2
 800675a:	d3f2      	bcc.n	8006742 <__mcmp+0x1a>
 800675c:	e7fb      	b.n	8006756 <__mcmp+0x2e>
	...

08006760 <__mdiff>:
 8006760:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006762:	000c      	movs	r4, r1
 8006764:	b087      	sub	sp, #28
 8006766:	9000      	str	r0, [sp, #0]
 8006768:	0011      	movs	r1, r2
 800676a:	0020      	movs	r0, r4
 800676c:	0017      	movs	r7, r2
 800676e:	f7ff ffdb 	bl	8006728 <__mcmp>
 8006772:	1e05      	subs	r5, r0, #0
 8006774:	d110      	bne.n	8006798 <__mdiff+0x38>
 8006776:	0001      	movs	r1, r0
 8006778:	9800      	ldr	r0, [sp, #0]
 800677a:	f7ff fd47 	bl	800620c <_Balloc>
 800677e:	1e02      	subs	r2, r0, #0
 8006780:	d104      	bne.n	800678c <__mdiff+0x2c>
 8006782:	4b40      	ldr	r3, [pc, #256]	@ (8006884 <__mdiff+0x124>)
 8006784:	4840      	ldr	r0, [pc, #256]	@ (8006888 <__mdiff+0x128>)
 8006786:	4941      	ldr	r1, [pc, #260]	@ (800688c <__mdiff+0x12c>)
 8006788:	f000 f9d2 	bl	8006b30 <__assert_func>
 800678c:	2301      	movs	r3, #1
 800678e:	6145      	str	r5, [r0, #20]
 8006790:	6103      	str	r3, [r0, #16]
 8006792:	0010      	movs	r0, r2
 8006794:	b007      	add	sp, #28
 8006796:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006798:	2600      	movs	r6, #0
 800679a:	42b0      	cmp	r0, r6
 800679c:	da03      	bge.n	80067a6 <__mdiff+0x46>
 800679e:	0023      	movs	r3, r4
 80067a0:	003c      	movs	r4, r7
 80067a2:	001f      	movs	r7, r3
 80067a4:	3601      	adds	r6, #1
 80067a6:	6861      	ldr	r1, [r4, #4]
 80067a8:	9800      	ldr	r0, [sp, #0]
 80067aa:	f7ff fd2f 	bl	800620c <_Balloc>
 80067ae:	1e02      	subs	r2, r0, #0
 80067b0:	d103      	bne.n	80067ba <__mdiff+0x5a>
 80067b2:	4b34      	ldr	r3, [pc, #208]	@ (8006884 <__mdiff+0x124>)
 80067b4:	4834      	ldr	r0, [pc, #208]	@ (8006888 <__mdiff+0x128>)
 80067b6:	4936      	ldr	r1, [pc, #216]	@ (8006890 <__mdiff+0x130>)
 80067b8:	e7e6      	b.n	8006788 <__mdiff+0x28>
 80067ba:	6923      	ldr	r3, [r4, #16]
 80067bc:	3414      	adds	r4, #20
 80067be:	9300      	str	r3, [sp, #0]
 80067c0:	009b      	lsls	r3, r3, #2
 80067c2:	18e3      	adds	r3, r4, r3
 80067c4:	0021      	movs	r1, r4
 80067c6:	9401      	str	r4, [sp, #4]
 80067c8:	003c      	movs	r4, r7
 80067ca:	9302      	str	r3, [sp, #8]
 80067cc:	693b      	ldr	r3, [r7, #16]
 80067ce:	3414      	adds	r4, #20
 80067d0:	009b      	lsls	r3, r3, #2
 80067d2:	18e3      	adds	r3, r4, r3
 80067d4:	9303      	str	r3, [sp, #12]
 80067d6:	0003      	movs	r3, r0
 80067d8:	60c6      	str	r6, [r0, #12]
 80067da:	468c      	mov	ip, r1
 80067dc:	2000      	movs	r0, #0
 80067de:	3314      	adds	r3, #20
 80067e0:	9304      	str	r3, [sp, #16]
 80067e2:	9305      	str	r3, [sp, #20]
 80067e4:	4663      	mov	r3, ip
 80067e6:	cb20      	ldmia	r3!, {r5}
 80067e8:	b2a9      	uxth	r1, r5
 80067ea:	000e      	movs	r6, r1
 80067ec:	469c      	mov	ip, r3
 80067ee:	cc08      	ldmia	r4!, {r3}
 80067f0:	0c2d      	lsrs	r5, r5, #16
 80067f2:	b299      	uxth	r1, r3
 80067f4:	1a71      	subs	r1, r6, r1
 80067f6:	1809      	adds	r1, r1, r0
 80067f8:	0c1b      	lsrs	r3, r3, #16
 80067fa:	1408      	asrs	r0, r1, #16
 80067fc:	1aeb      	subs	r3, r5, r3
 80067fe:	181b      	adds	r3, r3, r0
 8006800:	1418      	asrs	r0, r3, #16
 8006802:	b289      	uxth	r1, r1
 8006804:	041b      	lsls	r3, r3, #16
 8006806:	4319      	orrs	r1, r3
 8006808:	9b05      	ldr	r3, [sp, #20]
 800680a:	c302      	stmia	r3!, {r1}
 800680c:	9305      	str	r3, [sp, #20]
 800680e:	9b03      	ldr	r3, [sp, #12]
 8006810:	42a3      	cmp	r3, r4
 8006812:	d8e7      	bhi.n	80067e4 <__mdiff+0x84>
 8006814:	0039      	movs	r1, r7
 8006816:	9c03      	ldr	r4, [sp, #12]
 8006818:	3115      	adds	r1, #21
 800681a:	2304      	movs	r3, #4
 800681c:	428c      	cmp	r4, r1
 800681e:	d304      	bcc.n	800682a <__mdiff+0xca>
 8006820:	1be3      	subs	r3, r4, r7
 8006822:	3b15      	subs	r3, #21
 8006824:	089b      	lsrs	r3, r3, #2
 8006826:	3301      	adds	r3, #1
 8006828:	009b      	lsls	r3, r3, #2
 800682a:	9901      	ldr	r1, [sp, #4]
 800682c:	18cd      	adds	r5, r1, r3
 800682e:	9904      	ldr	r1, [sp, #16]
 8006830:	002e      	movs	r6, r5
 8006832:	18cb      	adds	r3, r1, r3
 8006834:	001f      	movs	r7, r3
 8006836:	9902      	ldr	r1, [sp, #8]
 8006838:	428e      	cmp	r6, r1
 800683a:	d311      	bcc.n	8006860 <__mdiff+0x100>
 800683c:	9c02      	ldr	r4, [sp, #8]
 800683e:	1ee9      	subs	r1, r5, #3
 8006840:	2000      	movs	r0, #0
 8006842:	428c      	cmp	r4, r1
 8006844:	d304      	bcc.n	8006850 <__mdiff+0xf0>
 8006846:	0021      	movs	r1, r4
 8006848:	3103      	adds	r1, #3
 800684a:	1b49      	subs	r1, r1, r5
 800684c:	0889      	lsrs	r1, r1, #2
 800684e:	0088      	lsls	r0, r1, #2
 8006850:	181b      	adds	r3, r3, r0
 8006852:	3b04      	subs	r3, #4
 8006854:	6819      	ldr	r1, [r3, #0]
 8006856:	2900      	cmp	r1, #0
 8006858:	d010      	beq.n	800687c <__mdiff+0x11c>
 800685a:	9b00      	ldr	r3, [sp, #0]
 800685c:	6113      	str	r3, [r2, #16]
 800685e:	e798      	b.n	8006792 <__mdiff+0x32>
 8006860:	4684      	mov	ip, r0
 8006862:	ce02      	ldmia	r6!, {r1}
 8006864:	b288      	uxth	r0, r1
 8006866:	4460      	add	r0, ip
 8006868:	1400      	asrs	r0, r0, #16
 800686a:	0c0c      	lsrs	r4, r1, #16
 800686c:	1904      	adds	r4, r0, r4
 800686e:	4461      	add	r1, ip
 8006870:	1420      	asrs	r0, r4, #16
 8006872:	b289      	uxth	r1, r1
 8006874:	0424      	lsls	r4, r4, #16
 8006876:	4321      	orrs	r1, r4
 8006878:	c702      	stmia	r7!, {r1}
 800687a:	e7dc      	b.n	8006836 <__mdiff+0xd6>
 800687c:	9900      	ldr	r1, [sp, #0]
 800687e:	3901      	subs	r1, #1
 8006880:	9100      	str	r1, [sp, #0]
 8006882:	e7e6      	b.n	8006852 <__mdiff+0xf2>
 8006884:	0800743c 	.word	0x0800743c
 8006888:	0800745e 	.word	0x0800745e
 800688c:	00000237 	.word	0x00000237
 8006890:	00000245 	.word	0x00000245

08006894 <__d2b>:
 8006894:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006896:	2101      	movs	r1, #1
 8006898:	0016      	movs	r6, r2
 800689a:	001f      	movs	r7, r3
 800689c:	f7ff fcb6 	bl	800620c <_Balloc>
 80068a0:	1e04      	subs	r4, r0, #0
 80068a2:	d105      	bne.n	80068b0 <__d2b+0x1c>
 80068a4:	0022      	movs	r2, r4
 80068a6:	4b25      	ldr	r3, [pc, #148]	@ (800693c <__d2b+0xa8>)
 80068a8:	4825      	ldr	r0, [pc, #148]	@ (8006940 <__d2b+0xac>)
 80068aa:	4926      	ldr	r1, [pc, #152]	@ (8006944 <__d2b+0xb0>)
 80068ac:	f000 f940 	bl	8006b30 <__assert_func>
 80068b0:	033b      	lsls	r3, r7, #12
 80068b2:	007d      	lsls	r5, r7, #1
 80068b4:	0b1b      	lsrs	r3, r3, #12
 80068b6:	0d6d      	lsrs	r5, r5, #21
 80068b8:	d002      	beq.n	80068c0 <__d2b+0x2c>
 80068ba:	2280      	movs	r2, #128	@ 0x80
 80068bc:	0352      	lsls	r2, r2, #13
 80068be:	4313      	orrs	r3, r2
 80068c0:	9301      	str	r3, [sp, #4]
 80068c2:	2e00      	cmp	r6, #0
 80068c4:	d025      	beq.n	8006912 <__d2b+0x7e>
 80068c6:	4668      	mov	r0, sp
 80068c8:	9600      	str	r6, [sp, #0]
 80068ca:	f7ff fd6c 	bl	80063a6 <__lo0bits>
 80068ce:	9b01      	ldr	r3, [sp, #4]
 80068d0:	9900      	ldr	r1, [sp, #0]
 80068d2:	2800      	cmp	r0, #0
 80068d4:	d01b      	beq.n	800690e <__d2b+0x7a>
 80068d6:	2220      	movs	r2, #32
 80068d8:	001e      	movs	r6, r3
 80068da:	1a12      	subs	r2, r2, r0
 80068dc:	4096      	lsls	r6, r2
 80068de:	0032      	movs	r2, r6
 80068e0:	40c3      	lsrs	r3, r0
 80068e2:	430a      	orrs	r2, r1
 80068e4:	6162      	str	r2, [r4, #20]
 80068e6:	9301      	str	r3, [sp, #4]
 80068e8:	9e01      	ldr	r6, [sp, #4]
 80068ea:	61a6      	str	r6, [r4, #24]
 80068ec:	1e73      	subs	r3, r6, #1
 80068ee:	419e      	sbcs	r6, r3
 80068f0:	3601      	adds	r6, #1
 80068f2:	6126      	str	r6, [r4, #16]
 80068f4:	2d00      	cmp	r5, #0
 80068f6:	d014      	beq.n	8006922 <__d2b+0x8e>
 80068f8:	2635      	movs	r6, #53	@ 0x35
 80068fa:	4b13      	ldr	r3, [pc, #76]	@ (8006948 <__d2b+0xb4>)
 80068fc:	18ed      	adds	r5, r5, r3
 80068fe:	9b08      	ldr	r3, [sp, #32]
 8006900:	182d      	adds	r5, r5, r0
 8006902:	601d      	str	r5, [r3, #0]
 8006904:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006906:	1a36      	subs	r6, r6, r0
 8006908:	601e      	str	r6, [r3, #0]
 800690a:	0020      	movs	r0, r4
 800690c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800690e:	6161      	str	r1, [r4, #20]
 8006910:	e7ea      	b.n	80068e8 <__d2b+0x54>
 8006912:	a801      	add	r0, sp, #4
 8006914:	f7ff fd47 	bl	80063a6 <__lo0bits>
 8006918:	9b01      	ldr	r3, [sp, #4]
 800691a:	2601      	movs	r6, #1
 800691c:	6163      	str	r3, [r4, #20]
 800691e:	3020      	adds	r0, #32
 8006920:	e7e7      	b.n	80068f2 <__d2b+0x5e>
 8006922:	4b0a      	ldr	r3, [pc, #40]	@ (800694c <__d2b+0xb8>)
 8006924:	18c0      	adds	r0, r0, r3
 8006926:	9b08      	ldr	r3, [sp, #32]
 8006928:	6018      	str	r0, [r3, #0]
 800692a:	4b09      	ldr	r3, [pc, #36]	@ (8006950 <__d2b+0xbc>)
 800692c:	18f3      	adds	r3, r6, r3
 800692e:	009b      	lsls	r3, r3, #2
 8006930:	18e3      	adds	r3, r4, r3
 8006932:	6958      	ldr	r0, [r3, #20]
 8006934:	f7ff fd16 	bl	8006364 <__hi0bits>
 8006938:	0176      	lsls	r6, r6, #5
 800693a:	e7e3      	b.n	8006904 <__d2b+0x70>
 800693c:	0800743c 	.word	0x0800743c
 8006940:	0800745e 	.word	0x0800745e
 8006944:	0000030f 	.word	0x0000030f
 8006948:	fffffbcd 	.word	0xfffffbcd
 800694c:	fffffbce 	.word	0xfffffbce
 8006950:	3fffffff 	.word	0x3fffffff

08006954 <__sread>:
 8006954:	b570      	push	{r4, r5, r6, lr}
 8006956:	000c      	movs	r4, r1
 8006958:	250e      	movs	r5, #14
 800695a:	5f49      	ldrsh	r1, [r1, r5]
 800695c:	f000 f8ae 	bl	8006abc <_read_r>
 8006960:	2800      	cmp	r0, #0
 8006962:	db03      	blt.n	800696c <__sread+0x18>
 8006964:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8006966:	181b      	adds	r3, r3, r0
 8006968:	6563      	str	r3, [r4, #84]	@ 0x54
 800696a:	bd70      	pop	{r4, r5, r6, pc}
 800696c:	89a3      	ldrh	r3, [r4, #12]
 800696e:	4a02      	ldr	r2, [pc, #8]	@ (8006978 <__sread+0x24>)
 8006970:	4013      	ands	r3, r2
 8006972:	81a3      	strh	r3, [r4, #12]
 8006974:	e7f9      	b.n	800696a <__sread+0x16>
 8006976:	46c0      	nop			@ (mov r8, r8)
 8006978:	ffffefff 	.word	0xffffefff

0800697c <__swrite>:
 800697c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800697e:	001f      	movs	r7, r3
 8006980:	898b      	ldrh	r3, [r1, #12]
 8006982:	0005      	movs	r5, r0
 8006984:	000c      	movs	r4, r1
 8006986:	0016      	movs	r6, r2
 8006988:	05db      	lsls	r3, r3, #23
 800698a:	d505      	bpl.n	8006998 <__swrite+0x1c>
 800698c:	230e      	movs	r3, #14
 800698e:	5ec9      	ldrsh	r1, [r1, r3]
 8006990:	2200      	movs	r2, #0
 8006992:	2302      	movs	r3, #2
 8006994:	f000 f87e 	bl	8006a94 <_lseek_r>
 8006998:	89a3      	ldrh	r3, [r4, #12]
 800699a:	4a05      	ldr	r2, [pc, #20]	@ (80069b0 <__swrite+0x34>)
 800699c:	0028      	movs	r0, r5
 800699e:	4013      	ands	r3, r2
 80069a0:	81a3      	strh	r3, [r4, #12]
 80069a2:	0032      	movs	r2, r6
 80069a4:	230e      	movs	r3, #14
 80069a6:	5ee1      	ldrsh	r1, [r4, r3]
 80069a8:	003b      	movs	r3, r7
 80069aa:	f000 f8ad 	bl	8006b08 <_write_r>
 80069ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80069b0:	ffffefff 	.word	0xffffefff

080069b4 <__sseek>:
 80069b4:	b570      	push	{r4, r5, r6, lr}
 80069b6:	000c      	movs	r4, r1
 80069b8:	250e      	movs	r5, #14
 80069ba:	5f49      	ldrsh	r1, [r1, r5]
 80069bc:	f000 f86a 	bl	8006a94 <_lseek_r>
 80069c0:	89a3      	ldrh	r3, [r4, #12]
 80069c2:	1c42      	adds	r2, r0, #1
 80069c4:	d103      	bne.n	80069ce <__sseek+0x1a>
 80069c6:	4a05      	ldr	r2, [pc, #20]	@ (80069dc <__sseek+0x28>)
 80069c8:	4013      	ands	r3, r2
 80069ca:	81a3      	strh	r3, [r4, #12]
 80069cc:	bd70      	pop	{r4, r5, r6, pc}
 80069ce:	2280      	movs	r2, #128	@ 0x80
 80069d0:	0152      	lsls	r2, r2, #5
 80069d2:	4313      	orrs	r3, r2
 80069d4:	81a3      	strh	r3, [r4, #12]
 80069d6:	6560      	str	r0, [r4, #84]	@ 0x54
 80069d8:	e7f8      	b.n	80069cc <__sseek+0x18>
 80069da:	46c0      	nop			@ (mov r8, r8)
 80069dc:	ffffefff 	.word	0xffffefff

080069e0 <__sclose>:
 80069e0:	b510      	push	{r4, lr}
 80069e2:	230e      	movs	r3, #14
 80069e4:	5ec9      	ldrsh	r1, [r1, r3]
 80069e6:	f000 f843 	bl	8006a70 <_close_r>
 80069ea:	bd10      	pop	{r4, pc}

080069ec <_realloc_r>:
 80069ec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80069ee:	0006      	movs	r6, r0
 80069f0:	000c      	movs	r4, r1
 80069f2:	0015      	movs	r5, r2
 80069f4:	2900      	cmp	r1, #0
 80069f6:	d105      	bne.n	8006a04 <_realloc_r+0x18>
 80069f8:	0011      	movs	r1, r2
 80069fa:	f7ff fac5 	bl	8005f88 <_malloc_r>
 80069fe:	0004      	movs	r4, r0
 8006a00:	0020      	movs	r0, r4
 8006a02:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006a04:	2a00      	cmp	r2, #0
 8006a06:	d103      	bne.n	8006a10 <_realloc_r+0x24>
 8006a08:	f000 f8de 	bl	8006bc8 <_free_r>
 8006a0c:	2400      	movs	r4, #0
 8006a0e:	e7f7      	b.n	8006a00 <_realloc_r+0x14>
 8006a10:	f000 f936 	bl	8006c80 <_malloc_usable_size_r>
 8006a14:	0007      	movs	r7, r0
 8006a16:	4285      	cmp	r5, r0
 8006a18:	d802      	bhi.n	8006a20 <_realloc_r+0x34>
 8006a1a:	0843      	lsrs	r3, r0, #1
 8006a1c:	42ab      	cmp	r3, r5
 8006a1e:	d3ef      	bcc.n	8006a00 <_realloc_r+0x14>
 8006a20:	0029      	movs	r1, r5
 8006a22:	0030      	movs	r0, r6
 8006a24:	f7ff fab0 	bl	8005f88 <_malloc_r>
 8006a28:	9001      	str	r0, [sp, #4]
 8006a2a:	2800      	cmp	r0, #0
 8006a2c:	d0ee      	beq.n	8006a0c <_realloc_r+0x20>
 8006a2e:	002a      	movs	r2, r5
 8006a30:	42bd      	cmp	r5, r7
 8006a32:	d900      	bls.n	8006a36 <_realloc_r+0x4a>
 8006a34:	003a      	movs	r2, r7
 8006a36:	0021      	movs	r1, r4
 8006a38:	9801      	ldr	r0, [sp, #4]
 8006a3a:	f7fe fa8f 	bl	8004f5c <memcpy>
 8006a3e:	0021      	movs	r1, r4
 8006a40:	0030      	movs	r0, r6
 8006a42:	f000 f8c1 	bl	8006bc8 <_free_r>
 8006a46:	9c01      	ldr	r4, [sp, #4]
 8006a48:	e7da      	b.n	8006a00 <_realloc_r+0x14>

08006a4a <memmove>:
 8006a4a:	b510      	push	{r4, lr}
 8006a4c:	4288      	cmp	r0, r1
 8006a4e:	d806      	bhi.n	8006a5e <memmove+0x14>
 8006a50:	2300      	movs	r3, #0
 8006a52:	429a      	cmp	r2, r3
 8006a54:	d008      	beq.n	8006a68 <memmove+0x1e>
 8006a56:	5ccc      	ldrb	r4, [r1, r3]
 8006a58:	54c4      	strb	r4, [r0, r3]
 8006a5a:	3301      	adds	r3, #1
 8006a5c:	e7f9      	b.n	8006a52 <memmove+0x8>
 8006a5e:	188b      	adds	r3, r1, r2
 8006a60:	4298      	cmp	r0, r3
 8006a62:	d2f5      	bcs.n	8006a50 <memmove+0x6>
 8006a64:	3a01      	subs	r2, #1
 8006a66:	d200      	bcs.n	8006a6a <memmove+0x20>
 8006a68:	bd10      	pop	{r4, pc}
 8006a6a:	5c8b      	ldrb	r3, [r1, r2]
 8006a6c:	5483      	strb	r3, [r0, r2]
 8006a6e:	e7f9      	b.n	8006a64 <memmove+0x1a>

08006a70 <_close_r>:
 8006a70:	2300      	movs	r3, #0
 8006a72:	b570      	push	{r4, r5, r6, lr}
 8006a74:	4d06      	ldr	r5, [pc, #24]	@ (8006a90 <_close_r+0x20>)
 8006a76:	0004      	movs	r4, r0
 8006a78:	0008      	movs	r0, r1
 8006a7a:	602b      	str	r3, [r5, #0]
 8006a7c:	f7fb fff2 	bl	8002a64 <_close>
 8006a80:	1c43      	adds	r3, r0, #1
 8006a82:	d103      	bne.n	8006a8c <_close_r+0x1c>
 8006a84:	682b      	ldr	r3, [r5, #0]
 8006a86:	2b00      	cmp	r3, #0
 8006a88:	d000      	beq.n	8006a8c <_close_r+0x1c>
 8006a8a:	6023      	str	r3, [r4, #0]
 8006a8c:	bd70      	pop	{r4, r5, r6, pc}
 8006a8e:	46c0      	nop			@ (mov r8, r8)
 8006a90:	20000570 	.word	0x20000570

08006a94 <_lseek_r>:
 8006a94:	b570      	push	{r4, r5, r6, lr}
 8006a96:	0004      	movs	r4, r0
 8006a98:	0008      	movs	r0, r1
 8006a9a:	0011      	movs	r1, r2
 8006a9c:	001a      	movs	r2, r3
 8006a9e:	2300      	movs	r3, #0
 8006aa0:	4d05      	ldr	r5, [pc, #20]	@ (8006ab8 <_lseek_r+0x24>)
 8006aa2:	602b      	str	r3, [r5, #0]
 8006aa4:	f7fb ffe8 	bl	8002a78 <_lseek>
 8006aa8:	1c43      	adds	r3, r0, #1
 8006aaa:	d103      	bne.n	8006ab4 <_lseek_r+0x20>
 8006aac:	682b      	ldr	r3, [r5, #0]
 8006aae:	2b00      	cmp	r3, #0
 8006ab0:	d000      	beq.n	8006ab4 <_lseek_r+0x20>
 8006ab2:	6023      	str	r3, [r4, #0]
 8006ab4:	bd70      	pop	{r4, r5, r6, pc}
 8006ab6:	46c0      	nop			@ (mov r8, r8)
 8006ab8:	20000570 	.word	0x20000570

08006abc <_read_r>:
 8006abc:	b570      	push	{r4, r5, r6, lr}
 8006abe:	0004      	movs	r4, r0
 8006ac0:	0008      	movs	r0, r1
 8006ac2:	0011      	movs	r1, r2
 8006ac4:	001a      	movs	r2, r3
 8006ac6:	2300      	movs	r3, #0
 8006ac8:	4d05      	ldr	r5, [pc, #20]	@ (8006ae0 <_read_r+0x24>)
 8006aca:	602b      	str	r3, [r5, #0]
 8006acc:	f7fb ffb0 	bl	8002a30 <_read>
 8006ad0:	1c43      	adds	r3, r0, #1
 8006ad2:	d103      	bne.n	8006adc <_read_r+0x20>
 8006ad4:	682b      	ldr	r3, [r5, #0]
 8006ad6:	2b00      	cmp	r3, #0
 8006ad8:	d000      	beq.n	8006adc <_read_r+0x20>
 8006ada:	6023      	str	r3, [r4, #0]
 8006adc:	bd70      	pop	{r4, r5, r6, pc}
 8006ade:	46c0      	nop			@ (mov r8, r8)
 8006ae0:	20000570 	.word	0x20000570

08006ae4 <_sbrk_r>:
 8006ae4:	2300      	movs	r3, #0
 8006ae6:	b570      	push	{r4, r5, r6, lr}
 8006ae8:	4d06      	ldr	r5, [pc, #24]	@ (8006b04 <_sbrk_r+0x20>)
 8006aea:	0004      	movs	r4, r0
 8006aec:	0008      	movs	r0, r1
 8006aee:	602b      	str	r3, [r5, #0]
 8006af0:	f7fb ffc4 	bl	8002a7c <_sbrk>
 8006af4:	1c43      	adds	r3, r0, #1
 8006af6:	d103      	bne.n	8006b00 <_sbrk_r+0x1c>
 8006af8:	682b      	ldr	r3, [r5, #0]
 8006afa:	2b00      	cmp	r3, #0
 8006afc:	d000      	beq.n	8006b00 <_sbrk_r+0x1c>
 8006afe:	6023      	str	r3, [r4, #0]
 8006b00:	bd70      	pop	{r4, r5, r6, pc}
 8006b02:	46c0      	nop			@ (mov r8, r8)
 8006b04:	20000570 	.word	0x20000570

08006b08 <_write_r>:
 8006b08:	b570      	push	{r4, r5, r6, lr}
 8006b0a:	0004      	movs	r4, r0
 8006b0c:	0008      	movs	r0, r1
 8006b0e:	0011      	movs	r1, r2
 8006b10:	001a      	movs	r2, r3
 8006b12:	2300      	movs	r3, #0
 8006b14:	4d05      	ldr	r5, [pc, #20]	@ (8006b2c <_write_r+0x24>)
 8006b16:	602b      	str	r3, [r5, #0]
 8006b18:	f7fb ff97 	bl	8002a4a <_write>
 8006b1c:	1c43      	adds	r3, r0, #1
 8006b1e:	d103      	bne.n	8006b28 <_write_r+0x20>
 8006b20:	682b      	ldr	r3, [r5, #0]
 8006b22:	2b00      	cmp	r3, #0
 8006b24:	d000      	beq.n	8006b28 <_write_r+0x20>
 8006b26:	6023      	str	r3, [r4, #0]
 8006b28:	bd70      	pop	{r4, r5, r6, pc}
 8006b2a:	46c0      	nop			@ (mov r8, r8)
 8006b2c:	20000570 	.word	0x20000570

08006b30 <__assert_func>:
 8006b30:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8006b32:	0014      	movs	r4, r2
 8006b34:	001a      	movs	r2, r3
 8006b36:	4b09      	ldr	r3, [pc, #36]	@ (8006b5c <__assert_func+0x2c>)
 8006b38:	0005      	movs	r5, r0
 8006b3a:	681b      	ldr	r3, [r3, #0]
 8006b3c:	000e      	movs	r6, r1
 8006b3e:	68d8      	ldr	r0, [r3, #12]
 8006b40:	4b07      	ldr	r3, [pc, #28]	@ (8006b60 <__assert_func+0x30>)
 8006b42:	2c00      	cmp	r4, #0
 8006b44:	d101      	bne.n	8006b4a <__assert_func+0x1a>
 8006b46:	4b07      	ldr	r3, [pc, #28]	@ (8006b64 <__assert_func+0x34>)
 8006b48:	001c      	movs	r4, r3
 8006b4a:	4907      	ldr	r1, [pc, #28]	@ (8006b68 <__assert_func+0x38>)
 8006b4c:	9301      	str	r3, [sp, #4]
 8006b4e:	9402      	str	r4, [sp, #8]
 8006b50:	002b      	movs	r3, r5
 8006b52:	9600      	str	r6, [sp, #0]
 8006b54:	f000 f89c 	bl	8006c90 <fiprintf>
 8006b58:	f000 f8b7 	bl	8006cca <abort>
 8006b5c:	20000018 	.word	0x20000018
 8006b60:	080076c3 	.word	0x080076c3
 8006b64:	08007350 	.word	0x08007350
 8006b68:	080076d0 	.word	0x080076d0

08006b6c <_calloc_r>:
 8006b6c:	b570      	push	{r4, r5, r6, lr}
 8006b6e:	0c0b      	lsrs	r3, r1, #16
 8006b70:	0c15      	lsrs	r5, r2, #16
 8006b72:	2b00      	cmp	r3, #0
 8006b74:	d11e      	bne.n	8006bb4 <_calloc_r+0x48>
 8006b76:	2d00      	cmp	r5, #0
 8006b78:	d10c      	bne.n	8006b94 <_calloc_r+0x28>
 8006b7a:	b289      	uxth	r1, r1
 8006b7c:	b294      	uxth	r4, r2
 8006b7e:	434c      	muls	r4, r1
 8006b80:	0021      	movs	r1, r4
 8006b82:	f7ff fa01 	bl	8005f88 <_malloc_r>
 8006b86:	1e05      	subs	r5, r0, #0
 8006b88:	d01a      	beq.n	8006bc0 <_calloc_r+0x54>
 8006b8a:	0022      	movs	r2, r4
 8006b8c:	2100      	movs	r1, #0
 8006b8e:	f7fe f9a1 	bl	8004ed4 <memset>
 8006b92:	e016      	b.n	8006bc2 <_calloc_r+0x56>
 8006b94:	1c2b      	adds	r3, r5, #0
 8006b96:	1c0c      	adds	r4, r1, #0
 8006b98:	b289      	uxth	r1, r1
 8006b9a:	b292      	uxth	r2, r2
 8006b9c:	434a      	muls	r2, r1
 8006b9e:	b29b      	uxth	r3, r3
 8006ba0:	b2a1      	uxth	r1, r4
 8006ba2:	4359      	muls	r1, r3
 8006ba4:	0c14      	lsrs	r4, r2, #16
 8006ba6:	190c      	adds	r4, r1, r4
 8006ba8:	0c23      	lsrs	r3, r4, #16
 8006baa:	d107      	bne.n	8006bbc <_calloc_r+0x50>
 8006bac:	0424      	lsls	r4, r4, #16
 8006bae:	b292      	uxth	r2, r2
 8006bb0:	4314      	orrs	r4, r2
 8006bb2:	e7e5      	b.n	8006b80 <_calloc_r+0x14>
 8006bb4:	2d00      	cmp	r5, #0
 8006bb6:	d101      	bne.n	8006bbc <_calloc_r+0x50>
 8006bb8:	1c14      	adds	r4, r2, #0
 8006bba:	e7ed      	b.n	8006b98 <_calloc_r+0x2c>
 8006bbc:	230c      	movs	r3, #12
 8006bbe:	6003      	str	r3, [r0, #0]
 8006bc0:	2500      	movs	r5, #0
 8006bc2:	0028      	movs	r0, r5
 8006bc4:	bd70      	pop	{r4, r5, r6, pc}
	...

08006bc8 <_free_r>:
 8006bc8:	b570      	push	{r4, r5, r6, lr}
 8006bca:	0005      	movs	r5, r0
 8006bcc:	1e0c      	subs	r4, r1, #0
 8006bce:	d010      	beq.n	8006bf2 <_free_r+0x2a>
 8006bd0:	3c04      	subs	r4, #4
 8006bd2:	6823      	ldr	r3, [r4, #0]
 8006bd4:	2b00      	cmp	r3, #0
 8006bd6:	da00      	bge.n	8006bda <_free_r+0x12>
 8006bd8:	18e4      	adds	r4, r4, r3
 8006bda:	0028      	movs	r0, r5
 8006bdc:	f7ff fb06 	bl	80061ec <__malloc_lock>
 8006be0:	4a1d      	ldr	r2, [pc, #116]	@ (8006c58 <_free_r+0x90>)
 8006be2:	6813      	ldr	r3, [r2, #0]
 8006be4:	2b00      	cmp	r3, #0
 8006be6:	d105      	bne.n	8006bf4 <_free_r+0x2c>
 8006be8:	6063      	str	r3, [r4, #4]
 8006bea:	6014      	str	r4, [r2, #0]
 8006bec:	0028      	movs	r0, r5
 8006bee:	f7ff fb05 	bl	80061fc <__malloc_unlock>
 8006bf2:	bd70      	pop	{r4, r5, r6, pc}
 8006bf4:	42a3      	cmp	r3, r4
 8006bf6:	d908      	bls.n	8006c0a <_free_r+0x42>
 8006bf8:	6820      	ldr	r0, [r4, #0]
 8006bfa:	1821      	adds	r1, r4, r0
 8006bfc:	428b      	cmp	r3, r1
 8006bfe:	d1f3      	bne.n	8006be8 <_free_r+0x20>
 8006c00:	6819      	ldr	r1, [r3, #0]
 8006c02:	685b      	ldr	r3, [r3, #4]
 8006c04:	1809      	adds	r1, r1, r0
 8006c06:	6021      	str	r1, [r4, #0]
 8006c08:	e7ee      	b.n	8006be8 <_free_r+0x20>
 8006c0a:	001a      	movs	r2, r3
 8006c0c:	685b      	ldr	r3, [r3, #4]
 8006c0e:	2b00      	cmp	r3, #0
 8006c10:	d001      	beq.n	8006c16 <_free_r+0x4e>
 8006c12:	42a3      	cmp	r3, r4
 8006c14:	d9f9      	bls.n	8006c0a <_free_r+0x42>
 8006c16:	6811      	ldr	r1, [r2, #0]
 8006c18:	1850      	adds	r0, r2, r1
 8006c1a:	42a0      	cmp	r0, r4
 8006c1c:	d10b      	bne.n	8006c36 <_free_r+0x6e>
 8006c1e:	6820      	ldr	r0, [r4, #0]
 8006c20:	1809      	adds	r1, r1, r0
 8006c22:	1850      	adds	r0, r2, r1
 8006c24:	6011      	str	r1, [r2, #0]
 8006c26:	4283      	cmp	r3, r0
 8006c28:	d1e0      	bne.n	8006bec <_free_r+0x24>
 8006c2a:	6818      	ldr	r0, [r3, #0]
 8006c2c:	685b      	ldr	r3, [r3, #4]
 8006c2e:	1841      	adds	r1, r0, r1
 8006c30:	6011      	str	r1, [r2, #0]
 8006c32:	6053      	str	r3, [r2, #4]
 8006c34:	e7da      	b.n	8006bec <_free_r+0x24>
 8006c36:	42a0      	cmp	r0, r4
 8006c38:	d902      	bls.n	8006c40 <_free_r+0x78>
 8006c3a:	230c      	movs	r3, #12
 8006c3c:	602b      	str	r3, [r5, #0]
 8006c3e:	e7d5      	b.n	8006bec <_free_r+0x24>
 8006c40:	6820      	ldr	r0, [r4, #0]
 8006c42:	1821      	adds	r1, r4, r0
 8006c44:	428b      	cmp	r3, r1
 8006c46:	d103      	bne.n	8006c50 <_free_r+0x88>
 8006c48:	6819      	ldr	r1, [r3, #0]
 8006c4a:	685b      	ldr	r3, [r3, #4]
 8006c4c:	1809      	adds	r1, r1, r0
 8006c4e:	6021      	str	r1, [r4, #0]
 8006c50:	6063      	str	r3, [r4, #4]
 8006c52:	6054      	str	r4, [r2, #4]
 8006c54:	e7ca      	b.n	8006bec <_free_r+0x24>
 8006c56:	46c0      	nop			@ (mov r8, r8)
 8006c58:	2000056c 	.word	0x2000056c

08006c5c <__ascii_mbtowc>:
 8006c5c:	b082      	sub	sp, #8
 8006c5e:	2900      	cmp	r1, #0
 8006c60:	d100      	bne.n	8006c64 <__ascii_mbtowc+0x8>
 8006c62:	a901      	add	r1, sp, #4
 8006c64:	1e10      	subs	r0, r2, #0
 8006c66:	d006      	beq.n	8006c76 <__ascii_mbtowc+0x1a>
 8006c68:	2b00      	cmp	r3, #0
 8006c6a:	d006      	beq.n	8006c7a <__ascii_mbtowc+0x1e>
 8006c6c:	7813      	ldrb	r3, [r2, #0]
 8006c6e:	600b      	str	r3, [r1, #0]
 8006c70:	7810      	ldrb	r0, [r2, #0]
 8006c72:	1e43      	subs	r3, r0, #1
 8006c74:	4198      	sbcs	r0, r3
 8006c76:	b002      	add	sp, #8
 8006c78:	4770      	bx	lr
 8006c7a:	2002      	movs	r0, #2
 8006c7c:	4240      	negs	r0, r0
 8006c7e:	e7fa      	b.n	8006c76 <__ascii_mbtowc+0x1a>

08006c80 <_malloc_usable_size_r>:
 8006c80:	1f0b      	subs	r3, r1, #4
 8006c82:	681b      	ldr	r3, [r3, #0]
 8006c84:	1f18      	subs	r0, r3, #4
 8006c86:	2b00      	cmp	r3, #0
 8006c88:	da01      	bge.n	8006c8e <_malloc_usable_size_r+0xe>
 8006c8a:	580b      	ldr	r3, [r1, r0]
 8006c8c:	18c0      	adds	r0, r0, r3
 8006c8e:	4770      	bx	lr

08006c90 <fiprintf>:
 8006c90:	b40e      	push	{r1, r2, r3}
 8006c92:	b517      	push	{r0, r1, r2, r4, lr}
 8006c94:	4c05      	ldr	r4, [pc, #20]	@ (8006cac <fiprintf+0x1c>)
 8006c96:	ab05      	add	r3, sp, #20
 8006c98:	cb04      	ldmia	r3!, {r2}
 8006c9a:	0001      	movs	r1, r0
 8006c9c:	6820      	ldr	r0, [r4, #0]
 8006c9e:	9301      	str	r3, [sp, #4]
 8006ca0:	f000 f842 	bl	8006d28 <_vfiprintf_r>
 8006ca4:	bc1e      	pop	{r1, r2, r3, r4}
 8006ca6:	bc08      	pop	{r3}
 8006ca8:	b003      	add	sp, #12
 8006caa:	4718      	bx	r3
 8006cac:	20000018 	.word	0x20000018

08006cb0 <__ascii_wctomb>:
 8006cb0:	0003      	movs	r3, r0
 8006cb2:	1e08      	subs	r0, r1, #0
 8006cb4:	d005      	beq.n	8006cc2 <__ascii_wctomb+0x12>
 8006cb6:	2aff      	cmp	r2, #255	@ 0xff
 8006cb8:	d904      	bls.n	8006cc4 <__ascii_wctomb+0x14>
 8006cba:	228a      	movs	r2, #138	@ 0x8a
 8006cbc:	2001      	movs	r0, #1
 8006cbe:	601a      	str	r2, [r3, #0]
 8006cc0:	4240      	negs	r0, r0
 8006cc2:	4770      	bx	lr
 8006cc4:	2001      	movs	r0, #1
 8006cc6:	700a      	strb	r2, [r1, #0]
 8006cc8:	e7fb      	b.n	8006cc2 <__ascii_wctomb+0x12>

08006cca <abort>:
 8006cca:	2006      	movs	r0, #6
 8006ccc:	b510      	push	{r4, lr}
 8006cce:	f000 faa1 	bl	8007214 <raise>
 8006cd2:	2001      	movs	r0, #1
 8006cd4:	f7fb fea6 	bl	8002a24 <_exit>

08006cd8 <__sfputc_r>:
 8006cd8:	6893      	ldr	r3, [r2, #8]
 8006cda:	b510      	push	{r4, lr}
 8006cdc:	3b01      	subs	r3, #1
 8006cde:	6093      	str	r3, [r2, #8]
 8006ce0:	2b00      	cmp	r3, #0
 8006ce2:	da04      	bge.n	8006cee <__sfputc_r+0x16>
 8006ce4:	6994      	ldr	r4, [r2, #24]
 8006ce6:	42a3      	cmp	r3, r4
 8006ce8:	db07      	blt.n	8006cfa <__sfputc_r+0x22>
 8006cea:	290a      	cmp	r1, #10
 8006cec:	d005      	beq.n	8006cfa <__sfputc_r+0x22>
 8006cee:	6813      	ldr	r3, [r2, #0]
 8006cf0:	1c58      	adds	r0, r3, #1
 8006cf2:	6010      	str	r0, [r2, #0]
 8006cf4:	7019      	strb	r1, [r3, #0]
 8006cf6:	0008      	movs	r0, r1
 8006cf8:	bd10      	pop	{r4, pc}
 8006cfa:	f000 f931 	bl	8006f60 <__swbuf_r>
 8006cfe:	0001      	movs	r1, r0
 8006d00:	e7f9      	b.n	8006cf6 <__sfputc_r+0x1e>

08006d02 <__sfputs_r>:
 8006d02:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006d04:	0006      	movs	r6, r0
 8006d06:	000f      	movs	r7, r1
 8006d08:	0014      	movs	r4, r2
 8006d0a:	18d5      	adds	r5, r2, r3
 8006d0c:	42ac      	cmp	r4, r5
 8006d0e:	d101      	bne.n	8006d14 <__sfputs_r+0x12>
 8006d10:	2000      	movs	r0, #0
 8006d12:	e007      	b.n	8006d24 <__sfputs_r+0x22>
 8006d14:	7821      	ldrb	r1, [r4, #0]
 8006d16:	003a      	movs	r2, r7
 8006d18:	0030      	movs	r0, r6
 8006d1a:	f7ff ffdd 	bl	8006cd8 <__sfputc_r>
 8006d1e:	3401      	adds	r4, #1
 8006d20:	1c43      	adds	r3, r0, #1
 8006d22:	d1f3      	bne.n	8006d0c <__sfputs_r+0xa>
 8006d24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08006d28 <_vfiprintf_r>:
 8006d28:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006d2a:	b0a1      	sub	sp, #132	@ 0x84
 8006d2c:	000f      	movs	r7, r1
 8006d2e:	0015      	movs	r5, r2
 8006d30:	001e      	movs	r6, r3
 8006d32:	9003      	str	r0, [sp, #12]
 8006d34:	2800      	cmp	r0, #0
 8006d36:	d004      	beq.n	8006d42 <_vfiprintf_r+0x1a>
 8006d38:	6a03      	ldr	r3, [r0, #32]
 8006d3a:	2b00      	cmp	r3, #0
 8006d3c:	d101      	bne.n	8006d42 <_vfiprintf_r+0x1a>
 8006d3e:	f7fe f895 	bl	8004e6c <__sinit>
 8006d42:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8006d44:	07db      	lsls	r3, r3, #31
 8006d46:	d405      	bmi.n	8006d54 <_vfiprintf_r+0x2c>
 8006d48:	89bb      	ldrh	r3, [r7, #12]
 8006d4a:	059b      	lsls	r3, r3, #22
 8006d4c:	d402      	bmi.n	8006d54 <_vfiprintf_r+0x2c>
 8006d4e:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8006d50:	f7fe f8f7 	bl	8004f42 <__retarget_lock_acquire_recursive>
 8006d54:	89bb      	ldrh	r3, [r7, #12]
 8006d56:	071b      	lsls	r3, r3, #28
 8006d58:	d502      	bpl.n	8006d60 <_vfiprintf_r+0x38>
 8006d5a:	693b      	ldr	r3, [r7, #16]
 8006d5c:	2b00      	cmp	r3, #0
 8006d5e:	d113      	bne.n	8006d88 <_vfiprintf_r+0x60>
 8006d60:	0039      	movs	r1, r7
 8006d62:	9803      	ldr	r0, [sp, #12]
 8006d64:	f000 f93e 	bl	8006fe4 <__swsetup_r>
 8006d68:	2800      	cmp	r0, #0
 8006d6a:	d00d      	beq.n	8006d88 <_vfiprintf_r+0x60>
 8006d6c:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8006d6e:	07db      	lsls	r3, r3, #31
 8006d70:	d503      	bpl.n	8006d7a <_vfiprintf_r+0x52>
 8006d72:	2001      	movs	r0, #1
 8006d74:	4240      	negs	r0, r0
 8006d76:	b021      	add	sp, #132	@ 0x84
 8006d78:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006d7a:	89bb      	ldrh	r3, [r7, #12]
 8006d7c:	059b      	lsls	r3, r3, #22
 8006d7e:	d4f8      	bmi.n	8006d72 <_vfiprintf_r+0x4a>
 8006d80:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8006d82:	f7fe f8df 	bl	8004f44 <__retarget_lock_release_recursive>
 8006d86:	e7f4      	b.n	8006d72 <_vfiprintf_r+0x4a>
 8006d88:	2300      	movs	r3, #0
 8006d8a:	ac08      	add	r4, sp, #32
 8006d8c:	6163      	str	r3, [r4, #20]
 8006d8e:	3320      	adds	r3, #32
 8006d90:	7663      	strb	r3, [r4, #25]
 8006d92:	3310      	adds	r3, #16
 8006d94:	76a3      	strb	r3, [r4, #26]
 8006d96:	9607      	str	r6, [sp, #28]
 8006d98:	002e      	movs	r6, r5
 8006d9a:	7833      	ldrb	r3, [r6, #0]
 8006d9c:	2b00      	cmp	r3, #0
 8006d9e:	d001      	beq.n	8006da4 <_vfiprintf_r+0x7c>
 8006da0:	2b25      	cmp	r3, #37	@ 0x25
 8006da2:	d148      	bne.n	8006e36 <_vfiprintf_r+0x10e>
 8006da4:	1b73      	subs	r3, r6, r5
 8006da6:	9305      	str	r3, [sp, #20]
 8006da8:	42ae      	cmp	r6, r5
 8006daa:	d00b      	beq.n	8006dc4 <_vfiprintf_r+0x9c>
 8006dac:	002a      	movs	r2, r5
 8006dae:	0039      	movs	r1, r7
 8006db0:	9803      	ldr	r0, [sp, #12]
 8006db2:	f7ff ffa6 	bl	8006d02 <__sfputs_r>
 8006db6:	3001      	adds	r0, #1
 8006db8:	d100      	bne.n	8006dbc <_vfiprintf_r+0x94>
 8006dba:	e0ae      	b.n	8006f1a <_vfiprintf_r+0x1f2>
 8006dbc:	6963      	ldr	r3, [r4, #20]
 8006dbe:	9a05      	ldr	r2, [sp, #20]
 8006dc0:	189b      	adds	r3, r3, r2
 8006dc2:	6163      	str	r3, [r4, #20]
 8006dc4:	7833      	ldrb	r3, [r6, #0]
 8006dc6:	2b00      	cmp	r3, #0
 8006dc8:	d100      	bne.n	8006dcc <_vfiprintf_r+0xa4>
 8006dca:	e0a6      	b.n	8006f1a <_vfiprintf_r+0x1f2>
 8006dcc:	2201      	movs	r2, #1
 8006dce:	2300      	movs	r3, #0
 8006dd0:	4252      	negs	r2, r2
 8006dd2:	6062      	str	r2, [r4, #4]
 8006dd4:	a904      	add	r1, sp, #16
 8006dd6:	3254      	adds	r2, #84	@ 0x54
 8006dd8:	1852      	adds	r2, r2, r1
 8006dda:	1c75      	adds	r5, r6, #1
 8006ddc:	6023      	str	r3, [r4, #0]
 8006dde:	60e3      	str	r3, [r4, #12]
 8006de0:	60a3      	str	r3, [r4, #8]
 8006de2:	7013      	strb	r3, [r2, #0]
 8006de4:	65a3      	str	r3, [r4, #88]	@ 0x58
 8006de6:	4b59      	ldr	r3, [pc, #356]	@ (8006f4c <_vfiprintf_r+0x224>)
 8006de8:	2205      	movs	r2, #5
 8006dea:	0018      	movs	r0, r3
 8006dec:	7829      	ldrb	r1, [r5, #0]
 8006dee:	9305      	str	r3, [sp, #20]
 8006df0:	f7fe f8a9 	bl	8004f46 <memchr>
 8006df4:	1c6e      	adds	r6, r5, #1
 8006df6:	2800      	cmp	r0, #0
 8006df8:	d11f      	bne.n	8006e3a <_vfiprintf_r+0x112>
 8006dfa:	6822      	ldr	r2, [r4, #0]
 8006dfc:	06d3      	lsls	r3, r2, #27
 8006dfe:	d504      	bpl.n	8006e0a <_vfiprintf_r+0xe2>
 8006e00:	2353      	movs	r3, #83	@ 0x53
 8006e02:	a904      	add	r1, sp, #16
 8006e04:	185b      	adds	r3, r3, r1
 8006e06:	2120      	movs	r1, #32
 8006e08:	7019      	strb	r1, [r3, #0]
 8006e0a:	0713      	lsls	r3, r2, #28
 8006e0c:	d504      	bpl.n	8006e18 <_vfiprintf_r+0xf0>
 8006e0e:	2353      	movs	r3, #83	@ 0x53
 8006e10:	a904      	add	r1, sp, #16
 8006e12:	185b      	adds	r3, r3, r1
 8006e14:	212b      	movs	r1, #43	@ 0x2b
 8006e16:	7019      	strb	r1, [r3, #0]
 8006e18:	782b      	ldrb	r3, [r5, #0]
 8006e1a:	2b2a      	cmp	r3, #42	@ 0x2a
 8006e1c:	d016      	beq.n	8006e4c <_vfiprintf_r+0x124>
 8006e1e:	002e      	movs	r6, r5
 8006e20:	2100      	movs	r1, #0
 8006e22:	200a      	movs	r0, #10
 8006e24:	68e3      	ldr	r3, [r4, #12]
 8006e26:	7832      	ldrb	r2, [r6, #0]
 8006e28:	1c75      	adds	r5, r6, #1
 8006e2a:	3a30      	subs	r2, #48	@ 0x30
 8006e2c:	2a09      	cmp	r2, #9
 8006e2e:	d950      	bls.n	8006ed2 <_vfiprintf_r+0x1aa>
 8006e30:	2900      	cmp	r1, #0
 8006e32:	d111      	bne.n	8006e58 <_vfiprintf_r+0x130>
 8006e34:	e017      	b.n	8006e66 <_vfiprintf_r+0x13e>
 8006e36:	3601      	adds	r6, #1
 8006e38:	e7af      	b.n	8006d9a <_vfiprintf_r+0x72>
 8006e3a:	9b05      	ldr	r3, [sp, #20]
 8006e3c:	6822      	ldr	r2, [r4, #0]
 8006e3e:	1ac0      	subs	r0, r0, r3
 8006e40:	2301      	movs	r3, #1
 8006e42:	4083      	lsls	r3, r0
 8006e44:	4313      	orrs	r3, r2
 8006e46:	0035      	movs	r5, r6
 8006e48:	6023      	str	r3, [r4, #0]
 8006e4a:	e7cc      	b.n	8006de6 <_vfiprintf_r+0xbe>
 8006e4c:	9b07      	ldr	r3, [sp, #28]
 8006e4e:	1d19      	adds	r1, r3, #4
 8006e50:	681b      	ldr	r3, [r3, #0]
 8006e52:	9107      	str	r1, [sp, #28]
 8006e54:	2b00      	cmp	r3, #0
 8006e56:	db01      	blt.n	8006e5c <_vfiprintf_r+0x134>
 8006e58:	930b      	str	r3, [sp, #44]	@ 0x2c
 8006e5a:	e004      	b.n	8006e66 <_vfiprintf_r+0x13e>
 8006e5c:	425b      	negs	r3, r3
 8006e5e:	60e3      	str	r3, [r4, #12]
 8006e60:	2302      	movs	r3, #2
 8006e62:	4313      	orrs	r3, r2
 8006e64:	6023      	str	r3, [r4, #0]
 8006e66:	7833      	ldrb	r3, [r6, #0]
 8006e68:	2b2e      	cmp	r3, #46	@ 0x2e
 8006e6a:	d10c      	bne.n	8006e86 <_vfiprintf_r+0x15e>
 8006e6c:	7873      	ldrb	r3, [r6, #1]
 8006e6e:	2b2a      	cmp	r3, #42	@ 0x2a
 8006e70:	d134      	bne.n	8006edc <_vfiprintf_r+0x1b4>
 8006e72:	9b07      	ldr	r3, [sp, #28]
 8006e74:	3602      	adds	r6, #2
 8006e76:	1d1a      	adds	r2, r3, #4
 8006e78:	681b      	ldr	r3, [r3, #0]
 8006e7a:	9207      	str	r2, [sp, #28]
 8006e7c:	2b00      	cmp	r3, #0
 8006e7e:	da01      	bge.n	8006e84 <_vfiprintf_r+0x15c>
 8006e80:	2301      	movs	r3, #1
 8006e82:	425b      	negs	r3, r3
 8006e84:	9309      	str	r3, [sp, #36]	@ 0x24
 8006e86:	4d32      	ldr	r5, [pc, #200]	@ (8006f50 <_vfiprintf_r+0x228>)
 8006e88:	2203      	movs	r2, #3
 8006e8a:	0028      	movs	r0, r5
 8006e8c:	7831      	ldrb	r1, [r6, #0]
 8006e8e:	f7fe f85a 	bl	8004f46 <memchr>
 8006e92:	2800      	cmp	r0, #0
 8006e94:	d006      	beq.n	8006ea4 <_vfiprintf_r+0x17c>
 8006e96:	2340      	movs	r3, #64	@ 0x40
 8006e98:	1b40      	subs	r0, r0, r5
 8006e9a:	4083      	lsls	r3, r0
 8006e9c:	6822      	ldr	r2, [r4, #0]
 8006e9e:	3601      	adds	r6, #1
 8006ea0:	4313      	orrs	r3, r2
 8006ea2:	6023      	str	r3, [r4, #0]
 8006ea4:	7831      	ldrb	r1, [r6, #0]
 8006ea6:	2206      	movs	r2, #6
 8006ea8:	482a      	ldr	r0, [pc, #168]	@ (8006f54 <_vfiprintf_r+0x22c>)
 8006eaa:	1c75      	adds	r5, r6, #1
 8006eac:	7621      	strb	r1, [r4, #24]
 8006eae:	f7fe f84a 	bl	8004f46 <memchr>
 8006eb2:	2800      	cmp	r0, #0
 8006eb4:	d040      	beq.n	8006f38 <_vfiprintf_r+0x210>
 8006eb6:	4b28      	ldr	r3, [pc, #160]	@ (8006f58 <_vfiprintf_r+0x230>)
 8006eb8:	2b00      	cmp	r3, #0
 8006eba:	d122      	bne.n	8006f02 <_vfiprintf_r+0x1da>
 8006ebc:	2207      	movs	r2, #7
 8006ebe:	9b07      	ldr	r3, [sp, #28]
 8006ec0:	3307      	adds	r3, #7
 8006ec2:	4393      	bics	r3, r2
 8006ec4:	3308      	adds	r3, #8
 8006ec6:	9307      	str	r3, [sp, #28]
 8006ec8:	6963      	ldr	r3, [r4, #20]
 8006eca:	9a04      	ldr	r2, [sp, #16]
 8006ecc:	189b      	adds	r3, r3, r2
 8006ece:	6163      	str	r3, [r4, #20]
 8006ed0:	e762      	b.n	8006d98 <_vfiprintf_r+0x70>
 8006ed2:	4343      	muls	r3, r0
 8006ed4:	002e      	movs	r6, r5
 8006ed6:	2101      	movs	r1, #1
 8006ed8:	189b      	adds	r3, r3, r2
 8006eda:	e7a4      	b.n	8006e26 <_vfiprintf_r+0xfe>
 8006edc:	2300      	movs	r3, #0
 8006ede:	200a      	movs	r0, #10
 8006ee0:	0019      	movs	r1, r3
 8006ee2:	3601      	adds	r6, #1
 8006ee4:	6063      	str	r3, [r4, #4]
 8006ee6:	7832      	ldrb	r2, [r6, #0]
 8006ee8:	1c75      	adds	r5, r6, #1
 8006eea:	3a30      	subs	r2, #48	@ 0x30
 8006eec:	2a09      	cmp	r2, #9
 8006eee:	d903      	bls.n	8006ef8 <_vfiprintf_r+0x1d0>
 8006ef0:	2b00      	cmp	r3, #0
 8006ef2:	d0c8      	beq.n	8006e86 <_vfiprintf_r+0x15e>
 8006ef4:	9109      	str	r1, [sp, #36]	@ 0x24
 8006ef6:	e7c6      	b.n	8006e86 <_vfiprintf_r+0x15e>
 8006ef8:	4341      	muls	r1, r0
 8006efa:	002e      	movs	r6, r5
 8006efc:	2301      	movs	r3, #1
 8006efe:	1889      	adds	r1, r1, r2
 8006f00:	e7f1      	b.n	8006ee6 <_vfiprintf_r+0x1be>
 8006f02:	aa07      	add	r2, sp, #28
 8006f04:	9200      	str	r2, [sp, #0]
 8006f06:	0021      	movs	r1, r4
 8006f08:	003a      	movs	r2, r7
 8006f0a:	4b14      	ldr	r3, [pc, #80]	@ (8006f5c <_vfiprintf_r+0x234>)
 8006f0c:	9803      	ldr	r0, [sp, #12]
 8006f0e:	f7fd fb41 	bl	8004594 <_printf_float>
 8006f12:	9004      	str	r0, [sp, #16]
 8006f14:	9b04      	ldr	r3, [sp, #16]
 8006f16:	3301      	adds	r3, #1
 8006f18:	d1d6      	bne.n	8006ec8 <_vfiprintf_r+0x1a0>
 8006f1a:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8006f1c:	07db      	lsls	r3, r3, #31
 8006f1e:	d405      	bmi.n	8006f2c <_vfiprintf_r+0x204>
 8006f20:	89bb      	ldrh	r3, [r7, #12]
 8006f22:	059b      	lsls	r3, r3, #22
 8006f24:	d402      	bmi.n	8006f2c <_vfiprintf_r+0x204>
 8006f26:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8006f28:	f7fe f80c 	bl	8004f44 <__retarget_lock_release_recursive>
 8006f2c:	89bb      	ldrh	r3, [r7, #12]
 8006f2e:	065b      	lsls	r3, r3, #25
 8006f30:	d500      	bpl.n	8006f34 <_vfiprintf_r+0x20c>
 8006f32:	e71e      	b.n	8006d72 <_vfiprintf_r+0x4a>
 8006f34:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8006f36:	e71e      	b.n	8006d76 <_vfiprintf_r+0x4e>
 8006f38:	aa07      	add	r2, sp, #28
 8006f3a:	9200      	str	r2, [sp, #0]
 8006f3c:	0021      	movs	r1, r4
 8006f3e:	003a      	movs	r2, r7
 8006f40:	4b06      	ldr	r3, [pc, #24]	@ (8006f5c <_vfiprintf_r+0x234>)
 8006f42:	9803      	ldr	r0, [sp, #12]
 8006f44:	f7fd fdd4 	bl	8004af0 <_printf_i>
 8006f48:	e7e3      	b.n	8006f12 <_vfiprintf_r+0x1ea>
 8006f4a:	46c0      	nop			@ (mov r8, r8)
 8006f4c:	0800744d 	.word	0x0800744d
 8006f50:	08007453 	.word	0x08007453
 8006f54:	08007457 	.word	0x08007457
 8006f58:	08004595 	.word	0x08004595
 8006f5c:	08006d03 	.word	0x08006d03

08006f60 <__swbuf_r>:
 8006f60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006f62:	0006      	movs	r6, r0
 8006f64:	000d      	movs	r5, r1
 8006f66:	0014      	movs	r4, r2
 8006f68:	2800      	cmp	r0, #0
 8006f6a:	d004      	beq.n	8006f76 <__swbuf_r+0x16>
 8006f6c:	6a03      	ldr	r3, [r0, #32]
 8006f6e:	2b00      	cmp	r3, #0
 8006f70:	d101      	bne.n	8006f76 <__swbuf_r+0x16>
 8006f72:	f7fd ff7b 	bl	8004e6c <__sinit>
 8006f76:	69a3      	ldr	r3, [r4, #24]
 8006f78:	60a3      	str	r3, [r4, #8]
 8006f7a:	89a3      	ldrh	r3, [r4, #12]
 8006f7c:	071b      	lsls	r3, r3, #28
 8006f7e:	d502      	bpl.n	8006f86 <__swbuf_r+0x26>
 8006f80:	6923      	ldr	r3, [r4, #16]
 8006f82:	2b00      	cmp	r3, #0
 8006f84:	d109      	bne.n	8006f9a <__swbuf_r+0x3a>
 8006f86:	0021      	movs	r1, r4
 8006f88:	0030      	movs	r0, r6
 8006f8a:	f000 f82b 	bl	8006fe4 <__swsetup_r>
 8006f8e:	2800      	cmp	r0, #0
 8006f90:	d003      	beq.n	8006f9a <__swbuf_r+0x3a>
 8006f92:	2501      	movs	r5, #1
 8006f94:	426d      	negs	r5, r5
 8006f96:	0028      	movs	r0, r5
 8006f98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006f9a:	6923      	ldr	r3, [r4, #16]
 8006f9c:	6820      	ldr	r0, [r4, #0]
 8006f9e:	b2ef      	uxtb	r7, r5
 8006fa0:	1ac0      	subs	r0, r0, r3
 8006fa2:	6963      	ldr	r3, [r4, #20]
 8006fa4:	b2ed      	uxtb	r5, r5
 8006fa6:	4283      	cmp	r3, r0
 8006fa8:	dc05      	bgt.n	8006fb6 <__swbuf_r+0x56>
 8006faa:	0021      	movs	r1, r4
 8006fac:	0030      	movs	r0, r6
 8006fae:	f7ff f8f1 	bl	8006194 <_fflush_r>
 8006fb2:	2800      	cmp	r0, #0
 8006fb4:	d1ed      	bne.n	8006f92 <__swbuf_r+0x32>
 8006fb6:	68a3      	ldr	r3, [r4, #8]
 8006fb8:	3001      	adds	r0, #1
 8006fba:	3b01      	subs	r3, #1
 8006fbc:	60a3      	str	r3, [r4, #8]
 8006fbe:	6823      	ldr	r3, [r4, #0]
 8006fc0:	1c5a      	adds	r2, r3, #1
 8006fc2:	6022      	str	r2, [r4, #0]
 8006fc4:	701f      	strb	r7, [r3, #0]
 8006fc6:	6963      	ldr	r3, [r4, #20]
 8006fc8:	4283      	cmp	r3, r0
 8006fca:	d004      	beq.n	8006fd6 <__swbuf_r+0x76>
 8006fcc:	89a3      	ldrh	r3, [r4, #12]
 8006fce:	07db      	lsls	r3, r3, #31
 8006fd0:	d5e1      	bpl.n	8006f96 <__swbuf_r+0x36>
 8006fd2:	2d0a      	cmp	r5, #10
 8006fd4:	d1df      	bne.n	8006f96 <__swbuf_r+0x36>
 8006fd6:	0021      	movs	r1, r4
 8006fd8:	0030      	movs	r0, r6
 8006fda:	f7ff f8db 	bl	8006194 <_fflush_r>
 8006fde:	2800      	cmp	r0, #0
 8006fe0:	d0d9      	beq.n	8006f96 <__swbuf_r+0x36>
 8006fe2:	e7d6      	b.n	8006f92 <__swbuf_r+0x32>

08006fe4 <__swsetup_r>:
 8006fe4:	4b2d      	ldr	r3, [pc, #180]	@ (800709c <__swsetup_r+0xb8>)
 8006fe6:	b570      	push	{r4, r5, r6, lr}
 8006fe8:	0005      	movs	r5, r0
 8006fea:	6818      	ldr	r0, [r3, #0]
 8006fec:	000c      	movs	r4, r1
 8006fee:	2800      	cmp	r0, #0
 8006ff0:	d004      	beq.n	8006ffc <__swsetup_r+0x18>
 8006ff2:	6a03      	ldr	r3, [r0, #32]
 8006ff4:	2b00      	cmp	r3, #0
 8006ff6:	d101      	bne.n	8006ffc <__swsetup_r+0x18>
 8006ff8:	f7fd ff38 	bl	8004e6c <__sinit>
 8006ffc:	230c      	movs	r3, #12
 8006ffe:	5ee2      	ldrsh	r2, [r4, r3]
 8007000:	0713      	lsls	r3, r2, #28
 8007002:	d423      	bmi.n	800704c <__swsetup_r+0x68>
 8007004:	06d3      	lsls	r3, r2, #27
 8007006:	d407      	bmi.n	8007018 <__swsetup_r+0x34>
 8007008:	2309      	movs	r3, #9
 800700a:	602b      	str	r3, [r5, #0]
 800700c:	2340      	movs	r3, #64	@ 0x40
 800700e:	2001      	movs	r0, #1
 8007010:	4313      	orrs	r3, r2
 8007012:	81a3      	strh	r3, [r4, #12]
 8007014:	4240      	negs	r0, r0
 8007016:	e03a      	b.n	800708e <__swsetup_r+0xaa>
 8007018:	0752      	lsls	r2, r2, #29
 800701a:	d513      	bpl.n	8007044 <__swsetup_r+0x60>
 800701c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800701e:	2900      	cmp	r1, #0
 8007020:	d008      	beq.n	8007034 <__swsetup_r+0x50>
 8007022:	0023      	movs	r3, r4
 8007024:	3344      	adds	r3, #68	@ 0x44
 8007026:	4299      	cmp	r1, r3
 8007028:	d002      	beq.n	8007030 <__swsetup_r+0x4c>
 800702a:	0028      	movs	r0, r5
 800702c:	f7ff fdcc 	bl	8006bc8 <_free_r>
 8007030:	2300      	movs	r3, #0
 8007032:	6363      	str	r3, [r4, #52]	@ 0x34
 8007034:	2224      	movs	r2, #36	@ 0x24
 8007036:	89a3      	ldrh	r3, [r4, #12]
 8007038:	4393      	bics	r3, r2
 800703a:	81a3      	strh	r3, [r4, #12]
 800703c:	2300      	movs	r3, #0
 800703e:	6063      	str	r3, [r4, #4]
 8007040:	6923      	ldr	r3, [r4, #16]
 8007042:	6023      	str	r3, [r4, #0]
 8007044:	2308      	movs	r3, #8
 8007046:	89a2      	ldrh	r2, [r4, #12]
 8007048:	4313      	orrs	r3, r2
 800704a:	81a3      	strh	r3, [r4, #12]
 800704c:	6923      	ldr	r3, [r4, #16]
 800704e:	2b00      	cmp	r3, #0
 8007050:	d10b      	bne.n	800706a <__swsetup_r+0x86>
 8007052:	21a0      	movs	r1, #160	@ 0xa0
 8007054:	2280      	movs	r2, #128	@ 0x80
 8007056:	89a3      	ldrh	r3, [r4, #12]
 8007058:	0089      	lsls	r1, r1, #2
 800705a:	0092      	lsls	r2, r2, #2
 800705c:	400b      	ands	r3, r1
 800705e:	4293      	cmp	r3, r2
 8007060:	d003      	beq.n	800706a <__swsetup_r+0x86>
 8007062:	0021      	movs	r1, r4
 8007064:	0028      	movs	r0, r5
 8007066:	f000 f845 	bl	80070f4 <__smakebuf_r>
 800706a:	230c      	movs	r3, #12
 800706c:	5ee2      	ldrsh	r2, [r4, r3]
 800706e:	2101      	movs	r1, #1
 8007070:	0013      	movs	r3, r2
 8007072:	400b      	ands	r3, r1
 8007074:	420a      	tst	r2, r1
 8007076:	d00b      	beq.n	8007090 <__swsetup_r+0xac>
 8007078:	2300      	movs	r3, #0
 800707a:	60a3      	str	r3, [r4, #8]
 800707c:	6963      	ldr	r3, [r4, #20]
 800707e:	425b      	negs	r3, r3
 8007080:	61a3      	str	r3, [r4, #24]
 8007082:	2000      	movs	r0, #0
 8007084:	6923      	ldr	r3, [r4, #16]
 8007086:	4283      	cmp	r3, r0
 8007088:	d101      	bne.n	800708e <__swsetup_r+0xaa>
 800708a:	0613      	lsls	r3, r2, #24
 800708c:	d4be      	bmi.n	800700c <__swsetup_r+0x28>
 800708e:	bd70      	pop	{r4, r5, r6, pc}
 8007090:	0791      	lsls	r1, r2, #30
 8007092:	d400      	bmi.n	8007096 <__swsetup_r+0xb2>
 8007094:	6963      	ldr	r3, [r4, #20]
 8007096:	60a3      	str	r3, [r4, #8]
 8007098:	e7f3      	b.n	8007082 <__swsetup_r+0x9e>
 800709a:	46c0      	nop			@ (mov r8, r8)
 800709c:	20000018 	.word	0x20000018

080070a0 <__swhatbuf_r>:
 80070a0:	b570      	push	{r4, r5, r6, lr}
 80070a2:	000e      	movs	r6, r1
 80070a4:	001d      	movs	r5, r3
 80070a6:	230e      	movs	r3, #14
 80070a8:	5ec9      	ldrsh	r1, [r1, r3]
 80070aa:	0014      	movs	r4, r2
 80070ac:	b096      	sub	sp, #88	@ 0x58
 80070ae:	2900      	cmp	r1, #0
 80070b0:	da0c      	bge.n	80070cc <__swhatbuf_r+0x2c>
 80070b2:	89b2      	ldrh	r2, [r6, #12]
 80070b4:	2380      	movs	r3, #128	@ 0x80
 80070b6:	0011      	movs	r1, r2
 80070b8:	4019      	ands	r1, r3
 80070ba:	421a      	tst	r2, r3
 80070bc:	d114      	bne.n	80070e8 <__swhatbuf_r+0x48>
 80070be:	2380      	movs	r3, #128	@ 0x80
 80070c0:	00db      	lsls	r3, r3, #3
 80070c2:	2000      	movs	r0, #0
 80070c4:	6029      	str	r1, [r5, #0]
 80070c6:	6023      	str	r3, [r4, #0]
 80070c8:	b016      	add	sp, #88	@ 0x58
 80070ca:	bd70      	pop	{r4, r5, r6, pc}
 80070cc:	466a      	mov	r2, sp
 80070ce:	f000 f853 	bl	8007178 <_fstat_r>
 80070d2:	2800      	cmp	r0, #0
 80070d4:	dbed      	blt.n	80070b2 <__swhatbuf_r+0x12>
 80070d6:	23f0      	movs	r3, #240	@ 0xf0
 80070d8:	9901      	ldr	r1, [sp, #4]
 80070da:	021b      	lsls	r3, r3, #8
 80070dc:	4019      	ands	r1, r3
 80070de:	4b04      	ldr	r3, [pc, #16]	@ (80070f0 <__swhatbuf_r+0x50>)
 80070e0:	18c9      	adds	r1, r1, r3
 80070e2:	424b      	negs	r3, r1
 80070e4:	4159      	adcs	r1, r3
 80070e6:	e7ea      	b.n	80070be <__swhatbuf_r+0x1e>
 80070e8:	2100      	movs	r1, #0
 80070ea:	2340      	movs	r3, #64	@ 0x40
 80070ec:	e7e9      	b.n	80070c2 <__swhatbuf_r+0x22>
 80070ee:	46c0      	nop			@ (mov r8, r8)
 80070f0:	ffffe000 	.word	0xffffe000

080070f4 <__smakebuf_r>:
 80070f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80070f6:	2602      	movs	r6, #2
 80070f8:	898b      	ldrh	r3, [r1, #12]
 80070fa:	0005      	movs	r5, r0
 80070fc:	000c      	movs	r4, r1
 80070fe:	b085      	sub	sp, #20
 8007100:	4233      	tst	r3, r6
 8007102:	d007      	beq.n	8007114 <__smakebuf_r+0x20>
 8007104:	0023      	movs	r3, r4
 8007106:	3347      	adds	r3, #71	@ 0x47
 8007108:	6023      	str	r3, [r4, #0]
 800710a:	6123      	str	r3, [r4, #16]
 800710c:	2301      	movs	r3, #1
 800710e:	6163      	str	r3, [r4, #20]
 8007110:	b005      	add	sp, #20
 8007112:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007114:	ab03      	add	r3, sp, #12
 8007116:	aa02      	add	r2, sp, #8
 8007118:	f7ff ffc2 	bl	80070a0 <__swhatbuf_r>
 800711c:	9f02      	ldr	r7, [sp, #8]
 800711e:	9001      	str	r0, [sp, #4]
 8007120:	0039      	movs	r1, r7
 8007122:	0028      	movs	r0, r5
 8007124:	f7fe ff30 	bl	8005f88 <_malloc_r>
 8007128:	2800      	cmp	r0, #0
 800712a:	d108      	bne.n	800713e <__smakebuf_r+0x4a>
 800712c:	220c      	movs	r2, #12
 800712e:	5ea3      	ldrsh	r3, [r4, r2]
 8007130:	059a      	lsls	r2, r3, #22
 8007132:	d4ed      	bmi.n	8007110 <__smakebuf_r+0x1c>
 8007134:	2203      	movs	r2, #3
 8007136:	4393      	bics	r3, r2
 8007138:	431e      	orrs	r6, r3
 800713a:	81a6      	strh	r6, [r4, #12]
 800713c:	e7e2      	b.n	8007104 <__smakebuf_r+0x10>
 800713e:	2380      	movs	r3, #128	@ 0x80
 8007140:	89a2      	ldrh	r2, [r4, #12]
 8007142:	6020      	str	r0, [r4, #0]
 8007144:	4313      	orrs	r3, r2
 8007146:	81a3      	strh	r3, [r4, #12]
 8007148:	9b03      	ldr	r3, [sp, #12]
 800714a:	6120      	str	r0, [r4, #16]
 800714c:	6167      	str	r7, [r4, #20]
 800714e:	2b00      	cmp	r3, #0
 8007150:	d00c      	beq.n	800716c <__smakebuf_r+0x78>
 8007152:	0028      	movs	r0, r5
 8007154:	230e      	movs	r3, #14
 8007156:	5ee1      	ldrsh	r1, [r4, r3]
 8007158:	f000 f820 	bl	800719c <_isatty_r>
 800715c:	2800      	cmp	r0, #0
 800715e:	d005      	beq.n	800716c <__smakebuf_r+0x78>
 8007160:	2303      	movs	r3, #3
 8007162:	89a2      	ldrh	r2, [r4, #12]
 8007164:	439a      	bics	r2, r3
 8007166:	3b02      	subs	r3, #2
 8007168:	4313      	orrs	r3, r2
 800716a:	81a3      	strh	r3, [r4, #12]
 800716c:	89a3      	ldrh	r3, [r4, #12]
 800716e:	9a01      	ldr	r2, [sp, #4]
 8007170:	4313      	orrs	r3, r2
 8007172:	81a3      	strh	r3, [r4, #12]
 8007174:	e7cc      	b.n	8007110 <__smakebuf_r+0x1c>
	...

08007178 <_fstat_r>:
 8007178:	2300      	movs	r3, #0
 800717a:	b570      	push	{r4, r5, r6, lr}
 800717c:	4d06      	ldr	r5, [pc, #24]	@ (8007198 <_fstat_r+0x20>)
 800717e:	0004      	movs	r4, r0
 8007180:	0008      	movs	r0, r1
 8007182:	0011      	movs	r1, r2
 8007184:	602b      	str	r3, [r5, #0]
 8007186:	f7fb fc70 	bl	8002a6a <_fstat>
 800718a:	1c43      	adds	r3, r0, #1
 800718c:	d103      	bne.n	8007196 <_fstat_r+0x1e>
 800718e:	682b      	ldr	r3, [r5, #0]
 8007190:	2b00      	cmp	r3, #0
 8007192:	d000      	beq.n	8007196 <_fstat_r+0x1e>
 8007194:	6023      	str	r3, [r4, #0]
 8007196:	bd70      	pop	{r4, r5, r6, pc}
 8007198:	20000570 	.word	0x20000570

0800719c <_isatty_r>:
 800719c:	2300      	movs	r3, #0
 800719e:	b570      	push	{r4, r5, r6, lr}
 80071a0:	4d06      	ldr	r5, [pc, #24]	@ (80071bc <_isatty_r+0x20>)
 80071a2:	0004      	movs	r4, r0
 80071a4:	0008      	movs	r0, r1
 80071a6:	602b      	str	r3, [r5, #0]
 80071a8:	f7fb fc64 	bl	8002a74 <_isatty>
 80071ac:	1c43      	adds	r3, r0, #1
 80071ae:	d103      	bne.n	80071b8 <_isatty_r+0x1c>
 80071b0:	682b      	ldr	r3, [r5, #0]
 80071b2:	2b00      	cmp	r3, #0
 80071b4:	d000      	beq.n	80071b8 <_isatty_r+0x1c>
 80071b6:	6023      	str	r3, [r4, #0]
 80071b8:	bd70      	pop	{r4, r5, r6, pc}
 80071ba:	46c0      	nop			@ (mov r8, r8)
 80071bc:	20000570 	.word	0x20000570

080071c0 <_raise_r>:
 80071c0:	b570      	push	{r4, r5, r6, lr}
 80071c2:	0004      	movs	r4, r0
 80071c4:	000d      	movs	r5, r1
 80071c6:	291f      	cmp	r1, #31
 80071c8:	d904      	bls.n	80071d4 <_raise_r+0x14>
 80071ca:	2316      	movs	r3, #22
 80071cc:	6003      	str	r3, [r0, #0]
 80071ce:	2001      	movs	r0, #1
 80071d0:	4240      	negs	r0, r0
 80071d2:	bd70      	pop	{r4, r5, r6, pc}
 80071d4:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 80071d6:	2b00      	cmp	r3, #0
 80071d8:	d004      	beq.n	80071e4 <_raise_r+0x24>
 80071da:	008a      	lsls	r2, r1, #2
 80071dc:	189b      	adds	r3, r3, r2
 80071de:	681a      	ldr	r2, [r3, #0]
 80071e0:	2a00      	cmp	r2, #0
 80071e2:	d108      	bne.n	80071f6 <_raise_r+0x36>
 80071e4:	0020      	movs	r0, r4
 80071e6:	f000 f831 	bl	800724c <_getpid_r>
 80071ea:	002a      	movs	r2, r5
 80071ec:	0001      	movs	r1, r0
 80071ee:	0020      	movs	r0, r4
 80071f0:	f000 f81a 	bl	8007228 <_kill_r>
 80071f4:	e7ed      	b.n	80071d2 <_raise_r+0x12>
 80071f6:	2a01      	cmp	r2, #1
 80071f8:	d009      	beq.n	800720e <_raise_r+0x4e>
 80071fa:	1c51      	adds	r1, r2, #1
 80071fc:	d103      	bne.n	8007206 <_raise_r+0x46>
 80071fe:	2316      	movs	r3, #22
 8007200:	6003      	str	r3, [r0, #0]
 8007202:	2001      	movs	r0, #1
 8007204:	e7e5      	b.n	80071d2 <_raise_r+0x12>
 8007206:	2100      	movs	r1, #0
 8007208:	0028      	movs	r0, r5
 800720a:	6019      	str	r1, [r3, #0]
 800720c:	4790      	blx	r2
 800720e:	2000      	movs	r0, #0
 8007210:	e7df      	b.n	80071d2 <_raise_r+0x12>
	...

08007214 <raise>:
 8007214:	b510      	push	{r4, lr}
 8007216:	4b03      	ldr	r3, [pc, #12]	@ (8007224 <raise+0x10>)
 8007218:	0001      	movs	r1, r0
 800721a:	6818      	ldr	r0, [r3, #0]
 800721c:	f7ff ffd0 	bl	80071c0 <_raise_r>
 8007220:	bd10      	pop	{r4, pc}
 8007222:	46c0      	nop			@ (mov r8, r8)
 8007224:	20000018 	.word	0x20000018

08007228 <_kill_r>:
 8007228:	2300      	movs	r3, #0
 800722a:	b570      	push	{r4, r5, r6, lr}
 800722c:	4d06      	ldr	r5, [pc, #24]	@ (8007248 <_kill_r+0x20>)
 800722e:	0004      	movs	r4, r0
 8007230:	0008      	movs	r0, r1
 8007232:	0011      	movs	r1, r2
 8007234:	602b      	str	r3, [r5, #0]
 8007236:	f7fb fbed 	bl	8002a14 <_kill>
 800723a:	1c43      	adds	r3, r0, #1
 800723c:	d103      	bne.n	8007246 <_kill_r+0x1e>
 800723e:	682b      	ldr	r3, [r5, #0]
 8007240:	2b00      	cmp	r3, #0
 8007242:	d000      	beq.n	8007246 <_kill_r+0x1e>
 8007244:	6023      	str	r3, [r4, #0]
 8007246:	bd70      	pop	{r4, r5, r6, pc}
 8007248:	20000570 	.word	0x20000570

0800724c <_getpid_r>:
 800724c:	b510      	push	{r4, lr}
 800724e:	f7fb fbdf 	bl	8002a10 <_getpid>
 8007252:	bd10      	pop	{r4, pc}

08007254 <_init>:
 8007254:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007256:	46c0      	nop			@ (mov r8, r8)
 8007258:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800725a:	bc08      	pop	{r3}
 800725c:	469e      	mov	lr, r3
 800725e:	4770      	bx	lr

08007260 <_fini>:
 8007260:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007262:	46c0      	nop			@ (mov r8, r8)
 8007264:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007266:	bc08      	pop	{r3}
 8007268:	469e      	mov	lr, r3
 800726a:	4770      	bx	lr
